{"version":3,"file":"static/js/824.9e347c14.chunk.js","mappings":"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","sources":["components/KakaoAdfit.jsx","components/LoACoreOptimizer.jsx","CoreOnly.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\n\r\nexport default KakaoAdfit;","// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useMemo, useState, useRef, useLayoutEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\n\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number, point:number, o1k:OptionKey, o1v:number, o2k:OptionKey, o2v:number}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nconst CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nconst CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nconst CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nconst GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\n\r\nconst OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nconst OPTIONS = [\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\"];\r\n\r\nconst ROLE_KEYS = {\r\n  dealer: new Set([\"atk\",\"add\",\"boss\"]),\r\n  support: new Set([\"brand\",\"allyDmg\",\"allyAtk\"]),\r\n};\r\nconst DEFAULT_WEIGHTS = { atk:1, add:1, boss:1, brand:1, allyDmg:1, allyAtk:1 };\r\n\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\n\r\n\r\nconst uid = () => Math.random().toString(36).slice(2,9);\r\n\r\nfunction sanitizeWeights(w){\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if(!w) return base;\r\n  Object.keys(base).forEach((k)=>{\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nfunction scoreGemForRole(g, role, w){\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? g.o1v * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? g.o2v * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nfunction* combinations(arr, k){\r\n  const n = arr.length; if(k>n) return;\r\n  const idx = Array.from({length:k}, (_,i)=>i);\r\n  while(true){\r\n    yield idx.map(i=>arr[i]);\r\n    let p=k-1; while(p>=0 && idx[p]===n-k+p) p--; if(p<0) break; idx[p]++; for(let j=p+1;j<k;j++) idx[j]=idx[j-1]+1;\r\n  }\r\n}\r\nfunction thresholdsHit(grade, totalPoint){\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nfunction scoreCombo(combo, grade, role, weights){\r\n  const totalWill = combo.reduce((s,g)=>s+(g.will||0),0);\r\n  const totalPoint = combo.reduce((s,g)=>s+(g.point||0),0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s,g)=>s+scoreGemForRole(g, role, weights),0);\r\n  const score = (thr.length*10_000_000) + (totalPoint*10_000) + ((5_000 - totalWill)*10) + roleSum - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nfunction enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin){\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n  const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n  const effMin = minThreshold ?? minOfGrade;\r\n  const effEnforce = enforceMin || minThreshold == null;\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n  for(let k=0;k<=maxPick;k++){\r\n    if(k===0){ all.push({ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }); continue; }\r\n    for(const combo of combinations(pool, k)){\r\n      const totalWill = combo.reduce((s,g)=>s+(g.will||0),0);\r\n      if(totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list:combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n  all.sort((a,b)=>b.score-a.score);\r\n\r\n  let filtered;\r\n  if(effEnforce){\r\n    filtered = all.filter(ci => {\r\n      const maxThr = Math.max(0, ...ci.thr);\r\n      return ci.list.length>0 && maxThr >= (effMin ?? 0);\r\n    });\r\n  }else{\r\n    filtered = all.filter(ci => ci.list.length>0 && ci.thr.length>0);\r\n  }\r\n  if(filtered.length===0){\r\n    return [{ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }];\r\n  }\r\n  return filtered.slice(0,200);\r\n}\r\n\r\n/* 우선순위 기반 최적화(그리디): ★현재 배열 순서★(위→아래)가 우선순위 */\r\nfunction optimizeByPriority(cores, pool, role, weights){\r\n  const W = sanitizeWeights(weights);\r\n  const order = cores.map((c,i)=>({ i, pr:i })).sort((a,b)=>a.pr-b.pr);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const picks = Array.from({length: cores.length}, ()=>({ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }));\r\n\r\n  let remaining = pool.slice();\r\n  for(const { i } of order){\r\n    const c = cores[i];\r\n    const cand = enumerateCoreCombos(remaining, c.grade, role, W, c.minThreshold, c.enforceMin);\r\n    const choice = cand.find(ci=>ci.list.length>0) || cand[0] || { list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 };\r\n    picks[i] = choice;\r\n    const chosenIds = new Set(choice.list.map(g=>g.id));\r\n    remaining = remaining.filter(g=>!chosenIds.has(g.id));\r\n  }\r\n  return { picks };\r\n}\r\n\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\n\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        // 자식이 function이면 provided/snapshot을 넘겨 \"자식이 직접\" props를 붙이게 함\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\n function useOnClickOutside(refs, handler){\r\n   const refsArray = React.useMemo(\r\n     () => (Array.isArray(refs) ? refs : [refs]),\r\n     // refs가 동일 ref 객체를 재사용하므로 이 deps로 충분\r\n     [refs]\r\n   );\r\n   // 최신 handler를 참조하도록 ref로 보관\r\n   const handlerRef = React.useRef(handler);\r\n   React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n\r\n   React.useEffect(() => {\r\n     const listener = (e) => {\r\n       if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n       handlerRef.current?.(e);\r\n     };\r\n     // click 시점(캡처링)으로: 내부 onClick 먼저 실행되도록\r\n     document.addEventListener('click', listener, true);\r\n     return ()=> document.removeEventListener('click', listener, true);\r\n   }, [refsArray]);\r\n }\r\nfunction Dropdown({ value, items, onChange, placeholder, className }) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);   // 포지션 리렌더 트리거(값은 사용 안 함)\r\n\r\n  // 전역 close-all-dropdowns 이벤트 받으면 닫기\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  // 버튼/메뉴 외부 클릭 시 닫기 (둘 다 제외)\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  // 열릴 때 버튼 위치 측정 → 고정 포지션으로 포탈 렌더\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = {\r\n      top: rect.bottom + 4,\r\n      left: rect.left,\r\n      width: rect.width,\r\n    };\r\n    forceTick((v) => v + 1);\r\n\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = {\r\n        top: r.bottom + 4,\r\n        left: r.left,\r\n        width: r.width,\r\n      };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: menuPos.current.top,\r\n          left: menuPos.current.left,\r\n          width: menuPos.current.width,\r\n          zIndex: 9999, // 최상단\r\n        }}\r\n        className=\"rounded-xl border bg-white shadow-lg overflow-auto max-h-60\"\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onChange(it.value);\r\n                setOpen(false);\r\n              }}\r\n              className={`w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\r\n                it.value === value ? \"bg-gray-100\" : \"\"\r\n              }`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setOpen((v) => !v)}\r\n        className=\"min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl border px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n      >\r\n        <span className=\"truncate text-sm\">\r\n          {selected ? selected.label : placeholder || \"선택\"}\r\n        </span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? \"▴\" : \"▾\"}</span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts(){\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t=>[...t, { id, msg }]);\r\n    setTimeout(()=> setToasts(t=> t.filter(x=>x.id!==id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t=> t.filter(x=> x.id!==id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }){\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t=> (\r\n          <motion.div key={t.id} initial={{opacity:0, scale:0.98}} animate={{opacity:1, scale:1}} exit={{opacity:0, scale:0.98}} transition={{type:'spring', stiffness:380, damping:28}} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={()=>onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer(){\r\n  useEffect(()=>{\r\n    const href = \"https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.8/dist/web/variable/pretendardvariable-dynamic-subset.css\";\r\n    const id = \"pretendard-var-css\";\r\n    if(!document.getElementById(id)){\r\n      const link = document.createElement(\"link\");\r\n      link.id = id; link.rel = \"stylesheet\"; link.href = href;\r\n      document.head.appendChild(link);\r\n    }\r\n  },[]);\r\n\r\n  const [role, setRole] = useState(\"dealer\");\r\n  const [weights, setWeights] = useState({...DEFAULT_WEIGHTS});\r\n  const [cores, setCores] = useState([\r\n    { id: uid(), name: \"해 코어\", grade: \"RELIC\", minThreshold: undefined, enforceMin: false }\r\n  ]);\r\n  const [gems, setGems] = useState([\r\n    { id: uid(), will: 4, point: 5, o1k:\"atk\", o1v:3, o2k:\"add\", o2v:5 },\r\n    { id: uid(), will: 5, point: 5, o1k:\"atk\", o1v:5, o2k:\"brand\", o2v:5 },\r\n    { id: uid(), will: 5, point: 5, o1k:\"allyDmg\", o1v:5, o2k:\"brand\", o2v:5 },\r\n    { id: uid(), will: 3, point: 4, o1k:\"boss\", o1v:4, o2k:\"add\", o2v:2 },\r\n  ]);\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  \r\nconst moveCoreUp = (index) => setCores(prev => {\r\n  if (index <= 0) return prev;\r\n  const next = [...prev];\r\n  [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n  return next;\r\n});\r\n\r\nconst moveCoreDown = (index) => setCores(prev => {\r\n  if (index >= prev.length - 1) return prev;\r\n  const next = [...prev];\r\n  [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n  return next;\r\n});\r\n\r\n\r\n  const { picks: priorityPicks } = useMemo(()=> optimizeByPriority(cores, gems, role, weights), [cores, gems, role, weights]);\r\n\r\n  const resetWeights = ()=> setWeights({...DEFAULT_WEIGHTS});\r\n  const addGem = ()=> setGems(v=>[\r\n    { id: uid(), will: 4, point: 4, o1k:\"atk\", o1v:0, o2k:\"add\", o2v:0 },\r\n    ...v\r\n  ]);\r\n  const removeGem = (id)=> setGems(v=> v.filter(g=> g.id!==id));\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n\r\n  const addCore = ()=> setCores(cs=>{\r\n    if(cs.length >= 3){ push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    return [\r\n      { id: uid(), name: \"해 코어\", grade: \"RELIC\", minThreshold: undefined, enforceMin: false },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id)=> setCores(cs=> cs.length<=1 ? cs : cs.filter(c=> c.id!==id));\r\n  const updateCore = (id, patch)=> setCores(cs=> cs.map(c=> c.id===id? {...c, ...patch}: c));\r\n\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  // DnD: 코어 순서가 곧 우선순위(위쪽이 더 높음)\r\nconst onDragStart = () => {\r\n  requestAnimationFrame(() => setDragging(true));\r\n  // 드래그 시작하면 모든 드롭다운 닫기 이벤트 발송\r\n  const evt = new Event('close-all-dropdowns');\r\n  window.dispatchEvent(evt);\r\n};\r\n const onDragEnd = (result) => {\r\n   requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // UI tokens (모바일 최적화 포함)\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm border\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n\r\n  // 인덱스 표기: 코어(위→1), 젬(아래→1)\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  // ===== Self-tests (non-blocking) =====\r\n  useEffect(() => {\r\n    function runSelfTests(){\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id:\"t1\", will:1, point:1, o1k:\"atk\", o1v:2, o2k:\"brand\", o2v:3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id:\"t2\", will:0, point:10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      fontFamily:\"Pretendard Variable, Pretendard, -apple-system, BlinkMacSystemFont, system-ui, Roboto, 'Helvetica Neue', 'Segoe UI', 'Apple SD Gothic Neo', 'Noto Sans KR', 'Malgun Gothic', sans-serif\",\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 프라이머리 컬러 토큰 & 유틸 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n      `}</style>\r\n\r\n      {/* 모든 버튼 커서 포인터 */}\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 타이틀 + 포지션(우측) */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow\">로아 아크그리드 코어젬 최적화</h1>\r\n            <div className=\"flex gap-2 w-full lg:w-auto\">\r\n              <button onClick={()=>setRole('dealer')} className={`h-10 inline-flex items-center justify-center lg:justify-start gap-1 px-3 rounded-xl border w-full lg:w-auto ${role==='dealer'? 'btn-primary':'bg-white'}`}>\r\n                딜러\r\n              </button>\r\n              <button onClick={()=>setRole('support')} className={`h-10 inline-flex items-center justify-center lg:justify-start gap-1 px-3 rounded-xl border w-full lg:w-auto ${role==='support'? 'btn-primary':'bg-white'}`}>\r\n                서포터\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 코어 입력 (DnD 우선순위) */}\r\n        <section className={`${card} p-4 lg:p-6 bg-white/95 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16}/><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-xs text-gray-600 mt-2\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided)=> (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx)=> {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        CORE_THRESHOLDS[c.grade].map(v => ({ value: String(v), label: `${v}P 이상` }))\r\n                      );\r\n                      const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov)=> (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible\" style={prov.draggableProps.style}>\r\n                              {/* Index badge - 모바일 좌측 정렬, 데스크톱 중앙 정렬 */}\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어명</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val)=>updateCore(c.id,{name: val})} items={CORE_NAME_ITEMS} placeholder=\"코어명\"/>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.grade} onChange={(val)=>updateCore(c.id,{grade: /** @type {CoreGrade} */(val)})} items={GRADES.map(g=>({value:g, label: CORE_LABEL[g]}))} placeholder=\"코어 등급\"/>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 구간</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={String(c.minThreshold ?? '')} onChange={(val)=>{ if(val) updateCore(c.id,{minThreshold:Number(val), enforceMin:true}); else updateCore(c.id,{minThreshold:undefined, enforceMin:false}); }} items={targetItems} placeholder=\"구간\"/>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e)=>updateCore(c.id,{enforceMin:e.target.checked})}/>\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">목표 구간 강제</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">선택 안 함이면 내부적으로 <b className=\"text-primary\">{minOfGrade}P</b> 최소 구간을 기본 목표로 적용합니다.</p>\r\n                              </div>\r\n\r\n                              {/* 모바일: 순서 버튼 + 삭제 버튼 묶음 */}\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={()=>moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16}/></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={()=>moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16}/></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={()=>removeCore(c.id)} disabled={cores.length<=1} aria-label=\"코어 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 bg-white/95 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3 mb-3\">\r\n            <h2 className={sectionTitle}>젬 입력</h2>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16}/><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={()=>setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g,idx)=> (\r\n              <div key={g.id} className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white\">\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n\r\n                {/* 필요 의지력 + 포인트 */}\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <input type=\"number\" min={0} step=\"1\" title=\"의지력\" className={`${smallFieldBase} w-full lg:w-24`} value={g.will} onChange={e=>updateGem(g.id,{will: Number(e.target.value)})} placeholder=\"의지력\"/>\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <input type=\"number\" min={0} step=\"1\" title=\"포인트\" className={`${smallFieldBase} w-full lg:w-24`} value={g.point} onChange={e=>updateGem(g.id,{point: Number(e.target.value)})} placeholder=\"포인트\"/>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 옵션 1 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val)=>updateGem(g.id,{o1k: /** @type {OptionKey} */(val)})} items={OPTIONS.map(k=> ({ value:k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\"/>\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <input type=\"number\" step=\"1\" className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\" value={g.o1v} onChange={e=>updateGem(g.id,{o1v: Number(e.target.value)})} placeholder=\"0\"/>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 옵션 2 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val)=>updateGem(g.id,{o2k: /** @type {OptionKey} */(val)})} items={OPTIONS.map(k=> ({ value:k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\"/>\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <input type=\"number\" step=\"1\" className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\" value={g.o2v} onChange={e=>updateGem(g.id,{o2v: Number(e.target.value)})} placeholder=\"0\"/>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={()=>removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length===0 && <div className=\"text-sm text-gray-700 p-2\">젬을 추가하세요. (코어당 최대 4개가 배정됩니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 bg-white/95 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16}/><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    min={0}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                    value={String(weights[k])}\r\n                    onChange={(e) => setWeights((v) => ({ ...v, [k]: Number(e.target.value) }))}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 bg-white/95 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c,i)=> {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = priorityPicks?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length>0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name} <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold text-primary\">{String(pick.totalWill)}</span> / 공급 <span className=\"text-primary\">{String(supply)}</span> (<span className=\"text-primary\">잔여 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold text-primary\">{String(pick.totalPoint)}</span></div>\r\n                        <div className={chip}>달성 구간 <span className=\"font-semibold text-primary\">{pick.thr.length? String(pick.thr.join(\", \")): \"없음\"}</span></div>\r\n                        <div className={chip}>유효 옵션 합(<span className=\"font-semibold\">{role==='dealer'?\"딜러\":\"서폿\"}</span>) <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(2))}</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 구간 강제 조건을 만족하지 못함{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">유효합</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g=> {\r\n                              const gi = gems.findIndex(x=>x.id===g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.will)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(g.point)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(2))}</td>\r\n                                </tr>\r\n                              );\r\n                            }) }\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x=>x.id===g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">유효합 {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(2))}</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove}/>\r\n\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\n\r\nexport default function CoreOnly() {\r\n  return <LoACoreOptimizer />;\r\n}\r\n"],"names":["adRef","useRef","useEffect","ins","document","createElement","className","style","display","setAttribute","script","type","async","src","current","innerHTML","appendChild","_jsx","ref","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","CORE_NAME_ITEMS","value","label","uid","Math","random","toString","slice","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_w$g$o1k","_w$g$o2k","has","o1k","o1v","o2k","o2v","combinations","arr","n","length","idx","Array","from","_","i","map","p","j","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","will","point","thr","roleSum","score","enumerateCoreCombos","pool","minThreshold","enforceMin","supply","W","minOfGrade","min","effMin","effEnforce","all","maxPick","push","list","filtered","sort","a","b","ci","maxThr","max","dragPortal","body","PortalAwareDraggable","_ref","draggableId","index","children","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","open","setOpen","useState","btnRef","menuRef","menuPos","top","left","width","forceTick","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","isArray","handlerRef","listener","e","_handlerRef$current","some","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","selected","find","menu","AnimatePresence","motion","ul","initial","opacity","y","animate","exit","transition","duration","position","zIndex","it","onClick","String","_jsxs","ToastStack","_ref3","toasts","onClose","div","scale","stiffness","damping","msg","id","LoACoreOptimizer","getElementById","link","rel","href","head","setRole","setWeights","cores","setCores","name","undefined","gems","setGems","remove","setToasts","setTimeout","x","useToasts","picks","priorityPicks","useMemo","order","c","pr","remaining","cand","choice","chosenIds","optimizeByPriority","updateGem","patch","updateCore","cs","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","displayIndexGem","total","_w$brand","console","assert","gem","includes","cA","cB","log","warn","runSelfTests","fontFamily","backgroundImage","backgroundAttachment","addCore","Plus","size","DragDropContext","onDragStart","requestAnimationFrame","evt","Event","dispatchEvent","onDragEnd","result","destination","prev","next","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","targetItems","concat","prov","_c$minThreshold","draggableProps","dragHandleProps","val","checked","htmlFor","moveCoreUp","ChevronUp","moveCoreDown","ChevronDown","removeCore","disabled","Trash2","addGem","step","title","removeGem","resetWeights","RotateCcw","pick","hasResult","join","toFixed","_Fragment","gi","findIndex","disp","KakaoAdfit","CoreOnly"],"sourceRoot":""}