{"version":3,"file":"static/js/840.75c5965c.chunk.js","mappings":"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","sources":["components/KakaoAdfit.jsx","lib/optimizerCore.js","components/LoACoreOptimizer.jsx","hooks/useOptimizer.js","components/GemSimulator.jsx","CoreOnly.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;","// src/lib/optimizerCore.js\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nexport const CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nexport const CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nexport const CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nexport const GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nexport const OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nexport const OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nexport const ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\nexport const DEFAULT_WEIGHTS = { atk: 1, add: 1, boss: 1, brand: 1, allyDmg: 1, allyAtk: 1 };\r\n// 딜러 가중치: y ≈ slope * level (원점 통과 회귀 추정)\r\nexport const DEALER_WEIGHTS = {\r\n  boss: 0.07870909,\r\n  add: 0.06018182,\r\n  atk: 0.03407273,\r\n  brand: 0,\r\n  allyDmg: 0,\r\n  allyAtk: 0,\r\n};\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nexport function sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nexport function scoreGemForRole(g, role, w) {\r\n  if (role == null) return 0; // 역할 미선택이면 유효옵션 점수 0\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? (g.o1v ?? 0) * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? (g.o2v ?? 0) * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nexport function* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1;\r\n    while (p >= 0 && idx[p] === n - k + p) p--;\r\n    if (p < 0) break;\r\n    idx[p]++;\r\n    for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\nexport function thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nexport function scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000)\r\n    + (totalPoint * 10_000)\r\n    + ((5_000 - totalWill) * 10)\r\n    + roleSum\r\n    - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nexport function enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin, onStep) {\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) {\r\n      all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 });\r\n      continue;\r\n    }\r\n    for (const combo of combinations(pool, k)) {\r\n      onStep && onStep(1);\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n\r\n  all.sort((a, b) => b.score - a.score);\r\n\r\n  // [수정] UI 변경에 맞춰 필터링 로직 전체를 새로운 로직으로 변경합니다.\r\n  let filtered;\r\n\r\n  // '이상 탐색' 모드 (체크박스 ON)\r\n  if (enforceMin) {\r\n    const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n    const effMin = minThreshold ?? minOfGrade; // 목표 설정 없으면 등급 최소치 적용\r\n    filtered = all.filter(ci =>\r\n      ci.totalPoint >= effMin && ci.thr.length > 0 && ci.list.length > 0\r\n    );\r\n  }\r\n  // '정확히 일치' 모드 (체크박스 OFF, 기본값)\r\n  else {\r\n    // 목표 포인트가 명확히 설정된 경우\r\n    if (minThreshold != null) {\r\n      filtered = all.filter(ci =>\r\n        ci.totalPoint === minThreshold && ci.list.length > 0\r\n      );\r\n    }\r\n    // 목표 포인트 설정이 없는 경우 (가장 점수 높은 순으로)\r\n    else {\r\n      filtered = all.filter(ci => ci.thr.length > 0 && ci.list.length > 0);\r\n    }\r\n  }\r\n\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n  \r\n  return filtered;\r\n}","// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport { useOptimizer } from '../hooks/useOptimizer';\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n// 최적화 순수 로직/상수 import (UI에서 쓰는 상수/헬퍼만)\r\nimport {\r\n  CORE_SUPPLY,\r\n  CORE_THRESHOLDS,\r\n  CORE_LABEL,\r\n  GRADES,\r\n  OPTION_LABELS,\r\n  OPTIONS,\r\n  DEFAULT_WEIGHTS,\r\n  DEALER_WEIGHTS,\r\n  ROLE_KEYS,\r\n  sanitizeWeights,\r\n  scoreGemForRole,\r\n  thresholdsHit,\r\n  scoreCombo,\r\n} from '../lib/optimizerCore.js';\r\n\r\n/* --------------------------------------------------------------------------\r\n * [타입 설명 - 코드 동작과 무관한 개발자 참고 주석]\r\n *  - Role: \"dealer\"(딜러) | \"support\"(서폿)\r\n *  - OptionKey: 각 젬 옵션 키 (\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\")\r\n *  - CoreGrade: 코어 등급 (\"HERO\",\"LEGEND\",\"RELIC\",\"ANCIENT\")\r\n *  - Gem/CoreDef/Weights/ComboInfo: 데이터 모델\r\n * -------------------------------------------------------------------------- */\r\n\r\n/* 도메인 외 UI 전용 상수 */\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\nconst CATEGORY_LABEL = { order: \"질서\", chaos: \"혼돈\" };\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\";\r\n\r\n/* =============================== 유틸/헬퍼 (UI) =============================== */\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\n// 역할 선택 시 반대 역할 키 가중치를 0으로 마스킹\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => { next[k] = 0; });\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => { next[k] = 1; });\r\n  return next;\r\n}\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    [refs]\r\n  );\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ value, items, onChange, placeholder, className }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [focusedIndex, setFocusedIndex] = useState(-1); // 현재 키보드 포커스용\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const itemRefs = useRef([]); // li>button 각각의 ref\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  const listboxId = useRef(`dd-list-${Math.random().toString(36).slice(2)}`).current;\r\n\r\n  // 열릴 때 선택값 또는 첫 사용가능 항목으로 포커스 초기화\r\n  const initFocusIndex = useCallback(() => {\r\n    const sel = items.findIndex(i => i.value === value && !i.disabled);\r\n    if (sel >= 0) return sel;\r\n    const firstEnabled = items.findIndex(i => !i.disabled);\r\n    return firstEnabled >= 0 ? firstEnabled : -1;\r\n  }, [items, value]);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick(v => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick(v => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  // 열릴 때 키보드 포커스 타깃 준비 + 첫 렌더 다음 프레임에 실제 DOM 포커스\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    setFocusedIndex(initFocusIndex());\r\n    // 다음 프레임에 리스트박스에 포커스 이동 (버튼 포커스가 메뉴로 남는 이슈 방지)\r\n    const t = requestAnimationFrame(() => {\r\n      const el = itemRefs.current[initFocusIndex()];\r\n      (el ?? menuRef.current)?.focus?.();\r\n    });\r\n    return () => cancelAnimationFrame(t);\r\n  }, [open, initFocusIndex]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  // 유틸: 다음/이전 사용가능 인덱스\r\n  const getNextEnabled = (start, dir) => {\r\n    const n = items.length;\r\n    if (n === 0) return -1;\r\n    let i = start;\r\n    for (let step = 0; step < n; step++) {\r\n      i = (i + dir + n) % n;\r\n      if (!items[i].disabled) return i;\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  // 버튼 키다운: 열고 닫기/첫 항목 포커스\r\n  const onButtonKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const willOpen = !open;\r\n      if (willOpen) {\r\n        setOpen(true);\r\n        // 열리면 useEffect가 포커스 세팅\r\n      } else {\r\n        // 이미 열렸다면 이동\r\n        const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n        const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n        if (next >= 0) setFocusedIndex(next);\r\n      }\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      setOpen(v => !v);\r\n    }\r\n  };\r\n\r\n  // 메뉴 키다운: 항목 이동/선택/닫기\r\n  const onMenuKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n      const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n      if (next >= 0) setFocusedIndex(next);\r\n    } else if (e.key === \"Home\") {\r\n      e.preventDefault();\r\n      const first = items.findIndex(i => !i.disabled);\r\n      if (first >= 0) setFocusedIndex(first);\r\n    } else if (e.key === \"End\") {\r\n      e.preventDefault();\r\n      let last = -1;\r\n      for (let i = items.length - 1; i >= 0; i--) {\r\n        if (!items[i].disabled) { last = i; break; }\r\n      }\r\n      if (last >= 0) setFocusedIndex(last);\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      const it = items[focusedIndex];\r\n      if (it && !it.disabled) {\r\n        onChange(it.value);\r\n        setOpen(false);\r\n        // 닫히면 버튼으로 포커스 복귀\r\n        requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n      requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n    } else if (e.key === \"Tab\") {\r\n      // 탭으로 이동할 땐 자연스럽게 닫기\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  // 마우스 호버시 포커스 인덱스 업데이트(시각 일치)\r\n  const onItemMouseEnter = (i) => setFocusedIndex(i);\r\n\r\n  // 메뉴 DOM\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        role=\"listbox\"\r\n        id={listboxId}\r\n        tabIndex={-1}\r\n        aria-activedescendant={focusedIndex >= 0 ? `${listboxId}-opt-${focusedIndex}` : undefined}\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className=\"rounded-xl border bg-white shadow-lg overflow-auto max-h-60 focus:outline-none\"\r\n        onKeyDown={onMenuKeyDown}\r\n      >\r\n        {items.map((it, i) => {\r\n          const isSelected = it.value === value;\r\n          const isActive = i === focusedIndex;\r\n          return (\r\n            <li key={String(it.value)}>\r\n              <button\r\n                ref={(el) => (itemRefs.current[i] = el)}\r\n                id={`${listboxId}-opt-${i}`}\r\n                type=\"button\"\r\n                role=\"option\"\r\n                aria-selected={isSelected}\r\n                onMouseEnter={() => onItemMouseEnter(i)}\r\n                onClick={() => {\r\n                  if (it.disabled) return;\r\n                  onChange(it.value);\r\n                  setOpen(false);\r\n                  requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n                }}\r\n                aria-disabled={it.disabled ? true : undefined}\r\n                className={`w-full text-left px-3 py-2 text-sm\r\n                  ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"}\r\n                  ${isSelected ? \"bg-gray-100\" : \"\"}\r\n                  ${isActive ? \"outline-none ring-2 ring-[#a399f2]/40\" : \"\"}\r\n                `}\r\n              >\r\n                <span className=\"block truncate\">{it.label}</span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={open}\r\n        aria-controls={open ? listboxId : undefined}\r\n        onKeyDown={onButtonKeyDown}\r\n        onClick={() => setOpen(v => !v)}\r\n        className=\"min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl border px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value, onChange, min, max, step = 1, allowFloat = false, zeroOnBlur = true, className = \"\", inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num));\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n\r\n  // 현재 카테고리\r\n  const [category, setCategory] = useState/** @type {Category} */(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  // 카테고리별 상태\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n\r\n  // 기타 상태\r\n  const [role, setRole] = useState/** @type {Role|null} */(null);\r\n  const [weights, setWeights] = useState({ ...DEFAULT_WEIGHTS });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  const [quickAddMode, setQuickAddMode] = useState(false);\r\n\r\n\r\n  const [stale, setStale] = useState(false);\r\n  const didMountRef = useRef(false);\r\n\r\n  // 현재 카테고리별 단축\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n  // ✅ [추가] 커스텀 훅을 호출하여 계산 관련 로직을 모두 위임합니다.\r\n  const { isComputing, progress, results, calculate, hasCalculated } = useOptimizer(cores, gems, role, weights);\r\n  \r\n  // ✅ [추가] 계산 결과(results)가 바뀔 때마다 stale 상태를 false로 업데이트합니다.\r\n  useEffect(() => {\r\n    if (results && results.length > 0) {\r\n      setStale(false);\r\n    }\r\n  }, [results]);\r\n\r\n  // 현재 카테고리에 대해서만 set 하는 헬퍼\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const setGems = (updater) => {\r\n    setGemsByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) { didMountRef.current = true; return; }\r\n    setStale(true);\r\n  }, [role, weights, category]);\r\n\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n\r\n  const resetWeights = () => setWeights({ ...DEFAULT_WEIGHTS });\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: 0, o2k: \"add\", o2v: 0 }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs;\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // UI tokens\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  // Self-tests (optional)\r\n  useEffect(() => {\r\n    function runSelfTests() {\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id: \"t1\", will: 1, point: 1, o1k: \"atk\", o1v: 2, o2k: \"brand\", o2v: 3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id: \"t2\", will: 0, point: 10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n  useEffect(() => {\r\n    saveToStorage({ category, coresByCat, gemsByCat, role, weights });\r\n  }, [category, coresByCat, gemsByCat, role, weights]);\r\n\r\n  // === 빠른 추가 패드 (LoACoreOptimizer 내부에 선언) ===\r\n  function QuickAddPad({ onAdd, focusOnMount = false }) {\r\n    const [o1k, setO1k] = useState(\"atk\");\r\n    const [o2k, setO2k] = useState(\"add\");\r\n    const [o1v, setO1v] = useState(0);\r\n    const [o2v, setO2v] = useState(0);\r\n    const [will, setWill] = useState(0);\r\n    const [point, setPoint] = useState(0);\r\n\r\n    const firstRef = useRef(null);\r\n    const focusAfterSubmitRef = useRef(false); // ✅ 포커스 복귀 조건 플래그\r\n    const WILL_INPUT_ID = \"quick-pad-will-input\";\r\n\r\n    // (옵션) 퀵패드가 켜질 때만 최초 1회 포커싱하고 싶다면 true로\r\n    useEffect(() => {\r\n      if (!focusOnMount) return;\r\n      requestAnimationFrame(() => {\r\n        firstRef.current?.focus?.();\r\n        firstRef.current?.select?.();\r\n      });\r\n    }, [focusOnMount]);\r\n\r\n    const focusWill = () => {\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          if (firstRef.current) {\r\n            try { firstRef.current.focus(); firstRef.current.select?.(); return; } catch { }\r\n          }\r\n          const el = document.getElementById(WILL_INPUT_ID);\r\n          if (el) { el.focus(); el.select?.(); }\r\n        });\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e?.preventDefault?.();\r\n      const id = uid();\r\n      onAdd({\r\n        id,\r\n        will: Number.isFinite(will) ? will : 0,\r\n        point: Number.isFinite(point) ? point : 0,\r\n        o1k,\r\n        o1v: Number.isFinite(o1v) ? o1v : 0,\r\n        o2k,\r\n        o2v: Number.isFinite(o2v) ? o2v : 0,\r\n      });\r\n\r\n      // ✅ 엔터/버튼으로 제출한 경우에만 포커스 복귀\r\n      if (focusAfterSubmitRef.current) {\r\n        focusWill();\r\n        focusAfterSubmitRef.current = false;\r\n      }\r\n    };\r\n\r\n    // 엔터로 제출할 때만 플래그 ON\r\n    const onKeyDownSubmit = (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        focusAfterSubmitRef.current = true; // ✅ 엔터 제출\r\n        handleSubmit(e);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white\">\r\n          <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\" title=\"빠른 추가\">\r\n            <Plus size={18} />\r\n          </div>\r\n\r\n          {/* 의지력 / 포인트 */}\r\n          <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>필요 의지력</label>\r\n              <NumberInput\r\n                value={will}\r\n                onChange={setWill}\r\n                min={0}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{\r\n                  id: WILL_INPUT_ID,\r\n                  title: \"의지력\",\r\n                  placeholder: \"의지력\",\r\n                  onKeyDown: onKeyDownSubmit,\r\n                  ref: firstRef,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>(질서/혼돈)포인트</label>\r\n              <NumberInput\r\n                value={point}\r\n                onChange={setPoint}\r\n                min={0}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{ title: \"포인트\", placeholder: \"포인트\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 옵션 1 */}\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 1</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o1k}\r\n                onChange={(v) => setO1k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o1v}\r\n                onChange={setO1v}\r\n                min={0}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"0\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 옵션 2 */}\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 2</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o2k}\r\n                onChange={(v) => setO2k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o2v}\r\n                onChange={setO2v}\r\n                min={0}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"0\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 액션 */}\r\n          <div className=\"top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n            <button\r\n              type=\"submit\"\r\n              // ✅ 버튼 클릭으로 제출할 때만 포커스 복귀 플래그 ON\r\n              onClick={() => { (focusAfterSubmitRef.current = true); }}\r\n              className=\"h-10 w-full lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n              title=\"Enter로도 추가 가능\"\r\n            >\r\n              <Plus size={16} />\r\n              <span className=\"inline\"> 젬 추가</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Divider */}\r\n        <div className=\"relative flex items-center my-4\">\r\n          <div className=\"flex-grow border-t\"></div>\r\n          <span className=\"mx-3 text-sm text-gray-600\">\r\n            아래에서 추가한 젬들을 확인하세요.\r\n          </span>\r\n          <div className=\"flex-grow border-t\"></div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 스타일 토큰 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n        @keyframes loa-marquee { 0%{ transform: translateX(-100%);} 100%{ transform: translateX(300%);} }\r\n        .animate-loa-marquee{ animation: loa-marquee 1.2s cubic-bezier(.4,0,.2,1) infinite; }\r\n      `}</style>\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더/카테고리 토글 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 코어 입력 & 우선순위(DnD/버튼 이동) */}\r\n        <section className={`${card} p-4 lg:p-6 !mt-2 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        CORE_THRESHOLDS[c.grade].map(v => ({ value: String(v), label: `${v}P` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      const coreNameItems = CORE_NAME_ITEMS.map(it => ({ ...it, disabled: takenNames.has(it.value) }));\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.grade} onChange={(val) => updateCore(c.id, { grade: /** @type {CoreGrade} */(val) })} items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))} placeholder=\"코어 등급\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 구간</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val) }); else updateCore(c.id, { minThreshold: undefined }); }} items={targetItems} placeholder=\"목표 포인트 선택\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">선택한 포인트 이상으로 탐색</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">체크 해제 시, 목표 포인트와<br className=\"hidden lg:block\" /><b className=\"text-primary\">정확히 일치하는 조합만 계산</b>합니다.</p>\r\n                              </div>\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div\r\n            className={`flex items-center gap-2 lg:gap-3 ${quickAddMode ? '' : 'mb-3'}`}\r\n          >\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            {/* 빠르게 추가 모드 스위치 */}\r\n            <div className=\"flex items-center gap-2 ml-1\">\r\n              <span className=\"text-xs text-gray-600\">빠르게 추가</span>\r\n              <button\r\n                type=\"button\"\r\n                role=\"switch\"\r\n                aria-checked={quickAddMode}\r\n                onClick={() => setQuickAddMode(v => !v)}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition ${quickAddMode ? \"bg-[#a399f2]\" : \"bg-gray-300\"\r\n                  }`}\r\n                aria-label=\"빠르게 추가 모드\"\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-5 transform rounded-full bg-white shadow transition ${quickAddMode ? \"translate-x-5\" : \"translate-x-1\"\r\n                    }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              {!quickAddMode && (\r\n                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          {quickAddMode && (\r\n            <p className=\"text-[11px] text-gray-500 mb-3\">\r\n              Tab 키로 입력 칸을 이동할 수 있고, Enter 키로 빠르게 추가할 수 있습니다.\r\n            </p>\r\n          )}\r\n          {/* 빠른 추가 패드 */}\r\n          {quickAddMode && (\r\n            <div className=\"mb-3\">\r\n              <QuickAddPad\r\n                autoFocus\r\n                onAdd={(gem) => {\r\n                  setGems(v => [gem, ...v]);     // 맨 위로 추가\r\n                  setHighlightGemId(gem.id);     // 하이라이트\r\n                  setStale(true);                // 재계산 유도\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16} /><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm`}>\r\n            <span className=\"text-xs text-gray-500\">포지션 선택</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"dealer\"}\r\n                onChange={() => {\r\n                  setRole(\"dealer\");\r\n                  setWeights({ ...DEALER_WEIGHTS });\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              딜러\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"support\"}\r\n                onChange={() => {\r\n                  setRole(\"support\");\r\n                  setWeights((w) => maskWeightsForRole(w, \"support\"));\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              서포터\r\n            </label>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k]}\r\n                    onChange={(v) => setWeights((w) => ({ ...w, [k]: (v) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0000001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 하단 계산 액션/알림 */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-2\">\r\n          {stale && !isComputing && hasCalculated && (\r\n            <span className=\"inline-block text-[11px] px-3 py-1.5 rounded-lg bg-red-100 text-red-800 border border-red-200 text-center lg:text-left\">\r\n              입력값이 변경되었습니다. <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center gap-2 lg:ml-auto w-full lg:w-auto\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={calculate}\r\n              disabled={isComputing}\r\n              className=\"h-10 w-full lg:w-[120px] px-0 lg:px-3 rounded-xl ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n            >\r\n              {isComputing ? \"계산 중…\" : \"계산하기\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          {!isComputing && stale && hasCalculated && (\r\n            <p className=\"text-xs text-red-700 mt-1\">입력값이 변경되었습니다. 우측 상단의 <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.</p>\r\n          )}\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = results?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name} <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}%</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 구간을 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <colgroup>\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"13%\"} />\r\n                          </colgroup>\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.wwill ?? g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"} {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n\r\n      {/* 전역 오버레이 진행바 */}\r\n      {isComputing && (\r\n        <div className=\"fixed inset-0 z-[99999] bg-black/35 backdrop-blur-[1px] flex items-center justify-center px-6\">\r\n          <div className=\"w-full max-w-md rounded-2xl bg-white/95 border shadow p-4\">\r\n            <div className=\"text-sm font-medium text-gray-800 mb-2\">{progress.label}</div>\r\n\r\n            {/* 진행바 */}\r\n            <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n              {progress.indeterminate ? (\r\n                <div className=\"absolute inset-0\">\r\n                  <div className=\"h-full w-1/3 bg-[#a399f2] animate-loa-marquee rounded-full\" />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"h-full bg-[#a399f2] transition-[width] duration-100\"\r\n                  style={{ width: `${progress.pct}%` }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* 퍼센트 영역: 결정형이면 % / 비결정형이면 pulse 숫자 */}\r\n            <div className=\"mt-2 text-right text-xs text-gray-600\">\r\n              {progress.indeterminate\r\n                ? (progress.pulse != null ? Number(progress.pulse).toLocaleString() : \"\")\r\n                : `${progress.pct}%`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/hooks/useOptimizer.js\r\nimport { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { flushSync } from 'react-dom';\r\n\r\nexport function useOptimizer(cores, gems, role, weights) {\r\n  const [calcVersion, setCalcVersion] = useState(0);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [computing, setComputing] = useState(false);\r\n  const [progress, setProgress] = useState({\r\n    pct: 0,\r\n    label: \"준비 중…\",\r\n    indeterminate: true,\r\n    phase: undefined,\r\n    coreIndex: null,\r\n    coreCount: null,\r\n    coreDone: null,\r\n    coreTotal: null,\r\n    rate: null,\r\n    elapsedMs: null,\r\n    etaMs: null,\r\n    pulse: 0,\r\n  });\r\n  const [priorityPicks, setPriorityPicks] = useState([]);\r\n  const workerRef = useRef(null);\r\n\r\n  // ✅ 새로 추가: 마지막으로 \"계산하기\"를 눌렀을 때의 입력값 스냅샷\r\n  const paramsRef = useRef({ cores, gems, role, weights });\r\n\r\n  useEffect(() => {\r\n    workerRef.current = new Worker(new URL('../workers/optimizer.worker.js', import.meta.url), { type: 'module' });\r\n    try {\r\n      workerRef.current?.postMessage({ type: \"kickoff\" });\r\n    } catch { }\r\n    return () => {\r\n      workerRef.current?.terminate();\r\n      workerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // ✅ 변경점: 의존성 배열을 calcVersion 하나만 사용\r\n  useEffect(() => {\r\n    if (calcVersion === 0) return;\r\n    let cancelled = false;\r\n\r\n    setTimeout(() => {\r\n      if (cancelled) return;\r\n      flushSync(() => {\r\n        setComputing(true);\r\n        setProgress({\r\n          pct: 0,\r\n          label: \"최적의 젬 조합을 찾고 있습니다…\",\r\n          indeterminate: false,\r\n          phase: 'gen',\r\n          coreIndex: null,\r\n          coreCount: paramsRef.current.cores?.length || null, // ← 스냅샷 사용\r\n          coreDone: null,\r\n          coreTotal: null,\r\n          rate: null,\r\n          elapsedMs: null,\r\n          etaMs: null,\r\n          pulse: 0,\r\n        });\r\n      });\r\n    }, 0);\r\n\r\n    (async () => {\r\n      try {\r\n        await new Promise(resolve => requestAnimationFrame(resolve));\r\n        const worker = workerRef.current;\r\n        if (!worker) throw new Error(\"Worker not initialized\");\r\n\r\n        const onMessage = (e) => {\r\n          if (cancelled) return;\r\n          const msg = e.data || {};\r\n          if (msg?.type === \"error\" || msg?.error) {\r\n            console.error(e.data?.error || msg?.error);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 0, label: \"에러\", indeterminate: true }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n          if (msg.type === \"progress\") {\r\n            const { done, total, indeterminate = false, phase, coreIndex, coreCount, coreDone, coreTotal, rate, elapsedMs, etaMs, pulse } = msg;\r\n            if (indeterminate || !total || total <= 0 || done == null) {\r\n              setProgress((p) => ({ \r\n                ...p, pct: 0, indeterminate: true, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: pulse ?? (p.pulse ?? 0)\r\n              }));\r\n            } else {\r\n              const pct = Math.max(0, Math.min(100, Math.floor((done / Math.max(1, total)) * 100)));\r\n              setProgress((p) => ({ \r\n                ...p, pct, indeterminate: false, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: undefined\r\n              }));\r\n            }\r\n            return;\r\n          }\r\n          if (msg.type === \"result\") {\r\n            const { picks } = msg;\r\n            setPriorityPicks(picks || []);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 100, label: \"완료\", indeterminate: false, pulse: undefined }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n        };\r\n\r\n        worker.addEventListener('message', onMessage);\r\n\r\n        // ✅ 스냅샷을 꺼내서 사용\r\n        const { cores: c, gems: g, role: r, weights: w } = paramsRef.current;\r\n        const perCoreLimit = g.length > 60 ? 800 : g.length > 45 ? 1200 : g.length > 30 ? 1600 : 2000;\r\n\r\n        worker.postMessage({ type: \"run\", cores: c, gems: g, role: r, weights: w, perCoreLimit });\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          console.error(err);\r\n          setComputing(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calcVersion]); // ← 오직 버튼 클릭으로 증가한 calcVersion에만 반응\r\n\r\n  // ✅ 변경점: 계산 버튼을 눌렀을 때 현재 입력값을 스냅샷으로 저장한 뒤 calcVersion 증가\r\n  const calculate = useCallback(() => {\r\n    paramsRef.current = { cores, gems, role, weights }; // 최신값 스냅샷\r\n    setCalcVersion(v => v + 1);\r\n    setHasCalculated(true);\r\n  }, [cores, gems, role, weights]);\r\n\r\n  return {\r\n    isComputing: computing,\r\n    progress,\r\n    results: priorityPicks,\r\n    calculate, // ← 이 함수가 “계산하기” 버튼 onClick에 연결되면 됩니다.\r\n    hasCalculated,\r\n  };\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =========================================================================\r\n * 1) 전역 동작 플래그\r\n *    - 시뮬레이션 분산 감소, 희귀사건 스케일업 등 런타임 전역 옵션\r\n * ========================================================================= */\r\nconst USE_ANTITHETIC = true;\r\nconst AUTO_SCALE_RARE = true;\r\nconst OFFICIAL_RNG = true;\r\n\r\n/* =========================================================================\r\n * 2) 상수/테이블\r\n *    - 등급 경계, 젬 타입별 유효 효과 풀, 희귀도별 시도/리롤, 수치 범위, 비용\r\n * ========================================================================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\n\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\n\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\n\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\n\r\n/* =========================================================================\r\n * 3) 결정적 난수 및 보조 수학 유틸\r\n *    - 해시 기반 시드, xorshift 변종 RNG, 경계 체크/클램프, CI 계산 등\r\n * ========================================================================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\n\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\n\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n);\r\n}\r\n\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001;\r\n  if (n >= 100000) return 0.0002;\r\n  if (n >= 50000) return 0.0003;\r\n  if (n >= 10000) return 0.0005;\r\n  if (n >= 5000) return 0.0007;\r\n  return 0.001;\r\n};\r\n\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n\r\n/* =========================================================================\r\n * 4) 표시/형식 유틸\r\n *    - 확률/숫자 출력, 부담 배지, 성공률 추정\r\n * ========================================================================= */\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";\r\n  if (x >= 1) return \"100.00000%\";\r\n  return (x * 100).toFixed(5) + \"%\";\r\n}\r\n\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity;\r\n  return expectedGold / p;\r\n}\r\n\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\n\r\n/* =========================================================================\r\n * 5) 효과/등급 판정 로직\r\n *    - 유효 효과 풀, 총점/등급, 목표 충족 판정, 거리(부족분) 계산\r\n * ========================================================================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\n\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\n\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\n\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\n\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n\r\n/* =========================================================================\r\n * 6) 슬롯(선택지) 구성/적용 로직\r\n *    - 선택지 가중치 테이블 구성, 표현/해석, 실제 반영\r\n * ========================================================================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\n\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n\r\n  return items;\r\n}\r\n\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\n\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\n\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n\r\n/* =========================================================================\r\n * 7) 시뮬레이션 코어\r\n *    - 몬테카를로 기반 확률/기대치 추정, 저분산 페어, 희귀사건 가드\r\n * ========================================================================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    useAntithetic = true,\r\n    autoScaleRare = true,\r\n    rareTargetSuccesses = 100,\r\n    rareMaxTrials = 200000,\r\n    rareTiers = [200000],\r\n  } = opts;\r\n\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n\r\n  let localMaxTrials = maxTrials;\r\n  let forceRare = false;\r\n\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n\r\n  while (n < localMaxTrials) {\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      if (n >= localMaxTrials) break;\r\n\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;\r\n      continue;\r\n    }\r\n\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n\r\n    if (rareGuardActive) {\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue;\r\n    }\r\n\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n\r\n/* =========================================================================\r\n * 8) 등급 표시용 스타일/정렬 보조\r\n *    - 확률 0% 제거, 내림차순 정렬, 동률 판정\r\n * ========================================================================= */\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",\r\n};\r\n\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n\r\n/* =========================================================================\r\n * 9) 공통 UI 유틸/컴포넌트\r\n *    - 클릭외부감지 훅, 드롭다운, 토스트 스택, 숫자 입력, Select 래퍼\r\n * ========================================================================= */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\nfunction Dropdown({\r\n  value,\r\n  items,\r\n  onChange,\r\n  placeholder,\r\n  className,\r\n  disabled,\r\n  bordered = true\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  set,\r\n  onChange,\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n\r\n/* =========================================================================\r\n * 10) 보조 헬퍼\r\n *     - 라벨 중복 여부, 등 기타 메인에서 참조하는 작은 유틸\r\n * ========================================================================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n\r\n/* =========================================================================\r\n * 11) 메인 컴포넌트 (GemSimulator)\r\n *     - 상태 정의, 파생값, 이펙트, 액션 핸들러, 렌더 스켈레톤만 유지\r\n *     - 요청 사항: 최종 UI 구현 마크업은 비워둠 (원본 로직 유지)\r\n * ========================================================================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n\r\n  const curValid = cur.aName !== cur.bName;\r\n\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n\r\n  const migratedRef = useRef(false);\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n\r\n  const [changeMode, setChangeMode] = useState(null);\r\n  const [changePick, setChangePick] = useState(\"\");\r\n\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]);\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n\r\n  const addLog = useCallback((entry) => {\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n\r\n  const simRef = useRef(null);\r\n  const [logsMax, setLogsMax] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct2 = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct2(nowProb)} → 다른 항목 보기 기대 ${pct2(rerollProb)} (▲${pct2(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct2(nowProb)}가 다른 항목 보기 기대 ${pct2(rerollProb)}보다 유리 (▼${pct2(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct2(nowProb)} vs 다른 항목 보기 ${pct2(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode: pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return;\r\n    }\r\n\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory();\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n\r\n  function manualReset() {\r\n    setLogs([]);\r\n    setHistory({ past: [], future: [] });\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory();\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1,\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n\r\n  const dupWarnShown = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);\r\n      setHistory({ past: [], future: [] });\r\n    }\r\n  }, [allLocked]);\r\n\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base;\r\n  }, [gemKey, pos, abModePrimary]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      {/* 전역 CSS 변수와 유틸리티 클래스 주입: 주요 색상 및 accent-color 지정 */}\r\n      <style>{`\r\n    :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n    .text-primary{ color:#a399f2; }\r\n    .accent-primary{ accent-color:#a399f2; }\r\n  `}</style>\r\n\r\n      {/* 중앙 컨테이너: 최대 폭 제한 및 수직 간격 */}\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더 섹션: 제목과 시뮬레이션 반복 횟수 선택 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            {/* 페이지 타이틀: 그라디언트 배경 위에서 가독성 위한 화이트 텍스트/드롭섀도 */}\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n\r\n            {/* 우측 컨트롤: 시뮬레이션 횟수 드롭다운 */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                {/* 시뮬레이션 반복 수 선택 Dropdown (SIM_OPTIONS 기반) */}\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 기본 설정 카드 (젬 타입/등급/기본 시도/리롤 안내) */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 카드 타이틀 */}\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (잠금 상태 제어) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 입력 행: 젬 타입/등급/기본 시도·리롤 표시 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 선택: GEM_TYPES 키 목록을 드롭다운으로 제공 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 등급 선택: 고급/희귀/영웅 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 현재 등급 기준 기본 시도/리롤 수 정보 표시 (읽기 전용) */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 현재 옵션 입력 카드 (현재 젬의 상태 입력/잠금) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (현재 값 고정 여부) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 현재 옵션 입력 행: 효율/포인트/효과 A/B 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 포인트 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 선택 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 선택 (A와 중복 불가) */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 목표 옵션 입력 카드 (목표 충족 방식/효과/레벨) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n\r\n            {/* 우측: 저장/편집 토글 (잠금 시 계산 활성) */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 목표 충족 방식 라디오: 상관 없음일 때 비활성화 */}\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n\r\n          {/* 목표 조건 입력 행: 효율/포인트/추가 효과/효과명 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 목표 의지력 효율 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 포인트 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 추가 효과 역할군: 상관 없음/공격형/지원형 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 효과명/레벨: 역할군이 상관 없음이면 비활성화 */}\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 효과 A 선택 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 A 레벨 하한 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 선택: BOTH 모드에서만 활성 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 레벨 하한: BOTH 모드일 때만 활성 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 2열 레이아웃: 좌측 시뮬, 우측 작업 내역 */}\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 좌측(2칸): 가공 시뮬레이션 패널 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 헤더: 타이틀 및 초기화 버튼 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 사용 안내: 모든 설정 잠금 이후 액션 가능 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n\r\n            {/* 본문: 현재 상태 카드 + 선택지 카드 */}\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 현재 젬 상태/리소스 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n\r\n                {/* 핵심 스탯(효율/포인트/효과 A/B) 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  {/* 효율 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n\r\n                  {/* 포인트 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n\r\n                  {/* 효과 A: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 효과 B: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 리소스 칩: 남은 가공/리롤/비용 증감률/누적 골드 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 이번 차수 선택지 + 액션 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n\r\n                {/* 4개 슬롯: 라벨 선택 + 적용 버튼 */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {/* 현재 슬롯 라벨 변경 드롭다운 */}\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        {/* 적용 버튼: 모든 설정 잠금 및 중복 미발생 등 조건 충족 시 활성 */}\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 버튼 및 추천 문구 */}\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 EV 근거 설명 (가능 시 노출) */}\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 우측(1칸): 작업 내역 패널 (Undo/Redo 포함) */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              {/* Undo/Redo 버튼: 단축키 안내 포함 */}\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 로그 비어있음/목록 렌더링 */}\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n\r\n        {/* 결과 출력 섹션: 스켈레톤/실데이터 2상태 렌더링 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            {/* 우측 표시: 실제 사용된 Monte Carlo 횟수 및 95% CI 폭 */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 계산 중 또는 데이터 미존재 시: 스켈레톤 UI */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 스켈레톤 칩 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 스켈레톤 카드 2장 */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 실데이터 표시: 1회차 선택지 목록 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 목표 달성 확률 및 등급 확률 카드 2열 */}\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 카드: STOP_ON_SUCCESS vs RUN_TO_END */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* 좌측: STOP_ON_SUCCESS 결과 */}\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n\r\n                      {/* 우측: RUN_TO_END 결과 */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n\r\n                  {/* 등급 확률 카드: 전설/유물/고대 각각의 달성 확률 및 순서 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n\r\n                    {/* 각 등급 확률 막대 및 수치 표시 (0%도 노출) */}\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* 100% 확정 배지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n\r\n                    {/* 등급 확률 순서 요약: 0% 제외, 동률 표기 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun);\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n\r\n      {/* 전역 토스트 스택: 중앙 오버레이로 알림 표시 */}\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n\r\n      {/* 광고 영역: Kakao Adfit 삽입 */}\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp } from \"lucide-react\";\r\n\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll();\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\n\r\nfunction TopFab() {\r\n  const visible = useNearBottom(520);\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)]\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          visible ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CoreOnly() {\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n        <header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n          <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n            <nav aria-label=\"Core pages\">\r\n              <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/gem\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 가공 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/optimizer\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 장착 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            {/* 기본 경로 보정: /#/core → /#/core/optimizer */}\r\n            <Route index element={<Navigate to=\"/optimizer\" replace />} />\r\n\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n\r\n            {/* 나머지 경로도 optimizer로 보정 */}\r\n            <Route path=\"*\" element={<Navigate to=\"/optimizer\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n      <TopFab />\r\n    </HashRouter>\r\n  );\r\n}\r\n"],"names":["adRef","useRef","useEffect","ins","document","createElement","className","style","display","setAttribute","script","type","async","src","current","innerHTML","appendChild","_jsx","ref","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","DEALER_WEIGHTS","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_g$o1v","_w$g$o1k","_g$o2v","_w$g$o2k","has","o1k","o1v","o2k","o2v","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","length","CORE_NAME_ITEMS","value","label","CATEGORY_LABEL","order","chaos","LS_KEY","CORE_ORDER","uid","Math","random","toString","slice","loadFromStorage","localStorage","getItem","JSON","parse","e","console","warn","dragPortal","body","PortalAwareDraggable","_ref","draggableId","index","children","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","open","setOpen","useState","focusedIndex","setFocusedIndex","btnRef","menuRef","itemRefs","menuPos","top","left","width","forceTick","listboxId","initFocusIndex","useCallback","sel","findIndex","i","disabled","firstEnabled","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","Array","isArray","handlerRef","listener","_handlerRef$current","some","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","requestAnimationFrame","_ref3","_ref3$focus","el","focus","cancelAnimationFrame","selected","find","getNextEnabled","start","dir","n","step","menu","AnimatePresence","motion","ul","id","tabIndex","undefined","initial","opacity","y","animate","exit","transition","duration","position","zIndex","onKeyDown","key","preventDefault","next","first","last","it","_btnRef$current2","_btnRef$current2$quer","_btnRef$current2$quer2","querySelector","_btnRef$current3","_btnRef$current3$quer","_btnRef$current3$quer2","map","isSelected","isActive","onMouseEnter","onItemMouseEnter","onClick","_btnRef$current4","_btnRef$current4$quer","_btnRef$current4$quer2","String","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref4","toasts","onClose","div","scale","stiffness","damping","msg","NumberInput","_ref5","min","max","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","x","clamp","inputMode","onBlur","onWheel","currentTarget","blur","LoACoreOptimizer","title","category","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","push","remove","setToasts","setTimeout","useToasts","quickAddMode","setQuickAddMode","stale","setStale","didMountRef","cores","gems","isComputing","progress","results","calculate","hasCalculated","calcVersion","setCalcVersion","setHasCalculated","computing","setComputing","setProgress","pct","indeterminate","phase","coreIndex","coreCount","coreDone","coreTotal","rate","elapsedMs","etaMs","pulse","priorityPicks","setPriorityPicks","workerRef","paramsRef","Worker","URL","_workerRef$current","postMessage","_workerRef$current2","terminate","cancelled","flushSync","_paramsRef$current$co","Promise","resolve","worker","Error","onMessage","data","_e$data","error","p","done","total","_p$pulse","floor","picks","c","perCoreLimit","err","useOptimizer","setCores","updater","prev","setGems","updateGem","patch","updateCore","cs","name","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","idx","displayIndexGem","QuickAddPad","_ref6","onAdd","focusOnMount","setO1k","setO2k","setO1v","setO2v","setWill","setPoint","firstRef","focusAfterSubmitRef","WILL_INPUT_ID","_firstRef$current","_firstRef$current$foc","_firstRef$current2","_firstRef$current2$se","select","handleSubmit","_e$preventDefault","_firstRef$current$sel","_firstRef$current3","getElementById","_el$select","onKeyDownSubmit","shiftKey","onSubmit","Plus","_w$brand","assert","gem","includes","cA","cB","log","runSelfTests","setItem","stringify","saveToStorage","backgroundImage","backgroundAttachment","addCore","nextName","existingNames","nextAvailableCoreName","minThreshold","enforceMin","DragDropContext","onDragStart","evt","Event","dispatchEvent","onDragEnd","result","destination","from","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","supply","targetItems","concat","takenNames","coreNameItems","prov","_c$minThreshold","draggableProps","dragHandleProps","val","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","autoFocus","removeGem","resetWeights","RotateCcw","maskWeightsForRole","pick","hasResult","list","minOfGrade","maxThr","toFixed","_Fragment","_ref7","_g$wwill","gi","disp","wwill","KakaoAdfit","toLocaleString","USE_ANTITHETIC","AUTO_SCALE_RARE","OFFICIAL_RNG","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","SIM_OPTIONS","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","lo","hi","zeroSuccessUpperBound","alpha","arguments","pow","epsilonByTrials","batchByTrials","fmtProbSmart","fmtProb","fmtNum","goldPerSuccess","expectedGold","Infinity","round","burdenBadge","tone","estimateRate","successes","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","meetsTargetByMode","abMode","tgtNames","pool","isAny","nm","TA","aName","TB","bName","match","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","parseInt","replace","trim","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","sum","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","arr","a","b","gold","rrs","unlocked","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","ci","low","high","halfWidth","localMaxTrials","forceRare","tiers","sort","hardCap","nextTier","cur","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","bordered","useMemo","toneBtn","success","info","warning","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","Boolean","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","m","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","d","Date","pad","padStart","getHours","getMinutes","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","toLowerCase","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","out","cursor","_allOptionLabels$curs","_allOptionLabels$curs2","manLabels","setManLabels","_allOptionLabels$i","used","replacement","l","resultStop","setResultStop","resultRun","setResultRun","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","pct2","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","_","gps","badge","delay","grades","grad","comps","eps","diff","abs","rankGradeOrder","TopFab","visible","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","scrollTo","behavior","CoreOnly","HashRouter","basename","NavLink","to","Routes","Route","element","Navigate","path"],"sourceRoot":""}