{"version":3,"file":"static/js/874.27ba5129.chunk.js","mappings":"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","sources":["components/KakaoAdfit.jsx","lib/optimizerCore.js","components/LoACoreOptimizer.jsx","hooks/useOptimizer.js","components/GemSimulator.jsx","CoreOnly.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;","// src/lib/optimizerCore.js\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nexport const CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nexport const CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nexport const CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nexport const GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nexport const OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nexport const OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nexport const ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\nexport const DEFAULT_WEIGHTS = { atk: 1, add: 1, boss: 1, brand: 1, allyDmg: 1, allyAtk: 1 };\r\n// 딜러 가중치: y ≈ slope * level (원점 통과 회귀 추정)\r\nexport const DEALER_WEIGHTS = {\r\n  boss: 0.07870909,\r\n  add: 0.06018182,\r\n  atk: 0.03407273,\r\n  brand: 0,\r\n  allyDmg: 0,\r\n  allyAtk: 0,\r\n};\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nexport function sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nexport function scoreGemForRole(g, role, w) {\r\n  if (role == null) return 0; // 역할 미선택이면 유효옵션 점수 0\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? (g.o1v ?? 0) * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? (g.o2v ?? 0) * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nexport function* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1;\r\n    while (p >= 0 && idx[p] === n - k + p) p--;\r\n    if (p < 0) break;\r\n    idx[p]++;\r\n    for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\nexport function thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nexport function scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000)\r\n    + (totalPoint * 10_000)\r\n    + ((5_000 - totalWill) * 10)\r\n    + roleSum\r\n    - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nexport function enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin, onStep) {\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) {\r\n      all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 });\r\n      continue;\r\n    }\r\n    for (const combo of combinations(pool, k)) {\r\n      onStep && onStep(1);\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n\r\n  all.sort((a, b) => b.score - a.score);\r\n\r\n  // [수정] UI 변경에 맞춰 필터링 로직 전체를 새로운 로직으로 변경합니다.\r\n  let filtered;\r\n\r\n  // '이상 탐색' 모드 (체크박스 ON)\r\n  if (enforceMin) {\r\n    const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n    const effMin = minThreshold ?? minOfGrade; // 목표 설정 없으면 등급 최소치 적용\r\n    filtered = all.filter(ci =>\r\n      ci.totalPoint >= effMin && ci.thr.length > 0 && ci.list.length > 0\r\n    );\r\n  }\r\n  // '정확히 일치' 모드 (체크박스 OFF, 기본값)\r\n  else {\r\n    // 목표 포인트가 명확히 설정된 경우\r\n    if (minThreshold != null) {\r\n      filtered = all.filter(ci =>\r\n        ci.totalPoint === minThreshold && ci.list.length > 0\r\n      );\r\n    }\r\n    // 목표 포인트 설정이 없는 경우 (가장 점수 높은 순으로)\r\n    else {\r\n      filtered = all.filter(ci => ci.thr.length > 0 && ci.list.length > 0);\r\n    }\r\n  }\r\n\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n  \r\n  return filtered;\r\n}","// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown, Info } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport { useOptimizer } from '../hooks/useOptimizer';\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n// 최적화 순수 로직/상수 import (UI에서 쓰는 상수/헬퍼만)\r\nimport {\r\n  CORE_SUPPLY,\r\n  CORE_THRESHOLDS,\r\n  CORE_LABEL,\r\n  GRADES,\r\n  OPTION_LABELS,\r\n  OPTIONS,\r\n  DEFAULT_WEIGHTS,\r\n  DEALER_WEIGHTS,\r\n  ROLE_KEYS,\r\n  sanitizeWeights,\r\n  scoreGemForRole,\r\n  thresholdsHit,\r\n  scoreCombo,\r\n} from '../lib/optimizerCore.js';\r\nimport ARC_CORES from \"../data/arc_cores_select.json\";\r\n\r\n/* --------------------------------------------------------------------------\r\n * [타입 설명 - 코드 동작과 무관한 개발자 참고 주석]\r\n *  - Role: \"dealer\"(딜러) | \"support\"(서폿)\r\n *  - OptionKey: 각 젬 옵션 키 (\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\")\r\n *  - CoreGrade: 코어 등급 (\"HERO\",\"LEGEND\",\"RELIC\",\"ANCIENT\")\r\n *  - Gem/CoreDef/Weights/ComboInfo: 데이터 모델\r\n * -------------------------------------------------------------------------- */\r\n\r\n/* 도메인 외 UI 전용 상수 */\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\nconst CATEGORY_LABEL = { order: \"질서\", chaos: \"혼돈\" };\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\";\r\n\r\n// ★ 직업/코어 그룹 매핑\r\nconst JOBS = ARC_CORES?.jobs ?? [];\r\nconst CORE_NAME_BY_GROUP = { \"해\": \"해 코어\", \"달\": \"달 코어\", \"별\": \"별 코어\" };\r\nconst GROUP_BY_CORE_NAME = { \"해 코어\": \"해\", \"달 코어\": \"달\", \"별 코어\": \"별\" };\r\n\r\n// 직업별로 (해/달/별) 어떤 그룹이 있는지 -> \"해 코어\"/\"달 코어\"/\"별 코어\" 셋 반환\r\nfunction getAllowedCoreNameSet(job) {\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const groups = new Set(entries.map(e => e[\"그룹\"])); // \"해\" | \"달\" | \"별\"\r\n  const names = new Set(\r\n    Array.from(groups).map(g => CORE_NAME_BY_GROUP[g]).filter(Boolean)\r\n  );\r\n  return names;\r\n}\r\n\r\n// 직업 + 그룹(해/달/별)에 해당하는 '직업 코어' 프리셋 목록\r\nfunction getPresetItems(job, groupKey /* \"해\"|\"달\"|\"별\" */) {\r\n  if (!job || !groupKey) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  return entries\r\n    .filter(e => e[\"그룹\"] === groupKey)\r\n    .map(e => ({ value: e[\"코어\"], label: e[\"코어\"] }));\r\n}\r\n\r\n\r\n/* =============================== 유틸/헬퍼 (UI) =============================== */\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\n// 등급별 목표 포인트 최대값\r\nconst TARGET_MAX_BY_GRADE = {\r\n  HERO: 10,      // 영웅\r\n  LEGEND: 14,    // 전설\r\n  RELIC: 19,     // 유물\r\n  ANCIENT: 20,   // 고대\r\n};\r\n\r\n// \"효과\" 원본을 점수-설명 배열로 정규화\r\nfunction normalizeEffects(raw) {\r\n  if (!raw) return [];\r\n  let arr = [];\r\n\r\n  if (Array.isArray(raw)) {\r\n    arr = raw.flatMap((item) => {\r\n      if (!item) return [];\r\n      if (typeof item === \"string\") {\r\n        const m = item.match(/(\\d+)\\s*P?/i);\r\n        const p = m ? Number(m[1]) : null;\r\n        return p ? [{ point: p, text: item.replace(/^.*?:\\s*/, \"\").trim() || item.trim() }] : [];\r\n      }\r\n      if (typeof item === \"object\") {\r\n        // {point,text} | {P,desc} | {포인트,효과} 등 관용 처리\r\n        let p = item.point ?? item.P ?? item.포인트 ?? null;\r\n        if (typeof p === \"string\") p = parseInt(p.replace(/\\D/g, \"\"), 10);\r\n        const t = item.text ?? item.desc ?? item.효과 ?? item.value ?? \"\";\r\n        return Number.isFinite(p) ? [{ point: Number(p), text: String(t) }] : [];\r\n      }\r\n      return [];\r\n    });\r\n  } else if (typeof raw === \"object\") {\r\n    // {\"6P\":\"...\",\"10P\":\"...\"} 같은 맵\r\n    arr = Object.entries(raw).map(([k, v]) => {\r\n      const p = parseInt(String(k).replace(/\\D/g, \"\"), 10);\r\n      return { point: p, text: String(v) };\r\n    });\r\n  } else if (typeof raw === \"string\") {\r\n    // 줄 단위 \"6P: ...\" 등\r\n    arr = raw.split(/\\r?\\n/).flatMap((line) => {\r\n      const m = line.match(/(\\d+)\\s*P?/i);\r\n      const p = m ? Number(m[1]) : null;\r\n      return p ? [{ point: p, text: line.replace(/^.*?:\\s*/, \"\").trim() || line.trim() }] : [];\r\n    });\r\n  }\r\n\r\n  return arr\r\n    .filter((x) => Number.isFinite(x.point) && x.text)\r\n    .sort((a, b) => a.point - b.point);\r\n}\r\n\r\n// 특정 직업/그룹/프리셋의 효과 배열 가져오기\r\nfunction getEffectsForPreset(job, groupKey, preset) {\r\n  if (!job || !groupKey || !preset) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const row = entries.find((e) => e[\"그룹\"] === groupKey && e[\"코어\"] === preset);\r\n  return normalizeEffects(row?.[\"효과\"]);\r\n}\r\n\r\n\r\n// 역할 선택 시 반대 역할 키 가중치를 0으로 마스킹\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => { next[k] = 0; });\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => { next[k] = 1; });\r\n  return next;\r\n}\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    [refs]\r\n  );\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ value, items, onChange, placeholder, className, bordered = true }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [focusedIndex, setFocusedIndex] = useState(-1); // 현재 키보드 포커스용\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const itemRefs = useRef([]); // li>button 각각의 ref\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  const listboxId = useRef(`dd-list-${Math.random().toString(36).slice(2)}`).current;\r\n\r\n  // 열릴 때 선택값 또는 첫 사용가능 항목으로 포커스 초기화\r\n  const initFocusIndex = useCallback(() => {\r\n    const sel = items.findIndex(i => i.value === value && !i.disabled);\r\n    if (sel >= 0) return sel;\r\n    const firstEnabled = items.findIndex(i => !i.disabled);\r\n    return firstEnabled >= 0 ? firstEnabled : -1;\r\n  }, [items, value]);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick(v => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick(v => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  // 열릴 때 키보드 포커스 타깃 준비 + 첫 렌더 다음 프레임에 실제 DOM 포커스\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    setFocusedIndex(initFocusIndex());\r\n    // 다음 프레임에 리스트박스에 포커스 이동 (버튼 포커스가 메뉴로 남는 이슈 방지)\r\n    const t = requestAnimationFrame(() => {\r\n      const el = itemRefs.current[initFocusIndex()];\r\n      (el ?? menuRef.current)?.focus?.();\r\n    });\r\n    return () => cancelAnimationFrame(t);\r\n  }, [open, initFocusIndex]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  // 유틸: 다음/이전 사용가능 인덱스\r\n  const getNextEnabled = (start, dir) => {\r\n    const n = items.length;\r\n    if (n === 0) return -1;\r\n    let i = start;\r\n    for (let step = 0; step < n; step++) {\r\n      i = (i + dir + n) % n;\r\n      if (!items[i].disabled) return i;\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  // 버튼 키다운: 열고 닫기/첫 항목 포커스\r\n  const onButtonKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const willOpen = !open;\r\n      if (willOpen) {\r\n        setOpen(true);\r\n        // 열리면 useEffect가 포커스 세팅\r\n      } else {\r\n        // 이미 열렸다면 이동\r\n        const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n        const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n        if (next >= 0) setFocusedIndex(next);\r\n      }\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      setOpen(v => !v);\r\n    }\r\n  };\r\n\r\n  // 메뉴 키다운: 항목 이동/선택/닫기\r\n  const onMenuKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n      const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n      if (next >= 0) setFocusedIndex(next);\r\n    } else if (e.key === \"Home\") {\r\n      e.preventDefault();\r\n      const first = items.findIndex(i => !i.disabled);\r\n      if (first >= 0) setFocusedIndex(first);\r\n    } else if (e.key === \"End\") {\r\n      e.preventDefault();\r\n      let last = -1;\r\n      for (let i = items.length - 1; i >= 0; i--) {\r\n        if (!items[i].disabled) { last = i; break; }\r\n      }\r\n      if (last >= 0) setFocusedIndex(last);\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      const it = items[focusedIndex];\r\n      if (it && !it.disabled) {\r\n        onChange(it.value);\r\n        setOpen(false);\r\n        // 닫히면 버튼으로 포커스 복귀\r\n        requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n      requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n    } else if (e.key === \"Tab\") {\r\n      // 탭으로 이동할 땐 자연스럽게 닫기\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  // 마우스 호버시 포커스 인덱스 업데이트(시각 일치)\r\n  const onItemMouseEnter = (i) => setFocusedIndex(i);\r\n\r\n  // 메뉴 DOM\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        role=\"listbox\"\r\n        id={listboxId}\r\n        tabIndex={-1}\r\n        aria-activedescendant={focusedIndex >= 0 ? `${listboxId}-opt-${focusedIndex}` : undefined}\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n        onKeyDown={onMenuKeyDown}\r\n      >\r\n        {items.map((it, i) => {\r\n          const isSelected = it.value === value;\r\n          const isActive = i === focusedIndex;\r\n          return (\r\n            <li key={String(it.value)}>\r\n              <button\r\n                ref={(el) => (itemRefs.current[i] = el)}\r\n                id={`${listboxId}-opt-${i}`}\r\n                type=\"button\"\r\n                role=\"option\"\r\n                aria-selected={isSelected}\r\n                onMouseEnter={() => onItemMouseEnter(i)}\r\n                onClick={() => {\r\n                  if (it.disabled) return;\r\n                  onChange(it.value);\r\n                  setOpen(false);\r\n                  requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n                }}\r\n                aria-disabled={it.disabled ? true : undefined}\r\n                className={`w-full text-left px-3 py-2 text-sm\r\n                  ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"}\r\n                  ${isSelected ? \"bg-gray-100\" : \"\"}\r\n                  ${isActive ? \"outline-none ring-2 ring-[#a399f2]/40\" : \"\"}\r\n                `}\r\n              >\r\n                <span className=\"block truncate\">{it.label}</span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={open}\r\n        aria-controls={open ? listboxId : undefined}\r\n        onKeyDown={onButtonKeyDown}\r\n        onClick={() => setOpen(v => !v)}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\nfunction CoreEffectInfo({ job, groupKey, preset, grade, category, coreName, supply }) {\r\n  const [open, setOpen] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  const effects = getEffectsForPreset(job, groupKey, preset);\r\n  const maxP = TARGET_MAX_BY_GRADE[grade] ?? 999;\r\n  const list = effects.filter((e) => e.point <= maxP);\r\n\r\n  // \"해 코어\" → \"해\", \"달 코어\" → \"달\", \"별 코어\" → \"별\"\r\n  const coreShort =\r\n    GROUP_BY_CORE_NAME[coreName] /* \"해|달|별\" */ ??\r\n    coreName.replace(/\\s*코어$/, \"\"); // 안전망\r\n\r\n  const LABEL_CLS = \"text-[12px] text-gray-500 mb-1 text-indigo-400\";\r\n\r\n  // 등급 판별: CORE_LABEL[grade] 문자열 기준 + 키 백업\r\n  const isAncient =\r\n    (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") || String(grade).toLowerCase() === \"ancient\";\r\n    \r\n  // 등급별 텍스트 색상 클래스\r\n  const gradeColorCls =\r\n  String(grade).toUpperCase() === \"HERO\"    || (CORE_LABEL?.[grade] ?? \"\").includes(\"영웅\") ? \"text-fuchsia-500\" :\r\n  String(grade).toUpperCase() === \"LEGEND\"  || (CORE_LABEL?.[grade] ?? \"\").includes(\"전설\") ? \"text-amber-500\"  :\r\n  String(grade).toUpperCase() === \"RELIC\"   || (CORE_LABEL?.[grade] ?? \"\").includes(\"유물\") ? \"text-orange-700\"  :\r\n  String(grade).toUpperCase() === \"ANCIENT\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") ? \"text-[#d3bd8b]\"   :\r\n  \"text-gray-800\";\r\n\r\n  // \"A/B%\", \"A%/B%\", \"A/B\" 형태 치환 (여러 개 등장해도 전부 처리)\r\n  const pickSlashValueByGrade = (text) => {\r\n    const pickRight = isAncient; // 고대: 뒤 값, 유물: 앞 값\r\n\r\n    // 1) \"A%/B%\" → \"A%\" or \"B%\"\r\n    let out = text.replace(\r\n      /(\\d+(?:\\.\\d+)?)%\\s*\\/\\s*(\\d+(?:\\.\\d+)?)%/g,\r\n      (_, a, b) => (pickRight ? b : a) + \"%\"\r\n    );\r\n\r\n    // 2) \"A/B%\" → \"A%\" or \"B%\" (예: 50.0/60.0%)\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(%)/g,\r\n      (_, a, b, pct) => (pickRight ? b : a) + pct\r\n    );\r\n\r\n    // 3) \"A/B\" → \"A\" or \"B\" (단위가 따로 뒤에 붙는 경우는 그대로 둠)\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(?!\\s*[%\\d])/g,\r\n      (_, a, b) => (pickRight ? b : a)\r\n    );\r\n\r\n    return out;\r\n  };\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      className=\"relative inline-flex items-center align-top ml-1 cursor-pointer\"\r\n      onMouseEnter={() => setOpen(true)}\r\n      onMouseLeave={() => setOpen(false)}\r\n      onFocus={() => setOpen(true)}\r\n      onBlur={() => setOpen(false)}\r\n    >\r\n      <Info size={16} aria-hidden=\"true\" color=\"#a399f2\" />\r\n\r\n      <AnimatePresence>\r\n        {open && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -4 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -4 }}\r\n            transition={{ duration: 0.12 }}\r\n            className=\"absolute z-[999999] mt-2 left-1/2 -translate-x-1/2 w-[400px] rounded-xl border bg-white shadow-lg p-3 text-xs\"\r\n            role=\"tooltip\"\r\n          >\r\n            {/* 제목 */}\r\n            <div className=\"text-[13px] font-semibold mb-2\">\r\n              <div>{CATEGORY_LABEL[category]}의 {coreName} : {preset}</div>\r\n              <div className={`text-[12px] font-medium ${gradeColorCls}`}>{CORE_LABEL[grade]} 아크 그리드 코어</div>\r\n            </div>\r\n\r\n            {/* 코어 타입 */}\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 타입</div>\r\n              <div className=\"text-[12px] font-medium\">\r\n                <span>{CATEGORY_LABEL[category]}</span>\r\n                <span className=\"mx-1\">–</span>\r\n                <span>{coreShort}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 코어 공급 의지력 */}\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 공급 의지력</div>\r\n              <div className=\"text-[12px] font-medium\">{String(supply)} 포인트</div>\r\n            </div>\r\n\r\n          {/* 코어 옵션 (등급 최대 포인트 이하만) */}\r\n          <div className={LABEL_CLS}>코어 옵션</div>\r\n          {list.length === 0 ? (\r\n            <div className=\"text-gray-500\">옵션 정보가 없습니다.</div>\r\n          ) : (\r\n            <ul className=\"mt-1 space-y-1\">\r\n              {list.map((e) => {\r\n                const text = e.point === 17 ? pickSlashValueByGrade(e.text) : e.text;\r\n                return (\r\n                  <li\r\n                    key={e.point}\r\n                    className=\"grid grid-cols-[32px_1fr] gap-x-1 items-start min-w-0\"\r\n                  >\r\n                    {/* 왼쪽: 포인트 (고정폭, 우측정렬) */}\r\n                    <span className=\"w-[32px] shrink-0 text-amber-500 font-semibold\">\r\n                      [{e.point}P]\r\n                    </span>\r\n                    {/* 오른쪽: 설명 (이 컬럼에서만 줄바꿈) */}\r\n                    <span className=\"text-gray-800 break-words min-w-0\">\r\n                      {text}\r\n                    </span>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </span>\r\n  );\r\n}\r\n\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value, onChange, min, max, step = 1, allowFloat = false, zeroOnBlur = true, className = \"\", inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num));\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n\r\n  // 현재 카테고리\r\n  const [category, setCategory] = useState/** @type {Category} */(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  // 카테고리별 상태\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n\r\n  // 기타 상태\r\n  const [role, setRole] = useState/** @type {Role|null} */(null);\r\n  const [weights, setWeights] = useState({ ...DEFAULT_WEIGHTS });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  const [quickAddMode, setQuickAddMode] = useState(false);\r\n\r\n\r\n  const [stale, setStale] = useState(false);\r\n  const didMountRef = useRef(false);\r\n\r\n  // 현재 카테고리별 단축\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n  // ✅ [추가] 커스텀 훅을 호출하여 계산 관련 로직을 모두 위임합니다.\r\n  const { isComputing, progress, results, calculate, hasCalculated } = useOptimizer(cores, gems, role, weights);\r\n  // ★ 선택한 직업 (질서에서만 사용)\r\n  const [selectedJob, setSelectedJob] = useState(() => (loadFromStorage()?.selectedJob ?? \"\"));\r\n\r\n\r\n  // ✅ [추가] 계산 결과(results)가 바뀔 때마다 stale 상태를 false로 업데이트합니다.\r\n  useEffect(() => {\r\n    if (results && results.length > 0) {\r\n      setStale(false);\r\n    }\r\n  }, [results]);\r\n\r\n  // 현재 카테고리에 대해서만 set 하는 헬퍼\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const setGems = (updater) => {\r\n    setGemsByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) { didMountRef.current = true; return; }\r\n    setStale(true);\r\n  }, [role, weights, category]);\r\n\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n\r\n  // 직업/코어 이름 변경 시 preset을 유효/기본값으로 자동 동기화\r\n  useEffect(() => {\r\n    if (category !== \"order\" || !selectedJob) return;\r\n\r\n    setCoresByCat((prevByCat) => {\r\n      const list = prevByCat[category] ?? [];\r\n      let changed = false;\r\n\r\n      const next = list.map((c) => {\r\n        const groupKey = GROUP_BY_CORE_NAME[c.name]; // \"해\" | \"달\" | \"별\"\r\n        const items = getPresetItems(selectedJob, groupKey); // [{ value, label }, ...]\r\n        const isValid = c.preset && items.some((i) => i.value === c.preset);\r\n        const nextPreset = isValid ? c.preset : (items[0]?.value ?? undefined);\r\n\r\n        if (nextPreset !== c.preset) {\r\n          changed = true;\r\n          return { ...c, preset: nextPreset };\r\n        }\r\n        return c;\r\n      });\r\n\r\n      if (!changed) return prevByCat;          // 변경 없으면 no-op (재렌더/루프 방지)\r\n      setStale(true);                           // 보수적 갱신: 필요 없으면 이 줄은 빼도 됩니다\r\n      return { ...prevByCat, [category]: next };\r\n    });\r\n  }, [category, selectedJob, cores, setCoresByCat, setStale]);\r\n\r\n\r\n\r\n  const resetWeights = () => setWeights({ ...DEFAULT_WEIGHTS });\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: null, o2k: \"add\", o2v: null }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n\r\n    const initialPreset =\r\n      category === \"order\" && selectedJob\r\n        ? getPresetItems(selectedJob, GROUP_BY_CORE_NAME[nextName])[0]?.value\r\n        : undefined;\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false, preset: initialPreset },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs;\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n\r\n  // Drag state (for backdrop blur toggle)\r\n  // eslint-disable-next-line\r\n  const [dragging, setDragging] = useState(false);\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // UI tokens\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  // Self-tests (optional)\r\n  useEffect(() => {\r\n    function runSelfTests() {\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id: \"t1\", will: 1, point: 1, o1k: \"atk\", o1v: 2, o2k: \"brand\", o2v: 3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id: \"t2\", will: 0, point: 10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n  useEffect(() => {\r\n    saveToStorage({ category, coresByCat, gemsByCat, role, weights, selectedJob });\r\n  }, [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  // === 빠른 추가 패드 (LoACoreOptimizer 내부에 선언) ===\r\n  function QuickAddPad({ onAdd, focusOnMount = false }) {\r\n    const [o1k, setO1k] = useState(\"atk\");\r\n    const [o2k, setO2k] = useState(\"add\");\r\n    const [o1v, setO1v] = useState(1);\r\n    const [o2v, setO2v] = useState(1);\r\n    const [will, setWill] = useState(1);\r\n    const [point, setPoint] = useState(1);\r\n\r\n    const firstRef = useRef(null);\r\n    const focusAfterSubmitRef = useRef(false); // ✅ 포커스 복귀 조건 플래그\r\n    const WILL_INPUT_ID = \"quick-pad-will-input\";\r\n\r\n    // (옵션) 퀵패드가 켜질 때만 최초 1회 포커싱하고 싶다면 true로\r\n    useEffect(() => {\r\n      if (!focusOnMount) return;\r\n      requestAnimationFrame(() => {\r\n        firstRef.current?.focus?.();\r\n        firstRef.current?.select?.();\r\n      });\r\n    }, [focusOnMount]);\r\n\r\n    const focusWill = () => {\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          if (firstRef.current) {\r\n            try { firstRef.current.focus(); firstRef.current.select?.(); return; } catch { }\r\n          }\r\n          const el = document.getElementById(WILL_INPUT_ID);\r\n          if (el) { el.focus(); el.select?.(); }\r\n        });\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e?.preventDefault?.();\r\n      const id = uid();\r\n      onAdd({\r\n        id,\r\n        will: Number.isFinite(will) ? will : 0,\r\n        point: Number.isFinite(point) ? point : 0,\r\n        o1k,\r\n        o1v: Number.isFinite(o1v) ? o1v : 0,\r\n        o2k,\r\n        o2v: Number.isFinite(o2v) ? o2v : 0,\r\n      });\r\n\r\n      // ✅ 엔터/버튼으로 제출한 경우에만 포커스 복귀\r\n      if (focusAfterSubmitRef.current) {\r\n        focusWill();\r\n        focusAfterSubmitRef.current = false;\r\n      }\r\n    };\r\n\r\n    // 엔터로 제출할 때만 플래그 ON\r\n    const onKeyDownSubmit = (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        focusAfterSubmitRef.current = true; // ✅ 엔터 제출\r\n        handleSubmit(e);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white\">\r\n          <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\" title=\"빠른 추가\">\r\n            <Plus size={18} />\r\n          </div>\r\n\r\n          {/* 의지력 / 포인트 */}\r\n          <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>필요 의지력</label>\r\n              <NumberInput\r\n                value={will}\r\n                onChange={setWill}\r\n                min={3}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{\r\n                  id: WILL_INPUT_ID,\r\n                  title: \"의지력\",\r\n                  placeholder: \"의지력\",\r\n                  onKeyDown: onKeyDownSubmit,\r\n                  ref: firstRef,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>(질서/혼돈)포인트</label>\r\n              <NumberInput\r\n                value={point}\r\n                onChange={setPoint}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{ title: \"포인트\", placeholder: \"포인트\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 옵션 1 */}\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 1</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o1k}\r\n                onChange={(v) => setO1k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o1v}\r\n                onChange={setO1v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 옵션 2 */}\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 2</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o2k}\r\n                onChange={(v) => setO2k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o2v}\r\n                onChange={setO2v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 액션 */}\r\n          <div className=\"top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n            <button\r\n              type=\"submit\"\r\n              // ✅ 버튼 클릭으로 제출할 때만 포커스 복귀 플래그 ON\r\n              onClick={() => { (focusAfterSubmitRef.current = true); }}\r\n              className=\"h-10 w-full lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n              title=\"Enter로도 추가 가능\"\r\n            >\r\n              <Plus size={16} />\r\n              <span className=\"inline\"> 젬 추가</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Divider */}\r\n        <div className=\"relative flex items-center my-4\">\r\n          <div className=\"flex-grow border-t\"></div>\r\n          <span className=\"mx-3 text-sm text-gray-600\">\r\n            아래에서 추가한 젬들을 확인하세요.\r\n          </span>\r\n          <div className=\"flex-grow border-t\"></div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 스타일 토큰 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n        @keyframes loa-marquee { 0%{ transform: translateX(-100%);} 100%{ transform: translateX(300%);} }\r\n        .animate-loa-marquee{ animation: loa-marquee 1.2s cubic-bezier(.4,0,.2,1) infinite; }\r\n      `}</style>\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더/카테고리 토글 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 코어 입력 & 우선순위(DnD/버튼 이동) */}\r\n        <section className={`${card} p-4 lg:p-6 !mt-2`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              {/* 질서일 때만 직업 선택 노출 */}\r\n              {category === \"order\" && (\r\n                <Dropdown\r\n                  className=\"w-32\"\r\n                  value={selectedJob}\r\n                  onChange={(val) => {\r\n                    setSelectedJob(val);\r\n                    // 직업이 바뀌는 그 이벤트 안에서 preset을 즉시 보정\r\n                    setCores(prev => prev.map(c => {\r\n                      const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                      const items = getPresetItems(val, groupKey);\r\n                      const ok = c.preset && items.some(i => i.value === c.preset);\r\n                      return ok ? c : { ...c, preset: (items[0]?.value ?? undefined) };\r\n                    }));\r\n                  }}\r\n                  items={[{ value: \"\", label: \"선택 안함\" }, ...JOBS.map(j => ({ value: j, label: j }))]}\r\n                  placeholder=\"직업 선택\"\r\n                />\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const gradeMax = TARGET_MAX_BY_GRADE[c.grade];\r\n                      const thresholds = (CORE_THRESHOLDS[c.grade] ?? []).filter(v => v <= gradeMax);\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        thresholds.map(v => ({ value: String(v), label: `${v}P` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      let coreNameItems = CORE_NAME_ITEMS.map(it => ({ ...it }));\r\n\r\n                      if (category === \"order\" && selectedJob) {\r\n                        const allowed = getAllowedCoreNameSet(selectedJob); // \"해/달/별 코어\" 셋\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value) || !allowed.has(it.value)\r\n                        }));\r\n                      } else {\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value)\r\n                        }));\r\n                      }\r\n\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown\r\n                                  className=\"w-full lg:w-24\"\r\n                                  value={c.grade}\r\n                                  onChange={(val) => {\r\n                                    const g = /** @type {CoreGrade} */(val);\r\n                                    const maxAllowed = TARGET_MAX_BY_GRADE[g];\r\n                                    const nextMin =\r\n                                      (c.minThreshold != null && c.minThreshold > maxAllowed)\r\n                                        ? maxAllowed\r\n                                        : c.minThreshold;\r\n                                    updateCore(c.id, { grade: g, minThreshold: nextMin });\r\n                                  }}\r\n                                  items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))}\r\n                                  placeholder=\"코어 등급\"\r\n                                />\r\n                              </div>\r\n                              {category === \"order\" && selectedJob && (\r\n                                (() => {\r\n                                  const groupKey = GROUP_BY_CORE_NAME[c.name]; // \"해\"|\"달\"|\"별\"\r\n                                  const presetItems = getPresetItems(selectedJob, groupKey);\r\n                                  // 렌더 시점에 유효성 검사해서 표시값 확정\r\n                                  const resolvedPreset =\r\n                                    c.preset && presetItems.some(i => i.value === c.preset)\r\n                                      ? c.preset\r\n                                      : (presetItems[0]?.value ?? \"\");\r\n                                  return (\r\n                                    <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                      <label className={labelCls}>\r\n                                        직업 코어 선택\r\n                                        <CoreEffectInfo\r\n                                          job={selectedJob}\r\n                                          groupKey={groupKey}\r\n                                          preset={resolvedPreset}\r\n                                          grade={c.grade}\r\n                                          category={category}\r\n                                          coreName={c.name}\r\n                                          supply={CORE_SUPPLY[c.grade]}\r\n                                        />\r\n                                      </label>\r\n                                      <Dropdown\r\n                                        className=\"w-full\"\r\n                                        value={resolvedPreset}\r\n                                        onChange={(val) => updateCore(c.id, { preset: val })}\r\n                                        items={presetItems}\r\n                                        placeholder=\"직업 코어 선택\"\r\n                                      />\r\n                                    </div>\r\n                                  );\r\n                                })()\r\n                              )}\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 포인트</label>\r\n                                <Dropdown className=\"w-full lg:w-32\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val) }); else updateCore(c.id, { minThreshold: undefined }); }} items={targetItems} placeholder=\"목표 포인트 선택\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">선택한 포인트 이상으로 탐색</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">체크 해제 시, 목표 포인트와<br className=\"hidden lg:block\" /><b className=\"text-primary\">정확히 일치하는 조합만 계산</b>합니다.</p>\r\n                              </div>\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div\r\n            className={`flex items-center gap-2 lg:gap-3 ${quickAddMode ? '' : 'mb-3'}`}\r\n          >\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            {/* 빠르게 추가 모드 스위치 */}\r\n            <div className=\"flex items-center gap-2 ml-1\">\r\n              <span className=\"text-xs text-gray-600\">빠르게 추가</span>\r\n              <button\r\n                type=\"button\"\r\n                role=\"switch\"\r\n                aria-checked={quickAddMode}\r\n                onClick={() => setQuickAddMode(v => !v)}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition ${quickAddMode ? \"bg-[#a399f2]\" : \"bg-gray-300\"\r\n                  }`}\r\n                aria-label=\"빠르게 추가 모드\"\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-5 transform rounded-full bg-white shadow transition ${quickAddMode ? \"translate-x-5\" : \"translate-x-1\"\r\n                    }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              {!quickAddMode && (\r\n                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          {quickAddMode && (\r\n            <p className=\"text-[11px] text-gray-500 mb-3\">\r\n              Tab 키로 입력 칸을 이동할 수 있고, Enter 키로 빠르게 추가할 수 있습니다.\r\n            </p>\r\n          )}\r\n          {/* 빠른 추가 패드 */}\r\n          {quickAddMode && (\r\n            <div className=\"mb-3\">\r\n              <QuickAddPad\r\n                focusOnMount\r\n                onAdd={(gem) => {\r\n                  setGems(v => [gem, ...v]);     // 맨 위로 추가\r\n                  setHighlightGemId(gem.id);     // 하이라이트\r\n                  setStale(true);                // 재계산 유도\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={3}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16} /><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm`}>\r\n            <span className=\"text-xs text-gray-500\">포지션 선택</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"dealer\"}\r\n                onChange={() => {\r\n                  setRole(\"dealer\");\r\n                  setWeights({ ...DEALER_WEIGHTS });\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              딜러\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"support\"}\r\n                onChange={() => {\r\n                  setRole(\"support\");\r\n                  setWeights((w) => maskWeightsForRole(w, \"support\"));\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              서포터\r\n            </label>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k]}\r\n                    onChange={(v) => setWeights((w) => ({ ...w, [k]: (v) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0000001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 하단 계산 액션/알림 */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-2\">\r\n          {stale && !isComputing && hasCalculated && (\r\n            <span className=\"inline-block text-[11px] px-3 py-1.5 rounded-lg bg-red-100 text-red-800 border border-red-200 text-center lg:text-left\">\r\n              입력값이 변경되었습니다. <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center gap-2 lg:ml-auto w-full lg:w-auto\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={calculate}\r\n              disabled={isComputing}\r\n              className=\"h-10 w-full lg:w-[120px] px-0 lg:px-3 rounded-xl ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n            >\r\n              {isComputing ? \"계산 중…\" : \"계산하기\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          {!isComputing && stale && hasCalculated && (\r\n            <p className=\"text-xs text-red-700 mt-1\">입력값이 변경되었습니다. 우측 상단의 <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.</p>\r\n          )}\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = results?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n              const presetFallback = (category === \"order\" && selectedJob)\r\n                ? getPresetItems(selectedJob, groupKey)[0]?.value\r\n                : undefined;\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name}\r\n                      {/* ★ 선택한 직업 코어 표시: 질서 + 직업 선택 + 프리셋 있을 때 */}\r\n                      {category === \"order\" && selectedJob && (c.preset || presetFallback) && (\r\n                        <>:&nbsp;{c.preset ?? presetFallback}</>\r\n                      )}&nbsp;\r\n                      <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}%</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 포인트를 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <colgroup>\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"13%\"} />\r\n                          </colgroup>\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.wwill ?? g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"} {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n\r\n      {/* 전역 오버레이 진행바 */}\r\n      {isComputing && (\r\n        <div className=\"fixed inset-0 z-[99999] bg-black/35 backdrop-blur-[1px] flex items-center justify-center px-6\">\r\n          <div className=\"w-full max-w-md rounded-2xl bg-white/95 border shadow p-4\">\r\n            <div className=\"text-sm font-medium text-gray-800 mb-2\">{progress.label}</div>\r\n\r\n            {/* 진행바 */}\r\n            <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n              {progress.indeterminate ? (\r\n                <div className=\"absolute inset-0\">\r\n                  <div className=\"h-full w-1/3 bg-[#a399f2] animate-loa-marquee rounded-full\" />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"h-full bg-[#a399f2] transition-[width] duration-100\"\r\n                  style={{ width: `${progress.pct}%` }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* 퍼센트 영역: 결정형이면 % / 비결정형이면 pulse 숫자 */}\r\n            <div className=\"mt-2 text-right text-xs text-gray-600\">\r\n              {progress.indeterminate\r\n                ? (progress.pulse != null ? Number(progress.pulse).toLocaleString() : \"\")\r\n                : `${progress.pct}%`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/hooks/useOptimizer.js\r\nimport { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { flushSync } from 'react-dom';\r\n\r\nexport function useOptimizer(cores, gems, role, weights) {\r\n  const [calcVersion, setCalcVersion] = useState(0);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [computing, setComputing] = useState(false);\r\n  const [progress, setProgress] = useState({\r\n    pct: 0,\r\n    label: \"준비 중…\",\r\n    indeterminate: true,\r\n    phase: undefined,\r\n    coreIndex: null,\r\n    coreCount: null,\r\n    coreDone: null,\r\n    coreTotal: null,\r\n    rate: null,\r\n    elapsedMs: null,\r\n    etaMs: null,\r\n    pulse: 0,\r\n  });\r\n  const [priorityPicks, setPriorityPicks] = useState([]);\r\n  const workerRef = useRef(null);\r\n\r\n  // ✅ 새로 추가: 마지막으로 \"계산하기\"를 눌렀을 때의 입력값 스냅샷\r\n  const paramsRef = useRef({ cores, gems, role, weights });\r\n\r\n  useEffect(() => {\r\n    workerRef.current = new Worker(new URL('../workers/optimizer.worker.js', import.meta.url), { type: 'module' });\r\n    try {\r\n      workerRef.current?.postMessage({ type: \"kickoff\" });\r\n    } catch { }\r\n    return () => {\r\n      workerRef.current?.terminate();\r\n      workerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // ✅ 변경점: 의존성 배열을 calcVersion 하나만 사용\r\n  useEffect(() => {\r\n    if (calcVersion === 0) return;\r\n    let cancelled = false;\r\n\r\n    setTimeout(() => {\r\n      if (cancelled) return;\r\n      flushSync(() => {\r\n        setComputing(true);\r\n        setProgress({\r\n          pct: 0,\r\n          label: \"최적의 젬 조합을 찾고 있습니다…\",\r\n          indeterminate: false,\r\n          phase: 'gen',\r\n          coreIndex: null,\r\n          coreCount: paramsRef.current.cores?.length || null, // ← 스냅샷 사용\r\n          coreDone: null,\r\n          coreTotal: null,\r\n          rate: null,\r\n          elapsedMs: null,\r\n          etaMs: null,\r\n          pulse: 0,\r\n        });\r\n      });\r\n    }, 0);\r\n\r\n    (async () => {\r\n      try {\r\n        await new Promise(resolve => requestAnimationFrame(resolve));\r\n        const worker = workerRef.current;\r\n        if (!worker) throw new Error(\"Worker not initialized\");\r\n\r\n        const onMessage = (e) => {\r\n          if (cancelled) return;\r\n          const msg = e.data || {};\r\n          if (msg?.type === \"error\" || msg?.error) {\r\n            console.error(e.data?.error || msg?.error);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 0, label: \"에러\", indeterminate: true }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n          if (msg.type === \"progress\") {\r\n            const { done, total, indeterminate = false, phase, coreIndex, coreCount, coreDone, coreTotal, rate, elapsedMs, etaMs, pulse } = msg;\r\n            if (indeterminate || !total || total <= 0 || done == null) {\r\n              setProgress((p) => ({ \r\n                ...p, pct: 0, indeterminate: true, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: pulse ?? (p.pulse ?? 0)\r\n              }));\r\n            } else {\r\n              const pct = Math.max(0, Math.min(100, Math.floor((done / Math.max(1, total)) * 100)));\r\n              setProgress((p) => ({ \r\n                ...p, pct, indeterminate: false, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: undefined\r\n              }));\r\n            }\r\n            return;\r\n          }\r\n          if (msg.type === \"result\") {\r\n            const { picks } = msg;\r\n            setPriorityPicks(picks || []);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 100, label: \"완료\", indeterminate: false, pulse: undefined }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n        };\r\n\r\n        worker.addEventListener('message', onMessage);\r\n\r\n        // ✅ 스냅샷을 꺼내서 사용\r\n        const { cores: c, gems: g, role: r, weights: w } = paramsRef.current;\r\n        const perCoreLimit = g.length > 60 ? 800 : g.length > 45 ? 1200 : g.length > 30 ? 1600 : 2000;\r\n\r\n        worker.postMessage({ type: \"run\", cores: c, gems: g, role: r, weights: w, perCoreLimit });\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          console.error(err);\r\n          setComputing(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calcVersion]); // ← 오직 버튼 클릭으로 증가한 calcVersion에만 반응\r\n\r\n  // ✅ 변경점: 계산 버튼을 눌렀을 때 현재 입력값을 스냅샷으로 저장한 뒤 calcVersion 증가\r\n  const calculate = useCallback(() => {\r\n    paramsRef.current = { cores, gems, role, weights }; // 최신값 스냅샷\r\n    setCalcVersion(v => v + 1);\r\n    setHasCalculated(true);\r\n  }, [cores, gems, role, weights]);\r\n\r\n  return {\r\n    isComputing: computing,\r\n    progress,\r\n    results: priorityPicks,\r\n    calculate, // ← 이 함수가 “계산하기” 버튼 onClick에 연결되면 됩니다.\r\n    hasCalculated,\r\n  };\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =========================================================================\r\n * 1) 전역 동작 플래그\r\n *    - 시뮬레이션 분산 감소, 희귀사건 스케일업 등 런타임 전역 옵션\r\n * ========================================================================= */\r\nconst USE_ANTITHETIC = true;\r\nconst AUTO_SCALE_RARE = true;\r\nconst OFFICIAL_RNG = true;\r\n\r\n/* =========================================================================\r\n * 2) 상수/테이블\r\n *    - 등급 경계, 젬 타입별 유효 효과 풀, 희귀도별 시도/리롤, 수치 범위, 비용\r\n * ========================================================================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\n\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\n\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\n\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\n\r\n/* =========================================================================\r\n * 3) 결정적 난수 및 보조 수학 유틸\r\n *    - 해시 기반 시드, xorshift 변종 RNG, 경계 체크/클램프, CI 계산 등\r\n * ========================================================================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\n\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\n\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n);\r\n}\r\n\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001;\r\n  if (n >= 100000) return 0.0002;\r\n  if (n >= 50000) return 0.0003;\r\n  if (n >= 10000) return 0.0005;\r\n  if (n >= 5000) return 0.0007;\r\n  return 0.001;\r\n};\r\n\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n\r\n/* =========================================================================\r\n * 4) 표시/형식 유틸\r\n *    - 확률/숫자 출력, 부담 배지, 성공률 추정\r\n * ========================================================================= */\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";\r\n  if (x >= 1) return \"100.00000%\";\r\n  return (x * 100).toFixed(5) + \"%\";\r\n}\r\n\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity;\r\n  return expectedGold / p;\r\n}\r\n\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\n\r\n/* =========================================================================\r\n * 5) 효과/등급 판정 로직\r\n *    - 유효 효과 풀, 총점/등급, 목표 충족 판정, 거리(부족분) 계산\r\n * ========================================================================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\n\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\n\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\n\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\n\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n\r\n/* =========================================================================\r\n * 6) 슬롯(선택지) 구성/적용 로직\r\n *    - 선택지 가중치 테이블 구성, 표현/해석, 실제 반영\r\n * ========================================================================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\n\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n\r\n  return items;\r\n}\r\n\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\n\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\n\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n\r\n/* =========================================================================\r\n * 7) 시뮬레이션 코어\r\n *    - 몬테카를로 기반 확률/기대치 추정, 저분산 페어, 희귀사건 가드\r\n * ========================================================================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    useAntithetic = true,\r\n    autoScaleRare = true,\r\n    rareTargetSuccesses = 100,\r\n    rareMaxTrials = 200000,\r\n    rareTiers = [200000],\r\n  } = opts;\r\n\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n\r\n  let localMaxTrials = maxTrials;\r\n  let forceRare = false;\r\n\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n\r\n  while (n < localMaxTrials) {\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      if (n >= localMaxTrials) break;\r\n\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;\r\n      continue;\r\n    }\r\n\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n\r\n    if (rareGuardActive) {\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue;\r\n    }\r\n\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n\r\n/* =========================================================================\r\n * 8) 등급 표시용 스타일/정렬 보조\r\n *    - 확률 0% 제거, 내림차순 정렬, 동률 판정\r\n * ========================================================================= */\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",\r\n};\r\n\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n\r\n/* =========================================================================\r\n * 9) 공통 UI 유틸/컴포넌트\r\n *    - 클릭외부감지 훅, 드롭다운, 토스트 스택, 숫자 입력, Select 래퍼\r\n * ========================================================================= */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\nfunction Dropdown({\r\n  value,\r\n  items,\r\n  onChange,\r\n  placeholder,\r\n  className,\r\n  disabled,\r\n  bordered = true\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  set,\r\n  onChange,\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n\r\n/* =========================================================================\r\n * 10) 보조 헬퍼\r\n *     - 라벨 중복 여부, 등 기타 메인에서 참조하는 작은 유틸\r\n * ========================================================================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n\r\n/* =========================================================================\r\n * 11) 메인 컴포넌트 (GemSimulator)\r\n *     - 상태 정의, 파생값, 이펙트, 액션 핸들러, 렌더 스켈레톤만 유지\r\n *     - 요청 사항: 최종 UI 구현 마크업은 비워둠 (원본 로직 유지)\r\n * ========================================================================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n\r\n  const curValid = cur.aName !== cur.bName;\r\n\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n\r\n  const migratedRef = useRef(false);\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n\r\n  const [changeMode, setChangeMode] = useState(null);\r\n  const [changePick, setChangePick] = useState(\"\");\r\n\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]);\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n\r\n  const addLog = useCallback((entry) => {\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n\r\n  const simRef = useRef(null);\r\n  const [logsMax, setLogsMax] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct2 = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct2(nowProb)} → 다른 항목 보기 기대 ${pct2(rerollProb)} (▲${pct2(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct2(nowProb)}가 다른 항목 보기 기대 ${pct2(rerollProb)}보다 유리 (▼${pct2(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct2(nowProb)} vs 다른 항목 보기 ${pct2(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode: pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return;\r\n    }\r\n\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory();\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n\r\n  function manualReset() {\r\n    setLogs([]);\r\n    setHistory({ past: [], future: [] });\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory();\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1,\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n\r\n  const dupWarnShown = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);\r\n      setHistory({ past: [], future: [] });\r\n    }\r\n  }, [allLocked]);\r\n\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base;\r\n  }, [gemKey, pos, abModePrimary]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      {/* 전역 CSS 변수와 유틸리티 클래스 주입: 주요 색상 및 accent-color 지정 */}\r\n      <style>{`\r\n    :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n    .text-primary{ color:#a399f2; }\r\n    .accent-primary{ accent-color:#a399f2; }\r\n  `}</style>\r\n\r\n      {/* 중앙 컨테이너: 최대 폭 제한 및 수직 간격 */}\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더 섹션: 제목과 시뮬레이션 반복 횟수 선택 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            {/* 페이지 타이틀: 그라디언트 배경 위에서 가독성 위한 화이트 텍스트/드롭섀도 */}\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n\r\n            {/* 우측 컨트롤: 시뮬레이션 횟수 드롭다운 */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                {/* 시뮬레이션 반복 수 선택 Dropdown (SIM_OPTIONS 기반) */}\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 기본 설정 카드 (젬 타입/등급/기본 시도/리롤 안내) */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 카드 타이틀 */}\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (잠금 상태 제어) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 입력 행: 젬 타입/등급/기본 시도·리롤 표시 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 선택: GEM_TYPES 키 목록을 드롭다운으로 제공 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 등급 선택: 고급/희귀/영웅 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 현재 등급 기준 기본 시도/리롤 수 정보 표시 (읽기 전용) */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 현재 옵션 입력 카드 (현재 젬의 상태 입력/잠금) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (현재 값 고정 여부) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 현재 옵션 입력 행: 효율/포인트/효과 A/B 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 포인트 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 선택 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 선택 (A와 중복 불가) */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 목표 옵션 입력 카드 (목표 충족 방식/효과/레벨) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n\r\n            {/* 우측: 저장/편집 토글 (잠금 시 계산 활성) */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 목표 충족 방식 라디오: 상관 없음일 때 비활성화 */}\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n\r\n          {/* 목표 조건 입력 행: 효율/포인트/추가 효과/효과명 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 목표 의지력 효율 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 포인트 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 추가 효과 역할군: 상관 없음/공격형/지원형 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 효과명/레벨: 역할군이 상관 없음이면 비활성화 */}\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 효과 A 선택 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 A 레벨 하한 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 선택: BOTH 모드에서만 활성 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 레벨 하한: BOTH 모드일 때만 활성 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 2열 레이아웃: 좌측 시뮬, 우측 작업 내역 */}\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 좌측(2칸): 가공 시뮬레이션 패널 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 헤더: 타이틀 및 초기화 버튼 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 사용 안내: 모든 설정 잠금 이후 액션 가능 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n\r\n            {/* 본문: 현재 상태 카드 + 선택지 카드 */}\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 현재 젬 상태/리소스 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n\r\n                {/* 핵심 스탯(효율/포인트/효과 A/B) 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  {/* 효율 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n\r\n                  {/* 포인트 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n\r\n                  {/* 효과 A: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 효과 B: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 리소스 칩: 남은 가공/리롤/비용 증감률/누적 골드 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 이번 차수 선택지 + 액션 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n\r\n                {/* 4개 슬롯: 라벨 선택 + 적용 버튼 */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {/* 현재 슬롯 라벨 변경 드롭다운 */}\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        {/* 적용 버튼: 모든 설정 잠금 및 중복 미발생 등 조건 충족 시 활성 */}\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 버튼 및 추천 문구 */}\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 EV 근거 설명 (가능 시 노출) */}\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 우측(1칸): 작업 내역 패널 (Undo/Redo 포함) */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              {/* Undo/Redo 버튼: 단축키 안내 포함 */}\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 로그 비어있음/목록 렌더링 */}\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n\r\n        {/* 결과 출력 섹션: 스켈레톤/실데이터 2상태 렌더링 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            {/* 우측 표시: 실제 사용된 Monte Carlo 횟수 및 95% CI 폭 */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 계산 중 또는 데이터 미존재 시: 스켈레톤 UI */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 스켈레톤 칩 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 스켈레톤 카드 2장 */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 실데이터 표시: 1회차 선택지 목록 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 목표 달성 확률 및 등급 확률 카드 2열 */}\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 카드: STOP_ON_SUCCESS vs RUN_TO_END */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* 좌측: STOP_ON_SUCCESS 결과 */}\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n\r\n                      {/* 우측: RUN_TO_END 결과 */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n\r\n                  {/* 등급 확률 카드: 전설/유물/고대 각각의 달성 확률 및 순서 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n\r\n                    {/* 각 등급 확률 막대 및 수치 표시 (0%도 노출) */}\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* 100% 확정 배지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n\r\n                    {/* 등급 확률 순서 요약: 0% 제외, 동률 표기 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun);\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n\r\n      {/* 전역 토스트 스택: 중앙 오버레이로 알림 표시 */}\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n\r\n      {/* 광고 영역: Kakao Adfit 삽입 */}\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp } from \"lucide-react\";\r\n\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll();\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\n\r\nfunction TopFab() {\r\n  const visible = useNearBottom(520);\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)]\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          visible ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CoreOnly() {\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n        <header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n          <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n            <nav aria-label=\"Core pages\">\r\n              <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/gem\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 가공 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/optimizer\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 장착 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            {/* 기본 경로 보정: /#/core → /#/core/optimizer */}\r\n            <Route index element={<Navigate to=\"/optimizer\" replace />} />\r\n\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n\r\n            {/* 나머지 경로도 optimizer로 보정 */}\r\n            <Route path=\"*\" element={<Navigate to=\"/optimizer\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n      <TopFab />\r\n    </HashRouter>\r\n  );\r\n}\r\n"],"names":["adRef","useRef","useEffect","ins","document","createElement","className","style","display","setAttribute","script","type","async","src","current","innerHTML","appendChild","_jsx","ref","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","DEALER_WEIGHTS","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_g$o1v","_w$g$o1k","_g$o2v","_w$g$o2k","has","o1k","o1v","o2k","o2v","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","length","CORE_NAME_ITEMS","value","label","CATEGORY_LABEL","order","chaos","LS_KEY","JOBS","_ARC_CORES$jobs","ARC_CORES","CORE_NAME_BY_GROUP","GROUP_BY_CORE_NAME","getPresetItems","job","groupKey","_ARC_CORES$data$job2","_ARC_CORES$data2","e","map","CORE_ORDER","uid","Math","random","toString","slice","TARGET_MAX_BY_GRADE","getEffectsForPreset","preset","_ARC_CORES$data$job3","_ARC_CORES$data3","row","find","arr","Array","isArray","flatMap","item","m","match","p","text","replace","trim","_ref","_ref2","_item$point","_ref3","_ref4","_ref5","_item$text","P","포인트","parseInt","desc","효과","String","entries","_ref6","v","split","line","x","sort","a","b","normalizeEffects","loadFromStorage","localStorage","getItem","JSON","parse","console","warn","dragPortal","body","PortalAwareDraggable","_ref7","draggableId","index","children","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref8","items","onChange","placeholder","bordered","open","setOpen","useState","focusedIndex","setFocusedIndex","btnRef","menuRef","itemRefs","menuPos","top","left","width","forceTick","listboxId","initFocusIndex","useCallback","sel","findIndex","i","disabled","firstEnabled","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","handlerRef","listener","_handlerRef$current","some","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","onScroll","_btnRef$current","passive","requestAnimationFrame","_ref9","_ref9$focus","el","focus","cancelAnimationFrame","selected","getNextEnabled","start","dir","n","step","menu","AnimatePresence","motion","ul","id","tabIndex","undefined","initial","opacity","y","animate","exit","transition","duration","position","zIndex","onKeyDown","key","preventDefault","next","first","last","it","_btnRef$current2","_btnRef$current2$quer","_btnRef$current2$quer2","querySelector","_btnRef$current3","_btnRef$current3$quer","_btnRef$current3$quer2","isSelected","isActive","onMouseEnter","onItemMouseEnter","onClick","_btnRef$current4","_btnRef$current4$quer","_btnRef$current4$quer2","_jsxs","ChevronUp","size","ChevronDown","CoreEffectInfo","_ref0","_TARGET_MAX_BY_GRADE$","_GROUP_BY_CORE_NAME$c","_CORE_LABEL$grade","_CORE_LABEL$grade2","_CORE_LABEL$grade3","_CORE_LABEL$grade4","_CORE_LABEL$grade5","category","coreName","supply","effects","maxP","list","coreShort","LABEL_CLS","isAncient","includes","toLowerCase","gradeColorCls","toUpperCase","onMouseLeave","onFocus","onBlur","Info","color","div","pickRight","out","_","pct","pickSlashValueByGrade","ToastStack","_ref1","toasts","onClose","scale","stiffness","damping","msg","NumberInput","_ref10","min","max","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","clamp","inputMode","onWheel","currentTarget","blur","LoACoreOptimizer","title","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","push","remove","setToasts","setTimeout","useToasts","quickAddMode","setQuickAddMode","stale","setStale","didMountRef","cores","gems","isComputing","progress","results","calculate","hasCalculated","calcVersion","setCalcVersion","setHasCalculated","computing","setComputing","setProgress","indeterminate","phase","coreIndex","coreCount","coreDone","coreTotal","rate","elapsedMs","etaMs","pulse","priorityPicks","setPriorityPicks","workerRef","paramsRef","Worker","URL","_workerRef$current","postMessage","_workerRef$current2","terminate","cancelled","flushSync","_paramsRef$current$co","Promise","resolve","worker","Error","onMessage","data","_e$data","error","done","total","_p$pulse","floor","picks","c","perCoreLimit","err","useOptimizer","selectedJob","setSelectedJob","_loadFromStorage$sele","_loadFromStorage2","setCores","updater","prev","setGems","prevByCat","_prevByCat$category","changed","_items$0$value","_items$","name","nextPreset","updateGem","patch","updateCore","cs","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","idx","displayIndexGem","QuickAddPad","_ref11","onAdd","focusOnMount","setO1k","setO2k","setO1v","setO2v","setWill","setPoint","firstRef","focusAfterSubmitRef","WILL_INPUT_ID","_firstRef$current","_firstRef$current$foc","_firstRef$current2","_firstRef$current2$se","select","handleSubmit","_e$preventDefault","_firstRef$current$sel","_firstRef$current3","getElementById","_el$select","onKeyDownSubmit","shiftKey","onSubmit","Plus","_w$brand","assert","gem","cA","cB","log","runSelfTests","setItem","stringify","saveToStorage","backgroundImage","backgroundAttachment","val","_items$0$value2","_items$2","j","addCore","_getPresetItems$","nextName","existingNames","nextAvailableCoreName","minThreshold","enforceMin","DragDropContext","onDragStart","evt","Event","dispatchEvent","onDragEnd","result","destination","from","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","_CORE_THRESHOLDS$c$gr","gradeMax","thresholds","targetItems","concat","takenNames","coreNameItems","allowed","_ARC_CORES$data$job","_ARC_CORES$data","groups","Boolean","getAllowedCoreNameSet","prov","_c$minThreshold","draggableProps","dragHandleProps","maxAllowed","nextMin","_presetItems$0$value","_presetItems$","presetItems","resolvedPreset","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","removeGem","resetWeights","RotateCcw","maskWeightsForRole","_getPresetItems$2","_c$preset","pick","hasResult","minOfGrade","presetFallback","_Fragment","maxThr","toFixed","_ref12","_g$wwill","gi","disp","wwill","KakaoAdfit","toLocaleString","USE_ANTITHETIC","AUTO_SCALE_RARE","OFFICIAL_RNG","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","SIM_OPTIONS","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","lo","hi","zeroSuccessUpperBound","alpha","arguments","pow","epsilonByTrials","batchByTrials","fmtProbSmart","fmtProb","fmtNum","goldPerSuccess","expectedGold","Infinity","round","burdenBadge","tone","estimateRate","successes","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","meetsTargetByMode","abMode","tgtNames","pool","isAny","nm","TA","aName","TB","bName","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","sum","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","gold","rrs","unlocked","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","ci","low","high","halfWidth","localMaxTrials","forceRare","tiers","hardCap","nextTier","cur","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","useMemo","toneBtn","success","info","warning","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","d","Date","pad","padStart","getHours","getMinutes","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","cursor","_allOptionLabels$curs","_allOptionLabels$curs2","manLabels","setManLabels","_allOptionLabels$i","used","replacement","l","resultStop","setResultStop","resultRun","setResultRun","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","pct2","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","gps","badge","delay","grades","grad","comps","eps","diff","abs","rankGradeOrder","TopFab","visible","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","scrollTo","behavior","CoreOnly","HashRouter","basename","NavLink","to","Routes","Route","element","Navigate","path"],"sourceRoot":""}