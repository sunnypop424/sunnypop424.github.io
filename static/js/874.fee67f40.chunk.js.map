{"version":3,"file":"static/js/874.fee67f40.chunk.js","mappings":"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","sources":["components/KakaoAdfit.jsx","lib/optimizerCore.js","components/LoACoreOptimizer.jsx","hooks/useOptimizer.js","components/GemSimulator.jsx","CoreOnly.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;","// src/lib/optimizerCore.js\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nexport const CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nexport const CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nexport const CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nexport const GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nexport const OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nexport const OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nexport const ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\nexport const DEFAULT_WEIGHTS = { atk: 1, add: 1, boss: 1, brand: 1, allyDmg: 1, allyAtk: 1 };\r\n// 딜러 가중치: y ≈ slope * level (원점 통과 회귀 추정)\r\nexport const DEALER_WEIGHTS = {\r\n  boss: 0.07870909,\r\n  add: 0.06018182,\r\n  atk: 0.03407273,\r\n  brand: 0,\r\n  allyDmg: 0,\r\n  allyAtk: 0,\r\n};\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nexport function sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nexport function scoreGemForRole(g, role, w) {\r\n  if (role == null) return 0; // 역할 미선택이면 유효옵션 점수 0\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? (g.o1v ?? 0) * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? (g.o2v ?? 0) * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nexport function* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1;\r\n    while (p >= 0 && idx[p] === n - k + p) p--;\r\n    if (p < 0) break;\r\n    idx[p]++;\r\n    for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\nexport function thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nexport function scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000)\r\n    + (totalPoint * 10_000)\r\n    + ((5_000 - totalWill) * 10)\r\n    + roleSum\r\n    - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nexport function enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin, onStep) {\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) {\r\n      all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 });\r\n      continue;\r\n    }\r\n    for (const combo of combinations(pool, k)) {\r\n      onStep && onStep(1);\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n\r\n  all.sort((a, b) => b.score - a.score);\r\n\r\n  // [수정] UI 변경에 맞춰 필터링 로직 전체를 새로운 로직으로 변경합니다.\r\n  let filtered;\r\n\r\n  // '이상 탐색' 모드 (체크박스 ON)\r\n  if (enforceMin) {\r\n    const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n    const effMin = minThreshold ?? minOfGrade; // 목표 설정 없으면 등급 최소치 적용\r\n    filtered = all.filter(ci =>\r\n      ci.totalPoint >= effMin && ci.thr.length > 0 && ci.list.length > 0\r\n    );\r\n  }\r\n  // '정확히 일치' 모드 (체크박스 OFF, 기본값)\r\n  else {\r\n    // 목표 포인트가 명확히 설정된 경우\r\n    if (minThreshold != null) {\r\n      filtered = all.filter(ci =>\r\n        ci.totalPoint === minThreshold && ci.list.length > 0\r\n      );\r\n    }\r\n    // 목표 포인트 설정이 없는 경우 (가장 점수 높은 순으로)\r\n    else {\r\n      filtered = all.filter(ci => ci.thr.length > 0 && ci.list.length > 0);\r\n    }\r\n  }\r\n\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n  \r\n  return filtered;\r\n}","// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport { useOptimizer } from '../hooks/useOptimizer';\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n// 최적화 순수 로직/상수 import (UI에서 쓰는 상수/헬퍼만)\r\nimport {\r\n  CORE_SUPPLY,\r\n  CORE_THRESHOLDS,\r\n  CORE_LABEL,\r\n  GRADES,\r\n  OPTION_LABELS,\r\n  OPTIONS,\r\n  DEFAULT_WEIGHTS,\r\n  DEALER_WEIGHTS,\r\n  ROLE_KEYS,\r\n  sanitizeWeights,\r\n  scoreGemForRole,\r\n  thresholdsHit,\r\n  scoreCombo,\r\n} from '../lib/optimizerCore.js';\r\nimport ARC_CORES from \"../data/arc_cores_select.json\";\r\n\r\n/* --------------------------------------------------------------------------\r\n * [타입 설명 - 코드 동작과 무관한 개발자 참고 주석]\r\n *  - Role: \"dealer\"(딜러) | \"support\"(서폿)\r\n *  - OptionKey: 각 젬 옵션 키 (\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\")\r\n *  - CoreGrade: 코어 등급 (\"HERO\",\"LEGEND\",\"RELIC\",\"ANCIENT\")\r\n *  - Gem/CoreDef/Weights/ComboInfo: 데이터 모델\r\n * -------------------------------------------------------------------------- */\r\n\r\n/* 도메인 외 UI 전용 상수 */\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\nconst CATEGORY_LABEL = { order: \"질서\", chaos: \"혼돈\" };\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\";\r\n\r\n// ★ 직업/코어 그룹 매핑\r\nconst JOBS = ARC_CORES?.jobs ?? [];\r\nconst CORE_NAME_BY_GROUP = { \"해\": \"해 코어\", \"달\": \"달 코어\", \"별\": \"별 코어\" };\r\nconst GROUP_BY_CORE_NAME = { \"해 코어\": \"해\", \"달 코어\": \"달\", \"별 코어\": \"별\" };\r\n\r\n// 직업별로 (해/달/별) 어떤 그룹이 있는지 -> \"해 코어\"/\"달 코어\"/\"별 코어\" 셋 반환\r\nfunction getAllowedCoreNameSet(job) {\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const groups = new Set(entries.map(e => e[\"그룹\"])); // \"해\" | \"달\" | \"별\"\r\n  const names = new Set(\r\n    Array.from(groups).map(g => CORE_NAME_BY_GROUP[g]).filter(Boolean)\r\n  );\r\n  return names;\r\n}\r\n\r\n// 직업 + 그룹(해/달/별)에 해당하는 '직업 코어' 프리셋 목록\r\nfunction getPresetItems(job, groupKey /* \"해\"|\"달\"|\"별\" */) {\r\n  if (!job || !groupKey) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  return entries\r\n    .filter(e => e[\"그룹\"] === groupKey)\r\n    .map(e => ({ value: e[\"코어\"], label: e[\"코어\"] }));\r\n}\r\n\r\n\r\n/* =============================== 유틸/헬퍼 (UI) =============================== */\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\n// 등급별 목표 포인트 최대값\r\nconst TARGET_MAX_BY_GRADE = {\r\n  HERO: 10,      // 영웅\r\n  LEGEND: 14,    // 전설\r\n  RELIC: 19,     // 유물\r\n  ANCIENT: 20,   // 고대\r\n};\r\n\r\n// 역할 선택 시 반대 역할 키 가중치를 0으로 마스킹\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => { next[k] = 0; });\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => { next[k] = 1; });\r\n  return next;\r\n}\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    [refs]\r\n  );\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ value, items, onChange, placeholder, className, bordered = true }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [focusedIndex, setFocusedIndex] = useState(-1); // 현재 키보드 포커스용\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const itemRefs = useRef([]); // li>button 각각의 ref\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  const listboxId = useRef(`dd-list-${Math.random().toString(36).slice(2)}`).current;\r\n\r\n  // 열릴 때 선택값 또는 첫 사용가능 항목으로 포커스 초기화\r\n  const initFocusIndex = useCallback(() => {\r\n    const sel = items.findIndex(i => i.value === value && !i.disabled);\r\n    if (sel >= 0) return sel;\r\n    const firstEnabled = items.findIndex(i => !i.disabled);\r\n    return firstEnabled >= 0 ? firstEnabled : -1;\r\n  }, [items, value]);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick(v => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick(v => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  // 열릴 때 키보드 포커스 타깃 준비 + 첫 렌더 다음 프레임에 실제 DOM 포커스\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    setFocusedIndex(initFocusIndex());\r\n    // 다음 프레임에 리스트박스에 포커스 이동 (버튼 포커스가 메뉴로 남는 이슈 방지)\r\n    const t = requestAnimationFrame(() => {\r\n      const el = itemRefs.current[initFocusIndex()];\r\n      (el ?? menuRef.current)?.focus?.();\r\n    });\r\n    return () => cancelAnimationFrame(t);\r\n  }, [open, initFocusIndex]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  // 유틸: 다음/이전 사용가능 인덱스\r\n  const getNextEnabled = (start, dir) => {\r\n    const n = items.length;\r\n    if (n === 0) return -1;\r\n    let i = start;\r\n    for (let step = 0; step < n; step++) {\r\n      i = (i + dir + n) % n;\r\n      if (!items[i].disabled) return i;\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  // 버튼 키다운: 열고 닫기/첫 항목 포커스\r\n  const onButtonKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const willOpen = !open;\r\n      if (willOpen) {\r\n        setOpen(true);\r\n        // 열리면 useEffect가 포커스 세팅\r\n      } else {\r\n        // 이미 열렸다면 이동\r\n        const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n        const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n        if (next >= 0) setFocusedIndex(next);\r\n      }\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      setOpen(v => !v);\r\n    }\r\n  };\r\n\r\n  // 메뉴 키다운: 항목 이동/선택/닫기\r\n  const onMenuKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n      const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n      if (next >= 0) setFocusedIndex(next);\r\n    } else if (e.key === \"Home\") {\r\n      e.preventDefault();\r\n      const first = items.findIndex(i => !i.disabled);\r\n      if (first >= 0) setFocusedIndex(first);\r\n    } else if (e.key === \"End\") {\r\n      e.preventDefault();\r\n      let last = -1;\r\n      for (let i = items.length - 1; i >= 0; i--) {\r\n        if (!items[i].disabled) { last = i; break; }\r\n      }\r\n      if (last >= 0) setFocusedIndex(last);\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      const it = items[focusedIndex];\r\n      if (it && !it.disabled) {\r\n        onChange(it.value);\r\n        setOpen(false);\r\n        // 닫히면 버튼으로 포커스 복귀\r\n        requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n      requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n    } else if (e.key === \"Tab\") {\r\n      // 탭으로 이동할 땐 자연스럽게 닫기\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  // 마우스 호버시 포커스 인덱스 업데이트(시각 일치)\r\n  const onItemMouseEnter = (i) => setFocusedIndex(i);\r\n\r\n  // 메뉴 DOM\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        role=\"listbox\"\r\n        id={listboxId}\r\n        tabIndex={-1}\r\n        aria-activedescendant={focusedIndex >= 0 ? `${listboxId}-opt-${focusedIndex}` : undefined}\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n        onKeyDown={onMenuKeyDown}\r\n      >\r\n        {items.map((it, i) => {\r\n          const isSelected = it.value === value;\r\n          const isActive = i === focusedIndex;\r\n          return (\r\n            <li key={String(it.value)}>\r\n              <button\r\n                ref={(el) => (itemRefs.current[i] = el)}\r\n                id={`${listboxId}-opt-${i}`}\r\n                type=\"button\"\r\n                role=\"option\"\r\n                aria-selected={isSelected}\r\n                onMouseEnter={() => onItemMouseEnter(i)}\r\n                onClick={() => {\r\n                  if (it.disabled) return;\r\n                  onChange(it.value);\r\n                  setOpen(false);\r\n                  requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n                }}\r\n                aria-disabled={it.disabled ? true : undefined}\r\n                className={`w-full text-left px-3 py-2 text-sm\r\n                  ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"}\r\n                  ${isSelected ? \"bg-gray-100\" : \"\"}\r\n                  ${isActive ? \"outline-none ring-2 ring-[#a399f2]/40\" : \"\"}\r\n                `}\r\n              >\r\n                <span className=\"block truncate\">{it.label}</span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={open}\r\n        aria-controls={open ? listboxId : undefined}\r\n        onKeyDown={onButtonKeyDown}\r\n        onClick={() => setOpen(v => !v)}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value, onChange, min, max, step = 1, allowFloat = false, zeroOnBlur = true, className = \"\", inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num));\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n\r\n  // 현재 카테고리\r\n  const [category, setCategory] = useState/** @type {Category} */(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  // 카테고리별 상태\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n\r\n  // 기타 상태\r\n  const [role, setRole] = useState/** @type {Role|null} */(null);\r\n  const [weights, setWeights] = useState({ ...DEFAULT_WEIGHTS });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  const [quickAddMode, setQuickAddMode] = useState(false);\r\n\r\n\r\n  const [stale, setStale] = useState(false);\r\n  const didMountRef = useRef(false);\r\n\r\n  // 현재 카테고리별 단축\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n  // ✅ [추가] 커스텀 훅을 호출하여 계산 관련 로직을 모두 위임합니다.\r\n  const { isComputing, progress, results, calculate, hasCalculated } = useOptimizer(cores, gems, role, weights);\r\n  // ★ 선택한 직업 (질서에서만 사용)\r\n  const [selectedJob, setSelectedJob] = useState(() => (loadFromStorage()?.selectedJob ?? \"\"));\r\n\r\n\r\n  // ✅ [추가] 계산 결과(results)가 바뀔 때마다 stale 상태를 false로 업데이트합니다.\r\n  useEffect(() => {\r\n    if (results && results.length > 0) {\r\n      setStale(false);\r\n    }\r\n  }, [results]);\r\n\r\n  // 현재 카테고리에 대해서만 set 하는 헬퍼\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const setGems = (updater) => {\r\n    setGemsByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) { didMountRef.current = true; return; }\r\n    setStale(true);\r\n  }, [role, weights, category]);\r\n\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n\r\n  // 직업/코어 이름 변경 시 preset을 유효/기본값으로 자동 동기화\r\n  useEffect(() => {\r\n    if (category !== \"order\" || !selectedJob) return;\r\n\r\n    setCoresByCat((prevByCat) => {\r\n      const list = prevByCat[category] ?? [];\r\n      let changed = false;\r\n\r\n      const next = list.map((c) => {\r\n        const groupKey = GROUP_BY_CORE_NAME[c.name]; // \"해\" | \"달\" | \"별\"\r\n        const items = getPresetItems(selectedJob, groupKey); // [{ value, label }, ...]\r\n        const isValid = c.preset && items.some((i) => i.value === c.preset);\r\n        const nextPreset = isValid ? c.preset : (items[0]?.value ?? undefined);\r\n\r\n        if (nextPreset !== c.preset) {\r\n          changed = true;\r\n          return { ...c, preset: nextPreset };\r\n        }\r\n        return c;\r\n      });\r\n\r\n      if (!changed) return prevByCat;          // 변경 없으면 no-op (재렌더/루프 방지)\r\n      setStale(true);                           // 보수적 갱신: 필요 없으면 이 줄은 빼도 됩니다\r\n      return { ...prevByCat, [category]: next };\r\n    });\r\n  }, [category, selectedJob, cores, setCoresByCat, setStale]);\r\n\r\n\r\n\r\n  const resetWeights = () => setWeights({ ...DEFAULT_WEIGHTS });\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: null, o2k: \"add\", o2v: null }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n\r\n    const initialPreset =\r\n      category === \"order\" && selectedJob\r\n        ? getPresetItems(selectedJob, GROUP_BY_CORE_NAME[nextName])[0]?.value\r\n        : undefined;\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false, preset: initialPreset },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs;\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // UI tokens\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  // Self-tests (optional)\r\n  useEffect(() => {\r\n    function runSelfTests() {\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id: \"t1\", will: 1, point: 1, o1k: \"atk\", o1v: 2, o2k: \"brand\", o2v: 3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id: \"t2\", will: 0, point: 10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n  useEffect(() => {\r\n    saveToStorage({ category, coresByCat, gemsByCat, role, weights, selectedJob });\r\n  }, [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  // === 빠른 추가 패드 (LoACoreOptimizer 내부에 선언) ===\r\n  function QuickAddPad({ onAdd, focusOnMount = false }) {\r\n    const [o1k, setO1k] = useState(\"atk\");\r\n    const [o2k, setO2k] = useState(\"add\");\r\n    const [o1v, setO1v] = useState(1);\r\n    const [o2v, setO2v] = useState(1);\r\n    const [will, setWill] = useState(1);\r\n    const [point, setPoint] = useState(1);\r\n\r\n    const firstRef = useRef(null);\r\n    const focusAfterSubmitRef = useRef(false); // ✅ 포커스 복귀 조건 플래그\r\n    const WILL_INPUT_ID = \"quick-pad-will-input\";\r\n\r\n    // (옵션) 퀵패드가 켜질 때만 최초 1회 포커싱하고 싶다면 true로\r\n    useEffect(() => {\r\n      if (!focusOnMount) return;\r\n      requestAnimationFrame(() => {\r\n        firstRef.current?.focus?.();\r\n        firstRef.current?.select?.();\r\n      });\r\n    }, [focusOnMount]);\r\n\r\n    const focusWill = () => {\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          if (firstRef.current) {\r\n            try { firstRef.current.focus(); firstRef.current.select?.(); return; } catch { }\r\n          }\r\n          const el = document.getElementById(WILL_INPUT_ID);\r\n          if (el) { el.focus(); el.select?.(); }\r\n        });\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e?.preventDefault?.();\r\n      const id = uid();\r\n      onAdd({\r\n        id,\r\n        will: Number.isFinite(will) ? will : 0,\r\n        point: Number.isFinite(point) ? point : 0,\r\n        o1k,\r\n        o1v: Number.isFinite(o1v) ? o1v : 0,\r\n        o2k,\r\n        o2v: Number.isFinite(o2v) ? o2v : 0,\r\n      });\r\n\r\n      // ✅ 엔터/버튼으로 제출한 경우에만 포커스 복귀\r\n      if (focusAfterSubmitRef.current) {\r\n        focusWill();\r\n        focusAfterSubmitRef.current = false;\r\n      }\r\n    };\r\n\r\n    // 엔터로 제출할 때만 플래그 ON\r\n    const onKeyDownSubmit = (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        focusAfterSubmitRef.current = true; // ✅ 엔터 제출\r\n        handleSubmit(e);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white\">\r\n          <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\" title=\"빠른 추가\">\r\n            <Plus size={18} />\r\n          </div>\r\n\r\n          {/* 의지력 / 포인트 */}\r\n          <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>필요 의지력</label>\r\n              <NumberInput\r\n                value={will}\r\n                onChange={setWill}\r\n                min={3}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{\r\n                  id: WILL_INPUT_ID,\r\n                  title: \"의지력\",\r\n                  placeholder: \"의지력\",\r\n                  onKeyDown: onKeyDownSubmit,\r\n                  ref: firstRef,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>(질서/혼돈)포인트</label>\r\n              <NumberInput\r\n                value={point}\r\n                onChange={setPoint}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{ title: \"포인트\", placeholder: \"포인트\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 옵션 1 */}\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 1</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o1k}\r\n                onChange={(v) => setO1k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o1v}\r\n                onChange={setO1v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 옵션 2 */}\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 2</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o2k}\r\n                onChange={(v) => setO2k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o2v}\r\n                onChange={setO2v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 액션 */}\r\n          <div className=\"top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n            <button\r\n              type=\"submit\"\r\n              // ✅ 버튼 클릭으로 제출할 때만 포커스 복귀 플래그 ON\r\n              onClick={() => { (focusAfterSubmitRef.current = true); }}\r\n              className=\"h-10 w-full lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n              title=\"Enter로도 추가 가능\"\r\n            >\r\n              <Plus size={16} />\r\n              <span className=\"inline\"> 젬 추가</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Divider */}\r\n        <div className=\"relative flex items-center my-4\">\r\n          <div className=\"flex-grow border-t\"></div>\r\n          <span className=\"mx-3 text-sm text-gray-600\">\r\n            아래에서 추가한 젬들을 확인하세요.\r\n          </span>\r\n          <div className=\"flex-grow border-t\"></div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 스타일 토큰 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n        @keyframes loa-marquee { 0%{ transform: translateX(-100%);} 100%{ transform: translateX(300%);} }\r\n        .animate-loa-marquee{ animation: loa-marquee 1.2s cubic-bezier(.4,0,.2,1) infinite; }\r\n      `}</style>\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더/카테고리 토글 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 코어 입력 & 우선순위(DnD/버튼 이동) */}\r\n        <section className={`${card} p-4 lg:p-6 !mt-2 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              {/* 질서일 때만 직업 선택 노출 */}\r\n              {category === \"order\" && (\r\n                <Dropdown\r\n                  className=\"w-32\"\r\n                  value={selectedJob}\r\n                  onChange={(val) => {\r\n                    setSelectedJob(val);\r\n                    // 직업이 바뀌는 그 이벤트 안에서 preset을 즉시 보정\r\n                    setCores(prev => prev.map(c => {\r\n                      const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                      const items = getPresetItems(val, groupKey);\r\n                      const ok = c.preset && items.some(i => i.value === c.preset);\r\n                      return ok ? c : { ...c, preset: (items[0]?.value ?? undefined) };\r\n                    }));\r\n                  }}\r\n                  items={[{ value: \"\", label: \"선택 안함\" }, ...JOBS.map(j => ({ value: j, label: j }))]}\r\n                  placeholder=\"직업 선택\"\r\n                />\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const gradeMax = TARGET_MAX_BY_GRADE[c.grade];\r\n                      const thresholds = (CORE_THRESHOLDS[c.grade] ?? []).filter(v => v <= gradeMax);\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        thresholds.map(v => ({ value: String(v), label: `${v}P` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      let coreNameItems = CORE_NAME_ITEMS.map(it => ({ ...it }));\r\n\r\n                      if (category === \"order\" && selectedJob) {\r\n                        const allowed = getAllowedCoreNameSet(selectedJob); // \"해/달/별 코어\" 셋\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value) || !allowed.has(it.value)\r\n                        }));\r\n                      } else {\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value)\r\n                        }));\r\n                      }\r\n\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              {category === \"order\" && selectedJob && (\r\n                                (() => {\r\n                                  const groupKey = GROUP_BY_CORE_NAME[c.name]; // \"해\"|\"달\"|\"별\"\r\n                                  const presetItems = getPresetItems(selectedJob, groupKey);\r\n                                  // 렌더 시점에 유효성 검사해서 표시값 확정\r\n                                  const resolvedPreset =\r\n                                    c.preset && presetItems.some(i => i.value === c.preset)\r\n                                      ? c.preset\r\n                                      : (presetItems[0]?.value ?? \"\");\r\n                                  return (\r\n                                    <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                      <label className={labelCls}>코어 선택</label>\r\n                                      <Dropdown\r\n                                        className=\"w-full\"\r\n                                        value={resolvedPreset}\r\n                                        onChange={(val) => updateCore(c.id, { preset: val })}\r\n                                        items={presetItems}\r\n                                        placeholder=\"직업 코어 선택\"\r\n                                      />\r\n                                    </div>\r\n                                  );\r\n                                })()\r\n                              )}\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown\r\n                                  className=\"w-full lg:w-24\"\r\n                                  value={c.grade}\r\n                                  onChange={(val) => {\r\n                                    const g = /** @type {CoreGrade} */(val);\r\n                                    const maxAllowed = TARGET_MAX_BY_GRADE[g];\r\n                                    const nextMin =\r\n                                      (c.minThreshold != null && c.minThreshold > maxAllowed)\r\n                                        ? maxAllowed\r\n                                        : c.minThreshold;\r\n                                    updateCore(c.id, { grade: g, minThreshold: nextMin });\r\n                                  }}\r\n                                  items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))}\r\n                                  placeholder=\"코어 등급\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 포인트</label>\r\n                                <Dropdown className=\"w-full lg:w-32\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val) }); else updateCore(c.id, { minThreshold: undefined }); }} items={targetItems} placeholder=\"목표 포인트 선택\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">선택한 포인트 이상으로 탐색</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">체크 해제 시, 목표 포인트와<br className=\"hidden lg:block\" /><b className=\"text-primary\">정확히 일치하는 조합만 계산</b>합니다.</p>\r\n                              </div>\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div\r\n            className={`flex items-center gap-2 lg:gap-3 ${quickAddMode ? '' : 'mb-3'}`}\r\n          >\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            {/* 빠르게 추가 모드 스위치 */}\r\n            <div className=\"flex items-center gap-2 ml-1\">\r\n              <span className=\"text-xs text-gray-600\">빠르게 추가</span>\r\n              <button\r\n                type=\"button\"\r\n                role=\"switch\"\r\n                aria-checked={quickAddMode}\r\n                onClick={() => setQuickAddMode(v => !v)}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition ${quickAddMode ? \"bg-[#a399f2]\" : \"bg-gray-300\"\r\n                  }`}\r\n                aria-label=\"빠르게 추가 모드\"\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-5 transform rounded-full bg-white shadow transition ${quickAddMode ? \"translate-x-5\" : \"translate-x-1\"\r\n                    }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              {!quickAddMode && (\r\n                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          {quickAddMode && (\r\n            <p className=\"text-[11px] text-gray-500 mb-3\">\r\n              Tab 키로 입력 칸을 이동할 수 있고, Enter 키로 빠르게 추가할 수 있습니다.\r\n            </p>\r\n          )}\r\n          {/* 빠른 추가 패드 */}\r\n          {quickAddMode && (\r\n            <div className=\"mb-3\">\r\n              <QuickAddPad\r\n                focusOnMount\r\n                onAdd={(gem) => {\r\n                  setGems(v => [gem, ...v]);     // 맨 위로 추가\r\n                  setHighlightGemId(gem.id);     // 하이라이트\r\n                  setStale(true);                // 재계산 유도\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={3}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16} /><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm`}>\r\n            <span className=\"text-xs text-gray-500\">포지션 선택</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"dealer\"}\r\n                onChange={() => {\r\n                  setRole(\"dealer\");\r\n                  setWeights({ ...DEALER_WEIGHTS });\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              딜러\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"support\"}\r\n                onChange={() => {\r\n                  setRole(\"support\");\r\n                  setWeights((w) => maskWeightsForRole(w, \"support\"));\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              서포터\r\n            </label>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k]}\r\n                    onChange={(v) => setWeights((w) => ({ ...w, [k]: (v) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0000001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 하단 계산 액션/알림 */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-2\">\r\n          {stale && !isComputing && hasCalculated && (\r\n            <span className=\"inline-block text-[11px] px-3 py-1.5 rounded-lg bg-red-100 text-red-800 border border-red-200 text-center lg:text-left\">\r\n              입력값이 변경되었습니다. <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center gap-2 lg:ml-auto w-full lg:w-auto\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={calculate}\r\n              disabled={isComputing}\r\n              className=\"h-10 w-full lg:w-[120px] px-0 lg:px-3 rounded-xl ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n            >\r\n              {isComputing ? \"계산 중…\" : \"계산하기\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          {!isComputing && stale && hasCalculated && (\r\n            <p className=\"text-xs text-red-700 mt-1\">입력값이 변경되었습니다. 우측 상단의 <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.</p>\r\n          )}\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = results?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n              const presetFallback = (category === \"order\" && selectedJob)\r\n                ? getPresetItems(selectedJob, groupKey)[0]?.value\r\n                : undefined;\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name}\r\n                      {/* ★ 선택한 직업 코어 표시: 질서 + 직업 선택 + 프리셋 있을 때 */}\r\n                      {category === \"order\" && selectedJob && (c.preset || presetFallback) && (\r\n                        <>:&nbsp;{c.preset ?? presetFallback}</>\r\n                      )}&nbsp;\r\n                      <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}%</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 포인트를 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <colgroup>\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"13%\"} />\r\n                          </colgroup>\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.wwill ?? g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"} {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n\r\n      {/* 전역 오버레이 진행바 */}\r\n      {isComputing && (\r\n        <div className=\"fixed inset-0 z-[99999] bg-black/35 backdrop-blur-[1px] flex items-center justify-center px-6\">\r\n          <div className=\"w-full max-w-md rounded-2xl bg-white/95 border shadow p-4\">\r\n            <div className=\"text-sm font-medium text-gray-800 mb-2\">{progress.label}</div>\r\n\r\n            {/* 진행바 */}\r\n            <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n              {progress.indeterminate ? (\r\n                <div className=\"absolute inset-0\">\r\n                  <div className=\"h-full w-1/3 bg-[#a399f2] animate-loa-marquee rounded-full\" />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"h-full bg-[#a399f2] transition-[width] duration-100\"\r\n                  style={{ width: `${progress.pct}%` }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* 퍼센트 영역: 결정형이면 % / 비결정형이면 pulse 숫자 */}\r\n            <div className=\"mt-2 text-right text-xs text-gray-600\">\r\n              {progress.indeterminate\r\n                ? (progress.pulse != null ? Number(progress.pulse).toLocaleString() : \"\")\r\n                : `${progress.pct}%`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/hooks/useOptimizer.js\r\nimport { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { flushSync } from 'react-dom';\r\n\r\nexport function useOptimizer(cores, gems, role, weights) {\r\n  const [calcVersion, setCalcVersion] = useState(0);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [computing, setComputing] = useState(false);\r\n  const [progress, setProgress] = useState({\r\n    pct: 0,\r\n    label: \"준비 중…\",\r\n    indeterminate: true,\r\n    phase: undefined,\r\n    coreIndex: null,\r\n    coreCount: null,\r\n    coreDone: null,\r\n    coreTotal: null,\r\n    rate: null,\r\n    elapsedMs: null,\r\n    etaMs: null,\r\n    pulse: 0,\r\n  });\r\n  const [priorityPicks, setPriorityPicks] = useState([]);\r\n  const workerRef = useRef(null);\r\n\r\n  // ✅ 새로 추가: 마지막으로 \"계산하기\"를 눌렀을 때의 입력값 스냅샷\r\n  const paramsRef = useRef({ cores, gems, role, weights });\r\n\r\n  useEffect(() => {\r\n    workerRef.current = new Worker(new URL('../workers/optimizer.worker.js', import.meta.url), { type: 'module' });\r\n    try {\r\n      workerRef.current?.postMessage({ type: \"kickoff\" });\r\n    } catch { }\r\n    return () => {\r\n      workerRef.current?.terminate();\r\n      workerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // ✅ 변경점: 의존성 배열을 calcVersion 하나만 사용\r\n  useEffect(() => {\r\n    if (calcVersion === 0) return;\r\n    let cancelled = false;\r\n\r\n    setTimeout(() => {\r\n      if (cancelled) return;\r\n      flushSync(() => {\r\n        setComputing(true);\r\n        setProgress({\r\n          pct: 0,\r\n          label: \"최적의 젬 조합을 찾고 있습니다…\",\r\n          indeterminate: false,\r\n          phase: 'gen',\r\n          coreIndex: null,\r\n          coreCount: paramsRef.current.cores?.length || null, // ← 스냅샷 사용\r\n          coreDone: null,\r\n          coreTotal: null,\r\n          rate: null,\r\n          elapsedMs: null,\r\n          etaMs: null,\r\n          pulse: 0,\r\n        });\r\n      });\r\n    }, 0);\r\n\r\n    (async () => {\r\n      try {\r\n        await new Promise(resolve => requestAnimationFrame(resolve));\r\n        const worker = workerRef.current;\r\n        if (!worker) throw new Error(\"Worker not initialized\");\r\n\r\n        const onMessage = (e) => {\r\n          if (cancelled) return;\r\n          const msg = e.data || {};\r\n          if (msg?.type === \"error\" || msg?.error) {\r\n            console.error(e.data?.error || msg?.error);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 0, label: \"에러\", indeterminate: true }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n          if (msg.type === \"progress\") {\r\n            const { done, total, indeterminate = false, phase, coreIndex, coreCount, coreDone, coreTotal, rate, elapsedMs, etaMs, pulse } = msg;\r\n            if (indeterminate || !total || total <= 0 || done == null) {\r\n              setProgress((p) => ({ \r\n                ...p, pct: 0, indeterminate: true, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: pulse ?? (p.pulse ?? 0)\r\n              }));\r\n            } else {\r\n              const pct = Math.max(0, Math.min(100, Math.floor((done / Math.max(1, total)) * 100)));\r\n              setProgress((p) => ({ \r\n                ...p, pct, indeterminate: false, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: undefined\r\n              }));\r\n            }\r\n            return;\r\n          }\r\n          if (msg.type === \"result\") {\r\n            const { picks } = msg;\r\n            setPriorityPicks(picks || []);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 100, label: \"완료\", indeterminate: false, pulse: undefined }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n        };\r\n\r\n        worker.addEventListener('message', onMessage);\r\n\r\n        // ✅ 스냅샷을 꺼내서 사용\r\n        const { cores: c, gems: g, role: r, weights: w } = paramsRef.current;\r\n        const perCoreLimit = g.length > 60 ? 800 : g.length > 45 ? 1200 : g.length > 30 ? 1600 : 2000;\r\n\r\n        worker.postMessage({ type: \"run\", cores: c, gems: g, role: r, weights: w, perCoreLimit });\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          console.error(err);\r\n          setComputing(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calcVersion]); // ← 오직 버튼 클릭으로 증가한 calcVersion에만 반응\r\n\r\n  // ✅ 변경점: 계산 버튼을 눌렀을 때 현재 입력값을 스냅샷으로 저장한 뒤 calcVersion 증가\r\n  const calculate = useCallback(() => {\r\n    paramsRef.current = { cores, gems, role, weights }; // 최신값 스냅샷\r\n    setCalcVersion(v => v + 1);\r\n    setHasCalculated(true);\r\n  }, [cores, gems, role, weights]);\r\n\r\n  return {\r\n    isComputing: computing,\r\n    progress,\r\n    results: priorityPicks,\r\n    calculate, // ← 이 함수가 “계산하기” 버튼 onClick에 연결되면 됩니다.\r\n    hasCalculated,\r\n  };\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =========================================================================\r\n * 1) 전역 동작 플래그\r\n *    - 시뮬레이션 분산 감소, 희귀사건 스케일업 등 런타임 전역 옵션\r\n * ========================================================================= */\r\nconst USE_ANTITHETIC = true;\r\nconst AUTO_SCALE_RARE = true;\r\nconst OFFICIAL_RNG = true;\r\n\r\n/* =========================================================================\r\n * 2) 상수/테이블\r\n *    - 등급 경계, 젬 타입별 유효 효과 풀, 희귀도별 시도/리롤, 수치 범위, 비용\r\n * ========================================================================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\n\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\n\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\n\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\n\r\n/* =========================================================================\r\n * 3) 결정적 난수 및 보조 수학 유틸\r\n *    - 해시 기반 시드, xorshift 변종 RNG, 경계 체크/클램프, CI 계산 등\r\n * ========================================================================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\n\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\n\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n);\r\n}\r\n\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001;\r\n  if (n >= 100000) return 0.0002;\r\n  if (n >= 50000) return 0.0003;\r\n  if (n >= 10000) return 0.0005;\r\n  if (n >= 5000) return 0.0007;\r\n  return 0.001;\r\n};\r\n\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n\r\n/* =========================================================================\r\n * 4) 표시/형식 유틸\r\n *    - 확률/숫자 출력, 부담 배지, 성공률 추정\r\n * ========================================================================= */\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";\r\n  if (x >= 1) return \"100.00000%\";\r\n  return (x * 100).toFixed(5) + \"%\";\r\n}\r\n\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity;\r\n  return expectedGold / p;\r\n}\r\n\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\n\r\n/* =========================================================================\r\n * 5) 효과/등급 판정 로직\r\n *    - 유효 효과 풀, 총점/등급, 목표 충족 판정, 거리(부족분) 계산\r\n * ========================================================================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\n\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\n\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\n\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\n\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n\r\n/* =========================================================================\r\n * 6) 슬롯(선택지) 구성/적용 로직\r\n *    - 선택지 가중치 테이블 구성, 표현/해석, 실제 반영\r\n * ========================================================================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\n\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n\r\n  return items;\r\n}\r\n\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\n\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\n\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n\r\n/* =========================================================================\r\n * 7) 시뮬레이션 코어\r\n *    - 몬테카를로 기반 확률/기대치 추정, 저분산 페어, 희귀사건 가드\r\n * ========================================================================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    useAntithetic = true,\r\n    autoScaleRare = true,\r\n    rareTargetSuccesses = 100,\r\n    rareMaxTrials = 200000,\r\n    rareTiers = [200000],\r\n  } = opts;\r\n\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n\r\n  let localMaxTrials = maxTrials;\r\n  let forceRare = false;\r\n\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n\r\n  while (n < localMaxTrials) {\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      if (n >= localMaxTrials) break;\r\n\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;\r\n      continue;\r\n    }\r\n\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n\r\n    if (rareGuardActive) {\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue;\r\n    }\r\n\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n\r\n/* =========================================================================\r\n * 8) 등급 표시용 스타일/정렬 보조\r\n *    - 확률 0% 제거, 내림차순 정렬, 동률 판정\r\n * ========================================================================= */\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",\r\n};\r\n\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n\r\n/* =========================================================================\r\n * 9) 공통 UI 유틸/컴포넌트\r\n *    - 클릭외부감지 훅, 드롭다운, 토스트 스택, 숫자 입력, Select 래퍼\r\n * ========================================================================= */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\nfunction Dropdown({\r\n  value,\r\n  items,\r\n  onChange,\r\n  placeholder,\r\n  className,\r\n  disabled,\r\n  bordered = true\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  set,\r\n  onChange,\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n\r\n/* =========================================================================\r\n * 10) 보조 헬퍼\r\n *     - 라벨 중복 여부, 등 기타 메인에서 참조하는 작은 유틸\r\n * ========================================================================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n\r\n/* =========================================================================\r\n * 11) 메인 컴포넌트 (GemSimulator)\r\n *     - 상태 정의, 파생값, 이펙트, 액션 핸들러, 렌더 스켈레톤만 유지\r\n *     - 요청 사항: 최종 UI 구현 마크업은 비워둠 (원본 로직 유지)\r\n * ========================================================================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n\r\n  const curValid = cur.aName !== cur.bName;\r\n\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n\r\n  const migratedRef = useRef(false);\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n\r\n  const [changeMode, setChangeMode] = useState(null);\r\n  const [changePick, setChangePick] = useState(\"\");\r\n\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]);\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n\r\n  const addLog = useCallback((entry) => {\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n\r\n  const simRef = useRef(null);\r\n  const [logsMax, setLogsMax] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct2 = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct2(nowProb)} → 다른 항목 보기 기대 ${pct2(rerollProb)} (▲${pct2(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct2(nowProb)}가 다른 항목 보기 기대 ${pct2(rerollProb)}보다 유리 (▼${pct2(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct2(nowProb)} vs 다른 항목 보기 ${pct2(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode: pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return;\r\n    }\r\n\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory();\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n\r\n  function manualReset() {\r\n    setLogs([]);\r\n    setHistory({ past: [], future: [] });\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory();\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1,\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n\r\n  const dupWarnShown = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);\r\n      setHistory({ past: [], future: [] });\r\n    }\r\n  }, [allLocked]);\r\n\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base;\r\n  }, [gemKey, pos, abModePrimary]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      {/* 전역 CSS 변수와 유틸리티 클래스 주입: 주요 색상 및 accent-color 지정 */}\r\n      <style>{`\r\n    :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n    .text-primary{ color:#a399f2; }\r\n    .accent-primary{ accent-color:#a399f2; }\r\n  `}</style>\r\n\r\n      {/* 중앙 컨테이너: 최대 폭 제한 및 수직 간격 */}\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더 섹션: 제목과 시뮬레이션 반복 횟수 선택 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            {/* 페이지 타이틀: 그라디언트 배경 위에서 가독성 위한 화이트 텍스트/드롭섀도 */}\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n\r\n            {/* 우측 컨트롤: 시뮬레이션 횟수 드롭다운 */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                {/* 시뮬레이션 반복 수 선택 Dropdown (SIM_OPTIONS 기반) */}\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 기본 설정 카드 (젬 타입/등급/기본 시도/리롤 안내) */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 카드 타이틀 */}\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (잠금 상태 제어) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 입력 행: 젬 타입/등급/기본 시도·리롤 표시 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 선택: GEM_TYPES 키 목록을 드롭다운으로 제공 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 등급 선택: 고급/희귀/영웅 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 현재 등급 기준 기본 시도/리롤 수 정보 표시 (읽기 전용) */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 현재 옵션 입력 카드 (현재 젬의 상태 입력/잠금) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (현재 값 고정 여부) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 현재 옵션 입력 행: 효율/포인트/효과 A/B 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 포인트 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 선택 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 선택 (A와 중복 불가) */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 목표 옵션 입력 카드 (목표 충족 방식/효과/레벨) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n\r\n            {/* 우측: 저장/편집 토글 (잠금 시 계산 활성) */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 목표 충족 방식 라디오: 상관 없음일 때 비활성화 */}\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n\r\n          {/* 목표 조건 입력 행: 효율/포인트/추가 효과/효과명 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 목표 의지력 효율 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 포인트 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 추가 효과 역할군: 상관 없음/공격형/지원형 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 효과명/레벨: 역할군이 상관 없음이면 비활성화 */}\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 효과 A 선택 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 A 레벨 하한 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 선택: BOTH 모드에서만 활성 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 레벨 하한: BOTH 모드일 때만 활성 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 2열 레이아웃: 좌측 시뮬, 우측 작업 내역 */}\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 좌측(2칸): 가공 시뮬레이션 패널 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 헤더: 타이틀 및 초기화 버튼 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 사용 안내: 모든 설정 잠금 이후 액션 가능 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n\r\n            {/* 본문: 현재 상태 카드 + 선택지 카드 */}\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 현재 젬 상태/리소스 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n\r\n                {/* 핵심 스탯(효율/포인트/효과 A/B) 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  {/* 효율 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n\r\n                  {/* 포인트 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n\r\n                  {/* 효과 A: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 효과 B: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 리소스 칩: 남은 가공/리롤/비용 증감률/누적 골드 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 이번 차수 선택지 + 액션 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n\r\n                {/* 4개 슬롯: 라벨 선택 + 적용 버튼 */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {/* 현재 슬롯 라벨 변경 드롭다운 */}\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        {/* 적용 버튼: 모든 설정 잠금 및 중복 미발생 등 조건 충족 시 활성 */}\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 버튼 및 추천 문구 */}\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 EV 근거 설명 (가능 시 노출) */}\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 우측(1칸): 작업 내역 패널 (Undo/Redo 포함) */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              {/* Undo/Redo 버튼: 단축키 안내 포함 */}\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 로그 비어있음/목록 렌더링 */}\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n\r\n        {/* 결과 출력 섹션: 스켈레톤/실데이터 2상태 렌더링 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            {/* 우측 표시: 실제 사용된 Monte Carlo 횟수 및 95% CI 폭 */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 계산 중 또는 데이터 미존재 시: 스켈레톤 UI */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 스켈레톤 칩 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 스켈레톤 카드 2장 */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 실데이터 표시: 1회차 선택지 목록 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 목표 달성 확률 및 등급 확률 카드 2열 */}\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 카드: STOP_ON_SUCCESS vs RUN_TO_END */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* 좌측: STOP_ON_SUCCESS 결과 */}\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n\r\n                      {/* 우측: RUN_TO_END 결과 */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n\r\n                  {/* 등급 확률 카드: 전설/유물/고대 각각의 달성 확률 및 순서 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n\r\n                    {/* 각 등급 확률 막대 및 수치 표시 (0%도 노출) */}\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* 100% 확정 배지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n\r\n                    {/* 등급 확률 순서 요약: 0% 제외, 동률 표기 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun);\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n\r\n      {/* 전역 토스트 스택: 중앙 오버레이로 알림 표시 */}\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n\r\n      {/* 광고 영역: Kakao Adfit 삽입 */}\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp } from \"lucide-react\";\r\n\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll();\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\n\r\nfunction TopFab() {\r\n  const visible = useNearBottom(520);\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)]\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          visible ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CoreOnly() {\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n        <header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n          <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n            <nav aria-label=\"Core pages\">\r\n              <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/gem\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 가공 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/optimizer\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 장착 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            {/* 기본 경로 보정: /#/core → /#/core/optimizer */}\r\n            <Route index element={<Navigate to=\"/optimizer\" replace />} />\r\n\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n\r\n            {/* 나머지 경로도 optimizer로 보정 */}\r\n            <Route path=\"*\" element={<Navigate to=\"/optimizer\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n      <TopFab />\r\n    </HashRouter>\r\n  );\r\n}\r\n"],"names":["adRef","useRef","useEffect","ins","document","createElement","className","style","display","setAttribute","script","type","async","src","current","innerHTML","appendChild","_jsx","ref","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","DEALER_WEIGHTS","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_g$o1v","_w$g$o1k","_g$o2v","_w$g$o2k","has","o1k","o1v","o2k","o2v","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","length","CORE_NAME_ITEMS","value","label","CATEGORY_LABEL","order","chaos","LS_KEY","JOBS","_ARC_CORES$jobs","ARC_CORES","CORE_NAME_BY_GROUP","GROUP_BY_CORE_NAME","getPresetItems","job","groupKey","_ARC_CORES$data$job2","_ARC_CORES$data2","e","map","CORE_ORDER","uid","Math","random","toString","slice","TARGET_MAX_BY_GRADE","loadFromStorage","localStorage","getItem","JSON","parse","console","warn","dragPortal","body","PortalAwareDraggable","_ref","draggableId","index","children","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","bordered","open","setOpen","useState","focusedIndex","setFocusedIndex","btnRef","menuRef","itemRefs","menuPos","top","left","width","forceTick","listboxId","initFocusIndex","useCallback","sel","findIndex","i","disabled","firstEnabled","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","Array","isArray","handlerRef","listener","_handlerRef$current","some","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","requestAnimationFrame","_ref3","_ref3$focus","el","focus","cancelAnimationFrame","selected","find","getNextEnabled","start","dir","n","step","menu","AnimatePresence","motion","ul","id","tabIndex","undefined","initial","opacity","y","animate","exit","transition","duration","position","zIndex","onKeyDown","key","preventDefault","next","first","last","it","_btnRef$current2","_btnRef$current2$quer","_btnRef$current2$quer2","querySelector","_btnRef$current3","_btnRef$current3$quer","_btnRef$current3$quer2","isSelected","isActive","onMouseEnter","onItemMouseEnter","onClick","_btnRef$current4","_btnRef$current4$quer","_btnRef$current4$quer2","String","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref4","toasts","onClose","div","scale","stiffness","damping","msg","NumberInput","_ref5","min","max","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","x","clamp","inputMode","onBlur","onWheel","currentTarget","blur","LoACoreOptimizer","title","category","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","push","remove","setToasts","setTimeout","useToasts","quickAddMode","setQuickAddMode","stale","setStale","didMountRef","cores","gems","isComputing","progress","results","calculate","hasCalculated","calcVersion","setCalcVersion","setHasCalculated","computing","setComputing","setProgress","pct","indeterminate","phase","coreIndex","coreCount","coreDone","coreTotal","rate","elapsedMs","etaMs","pulse","priorityPicks","setPriorityPicks","workerRef","paramsRef","Worker","URL","_workerRef$current","postMessage","_workerRef$current2","terminate","cancelled","flushSync","_paramsRef$current$co","Promise","resolve","worker","Error","onMessage","data","_e$data","error","p","done","total","_p$pulse","floor","picks","c","perCoreLimit","err","useOptimizer","selectedJob","setSelectedJob","_loadFromStorage$sele","_loadFromStorage2","setCores","updater","prev","setGems","prevByCat","_prevByCat$category","list","changed","_items$0$value","_items$","name","nextPreset","preset","updateGem","patch","updateCore","cs","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","idx","displayIndexGem","QuickAddPad","_ref6","onAdd","focusOnMount","setO1k","setO2k","setO1v","setO2v","setWill","setPoint","firstRef","focusAfterSubmitRef","WILL_INPUT_ID","_firstRef$current","_firstRef$current$foc","_firstRef$current2","_firstRef$current2$se","select","handleSubmit","_e$preventDefault","_firstRef$current$sel","_firstRef$current3","getElementById","_el$select","onKeyDownSubmit","shiftKey","onSubmit","Plus","_w$brand","assert","gem","includes","cA","cB","log","runSelfTests","setItem","stringify","saveToStorage","backgroundImage","backgroundAttachment","val","_items$0$value2","_items$2","j","addCore","_getPresetItems$","nextName","existingNames","nextAvailableCoreName","minThreshold","enforceMin","DragDropContext","onDragStart","evt","Event","dispatchEvent","onDragEnd","result","destination","from","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","_CORE_THRESHOLDS$c$gr","supply","gradeMax","thresholds","targetItems","concat","takenNames","coreNameItems","allowed","_ARC_CORES$data$job","_ARC_CORES$data","entries","groups","Boolean","getAllowedCoreNameSet","prov","_c$minThreshold","draggableProps","dragHandleProps","_presetItems$0$value","_presetItems$","presetItems","resolvedPreset","maxAllowed","nextMin","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","removeGem","resetWeights","RotateCcw","maskWeightsForRole","_getPresetItems$2","_c$preset","pick","hasResult","minOfGrade","presetFallback","_Fragment","maxThr","toFixed","_ref7","_g$wwill","gi","disp","wwill","KakaoAdfit","toLocaleString","USE_ANTITHETIC","AUTO_SCALE_RARE","OFFICIAL_RNG","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","SIM_OPTIONS","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","lo","hi","zeroSuccessUpperBound","alpha","arguments","pow","epsilonByTrials","batchByTrials","fmtProbSmart","fmtProb","fmtNum","goldPerSuccess","expectedGold","Infinity","round","burdenBadge","tone","estimateRate","successes","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","meetsTargetByMode","abMode","tgtNames","pool","isAny","nm","TA","aName","TB","bName","match","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","parseInt","replace","trim","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","sum","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","arr","a","b","gold","rrs","unlocked","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","ci","low","high","halfWidth","localMaxTrials","forceRare","tiers","sort","hardCap","nextTier","cur","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","useMemo","toneBtn","success","info","warning","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","m","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","d","Date","pad","padStart","getHours","getMinutes","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","toLowerCase","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","out","cursor","_allOptionLabels$curs","_allOptionLabels$curs2","manLabels","setManLabels","_allOptionLabels$i","used","replacement","l","resultStop","setResultStop","resultRun","setResultRun","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","pct2","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","_","gps","badge","delay","grades","grad","comps","eps","diff","abs","rankGradeOrder","TopFab","visible","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","scrollTo","behavior","CoreOnly","HashRouter","basename","NavLink","to","Routes","Route","element","Navigate","path"],"sourceRoot":""}