{"version":3,"file":"static/js/433.0808a3c0.chunk.js","mappings":"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","sources":["components/KakaoAdfit.jsx","lib/optimizerCore.js","components/LoACoreOptimizer.jsx","components/GemSimulator.jsx","CoreOnly.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;","// src/lib/optimizerCore.js\r\n\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nexport const CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nexport const CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nexport const CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nexport const GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nexport const OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nexport const OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nexport const ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\nexport const DEFAULT_WEIGHTS = { atk: 1, add: 1, boss: 1, brand: 1, allyDmg: 1, allyAtk: 1 };\r\n// 딜러 가중치: y ≈ slope * level (원점 통과 회귀 추정)\r\nexport const DEALER_WEIGHTS = {\r\n  boss: 0.07870909,\r\n  add: 0.06018182,\r\n  atk: 0.03407273,\r\n  brand: 0,\r\n  allyDmg: 0,\r\n  allyAtk: 0,\r\n};\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nexport function sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nexport function scoreGemForRole(g, role, w) {\r\n  if (role == null) return 0; // 역할 미선택이면 유효옵션 점수 0\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? (g.o1v ?? 0) * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? (g.o2v ?? 0) * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nexport function* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1;\r\n    while (p >= 0 && idx[p] === n - k + p) p--;\r\n    if (p < 0) break;\r\n    idx[p]++;\r\n    for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\nexport function thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nexport function scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000)\r\n              + (totalPoint * 10_000)\r\n              + ((5_000 - totalWill) * 10)\r\n              + roleSum\r\n              - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nexport function enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin) {\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n  const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n  const effMin = minThreshold ?? minOfGrade;\r\n  const effEnforce = enforceMin || minThreshold == null;\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) { all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }); continue; }\r\n    for (const combo of combinations(pool, k)) {\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n  all.sort((a, b) => b.score - a.score);\r\n  let filtered;\r\n  if (effEnforce) {\r\n    filtered = all.filter(ci => {\r\n      const maxThr = Math.max(0, ...ci.thr);\r\n      return ci.list.length > 0 && maxThr >= (effMin ?? 0);\r\n    });\r\n  } else {\r\n    filtered = all.filter(ci => ci.list.length > 0 && ci.thr.length > 0);\r\n  }\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n  return filtered;\r\n}\r\n/* ===== 전역 최적 배치: thr 합 최대(1순위) + 강제는 하한(≥min) + 우선순위 사전식 ===== */\r\nexport function optimizeRoundRobinTargets(cores, pool, role, weights, perCoreLimit = 300) {\r\n  const W = sanitizeWeights(weights);\r\n  const thresholdsOf = (grade) => CORE_THRESHOLDS[grade];\r\n  const minOf = (grade) => Math.min(...thresholdsOf(grade));\r\n  const thrMax = (ci) => (ci?.thr?.length ? Math.max(...ci.thr) : 0);\r\n\r\n  const emptyPick = { list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 };\r\n\r\n  // 표시 우선순위(위→아래)\r\n  const order = cores.map((_, i) => i);\r\n  const enforcedIdx = cores.map((c, i) => (c.enforceMin ? i : -1)).filter(i => i !== -1);\r\n\r\n  const candidatesFor = (core, gemPool) => {\r\n    const arr = enumerateCoreCombos(gemPool, core.grade, role, W, undefined, false)\r\n      .filter(ci => ci.list.length > 0 && ci.thr.length > 0);\r\n    arr.sort((a, b) => {\r\n      const ta = thrMax(a), tb = thrMax(b);\r\n      if (ta !== tb) return tb - ta;\r\n      if (a.totalPoint !== b.totalPoint) return b.totalPoint - a.totalPoint;\r\n      if (a.roleSum !== b.roleSum) return b.roleSum - a.roleSum; // 유효합 우선\r\n      return a.totalWill - b.totalWill;\r\n    });\r\n    return arr.slice(0, Math.max(perCoreLimit, 10000));\r\n  };\r\n\r\n  const allCandidates = order.map(i => candidatesFor(cores[i], pool));\r\n\r\n  function betterThan(A, B) {\r\n    if (!B) return true;\r\n    if (A.sumThr !== B.sumThr) return A.sumThr > B.sumThr;\r\n    for (let i = 0; i < A.thrVec.length; i++) {\r\n      if (A.thrVec[i] !== B.thrVec[i]) return A.thrVec[i] > B.thrVec[i];\r\n    }\r\n    if (A.sumPoint !== B.sumPoint) return A.sumPoint > B.sumPoint;\r\n    for (let i = 0; i < A.ptVec.length; i++) {\r\n      if (A.ptVec[i] !== B.ptVec[i]) return A.ptVec[i] > B.ptVec[i];\r\n    }\r\n    if (A.roleSum !== B.roleSum) return A.roleSum > B.roleSum; // 유효합 더 큰 쪽\r\n    if (A.sumWill !== B.sumWill) return A.sumWill < B.sumWill; // 의지력 적을수록 우위\r\n    return false;\r\n  }\r\n\r\n  // ---- 공통 백트래킹: 주어진 enforceSet에 대해 최적해 탐색 ----\r\n  function trySolve(enforceSet, blockedSet = new Set()) {\r\n    let best = null;\r\n    const used = new Set();\r\n\r\n    function backtrack(pos, picksAcc, sumThrAcc, sumPointAcc, sumWillAcc, roleSumAcc, thrVec, ptVec) {\r\n      if (pos === order.length) {\r\n        // 강제 코어 하한 검사\r\n        for (const idx of enforceSet) {\r\n          const effMin = (cores[idx].minThreshold ?? minOf(cores[idx].grade));\r\n          const t = thrMax(picksAcc[idx]);\r\n          if (t < effMin) return;\r\n        }\r\n        const cand = {\r\n          picks: picksAcc.map(x => x),\r\n          sumThr: sumThrAcc,\r\n          sumPoint: sumPointAcc,\r\n          sumWill: sumWillAcc,\r\n          roleSum: roleSumAcc,\r\n          thrVec: thrVec.slice(),\r\n          ptVec: ptVec.slice(),\r\n        };\r\n        if (betterThan(cand, best)) best = cand;\r\n        return;\r\n      }\r\n\r\n      const coreIdx = order[pos];\r\n      const isEnf = enforceSet.has(coreIdx);\r\n      const effMin = isEnf ? (cores[coreIdx].minThreshold ?? minOf(cores[coreIdx].grade)) : -Infinity;\r\n\r\n      // 차단 코어는 empty만 허용\r\n      if (blockedSet.has(coreIdx)) {\r\n        backtrack(pos + 1, picksAcc, sumThrAcc, sumPointAcc, sumWillAcc, roleSumAcc, thrVec, ptVec);\r\n        return;\r\n      }\r\n\r\n      const candList = allCandidates[pos];\r\n\r\n      // 후보 시도\r\n      for (const pick of candList) {\r\n        const t = thrMax(pick);\r\n        if (isEnf && t < effMin) continue;\r\n\r\n        // 젬 충돌\r\n        let clash = false;\r\n        for (const g of pick.list) { if (used.has(g.id)) { clash = true; break; } }\r\n        if (clash) continue;\r\n\r\n        pick.list.forEach(g => used.add(g.id));\r\n        const prev = picksAcc[coreIdx];\r\n        picksAcc[coreIdx] = pick;\r\n\r\n        thrVec[pos] = t;\r\n        ptVec[pos] = pick.totalPoint;\r\n\r\n        backtrack(\r\n          pos + 1,\r\n          picksAcc,\r\n          sumThrAcc + t,\r\n          sumPointAcc + pick.totalPoint,\r\n          sumWillAcc + pick.totalWill,\r\n          roleSumAcc + pick.roleSum,\r\n          thrVec,\r\n          ptVec\r\n        );\r\n\r\n        // 롤백\r\n        pick.list.forEach(g => used.delete(g.id));\r\n        picksAcc[coreIdx] = prev;\r\n        thrVec[pos] = 0;\r\n        ptVec[pos] = 0;\r\n      }\r\n\r\n      // 비강제는 빈 선택 허용\r\n      if (!isEnf) {\r\n        backtrack(pos + 1, picksAcc, sumThrAcc, sumPointAcc, sumWillAcc, roleSumAcc, thrVec, ptVec);\r\n      }\r\n    }\r\n\r\n    backtrack(\r\n      0,\r\n      cores.map(() => emptyPick),\r\n      0, 0, 0, 0,\r\n      Array(order.length).fill(0),\r\n      Array(order.length).fill(0)\r\n    );\r\n\r\n    return best; // null(실패) 또는 최적해\r\n  }\r\n\r\n  // 1) 원래 로직(강제 전부 지킴) 우선 시도\r\n  const enforcedSetFull = new Set(enforcedIdx);\r\n  const bestFull = trySolve(enforcedSetFull);\r\n  if (bestFull) {\r\n    return { picks: bestFull.picks };\r\n  }\r\n\r\n  // 1.5) 전역해가 없으면: 최하 코어를 차단하고 재시도\r\n  if (order.length > 0) {\r\n    const lowestIdx = order[order.length - 1];\r\n    const enforcedMinusLowest = new Set([...enforcedSetFull].filter(i => i !== lowestIdx));\r\n    const bestDropLowest = trySolve(enforcedMinusLowest, new Set([lowestIdx]));\r\n    if (bestDropLowest) {\r\n      const finalPicks = bestDropLowest.picks.map((p, i) => (i === lowestIdx ? emptyPick : (p || emptyPick)));\r\n      return { picks: finalPicks };\r\n    }\r\n  }\r\n\r\n  // 2) 강제 불가능 판별\r\n  const infeasibleEnforced = new Set();\r\n  for (const idx of enforcedIdx) {\r\n    const effMin = (cores[idx].minThreshold ?? minOf(cores[idx].grade));\r\n    const pos = order.indexOf(idx);\r\n    const hasFeasible = (allCandidates[pos] || []).some(ci => thrMax(ci) >= effMin);\r\n    if (!hasFeasible) infeasibleEnforced.add(idx);\r\n  }\r\n\r\n  // 3) 가능한 강제만 유지하고 다시 최적화\r\n  const enforcedSetReduced = new Set(enforcedIdx.filter(i => !infeasibleEnforced.has(i)));\r\n  const bestReduced = trySolve(enforcedSetReduced);\r\n\r\n  if (bestReduced) {\r\n    // 4) 최종 출력에서 \"실제로 불가능했던 강제 코어\"만 결과없음 처리\r\n    const finalPicks = bestReduced.picks.map((p, i) => (infeasibleEnforced.has(i) ? emptyPick : (p || emptyPick)));\r\n    return { picks: finalPicks };\r\n  }\r\n\r\n  // 5) 그래도 실패 시 안전망\r\n  return { picks: cores.map(() => emptyPick) };\r\n}\r\n","// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\r\nimport { createPortal, flushSync } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n// 최적화 순수 로직/상수 import (UI에서 쓰는 상수/헬퍼만)\r\nimport {\r\n  CORE_SUPPLY,\r\n  CORE_THRESHOLDS,\r\n  CORE_LABEL,\r\n  GRADES,\r\n  OPTION_LABELS,\r\n  OPTIONS,\r\n  DEFAULT_WEIGHTS,\r\n  DEALER_WEIGHTS,\r\n  ROLE_KEYS,\r\n  sanitizeWeights,\r\n  scoreGemForRole,\r\n  thresholdsHit,\r\n  scoreCombo,\r\n} from '../lib/optimizerCore.js';\r\n\r\n/* --------------------------------------------------------------------------\r\n * [타입 설명 - 코드 동작과 무관한 개발자 참고 주석]\r\n *  - Role: \"dealer\"(딜러) | \"support\"(서폿)\r\n *  - OptionKey: 각 젬 옵션 키 (\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\")\r\n *  - CoreGrade: 코어 등급 (\"HERO\",\"LEGEND\",\"RELIC\",\"ANCIENT\")\r\n *  - Gem/CoreDef/Weights/ComboInfo: 데이터 모델\r\n * -------------------------------------------------------------------------- */\r\n\r\n/* 도메인 외 UI 전용 상수 */\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\nconst CATEGORY_LABEL = { order: \"질서\", chaos: \"혼돈\" };\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\";\r\n\r\n/* =============================== 유틸/헬퍼 (UI) =============================== */\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\n// 역할 선택 시 반대 역할 키 가중치를 0으로 마스킹\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => { next[k] = 0; });\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => { next[k] = 1; });\r\n  return next;\r\n}\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    [refs]\r\n  );\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ value, items, onChange, placeholder, className }) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick(v => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick(v => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n  const selected = items.find((i) => i.value === value);\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className=\"rounded-xl border bg-white shadow-lg overflow-auto max-h-60\"\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (it.disabled) return;\r\n                onChange(it.value);\r\n                setOpen(false);\r\n              }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setOpen(v => !v)}\r\n        className=\"min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl border px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value, onChange, min, max, step = 1, allowFloat = false, zeroOnBlur = true, className = \"\", inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num));\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n\r\n  // 현재 카테고리\r\n  const [category, setCategory] = useState/** @type {Category} */(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  // 카테고리별 상태\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n\r\n  // 기타 상태\r\n  const [role, setRole] = useState/** @type {Role|null} */(null);\r\n  const [weights, setWeights] = useState({ ...DEFAULT_WEIGHTS });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  // 계산 제어(수동)\r\n  const [calcVersion, setCalcVersion] = useState(0);\r\n  const [computing, setComputing] = useState(false);\r\n  const [stale, setStale] = useState(false);\r\n  const didMountRef = useRef(false);\r\n  const [priorityPicks, setPriorityPicks] = useState([]);\r\n\r\n  // 현재 카테고리별 단축\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n\r\n  // Web Worker 핸들\r\n  const workerRef = useRef(null);\r\n\r\n  // 워커 초기화/해제\r\n  useEffect(() => {\r\n    // Vite/CRA 모두 호환되는 URL 패턴\r\n    workerRef.current = new Worker(new URL('../workers/optimizer.worker.js', import.meta.url), { type: 'module' });\r\n    return () => {\r\n      workerRef.current?.terminate();\r\n      workerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // 현재 카테고리에 대해서만 set 하는 헬퍼\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const setGems = (updater) => {\r\n    setGemsByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) { didMountRef.current = true; return; }\r\n    setStale(true);\r\n  }, [role, weights, category]);\r\n\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n\r\n  // ==== 무거운 계산 → Web Worker로 비동기 이관 + 스피너 확실히 표시 ====\r\n  useEffect(() => {\r\n    if (calcVersion === 0) return;\r\n    let cancelled = false;\r\n\r\n    // 1) 스피너 즉시 커밋\r\n    flushSync(() => setComputing(true));\r\n\r\n    // 2) 두 번의 RAF로 레이아웃/페인트 기회 확보\r\n    const nextFrame = () => new Promise(requestAnimationFrame);\r\n\r\n    (async () => {\r\n      try {\r\n        await nextFrame();\r\n        await nextFrame();\r\n\r\n        const worker = workerRef.current;\r\n        if (!worker) throw new Error(\"Worker not initialized\");\r\n\r\n        // 메시지 핸들러\r\n        const onMessage = (e) => {\r\n          if (cancelled) return;\r\n          if (e.data?.error) {\r\n            console.error(e.data.error);\r\n            setComputing(false);\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n          const { picks } = e.data || {};\r\n          setPriorityPicks(picks || []);\r\n          setStale(false);\r\n          setComputing(false);\r\n          worker.removeEventListener('message', onMessage);\r\n        };\r\n\r\n        worker.addEventListener('message', onMessage);\r\n\r\n        // 후보 제한(대규모 입력 방지용)\r\n        const perCoreLimit =\r\n          gems.length > 24 ? 120 :\r\n          gems.length > 16 ? 200 :\r\n          gems.length > 10 ? 260 : 300;\r\n\r\n        // 3) 워커에 작업 위임\r\n        worker.postMessage({ cores, gems, role, weights, perCoreLimit });\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          console.error(err);\r\n          setComputing(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calcVersion]);\r\n\r\n  const resetWeights = () => setWeights({ ...DEFAULT_WEIGHTS });\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: 0, o2k: \"add\", o2v: 0 }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs;\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // UI tokens\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  // Self-tests (optional)\r\n  useEffect(() => {\r\n    function runSelfTests() {\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id: \"t1\", will: 1, point: 1, o1k: \"atk\", o1v: 2, o2k: \"brand\", o2v: 3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id: \"t2\", will: 0, point: 10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n  useEffect(() => {\r\n    saveToStorage({ category, coresByCat, gemsByCat, role, weights });\r\n  }, [category, coresByCat, gemsByCat, role, weights]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 스타일 토큰 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n      `}</style>\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더/카테고리 토글 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 코어 입력 & 우선순위(DnD/버튼 이동) */}\r\n        <section className={`${card} p-4 lg:p-6 !mt-2 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        CORE_THRESHOLDS[c.grade].map(v => ({ value: String(v), label: `${v}P 이상` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      const coreNameItems = CORE_NAME_ITEMS.map(it => ({ ...it, disabled: takenNames.has(it.value) }));\r\n                      const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.grade} onChange={(val) => updateCore(c.id, { grade: /** @type {CoreGrade} */(val) })} items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))} placeholder=\"코어 등급\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 구간</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val), enforceMin: true }); else updateCore(c.id, { minThreshold: undefined, enforceMin: false }); }} items={targetItems} placeholder=\"구간\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">목표 구간 강제</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">선택 안 함이면 내부적으로 <br className=\"hidden lg:block\" />최소 구간 <b className=\"text-primary\">{minOfGrade}P</b>을 기본 목표로 적용합니다.</p>\r\n                              </div>\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3 mb-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16} /><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm`}>\r\n            <span className=\"text-xs text-gray-500\">포지션 선택</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"dealer\"}\r\n                onChange={() => {\r\n                  setRole(\"dealer\");\r\n                  setWeights({ ...DEALER_WEIGHTS });\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              딜러\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"support\"}\r\n                onChange={() => {\r\n                  setRole(\"support\");\r\n                  setWeights((w) => maskWeightsForRole(w, \"support\"));\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              서포터\r\n            </label>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k]}\r\n                    onChange={(v) => setWeights((w) => ({ ...w, [k]: (v) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0000001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 하단 계산 액션/알림 */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-2\">\r\n          {stale && !computing && calcVersion > 0 && (\r\n            <span className=\"inline-block text-[11px] px-3 py-1.5 rounded-lg bg-red-100 text-red-800 border border-red-200 text-center lg:text-left\">\r\n              입력값이 변경되었습니다. <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center gap-2 lg:ml-auto w-full lg:w-auto\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setCalcVersion(v => v + 1)}\r\n              disabled={computing}\r\n              className=\"h-10 w-full lg:w-[120px] px-0 lg:px-3 rounded-xl ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n            >\r\n              {computing ? \"계산 중…\" : \"계산하기\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          {!computing && stale && calcVersion > 0 && (\r\n            <p className=\"text-xs text-red-700 mt-1\">입력값이 변경되었습니다. 우측 상단의 <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.</p>\r\n          )}\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = priorityPicks?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name} <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}%</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 구간을 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <colgroup>\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"13%\"} />\r\n                          </colgroup>\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.wwill ?? g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"} {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n\r\n      {/* 전역 오버레이 스피너 (z-index 최상단) */}\r\n      {computing && (\r\n        <div className=\"fixed inset-0 z-[99999] bg-black/35 backdrop-blur-[1px] flex items-center justify-center\">\r\n          <div className=\"w-12 h-12 border-4 border-white/80 border-t-transparent rounded-full animate-spin\" aria-label=\"계산 중\" />\r\n          <span className=\"ml-3 text-white font-semibold select-none\">최적 조합 계산 중…</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\nconst USE_ANTITHETIC = true;   // 저분산 고정 ON\r\nconst AUTO_SCALE_RARE = true;  // 자동 스케일업 고정 ON\r\n/* =========================\r\n   결정적 RNG 유틸리티 (원본 유지)\r\n   ========================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n// === 확률 경계 헬퍼 ===\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n/* =========================\r\n   등급/젬타입/상수 (원본 유지)\r\n   ========================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n// 고정 TRIALS 대신 opts로 제어 (기본값은 적당히 큼)\r\n// maxTrials: 최대 시뮬 회수, epsilon: 95% CI 반폭(절대값), batch: 배치 크기\r\n// note: successProb는 베르누이 평균이라 표준오차를 정확히 계산 가능\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n// % 포맷: 원래 값 그대로, 소수점 5자리 고정\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";           // 완전 0%면 0\r\n  if (x >= 1) return \"100.00000%\";                          // 전부 성공이면 100.00000%\r\n  return (x * 100).toFixed(5) + \"%\";                        // 그 외는 5자리 고정\r\n}\r\n// 레거시 호환\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n// 기대비용: 성공 1회 얻기 위해 드는 평균 골드 (확률이 낮을수록 ↑)\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity; // 성공확률 0%면 무한대 취급\r\n  return expectedGold / p;\r\n}\r\n// 퍼센트 유틸: width 계산용\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n// 시각적 뱃지(난이도): 확률이 낮을수록 \"골드부담 ↑\"\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n// 확률 추정기: mle(기본), laplace, jeffreys\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  // ✅ 경계 스냅: 전부 성공이면 1(=100%)로 고정\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":   // Beta(1,1) 사전 → (s+1)/(n+2)\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":  // Beta(0.5,0.5) 사전 → (s+0.5)/(n+1)\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\nconst OFFICIAL_RNG = true;\r\n/* ===== 시뮬레이션 횟수 옵션/헬퍼 ===== */\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n// 0 successes일 때의 95% 상한 (Clopper–Pearson 근사)\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n); // ~= 3/n\r\n}\r\n// 반복 수에 따른 수렴 기준(95% CI 반폭)과 배치 크기\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001; // ±0.01%p\r\n  if (n >= 100000) return 0.0002; // ±0.02%p\r\n  if (n >= 50000) return 0.0003; // ±0.03%p\r\n  if (n >= 10000) return 0.0005; // ±0.05%p\r\n  if (n >= 5000) return 0.0007; // ±0.07%p\r\n  return 0.001;                   // ±0.10%p\r\n};\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n/* =========================\r\n   효과명/포지션/스코어/목표 (원본 유지)\r\n   ========================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  // 이름 기반 목표: 유효풀(공격형/서폿) 내에서만 선택 가능하므로 UI가 보장하지만,\r\n  // 안전하게 한 번 더 보정\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n  if (abMode === \"ANY_ONE\") {\r\n    // 한 개 목표만 의미: (A 라인 or B 라인)가 \"목표 이름 A\" + 레벨≥t.aLvl\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    // BOTH: 두 개 목표 모두 충족 (순서 상관없이 A/B에 배치되기만 하면 됨)\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  // 기본(의지력 효율/포인트) 부족분\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    // A라인을 TA로 맞추기 vs B라인을 TA로 맞추기\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    // (A→TA + B→TB) vs (A→TB + B→TA) 중 더 싼 배치\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n/* =========================\r\n   가중치/라벨/슬롯/적용 (원본 유지)\r\n   ========================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\"); // 역할군 풀을 쓰려면 pos, 전체풀 쓰려면 \"상관 없음\"\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n  return items;\r\n}\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n/* =========================\r\n   시뮬레이션 (원본 유지)\r\n   ========================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n// ✅ 저분산(안티테틱) + 희귀사건 자동 스케일업(rare-guard) 버전\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    // ⬇️ 신규 옵션\r\n    useAntithetic = true,          // 저분산(권장): 안티테틱 페어 사용\r\n    autoScaleRare = true,          // 희귀사건 가드\r\n    rareTargetSuccesses = 100,      // 희귀사건 시 확보할 성공 표본 수 목표\r\n    rareMaxTrials = 200000,            // (구버전 호환용)\r\n    rareTiers = [200000], // ← 순차 확장 티어\r\n  } = opts;\r\n  // 의도 동일 (그대로)\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n  // ▶︎ 한 회 시뮬레이션 (특정 난수 발생기 rand를 주입)\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n  // 집계 변수\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n  // 동적으로 늘어날 수 있는 상한\r\n  let localMaxTrials = maxTrials;\r\n  // 추가: 희귀 강제 모드(0% 판독 시 일반 종료조건을 무시)\r\n  let forceRare = false;\r\n  // 희귀 티어 헬퍼\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    // 32-bit 안전 시드 셔플\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n  while (n < localMaxTrials) {\r\n    // 한 번에 돌릴 \"스텝\" 수 (안티테틱 켰으면 실제 trial 수는 최대 2배)\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      // 남은 예산 확인\r\n      if (n >= localMaxTrials) break;\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n      // 기본 경로\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n      // 안티테틱 페어 (같은 시드로 1-u 사용)\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n    // 0%면 즉시 희귀 강제 모드로 전환하고 상한을 '다음 티어'로 점프\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      // 최초엔 최소 티어까지, 이미 티어면 다음 티어로\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;   // ← 일반 조기 종료를 잠시 비활성화\r\n      continue;\r\n    }\r\n    // 희귀사건 가드: 성공 표본 부족하면 상한을 키워 더 돌린다(점진 확장)\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n    if (rareGuardActive) {\r\n      // 티어 기반 점프: 20만 → 50만 → 100만 (더 이상 티어 없으면 현 상한 유지)\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue; // 더 돌린다\r\n    }\r\n    // 일반 수렴 조건\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  // UI용: 원시 성공 회수(정수)\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n// ===== 등급별 그라디언트 색상 (start를 적당히 어둡게 조정) =====\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",  // 전설: 진한 오렌지브라운 → 골드브라운\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",  // 유물: 다크 오렌지레드 → 토마토브라운\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",  // 고대: 중간 골드브라운 → 레몬쉬폰\r\n};\r\n// 등급 확률 정렬 + 부등호(>=) 체인 생성용\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  // 0%는 표시 대상에서 제거\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n/* ===============================\r\n   공통 UI(LoACore 스타일): Dropdown + Toast + NumberInput\r\n   =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ \r\n  value, \r\n  items, \r\n  onChange, \r\n  placeholder, \r\n  className, \r\n  disabled, \r\n  bordered = true // 기본값: border 있음\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => { \r\n      window.removeEventListener(\"scroll\", onScroll); \r\n      window.removeEventListener(\"resize\", onScroll); \r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value,\r\n  set,                 // (old) (number)=>void\r\n  onChange,            // (new) (number|null)=>void\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n  // wheel 값 변동 방지(의도치 않은 증가/감소)\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  // 구버전/신버전 핸들러 분기\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        // 입력 중 빈 문자열 허용\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          // 구버전(set)은 입력 중 null을 전달하지 않음 (기존 동작 유지)\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          // 새 API: 입력 중에도 값 알림(클램프는 blur 시 확정)\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          // 구 API: 즉시 클램프 + 업데이트 (기존 동작과 동일)\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          // 구 API: null을 허용하지 않으므로 보정값(또는 min/0) 전달\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n/* ===============================\r\n   원래 Select API를 유지하면서 내부는 Dropdown 사용\r\n   =============================== */\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n/* =========================\r\n   중복 라벨 검출 (원본 유지)\r\n   ========================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n/* =========================\r\n   메인 컴포넌트\r\n   ========================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],   // 유효풀에서 시작\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n  // 시작 상태가 포지션 풀과 안 맞아도 계산은 진행 (이름 변경으로 충족 가능)\r\n  const curValid = cur.aName !== cur.bName;\r\n  // 시뮬레이션 반복 수 (Monte Carlo maxTrials)\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n  const migratedRef = useRef(false); // StrictMode 중복 실행 방지(개발모드)\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n  const [changeMode, setChangeMode] = useState(null); // { who: 'A'|'B', options: string[] }\r\n  const [changePick, setChangePick] = useState(\"\");\r\n  // ==== Undo/Redo 히스토리 ====\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n  // manual, changeMode, changePick 을 하나의 스냅샷으로 관리\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      // 용량 제한\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n  // ==== 작업 내역(Log) ====\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]); // 최신이 위로 오게 저장\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n  const addLog = useCallback((entry) => {\r\n    // entry: { type, title, detail?, meta? }\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      // 상태 복원\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      // 상태 복원\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n  // ⌨️ 단축키: Ctrl/Cmd+Z = Undo, Ctrl/Cmd+Shift+Z = Redo\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n  // 상태 비교해서 읽기 쉬운 diff 문자열 만들어주기\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n  // 포지션/젬타입 바뀔 때 목표 이름을 유효풀로 보정\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n  // 높이 동기화 refs & 상태\r\n  const simRef = useRef(null);       // 왼쪽(가공 시뮬레이션) 카드\r\n  const [logsMax, setLogsMax] = useState(null); // 오른쪽 카드 max-height(px)\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n    // 왼쪽 카드 높이에 영향을 주는 값들이 갱신되면 다시 계산\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n  /* 다른 항목 보기 EV (원본 유지) */\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        // 라벨별로도 결정성을 주고 싶다면 seed 변형해서 rand 쓰기 가능\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct(nowProb)} → 다른 항목 보기 기대 ${pct(rerollProb)} (▲${pct(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct(nowProb)}가 다른 항목 보기 기대 ${pct(rerollProb)}보다 유리 (▼${pct(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct(nowProb)} vs 다른 항목 보기 ${pct(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n  // BOTH로 전환 시, 목표 이름에 '상관없음'이 포함되어 있으면 유효한 이름으로 자동 보정\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n  /* 확률 계산 트리거 */\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    // 이전 예약 취소\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    // clean up: 이 이펙트가 갱신/언마운트되면 예약 취소 + 로딩 정리\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n  /* 사용자 액션: 토스트로 안내 */\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n    // 🔁 부여 효과 변경은 '선택 모드'로 전환하여 왼쪽에서 사용자가 직접 고르게 함\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return; // ✅ 여기서 종료 (아직 시도/골드 소모하지 않음)\r\n    }\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory(); // 변경 전 스냅샷 저장\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n  function manualReset() {\r\n    setLogs([]);   // 작업 내역 삭제\r\n    setHistory({ past: [], future: [] }); // 히스토리도 같이 초기화하면 깔끔\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory(); // 변경 전 스냅샷 저장\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1, // 이번 차수 소비\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n  /* ====== UI 토큰 ====== */\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n  const dupWarnShown = useRef(false);\r\n  // allLocked이 false로 변하면 logs 초기화\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);   // 작업 내역 삭제\r\n      setHistory({ past: [], future: [] }); // 히스토리도 같이 초기화하면 깔끔\r\n    }\r\n  }, [allLocked]);\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base; // BOTH면 '상관없음' 제외\r\n  }, [gemKey, pos, abModePrimary]);\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n      `}</style>\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 1) 기본 설정 */}\r\n        {/* 1) 기본 설정 */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n            {/* 타이틀 우측: 저장/편집 버튼 (LoACoreOptimizer 스타일) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* 코어 카드와 동일한 레이아웃/간격/높이 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n              {/* 등급 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n              {/* 가공/다른 항목 보기 */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 2) 현재 옵션 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* 2) 현재 옵션 설정 — 입력 블록 교체(간격/폭 기본설정 카드와 동일) */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 포인트 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 효과 A */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n              {/* A 레벨 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 효과 B */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n              {/* B 레벨 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 3) 목표 옵션 설정 — 입력 블록 교체(간격/폭 LoACore와 동일) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n            {/* ⬇️ 헤더 우측: '목표 충족 방식'을 저장/편집 버튼 왼쪽에 배치 */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {/* 저장/편집 토글 버튼 (그대로) */}\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n          {/* LoACore 코어행과 동일한 한 줄 카드 레이아웃 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 ≥ */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n              {/* 포인트 ≥ */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n              {/* 추가 효과 — 모바일에서 col-span-2 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 이름 A */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n                    {/* A 레벨 ≥ */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n                    {/* 목표 이름 B (BOTH일 때만 활성) */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n                    {/* B 레벨 ≥ */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 4) 가공 시뮬레이션 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 타이틀 + 우측 액션 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* 🔹 안내문 추가 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 왼쪽: 상태/리소스(가독성 업) */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n                {/* 작은 스탯 카드 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* 리소스 칩 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* 오른쪽: 선택지 + 액션 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* 6) 작업 내역 */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n        {/* 5) 결과 출력 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* ▷ 스켈레톤 전체 덮개: 계산 중/미준비 상태면 전체를 스켈레톤으로 */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 칩 스켈레톤 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 카드 스켈레톤 (2장) */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* ▷ 실제 결과 UI: 스켈레톤이 아닐 때 한 번에 노출 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      {/* STOP_ON_SUCCESS */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                      {/* RUN_TO_END */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n                  {/* 등급 확률 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      // ✅ 0%도 포함해서 모두 보여준다\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* ✅ 100%면 확정 배지 유지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) /* 0%면 막대폭 0% */ }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                    {/* 확률 순서 표시: 0%만 제외, 100%는 (확정) 표기 유지 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun); // ← 이 함수 안에서 0% 필터 유지\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp } from \"lucide-react\";\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll(); // 초기 상태 반영\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\nfunction TopFab() {\r\n  const visible = useNearBottom(520); // 아래 끝 520px 근처에서 등장\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)]\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          visible ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default function CoreOnly() {\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n<header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n  <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n    <nav aria-label=\"Core pages\">\r\n      <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n        <li>\r\n          <NavLink\r\n            to=\"/gem\"\r\n            className={({ isActive }) =>\r\n              [\r\n                \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\" // 은은한 브랜드 틴트\r\n                  : \"text-gray-700 hover:bg-gray-50\"\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 가공 헬퍼\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/optimizer\"\r\n            className={({ isActive }) =>\r\n              [\r\n                \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\"\r\n                  : \"text-gray-700 hover:bg-gray-50\"\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 장착 헬퍼\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</header>\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n            {/* 기본 경로 보정: /core → /core/optimizer */}\r\n            <Route path=\"*\" element={<Navigate to=\"/gem\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n      <TopFab /> \r\n    </HashRouter>\r\n  );\r\n}\r\n"],"names":["adRef","useRef","useEffect","ins","document","createElement","className","style","display","setAttribute","script","type","async","src","current","innerHTML","appendChild","_jsx","ref","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","DEALER_WEIGHTS","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_g$o1v","_w$g$o1k","_g$o2v","_w$g$o2k","has","o1k","o1v","o2k","o2v","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","length","CORE_NAME_ITEMS","value","label","CATEGORY_LABEL","order","chaos","LS_KEY","CORE_ORDER","uid","Math","random","toString","slice","loadFromStorage","localStorage","getItem","JSON","parse","e","console","warn","dragPortal","body","PortalAwareDraggable","_ref","draggableId","index","children","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","open","setOpen","useState","btnRef","menuRef","menuPos","top","left","width","forceTick","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","Array","isArray","handlerRef","listener","_handlerRef$current","some","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","selected","find","i","menu","AnimatePresence","motion","ul","initial","opacity","y","animate","exit","transition","duration","position","zIndex","map","it","onClick","disabled","undefined","String","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref3","toasts","onClose","div","scale","stiffness","damping","msg","id","NumberInput","_ref4","min","max","step","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","n","trunc","x","clamp","inputMode","onBlur","onWheel","currentTarget","blur","LoACoreOptimizer","title","category","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","push","remove","setToasts","setTimeout","useToasts","calcVersion","setCalcVersion","computing","setComputing","stale","setStale","didMountRef","priorityPicks","setPriorityPicks","cores","gems","workerRef","Worker","URL","_workerRef$current","terminate","setCores","updater","prev","next","setGems","cancelled","flushSync","nextFrame","Promise","requestAnimationFrame","worker","Error","onMessage","_e$data","data","error","picks","perCoreLimit","postMessage","err","updateGem","patch","updateCore","cs","c","name","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","idx","displayIndexGem","total","_w$brand","assert","gem","includes","cA","cB","log","runSelfTests","setItem","stringify","saveToStorage","backgroundImage","backgroundAttachment","addCore","nextName","existingNames","nextAvailableCoreName","minThreshold","enforceMin","Plus","DragDropContext","onDragStart","evt","Event","dispatchEvent","onDragEnd","result","destination","from","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","supply","targetItems","concat","takenNames","coreNameItems","minOfGrade","prov","_c$minThreshold","draggableProps","dragHandleProps","val","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","removeGem","resetWeights","RotateCcw","maskWeightsForRole","pick","hasResult","list","maxThr","toFixed","_Fragment","_ref5","_g$wwill","gi","findIndex","disp","wwill","KakaoAdfit","USE_ANTITHETIC","AUTO_SCALE_RARE","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","p","isOneProb","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","lo","hi","fmtProbSmart","fmtProb","fmtNum","toLocaleString","goldPerSuccess","expectedGold","Infinity","pct","round","burdenBadge","tone","estimateRate","successes","arguments","OFFICIAL_RNG","SIM_OPTIONS","zeroSuccessUpperBound","alpha","pow","epsilonByTrials","batchByTrials","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","meetsTargetByMode","abMode","tgtNames","pool","isAny","nm","TA","aName","TB","bName","match","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","parseInt","replace","trim","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","floor","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","start","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","sum","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","arr","a","b","gold","rrs","unlocked","rate","first","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","ci","low","high","halfWidth","localMaxTrials","forceRare","tiers","sort","hardCap","nextTier","cur","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","bordered","useMemo","toneBtn","success","info","warning","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","Boolean","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","m","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","useCallback","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","d","Date","pad","padStart","getHours","getMinutes","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","key","toLowerCase","preventDefault","shiftKey","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","out","cursor","_allOptionLabels$curs","_allOptionLabels$curs2","manLabels","setManLabels","_ref6","_allOptionLabels$i","used","replacement","l","resultStop","setResultStop","resultRun","setResultRun","isComputing","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","_","gps","badge","delay","grades","grad","comps","eps","diff","abs","rankGradeOrder","TopFab","visible","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","scrollTo","behavior","CoreOnly","HashRouter","basename","NavLink","to","isActive","Routes","Route","path","element","Navigate"],"sourceRoot":""}