{"version":3,"file":"static/js/888.d0b88fe1.chunk.js","mappings":"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","sources":["lib/ocrRescueFromRaw.js","components/ScanFromImageModal.jsx","lib/optimizerCore.js","components/LoACoreOptimizer.jsx","hooks/useOptimizer.js","components/GemSimulator.jsx","CoreOnly.jsx","components/KakaoAdfit.jsx"],"sourcesContent":["// src/lib/ocrRescueFromRaw.js\r\n\r\n// 표준 라벨 매핑\r\nconst LABEL_MAP = new Map([\r\n  [\"공격력\", \"atk\"],\r\n  [\"추가피해\", \"add\"],\r\n  [\"보스피해\", \"boss\"],\r\n  [\"아군공격강화\", \"allyAtk\"],\r\n  [\"아군피해강화\", \"allyDmg\"],\r\n  [\"낙인력\", \"brand\"],\r\n]);\r\n\r\n// 디버깅/퍼지 비교용 표준 라벨 원형\r\nconst CANON_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가피해\",\r\n  boss: \"보스피해\",\r\n  allyAtk: \"아군공격강화\",\r\n  allyDmg: \"아군피해강화\",\r\n  brand: \"낙인력\",\r\n};\r\n\r\n// ─────────── 문자열 유틸 ───────────\r\nconst norm = (s) => String(s ?? \"\").trim();\r\nconst toHalf = (s) =>\r\n  norm(s).replace(/[\\uFF01-\\uFF5E]/g, (ch) =>\r\n    String.fromCharCode(ch.charCodeAt(0) - 0xFEE0)\r\n  );\r\n\r\nconst normalizeAscii = (s) =>\r\n  toHalf(s)\r\n    .replaceAll(\"I\", \"1\")\r\n    .replaceAll(\"l\", \"1\")\r\n    .replaceAll(\"i\", \"1\")\r\n    .replaceAll(\"S\", \"5\")\r\n    .replaceAll(\"B\", \"8\")\r\n    .replaceAll(\"O\", \"0\");\r\n\r\n// 공백/구분자 제거(한글 라벨 비교 전용)\r\nconst collapseKo = (s) =>\r\n  norm(s)\r\n    .replace(/\\s+/g, \"\")\r\n    .replace(/[·.\\-_/()[\\]|\\\\,:;'\"`~!?]/g, \"\");\r\n\r\n// ─────────── 라벨 문자열 보정 ───────────\r\nfunction fixKoLabel(raw) {\r\n  let t = norm(raw);\r\n\r\n  // 양끝의 괄호류 제거\r\n  t = t.replace(/^[[(]+/, \"\").replace(/[\\])]+$/, \"\");\r\n\r\n  // '군' → '아군' (선행어 없는 군을 보정)\r\n  t = t.replace(/(^|\\s)군(?=\\s*(공격|피해))/g, \"$1아군\");\r\n\r\n  // 스페이싱 표준화\r\n  t = t.replace(/공격\\s*강화/g, \"공격 강화\");\r\n  t = t.replace(/피해\\s*강화/g, \"피해 강화\");\r\n  t = t.replace(/추가\\s*피해/g, \"추가 피해\");\r\n  t = t.replace(/보스\\s*피해/g, \"보스 피해\");\r\n  t = t.replace(/공격\\s*력/g, \"공격력\");\r\n\r\n  // '낙인력' 깨짐 빠른 보정 (낙민력/낙임력/낙인려/낚인력/…)\r\n  const c0 = collapseKo(t);\r\n  if (\r\n    /낙[민인]력/.test(c0) ||\r\n    /낙.?인.?력/.test(c0) ||\r\n    /낚인력/.test(c0) ||\r\n    (c0.includes(\"인력\") && !c0.includes(\"공격력\"))\r\n  ) {\r\n    t = \"낙인력\";\r\n  }\r\n\r\n  return t;\r\n}\r\n\r\n// ─────────── 레벤슈타인 거리(간단) ───────────\r\nfunction lev(a, b) {\r\n  if (a === b) return 0;\r\n  const n = a.length, m = b.length;\r\n  if (n === 0) return m;\r\n  if (m === 0) return n;\r\n  const dp = Array.from({ length: n + 1 }, () => new Array(m + 1).fill(0));\r\n  for (let i = 0; i <= n; i++) dp[i][0] = i;\r\n  for (let j = 0; j <= m; j++) dp[0][j] = j;\r\n  for (let i = 1; i <= n; i++) {\r\n    for (let j = 1; j <= m; j++) {\r\n      const cost = a[i - 1] === b[j - 1] ? 0 : 1;\r\n      dp[i][j] = Math.min(\r\n        dp[i - 1][j] + 1, // 삭제\r\n        dp[i][j - 1] + 1, // 삽입\r\n        dp[i - 1][j - 1] + cost // 치환\r\n      );\r\n    }\r\n  }\r\n  return dp[n][m];\r\n}\r\n\r\n// ─────────── 라벨 퍼지 매칭 ───────────\r\nfunction fuzzyLabelKey(collapsed) {\r\n  // 0) 정확 일치\r\n  if (LABEL_MAP.has(collapsed)) return LABEL_MAP.get(collapsed);\r\n\r\n  // 1) 부분 포함\r\n  for (const [k, v] of LABEL_MAP.entries()) {\r\n    if (collapsed.includes(k)) return v;\r\n  }\r\n\r\n  // 2) '강화'가 빠진 경우도 허용\r\n  if (collapsed.includes(\"아군피해\")) return \"allyDmg\";\r\n  if (collapsed.includes(\"아군공격\")) return \"allyAtk\";\r\n\r\n  // 3) 낙인력 변형 정규식\r\n  if (/^낙[민인][려력]?$/.test(collapsed)) return \"brand\";\r\n\r\n  // 4) 레벤슈타인 거리로 퍼지 (편집거리 ≤ 2)\r\n  const candidates = Object.entries(CANON_LABELS).map(([key, canon]) => [\r\n    key,\r\n    collapseKo(canon),\r\n  ]);\r\n\r\n  let best = null;\r\n  for (const [key, canonC] of candidates) {\r\n    const d = lev(collapsed, canonC);\r\n    if (d <= 2 && (!best || d < best.d)) best = { key, d };\r\n  }\r\n  return best ? best.key : null;\r\n}\r\n\r\n// ─────────── 레벨 추론 (Lv 표식이 없어도 동작) ───────────\r\nfunction inferLevelFromTail(line) {\r\n  // 끝자리 한 자리 숫자(1~9)를 레벨로 사용.\r\n  // 중간의 '2%' 같은 숫자는 무시하고, 맨 끝만 본다.\r\n  const m = String(line).match(/([1-9])\\s*$/);\r\n  if (!m) return null;\r\n  const n = Number(m[1]);\r\n  return n >= 1 && n <= 9 ? n : null;\r\n}\r\n\r\nfunction stripTailGarbageBeforeLevel(line) {\r\n  // 맨 끝 레벨 직전의 쓰레기 토큰(예: '1.', '[\\.', '#.', '14.' 등)을 제거\r\n  // 예) \"공격력 1*. 4\" → \"공격력\"\r\n  //     \"보스 피해 14. 3\" → \"보스 피해\"\r\n  let s = norm(line);\r\n  // 레벨 숫자 제거 전, 숫자 앞의 잡음 토큰 제거 (문자클래스 대신 명시적 분기)\r\n  s = s.replace(\r\n    /(14\\.|1(?:#|\\*|\\[).?|(?:#|\\*|\\[|\\]|\\\\)\\.?|(?:#|\\*|\\[)\\.?)\\s*([1-9])\\s*$/i,\r\n    \"$2\"\r\n  );\r\n  // 이제 맨 끝 숫자까지 잘라내고 앞부분만 라벨로 사용\r\n  const m = s.match(/([1-9])\\s*$/);\r\n  if (!m) return s;\r\n  return s.slice(0, m.index).trim();\r\n}\r\n\r\n// ─────────── 오른쪽(라벨+레벨) 라인 파싱 ───────────\r\nfunction parseRightLines(rawRight) {\r\n  const lines = String(rawRight || \"\")\r\n    .split(/\\r?\\n/)\r\n    .map((x) => x.trim())\r\n    .filter(Boolean);\r\n\r\n  const out = [];\r\n  for (const line of lines) {\r\n    const lv = inferLevelFromTail(line);\r\n    if (!lv) continue;\r\n\r\n    const labelPart = fixKoLabel(stripTailGarbageBeforeLevel(line));\r\n    const c = collapseKo(labelPart);\r\n    const key = fuzzyLabelKey(c);\r\n    if (!key) continue;\r\n\r\n    out.push({ labelKey: key, level: lv, rawRight: line });\r\n  }\r\n  return out;\r\n}\r\n\r\n// ─────────── 왼쪽(숫자) 라인 파싱 ───────────\r\nfunction parseLeftNumbers(rawLeft) {\r\n  const lines = String(rawLeft || \"\")\r\n    .split(/\\r?\\n/)\r\n    .map((x) => x.trim())\r\n    .filter(Boolean);\r\n\r\n  const nums = [];\r\n  for (const line of lines) {\r\n    // 0) iE/lE/IE (전각/공백 포함 변형) → 5로 선보정\r\n    const raw = line.trim();\r\n    const koHalf = toHalf(raw).replace(/\\s+/g, \"\");\r\n    if (/^[ilI][eE]$/.test(koHalf)) {\r\n      nums.push({ will: 5, rawLeft: line });\r\n      continue;\r\n    }\r\n    // 1) 일반 숫자 매칭 (i, l, I → 1 등 ASCII 보정 적용)\r\n    const t = normalizeAscii(line);\r\n    const m = t.match(/[1-9]/);\r\n    if (m) {\r\n      nums.push({ will: Number(m[0]), rawLeft: line });\r\n      continue;\r\n    }\r\n    // 2) 한글 오인식: '는' → 5\r\n    if (raw === \"는\") {\r\n      nums.push({ will: 5, rawLeft: line });\r\n      continue;\r\n    }\r\n  }\r\n  return nums;\r\n}\r\n\r\n// ─────────── 최종 페어링 ───────────\r\nexport default function parseFromRaw(leftRaw, rightRaw) {\r\n  const rights = parseRightLines(rightRaw);\r\n  const lefts = parseLeftNumbers(leftRaw);\r\n  const n = Math.min(lefts.length, rights.length);\r\n  const out = [];\r\n  for (let i = 0; i < n; i++) {\r\n    out.push({\r\n      will: lefts[i].will,\r\n      labelKey: rights[i].labelKey,\r\n      level: rights[i].level,\r\n      rawLeft: lefts[i].rawLeft,\r\n      rawRight: rights[i].rawRight,\r\n    });\r\n  }\r\n\r\n  // 개수 안 맞으면 어떤 줄이 빠졌는지 로그 (디버깅용)\r\n  if (lefts.length !== rights.length) {\r\n    console.groupCollapsed(\r\n      `%c[Gem OCR] pairing diff left=${lefts.length} right=${rights.length}`,\r\n      \"color:#ef4444\"\r\n    );\r\n    const maxN = Math.max(lefts.length, rights.length);\r\n    for (let i = 0; i < maxN; i++) {\r\n      console.log(`#${String(i + 1).padStart(2, \"0\")}`, {\r\n        left: lefts[i]?.rawLeft ?? \"(missing)\",\r\n        right: rights[i]?.rawRight ?? \"(missing)\",\r\n      });\r\n    }\r\n    console.groupEnd();\r\n  }\r\n\r\n  return out;\r\n}\r\n","// src/components/ScanFromImageModal.jsx\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { X, ScanLine, Eraser, BoxSelect, Trash2, MinusCircle, ImageUp } from \"lucide-react\";\r\nimport parseFromRaw from \"../lib/ocrRescueFromRaw\";\r\n\r\n/** 2줄(홀수/짝수)을 1개 젬으로 묶기 */\r\nfunction pairParsedToGems(list = []) {\r\n  const out = [];\r\n  for (let i = 0; i < list.length; i += 2) {\r\n    const a = list[i];       // 홀수번째(0-based): will + 옵션1\r\n    const b = list[i + 1];   // 짝수번째: will = point, 옵션2\r\n    if (!a || !b) break;\r\n    out.push({\r\n      will: a.will,\r\n      point: b.will,\r\n      opt1: { label: a.labelKey, level: a.level, raw: a.rawRight },\r\n      opt2: { label: b.labelKey, level: b.level, raw: b.rawRight },\r\n      _raw: {\r\n        leftA: a.rawLeft, rightA: a.rawRight,\r\n        leftB: b.rawLeft, rightB: b.rawRight,\r\n      },\r\n    });\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * 이미지 업로드 + 수동 ROI & 제외 영역 지정 모달 (컨테이너 상대좌표 버전)\r\n * - 포함 ROI 1개, 제외영역 여러 개\r\n * - 오버레이는 모두 이미지 컨테이너 내부 absolute 좌표로 렌더 (스크롤/리사이즈 안정)\r\n * - 워커는 rawLeft/rawRight를 반환, parseFromRaw → parsed → pairParsedToGems → gems\r\n */\r\nexport default function ScanFromImageModal({ open, onClose, onScanned }) {\r\n  const [busy, setBusy] = useState(false);\r\n  const [progress, setProgress] = useState({ label: \"\", pct: 0, indeterminate: true });\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [imgURL, setImgURL] = useState(null);\r\n  const [imgNatural, setImgNatural] = useState({ w: 0, h: 0 });\r\n\r\n  // 포함 ROI (wrapRef 상대좌표)\r\n  const [rectRel, setRectRel] = useState(null); // {x,y,w,h}\r\n  // 제외 영역들 (wrapRef 상대좌표)\r\n  const [excludesRel, setExcludesRel] = useState([]); // [{id,x,y,w,h}]\r\n  // 제외 영역 드래그 임시 박스\r\n  const [tempExcludeRel, setTempExcludeRel] = useState(null);\r\n\r\n  // 드래그 상태\r\n  const [drag, setDrag] = useState(null); // {mode:'include'|'exclude', x0,y0,x1,y1} (wrap 기준)\r\n  const [mode, setMode] = useState(\"include\");\r\n\r\n  const wrapRef = useRef(null); // 이미지 컨테이너 (좌표 기준점)\r\n  const imgRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // 워커\r\n  const worker = useMemo(() => {\r\n    try {\r\n      return new Worker(new URL(\"../workers/gemScanner.worker.js\", import.meta.url), { type: \"module\" });\r\n    } catch {\r\n      return new Worker(new URL(\"../workers/gemScanner.worker.js\", import.meta.url));\r\n    }\r\n  }, []);\r\n\r\n  // 워커 메시지\r\n  useEffect(() => {\r\n    if (!worker) return;\r\n    const onMessage = (ev) => {\r\n      const { type, payload } = ev.data || {};\r\n      if (type === \"progress\") {\r\n        setProgress(payload);\r\n      } else if (type === \"done\") {\r\n        setBusy(false);\r\n        setProgress({ label: \"\", pct: 0, indeterminate: true });\r\n\r\n        // 1) joined (디버그)\r\n        console.groupCollapsed(\"%c[Gem OCR] ROI words (joined)\", \"color:#8b5cf6\");\r\n        console.log(payload?.joinedWords || \"(empty)\");\r\n        console.groupEnd();\r\n\r\n        // 2) raw left/right\r\n        console.groupCollapsed(\"%c[Gem OCR] Raw (left / right)\", \"color:#0ea5e9\");\r\n        console.log(\"rawLeft:\\n\" + (payload?.rawLeft || \"(empty)\"));\r\n        console.log(\"rawRight:\\n\" + (payload?.rawRight || \"(empty)\"));\r\n        console.groupEnd();\r\n\r\n        // 3) 파싱 → 페어링\r\n        const parsed = parseFromRaw(payload?.rawLeft || \"\", payload?.rawRight || \"\");\r\n        console.groupCollapsed(`%c[Gem OCR] Parsed (N + Label + Lv) ${parsed.length}`, \"color:#10b981\");\r\n        parsed.forEach((p, i) => {\r\n          console.log(\r\n            `#${i + 1}`,\r\n            `will=${p.will}`,\r\n            `label=${p.labelKey}`,\r\n            `Lv.${p.level}`,\r\n            { rawLeft: p.rawLeft, rawRight: p.rawRight }\r\n          );\r\n        });\r\n        console.groupEnd();\r\n\r\n        const gems = pairParsedToGems(parsed);\r\n        console.groupCollapsed(`%c[Gem OCR] Gems (paired) ${gems.length}`, \"color:#22c55e\");\r\n        gems.forEach((g, i) => {\r\n          console.log(\r\n            `Gem #${i + 1}`,\r\n            `will=${g.will}`,\r\n            `point=${g.point}`,\r\n            `opt1=${g.opt1.label}(Lv.${g.opt1.level})`,\r\n            `opt2=${g.opt2.label}(Lv.${g.opt2.level})`,\r\n            g._raw\r\n          );\r\n        });\r\n        console.groupEnd();\r\n\r\n        onScanned?.({ ...payload, parsed, gems });\r\n      } else if (type === \"error\") {\r\n        setBusy(false);\r\n        setProgress({ label: \"\", pct: 0, indeterminate: true });\r\n        console.error(\"[gem-scanner:error]\", payload?.message ?? payload, payload);\r\n        alert(\"이미지 스캔 중 오류가 발생했어요. 콘솔을 확인해 주세요.\");\r\n      }\r\n    };\r\n    worker.addEventListener(\"message\", onMessage);\r\n    return () => worker.removeEventListener(\"message\", onMessage);\r\n  }, [worker, onScanned]);\r\n\r\n  // 파일 선택 시 미리보기 URL\r\n  useEffect(() => {\r\n    if (!file) { setImgURL(null); return; }\r\n    const url = URL.createObjectURL(file);\r\n    setImgURL(url);\r\n    return () => URL.revokeObjectURL(url);\r\n  }, [file]);\r\n\r\n  // 이미지 로드 → 원본 크기 보관 & 기존 선택 초기화\r\n  const onImgLoad = (e) => {\r\n    const img = e.currentTarget;\r\n    setImgNatural({ w: img.naturalWidth, h: img.naturalHeight });\r\n    resetSelections();\r\n  };\r\n\r\n  const pickFile = () => inputRef.current?.click();\r\n\r\n  // 전체 선택 초기화\r\n  const resetSelections = () => {\r\n    setRectRel(null);\r\n    setExcludesRel([]);\r\n    setTempExcludeRel(null);\r\n    setDrag(null);\r\n  };\r\n\r\n  // 래퍼 기준 좌표 가져오기\r\n  const getRelPoint = (e) => {\r\n    const r = wrapRef.current?.getBoundingClientRect();\r\n    if (!r) return { x: 0, y: 0 };\r\n    const x = e.clientX - r.left;\r\n    const y = e.clientY - r.top;\r\n    return {\r\n      x: Math.max(0, Math.min(x, r.width)),\r\n      y: Math.max(0, Math.min(y, r.height)),\r\n    };\r\n  };\r\n\r\n  // 래퍼 상대 → 원본 해상도 사각형\r\n  const rectRelToNatural = (rel) => {\r\n    const r = wrapRef.current?.getBoundingClientRect();\r\n    if (!r || !r.width || !r.height || !imgNatural.w || !imgNatural.h) return null;\r\n    const sx = imgNatural.w / r.width;\r\n    const sy = imgNatural.h / r.height;\r\n    return {\r\n      x: Math.max(0, Math.round(rel.x * sx)),\r\n      y: Math.max(0, Math.round(rel.y * sy)),\r\n      w: Math.max(1, Math.round(rel.w * sx)),\r\n      h: Math.max(1, Math.round(rel.h * sy)),\r\n    };\r\n  };\r\n\r\n  const convertExcludesToNatural = (arr) =>\r\n    (arr || []).map(rectRelToNatural).filter(Boolean);\r\n\r\n  // 모드 전환 시 임시 박스 정리\r\n  useEffect(() => {\r\n    setTempExcludeRel(null);\r\n  }, [mode]);\r\n\r\n  // 드래그 시작/이동/끝 (wrap 기준)\r\n  const onMouseDown = (e) => {\r\n    if (e.button !== 0) return;\r\n    if (!wrapRef.current) return;\r\n    const p = getRelPoint(e);\r\n    const start = { mode, x0: p.x, y0: p.y, x1: p.x, y1: p.y };\r\n    setDrag(start);\r\n    if (mode === \"include\") {\r\n      setRectRel(null);\r\n    } else {\r\n      setTempExcludeRel(null);\r\n    }\r\n  };\r\n\r\n  const onMouseMove = (e) => {\r\n    if (!drag) return;\r\n    const p = getRelPoint(e);\r\n    const cur = { ...drag, x1: p.x, y1: p.y };\r\n    setDrag(cur);\r\n    const x = Math.min(cur.x0, cur.x1);\r\n    const y = Math.min(cur.y0, cur.y1);\r\n    const w = Math.abs(cur.x1 - cur.x0);\r\n    const h = Math.abs(cur.y1 - cur.y0);\r\n    if (drag.mode === \"include\") {\r\n      setRectRel({ x, y, w, h });\r\n    } else {\r\n      setTempExcludeRel(w > 0 && h > 0 ? { x, y, w, h } : null);\r\n    }\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    if (!drag) return;\r\n    const x = Math.min(drag.x0, drag.x1);\r\n    const y = Math.min(drag.y0, drag.y1);\r\n    const w = Math.abs(drag.x1 - drag.x0);\r\n    const h = Math.abs(drag.y1 - drag.y0);\r\n\r\n    if (drag.mode === \"exclude\") {\r\n      if (w > 2 && h > 2) {\r\n        setExcludesRel((prev) => [...prev, { id: Math.random().toString(36).slice(2), x, y, w, h }]);\r\n      }\r\n      setTempExcludeRel(null);\r\n    }\r\n    setDrag(null);\r\n  };\r\n\r\n  const removeExclude = (id) => setExcludesRel((prev) => prev.filter((r) => r.id !== id));\r\n\r\n  // OCR 실행\r\n  const runManual = () => {\r\n    if (!file) { alert(\"먼저 스크린샷을 선택해 주세요.\"); return; }\r\n    if (!rectRel) { alert(\"이미지 위에서 드래그로 포함 영역을 지정해 주세요.\"); return; }\r\n    const rect = rectRelToNatural(rectRel);\r\n    if (!rect) { alert(\"좌표 변환에 실패했습니다.\"); return; }\r\n\r\n    const excludes = convertExcludesToNatural(excludesRel);\r\n\r\n    setBusy(true);\r\n    setProgress({ label: \"스캔중...\", pct: 0, indeterminate: true });\r\n\r\n    file.arrayBuffer().then((buf) => {\r\n      worker.postMessage(\r\n        {\r\n          type: \"scan\",\r\n          payload: {\r\n            buf,\r\n            mime: file.type || \"image/png\",\r\n            lang: \"kor+eng\", // 필요시 \"kor\"로 변경 가능\r\n            rect,\r\n            excludes,\r\n          },\r\n        },\r\n        [buf]\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return createPortal(\r\n    <div className=\"fixed inset-0 z-[99999] bg-black/40 backdrop-blur-[1px] flex items-center justify-center p-4\">\r\n      <div className=\"w-auto min-w-6xl rounded-2xl bg-white border shadow-lg overflow-hidden\">\r\n        {/* 헤더 */}\r\n        <div className=\"flex items-center justify-between px-4 py-3 border-b\">\r\n          <div className=\"font-semibold\">이미지에서 젬 목록 스캔 (수동 ROI + 제외영역)</div>\r\n          <button\r\n            className=\"h-8 w-8 inline-flex items-center justify-center rounded-lg hover:bg-gray-100\"\r\n            onClick={onClose}\r\n            aria-label=\"닫기\"\r\n          >\r\n            <X size={18} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* 바디 */}\r\n        <div className=\"p-4 space-y-3\">\r\n          {/* 상단 컨트롤 */}\r\n          <div className=\"flex flex-wrap items-center gap-2\">\r\n            <button\r\n              className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n              onClick={pickFile}\r\n              disabled={busy}\r\n            >\r\n              <ImageUp size={18} />\r\n              <span>{file ? \"다른 이미지 선택\" : \"스크린샷 선택\"}</span>\r\n            </button>\r\n\r\n            <div className=\"flex items-center gap-2 ml-2 lg:ml-24\">\r\n              <span className=\"text-xs text-gray-600\">드래그 모드</span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setMode(\"include\")}\r\n                disabled={busy}\r\n                className={`h-10 px-3 rounded-xl border inline-flex items-center gap-2 ${mode === \"include\" ? \"bg-indigo-50 border-indigo-300\" : \"bg-white\"}`}\r\n                title=\"젬 리스트 영역 지정\"\r\n              >\r\n                <BoxSelect size={16} />\r\n                <span>젬 리스트 영역</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setMode(\"exclude\")}\r\n                disabled={busy}\r\n                className={`h-10 px-3 rounded-xl border inline-flex items-center gap-2 ${mode === \"exclude\" ? \"bg-rose-50 border-rose-300\" : \"bg-white\"}`}\r\n                title=\"제외 영역 지정\"\r\n              >\r\n                <Eraser size={16} />\r\n                <span>제외 영역</span>\r\n              </button>\r\n            </div>\r\n\r\n\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {/* 선택영역 초기화 */}\r\n              <button\r\n                type=\"button\"\r\n                onClick={resetSelections}\r\n                disabled={busy || (!rectRel && excludesRel.length === 0)}\r\n                className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n                title=\"포함/제외 영역 모두 초기화\"\r\n              >\r\n                <Trash2 size={16} />\r\n                <span>선택 영역 초기화</span>\r\n              </button>\r\n              <button\r\n                className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n                onClick={runManual}\r\n                disabled={!file || !rectRel || busy}\r\n                title=\"선택 영역 스캔\"\r\n              >\r\n                <ScanLine size={18} />\r\n                <span>선택 영역 스캔</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 파일 input */}\r\n          <input\r\n            ref={inputRef}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            className=\"hidden\"\r\n            onChange={(e) => setFile(e.target.files?.[0] || null)}\r\n          />\r\n\r\n          {/* 미리보기 + 오버레이 */}\r\n          {imgURL ? (\r\n            <div className=\"relative border overflow-hidden max-h-[80vh] bg-gray-50\">\r\n              <div\r\n                ref={wrapRef}\r\n                className=\"relative inline-block\"\r\n                onMouseDown={onMouseDown}\r\n                onMouseMove={onMouseMove}\r\n                onMouseUp={onMouseUp}\r\n                onDragStart={(e) => e.preventDefault()}\r\n                style={{ cursor: \"crosshair\" }}\r\n              >\r\n                <img\r\n                  ref={imgRef}\r\n                  src={imgURL}\r\n                  alt=\"preview\"\r\n                  className=\"block max-h-[80vh] w-auto select-none\"\r\n                  onLoad={onImgLoad}\r\n                  draggable={false}\r\n                />\r\n\r\n                {/* 포함 ROI 표시 */}\r\n                {rectRel && (\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      left: rectRel.x,\r\n                      top: rectRel.y,\r\n                      width: rectRel.w,\r\n                      height: rectRel.h,\r\n                      border: \"1px solid #6366f1\",\r\n                      background: \"rgba(99,102,241,0.18)\",\r\n                      pointerEvents: \"none\",\r\n                      zIndex: 5,\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                {/* 제외 영역들 */}\r\n                {excludesRel.map((r) => (\r\n                  <div\r\n                    key={r.id}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      left: r.x,\r\n                      top: r.y,\r\n                      width: r.w,\r\n                      height: r.h,\r\n                      border: \"1px dashed #ef4444\",\r\n                      background: \"rgba(239,68,68,0.18)\",\r\n                      pointerEvents: \"none\",\r\n                      zIndex: 6,\r\n                    }}\r\n                  >\r\n                    <div style={{ position: \"absolute\", right: -12, top: -12, pointerEvents: \"auto\" }}>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={(e) => { e.stopPropagation(); removeExclude(r.id); }}\r\n                        className=\"h-6 w-6 rounded-full bg-white border shadow flex items-center justify-center\"\r\n                        title=\"이 제외영역 삭제\"\r\n                      >\r\n                        <MinusCircle size={16} className=\"text-rose-600\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                {/* 제외 영역 드래그 임시 미리보기 */}\r\n                {tempExcludeRel && (\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      left: tempExcludeRel.x,\r\n                      top: tempExcludeRel.y,\r\n                      width: tempExcludeRel.w,\r\n                      height: tempExcludeRel.h,\r\n                      border: \"1px dashed rgba(239,68,68,0.8)\",\r\n                      background: \"rgba(239,68,68,0.12)\",\r\n                      pointerEvents: \"none\",\r\n                      zIndex: 6,\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                {/* 진행중 오버레이 (absolute) */}\r\n                {busy && (\r\n                  <div className=\"absolute inset-0 z-10 bg-black/30 backdrop-blur-[1px] flex items-center justify-center\">\r\n                    <div className=\"w-[320px] rounded-xl bg-white/95 border shadow p-3\">\r\n                      <div className=\"text-xs font-medium text-gray-800 mb-1\">\r\n                        {progress.label || \"스캔중 중…\"}\r\n                      </div>\r\n                      <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n                        {progress.indeterminate ? (\r\n                          <div className=\"absolute inset-0\">\r\n                            <div className=\"h-full w-1/3 bg-[#a399f2] animate-[marquee_1.1s_linear_infinite] rounded-full\" />\r\n                          </div>\r\n                        ) : (\r\n                          <div\r\n                            className=\"h-full bg-[#a399f2] transition-[width] duration-150\"\r\n                            style={{ width: `${progress.pct ?? 0}%` }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <style>{`@keyframes marquee { 0%{transform:translateX(-100%)} 100%{transform:translateX(300%)} }`}</style>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"border rounded-xl p-4 text-sm text-gray-600 bg-gray-50 text-center\">\r\n              스크린샷을 선택한 뒤, 이미지에서 드래그로 <b>젬 리스트 영역</b>을 지정하세요.<br />\r\n              (젬 아이콘은 제외하고, <b>의지력·포인트 숫자가 시작되는 지점부터</b> 넉넉히 잡아주세요.)<br />\r\n              그다음 <b>제외 영역</b>을 선택해 <b>의지력·포인트 아이콘</b> 부분을 빼주세요.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n}\r\n","// src/lib/optimizerCore.js\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nexport const CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nexport const CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nexport const CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nexport const GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nexport const OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nexport const OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nexport const ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\n\r\n/** 딜러 프리셋(가중치; 배율) */\r\nexport const DEALER_WEIGHTS = {\r\n  boss: 1,\r\n  add: 1,\r\n  atk: 1,\r\n  brand: 0,\r\n  allyDmg: 0,\r\n  allyAtk: 0,\r\n};\r\n/** 기본 가중치는 = 딜러 프리셋 */\r\nexport const DEFAULT_WEIGHTS = { ...DEALER_WEIGHTS };\r\n\r\n/** 딜러: 옵션 레벨 → 퍼센트 커브 */\r\nexport const DEALER_LEVEL_CURVES = {\r\n  // key 는 OPTIONS 의 실제 키와 일치해야 합니다.\r\n  boss: [0, 0.078, 0.156, 0.244, 0.313, 0.391], // 보스 피해\r\n  add:  [0, 0.060, 0.119, 0.187, 0.239, 0.299], // 추가 피해\r\n  atk:  [0, 0.029, 0.067, 0.105, 0.134, 0.172], // 공격력\r\n};\r\n\r\n/** 서포터: 옵션 레벨 → 유효율(커브) */\r\nexport const SUPPORT_LEVEL_CURVES = {\r\n  // 낙인력\r\n  brand:   [0, 0.167, 0.334, 0.501, 0.668, 0.835],\r\n  // 아군 공격 강화\r\n  allyAtk: [0, 0.130, 0.260, 0.390, 0.520, 0.650],\r\n  // 아군 피해 강화\r\n  allyDmg: [0, 0.052, 0.104, 0.156, 0.208, 0.260],\r\n};\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nexport function roleAllowsKey(role, key) {\r\n  const allow = ROLE_KEYS?.[role];\r\n  if (!allow) return true;                               // 미정의면 모두 허용\r\n  if (Array.isArray(allow)) return allow.includes(key);  // 배열\r\n  if (allow && typeof allow.has === 'function') return allow.has(key); // Set\r\n  if (allow && typeof allow === 'object') return !!allow[key]; // { atk:true } 객체\r\n  return true;\r\n}\r\n\r\nexport function sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\n\r\nexport function levelValueByRole(role, key, lvl) {\r\n  const L = Math.max(0, Math.min(5, Number(lvl) || 0));\r\n\r\n  // 딜러: 사전 정의된 퍼센트 커브\r\n  if (role === 'dealer' && DEALER_LEVEL_CURVES[key]) {\r\n    return DEALER_LEVEL_CURVES[key][L] || 0;\r\n  }\r\n\r\n  // 서포터: 사전 정의된 유효율 커브\r\n  if (role === 'support' && SUPPORT_LEVEL_CURVES[key]) {\r\n    return SUPPORT_LEVEL_CURVES[key][L] || 0;\r\n  }\r\n\r\n  // 그 외: 선형(레벨 숫자 그대로)\r\n  return L;\r\n}\r\n\r\nexport function scoreGemForRole(gem, role, weights) {\r\n  const w = sanitizeWeights(weights || {});\r\n  let sum = 0;\r\n\r\n  const add = (key, lvl) => {\r\n    if (!key || !lvl) return;\r\n    if (role && !roleAllowsKey(role, key)) return;\r\n\r\n    const basePct = levelValueByRole(role, key, lvl); // 레벨→퍼센트(커브/선형)\r\n    const scale   = w[key] ?? 0;                      // 가중치(배율)\r\n    sum += basePct * scale;\r\n  };\r\n\r\n  add(gem.o1k, gem.o1v);\r\n  add(gem.o2k, gem.o2v);\r\n\r\n  // 퍼센트 값으로 반환 (상위 UI에서 toFixed(4) + '%' 처리)\r\n  return sum;\r\n}\r\n\r\nexport function* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1;\r\n    while (p >= 0 && idx[p] === n - k + p) p--;\r\n    if (p < 0) break;\r\n    idx[p]++;\r\n    for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\n\r\nexport function thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\n\r\nexport function scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000)\r\n    + (totalPoint * 10_000)\r\n    + ((5_000 - totalWill) * 10)\r\n    + roleSum\r\n    - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nexport function enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin, onStep) {\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) {\r\n      all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 });\r\n      continue;\r\n    }\r\n    for (const combo of combinations(pool, k)) {\r\n      onStep && onStep(1);\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n\r\n  all.sort((a, b) => b.score - a.score);\r\n\r\n  // UI 정책에 맞춘 필터링\r\n  let filtered;\r\n\r\n  if (enforceMin) {\r\n    // '이상 탐색' 모드 (체크박스 ON)\r\n    const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n    const effMin = minThreshold ?? minOfGrade; // 목표가 없으면 등급 최소치\r\n    filtered = all.filter(ci =>\r\n      ci.totalPoint >= effMin && ci.thr.length > 0 && ci.list.length > 0\r\n    );\r\n  } else {\r\n    // '정확히 일치' 모드 (체크박스 OFF, 기본)\r\n    if (minThreshold != null) {\r\n      filtered = all.filter(ci =>\r\n        ci.totalPoint === minThreshold && ci.list.length > 0\r\n      );\r\n    } else {\r\n      // 목표 없음: 달성 구간 있는 케이스만\r\n      filtered = all.filter(ci => ci.thr.length > 0 && ci.list.length > 0);\r\n    }\r\n  }\r\n\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n\r\n  return filtered;\r\n}\r\n","/**\r\n * LoACoreOptimizer.jsx\r\n *\r\n * 재구성(리팩터링된 파일 배치 & 계층 주석) 버전.\r\n * - 실행 로직/동작 동일 유지 (함수/값, 상태, JSX 구조, 훅 호출 순서에 의존하는 부분 불변).\r\n * - 기존 주석은 모두 제거했고, 가독성을 위한 섹션/행동 중심의 주석을 새로 정리하여 추가함.\r\n * - \"재그룹/재배치\"는 선언의 물리적 위치만 정렬(의존성 방향상 안전한 순서)했을 뿐, 코드 의미를 바꾸지 않음.\r\n *\r\n * 섹션 구성\r\n *  A. 외부/내부 모듈 임포트\r\n *  B. 도메인/뷰 공통 상수 및 매핑\r\n *  C. 직업-코어 프리셋/효과 유틸\r\n *  D. 공용 유틸(로컬스토리지, UID, 외부 클릭 등)\r\n *  E. DnD 포털용 Draggable 래퍼\r\n *  F. UI 프리미티브(드롭다운, 토스트, 숫자입력)\r\n *  G. 프리셋 설명 툴팁(CoreEffectInfo)\r\n *  H. 메인 컴포넌트(LoACoreOptimizer) + QuickAddPad(내부)\r\n */\r\n\r\nimport React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { flushSync } from \"react-dom\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, ChevronUp, ChevronDown, Info, Download, Upload, Image } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport { useOptimizer } from '../hooks/useOptimizer';\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport ScanFromImageModal from \"./ScanFromImageModal.jsx\";\r\nimport './LoACoreOptimizer.css';\r\n\r\nimport {\r\n  CORE_SUPPLY,\r\n  CORE_THRESHOLDS,\r\n  CORE_LABEL,\r\n  GRADES,\r\n  OPTION_LABELS,\r\n  OPTIONS,\r\n  DEFAULT_WEIGHTS,\r\n  DEALER_WEIGHTS,\r\n  ROLE_KEYS,\r\n  sanitizeWeights,\r\n  scoreGemForRole,\r\n  levelValueByRole,\r\n} from '../lib/optimizerCore.js';\r\nimport ARC_CORES from \"../data/arc_cores_select.json\";\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * B. 도메인/뷰 공통 상수 및 매핑\r\n *    - 화면 공통 라벨/세트, 로컬스토리지 키, 직업/코어 그룹 매핑 등\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n\r\nconst CATEGORY_LABEL = { order: \"질서\", chaos: \"혼돈\" };\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\";\r\n\r\nconst JOBS = ARC_CORES?.jobs ?? [];\r\nconst CORE_NAME_BY_GROUP = { \"해\": \"해 코어\", \"달\": \"달 코어\", \"별\": \"별 코어\" };\r\nconst GROUP_BY_CORE_NAME = { \"해 코어\": \"해\", \"달 코어\": \"달\", \"별 코어\": \"별\" };\r\n\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\n\r\nconst TARGET_MAX_BY_GRADE = {\r\n  HERO: 10,\r\n  LEGEND: 14,\r\n  RELIC: 19,\r\n  ANCIENT: 20,\r\n};\r\n\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * C. 직업-코어 프리셋/효과 유틸\r\n *    - 직업별 허용 코어, 프리셋 목록, 효과 정규화/조회\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction getAllowedCoreNameSet(job) {\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const groups = new Set(entries.map(e => e[\"그룹\"]));\r\n  const names = new Set(\r\n    Array.from(groups).map(g => CORE_NAME_BY_GROUP[g]).filter(Boolean)\r\n  );\r\n  return names;\r\n}\r\n\r\nfunction getPresetItems(job, groupKey) {\r\n  if (!job || !groupKey) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  return entries\r\n    .filter(e => e[\"그룹\"] === groupKey)\r\n    .map(e => ({ value: e[\"코어\"], label: e[\"코어\"] }));\r\n}\r\n\r\nfunction normalizeEffects(raw) {\r\n  if (!raw) return [];\r\n  let arr = [];\r\n\r\n  if (Array.isArray(raw)) {\r\n    arr = raw.flatMap((item) => {\r\n      if (!item) return [];\r\n      if (typeof item === \"string\") {\r\n        const m = item.match(/(\\d+)\\s*P?/i);\r\n        const p = m ? Number(m[1]) : null;\r\n        return p ? [{ point: p, text: item.replace(/^.*?:\\s*/, \"\").trim() || item.trim() }] : [];\r\n      }\r\n      if (typeof item === \"object\") {\r\n        let p = item.point ?? item.P ?? item.포인트 ?? null;\r\n        if (typeof p === \"string\") p = parseInt(p.replace(/\\D/g, \"\"), 10);\r\n        const t = item.text ?? item.desc ?? item.효과 ?? item.value ?? \"\";\r\n        return Number.isFinite(p) ? [{ point: Number(p), text: String(t) }] : [];\r\n      }\r\n      return [];\r\n    });\r\n  } else if (typeof raw === \"object\") {\r\n    arr = Object.entries(raw).map(([k, v]) => {\r\n      const p = parseInt(String(k).replace(/\\D/g, \"\"), 10);\r\n      return { point: p, text: String(v) };\r\n    });\r\n  } else if (typeof raw === \"string\") {\r\n    arr = raw.split(/\\r?\\n/).flatMap((line) => {\r\n      const m = line.match(/(\\d+)\\s*P?/i);\r\n      const p = m ? Number(m[1]) : null;\r\n      return p ? [{ point: p, text: line.replace(/^.*?:\\s*/, \"\").trim() || line.trim() }] : [];\r\n    });\r\n  }\r\n\r\n  return arr\r\n    .filter((x) => Number.isFinite(x.point) && x.text)\r\n    .sort((a, b) => a.point - b.point);\r\n}\r\n\r\nfunction getEffectsForPreset(job, groupKey, preset) {\r\n  if (!job || !groupKey || !preset) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const row = entries.find((e) => e[\"그룹\"] === groupKey && e[\"코어\"] === preset);\r\n  return normalizeEffects(row?.[\"효과\"]);\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * D. 공용 유틸\r\n *    - UID 생성, 역할별 가중치 마스킹, 로컬스토리지 I/O, 다음 코어명 탐색, 외부클릭\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\n\r\n// 딜러: 0.123%  /  서포터: 0.123  (둘 다 소수 3자리)\r\nfunction fmtByRole(role, v) {\r\n  const n = Number(v);\r\n  if (!Number.isFinite(n)) return String(v);\r\n  return role === 'dealer' ? `${n.toFixed(3)}%` : n.toFixed(3);\r\n}\r\n\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => { next[k] = 0; });\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => { next[k] = 1; });\r\n  return next;\r\n}\r\n\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    [refs]\r\n  );\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * E. Portal-aware Draggable 래퍼\r\n *    - 드래그 시 body 포털로 이동시켜 클리핑/레이어 문제 방지\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\n\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * F. UI 프리미티브\r\n *    1) Dropdown: 키보드 접근성/포털 메뉴/ARIA 적용\r\n *    2) ToastStack + useToasts: 간단 토스트 큐\r\n *    3) NumberInput: 숫자 입력 공통(클램프/포맷/휠 방지)\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction Dropdown({ value, items, onChange, placeholder, className, bordered = true }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [focusedIndex, setFocusedIndex] = useState(-1);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const itemRefs = useRef([]);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  const listboxId = useRef(`dd-list-${Math.random().toString(36).slice(2)}`).current;\r\n\r\n  const initFocusIndex = useCallback(() => {\r\n    const sel = items.findIndex(i => i.value === value && !i.disabled);\r\n    if (sel >= 0) return sel;\r\n    const firstEnabled = items.findIndex(i => !i.disabled);\r\n    return firstEnabled >= 0 ? firstEnabled : -1;\r\n  }, [items, value]);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick(v => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick(v => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    setFocusedIndex(initFocusIndex());\r\n    const t = requestAnimationFrame(() => {\r\n      const el = itemRefs.current[initFocusIndex()];\r\n      (el ?? menuRef.current)?.focus?.();\r\n    });\r\n    return () => cancelAnimationFrame(t);\r\n  }, [open, initFocusIndex]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const getNextEnabled = (start, dir) => {\r\n    const n = items.length;\r\n    if (n === 0) return -1;\r\n    let i = start;\r\n    for (let step = 0; step < n; step++) {\r\n      i = (i + dir + n) % n;\r\n      if (!items[i].disabled) return i;\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  const onButtonKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const willOpen = !open;\r\n      if (willOpen) {\r\n        setOpen(true);\r\n      } else {\r\n        const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n        const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n        if (next >= 0) setFocusedIndex(next);\r\n      }\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      setOpen(v => !v);\r\n    }\r\n  };\r\n\r\n  const onMenuKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n      const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n      if (next >= 0) setFocusedIndex(next);\r\n    } else if (e.key === \"Home\") {\r\n      e.preventDefault();\r\n      const first = items.findIndex(i => !i.disabled);\r\n      if (first >= 0) setFocusedIndex(first);\r\n    } else if (e.key === \"End\") {\r\n      e.preventDefault();\r\n      let last = -1;\r\n      for (let i = items.length - 1; i >= 0; i--) {\r\n        if (!items[i].disabled) { last = i; break; }\r\n      }\r\n      if (last >= 0) setFocusedIndex(last);\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      const it = items[focusedIndex];\r\n      if (it && !it.disabled) {\r\n        onChange(it.value);\r\n        setOpen(false);\r\n        requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n      requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n    } else if (e.key === \"Tab\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const onItemMouseEnter = (i) => setFocusedIndex(i);\r\n\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        role=\"listbox\"\r\n        id={listboxId}\r\n        tabIndex={-1}\r\n        aria-activedescendant={focusedIndex >= 0 ? `${listboxId}-opt-${focusedIndex}` : undefined}\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n        onKeyDown={onMenuKeyDown}\r\n      >\r\n        {items.map((it, i) => {\r\n          const isSelected = it.value === value;\r\n          const isActive = i === focusedIndex;\r\n          return (\r\n            <li key={String(it.value)}>\r\n              <button\r\n                ref={(el) => (itemRefs.current[i] = el)}\r\n                id={`${listboxId}-opt-${i}`}\r\n                type=\"button\"\r\n                role=\"option\"\r\n                aria-selected={isSelected}\r\n                onMouseEnter={() => onItemMouseEnter(i)}\r\n                onClick={() => {\r\n                  if (it.disabled) return;\r\n                  onChange(it.value);\r\n                  setOpen(false);\r\n                  requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n                }}\r\n                aria-disabled={it.disabled ? true : undefined}\r\n                className={`w-full text-left px-3 py-2 text-sm\r\n                  ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"}\r\n                  ${isSelected ? \"bg-gray-100\" : \"\"}\r\n                  ${isActive ? \"outline-none ring-2 ring-[#a399f2]/40\" : \"\"}\r\n                `}\r\n              >\r\n                <span className=\"block truncate\">{it.label}</span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={open}\r\n        aria-controls={open ? listboxId : undefined}\r\n        onKeyDown={onButtonKeyDown}\r\n        onClick={() => setOpen(v => !v)}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value, onChange, min, max, step = 1, allowFloat = false, zeroOnBlur = true, className = \"\", inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num));\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * G. 프리셋 효과 툴팁\r\n *    - 선택한 직업/그룹/프리셋 기준으로 등급 제한 내 효과를 미리보기\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction CoreEffectInfo({ job, groupKey, preset, grade, category, coreName, supply }) {\r\n  const [open, setOpen] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  const effects = getEffectsForPreset(job, groupKey, preset);\r\n  const maxP = TARGET_MAX_BY_GRADE[grade] ?? 999;\r\n  const list = effects.filter((e) => e.point <= maxP);\r\n\r\n  const coreShort =\r\n    GROUP_BY_CORE_NAME[coreName] ??\r\n    coreName.replace(/\\s*코어$/, \"\");\r\n\r\n  const LABEL_CLS = \"text-[12px] text-gray-500 mb-1 text-indigo-400\";\r\n\r\n  const isAncient =\r\n    (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") || String(grade).toLowerCase() === \"ancient\";\r\n\r\n  const gradeColorCls =\r\n    String(grade).toUpperCase() === \"HERO\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"영웅\") ? \"text-fuchsia-500\" :\r\n      String(grade).toUpperCase() === \"LEGEND\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"전설\") ? \"text-amber-500\" :\r\n        String(grade).toUpperCase() === \"RELIC\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"유물\") ? \"text-orange-700\" :\r\n          String(grade).toUpperCase() === \"ANCIENT\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") ? \"text-[#d3bd8b]\" :\r\n            \"text-gray-800\";\r\n\r\n  const pickSlashValueByGrade = (text) => {\r\n    const pickRight = isAncient;\r\n\r\n    let out = text.replace(\r\n      /(\\d+(?:\\.\\d+)?)%\\s*\\/\\s*(\\d+(?:\\.\\d+)?)%/g,\r\n      (_, a, b) => (pickRight ? b : a) + \"%\"\r\n    );\r\n\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(%)/g,\r\n      (_, a, b, pct) => (pickRight ? b : a) + pct\r\n    );\r\n\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(?!\\s*[%\\d])/g,\r\n      (_, a, b) => (pickRight ? b : a)\r\n    );\r\n\r\n    return out;\r\n  };\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      className=\"relative inline-flex items-center align-top ml-1 cursor-pointer\"\r\n      onMouseEnter={() => setOpen(true)}\r\n      onMouseLeave={() => setOpen(false)}\r\n      onFocus={() => setOpen(true)}\r\n      onBlur={() => setOpen(false)}\r\n    >\r\n      <Info size={16} aria-hidden=\"true\" color=\"#a399f2\" />\r\n\r\n      <AnimatePresence>\r\n        {open && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -4 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -4 }}\r\n            transition={{ duration: 0.12 }}\r\n            className=\"absolute z-[999999] mt-2 left-1/2 -translate-x-1/2 w-[400px] rounded-xl border bg-white shadow-lg p-3 text-xs\"\r\n            role=\"tooltip\"\r\n          >\r\n            <div className=\"text-[13px] font-semibold mb-2\">\r\n              <div>{CATEGORY_LABEL[category]}의 {coreName} : {preset}</div>\r\n              <div className={`text-[12px] font-medium ${gradeColorCls}`}>{CORE_LABEL[grade]} 아크 그리드 코어</div>\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 타입</div>\r\n              <div className=\"text-[12px] font-medium\">\r\n                <span>{CATEGORY_LABEL[category]}</span>\r\n                <span className=\"mx-1\">–</span>\r\n                <span>{coreShort}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 공급 의지력</div>\r\n              <div className=\"text-[12px] font-medium\">{String(supply)} 포인트</div>\r\n            </div>\r\n\r\n            <div className={LABEL_CLS}>코어 옵션</div>\r\n            {list.length === 0 ? (\r\n              <div className=\"text-gray-500\">옵션 정보가 없습니다.</div>\r\n            ) : (\r\n              <ul className=\"mt-1 space-y-1\">\r\n                {list.map((e) => {\r\n                  const text = e.point === 17 ? pickSlashValueByGrade(e.text) : e.text;\r\n                  return (\r\n                    <li\r\n                      key={e.point}\r\n                      className=\"grid grid-cols-[32px_1fr] gap-x-1 items-start min-w-0\"\r\n                    >\r\n                      <span className=\"w-[32px] shrink-0 text-amber-500 font-semibold\">\r\n                        [{e.point}P]\r\n                      </span>\r\n                      <span className=\"text-gray-800 break-words min-w-0\">\r\n                        {text}\r\n                      </span>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </span>\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * H. 메인 컴포넌트\r\n *    - 상태/로직/뷰 그대로 유지\r\n *    - 내부에 QuickAddPad 폼 컴포넌트 포함\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n\r\n  const [category, setCategory] = useState(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n\r\n  const [role, setRole] = useState(() => loadFromStorage()?.role ?? \"dealer\");\r\n  const [weights, setWeights] = useState(() => {\r\n    const saved = loadFromStorage();\r\n    const w = saved?.weights;\r\n    if (w && typeof w === \"object\") {\r\n      const vals = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"].map(k => Number(w[k]));\r\n      const allOnes = vals.every(v => v === 1);\r\n      // 과거 기본값(전부 1)만 저장돼 있고 역할 정보가 없거나 딜러로 추정되면 → 딜러 프리셋으로 이행\r\n      if (allOnes && (!saved?.role || saved.role === \"dealer\")) {\r\n        return { ...DEALER_WEIGHTS };\r\n      }\r\n      return sanitizeWeights(w);\r\n    }\r\n    // 저장된 게 없으면 딜러 프리셋으로 시작\r\n    return { ...DEALER_WEIGHTS };\r\n  });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  const [quickAddMode, setQuickAddMode] = useState(false);\r\n  const [scanOpen, setScanOpen] = useState(false);\r\n  const [dataVersion, setDataVersion] = useState(0);\r\n\r\n  const [stale, setStale] = useState(false);\r\n  const didMountRef = useRef(false);\r\n\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n\r\n  const { isComputing, progress, results, calculate, hasCalculated } = useOptimizer(cores, gems, role, weights);\r\n\r\n  const [selectedJob, setSelectedJob] = useState(() => (loadFromStorage()?.selectedJob ?? \"\"));\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const buildSnapshot = useCallback(() => ({\r\n    app: \"LoA-CoreOptimizer\",\r\n    version: 2,\r\n    exportedAt: new Date().toISOString(),\r\n    category,\r\n    coresByCat,\r\n    gemsByCat,\r\n    role,\r\n    weights: sanitizeWeights(weights),\r\n    selectedJob,\r\n  }), [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  const handleExportJson = useCallback(() => {\r\n    try {\r\n      const data = buildSnapshot();\r\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: \"application/json\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const d = new Date();\r\n      const stamp = `${d.getFullYear()}${String(d.getMonth() + 1).padStart(2, \"0\")}${String(d.getDate()).padStart(2, \"0\")}${String(d.getHours()).padStart(2, \"0\")}${String(d.getMinutes()).padStart(2, \"0\")}`;\r\n\r\n      // 직업명이 있을 때만 파일명에 추가 (불가 문자는 제거)\r\n      const jobPart =\r\n        selectedJob && selectedJob.trim()\r\n          ? `_${selectedJob.trim().replace(/[\\\\/:*?\"<>|]+/g, \"\")}`\r\n          : \"\";\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `아크그리드${jobPart}_${stamp}.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n      push(\"JSON 파일로 내보냈습니다.\");\r\n    } catch (e) {\r\n      console.error(e);\r\n      push(\"내보내기 중 오류가 발생했어요.\");\r\n    }\r\n  }, [buildSnapshot, push, selectedJob]);\r\n\r\n  const handleImportClick = useCallback(() => {\r\n    fileInputRef.current?.click();\r\n  }, []);\r\n\r\n  const handleImportFile = useCallback((e) => {\r\n    const file = e.target.files?.[0];\r\n    e.target.value = \"\";\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      try {\r\n        const json = JSON.parse(String(reader.result));\r\n        if (!json || typeof json !== \"object\") throw new Error(\"invalid\");\r\n        if (!json.coresByCat || !json.gemsByCat) throw new Error(\"missing fields\");\r\n        flushSync(() => {\r\n          setCoresByCat(json.coresByCat);\r\n          setGemsByCat(json.gemsByCat);\r\n          setCategory(json.category === \"chaos\" ? \"chaos\" : \"order\");\r\n          setRole(json.role === \"dealer\" || json.role === \"support\" ? json.role : null);\r\n          setWeights(() => {\r\n            const r = json.role === \"support\" ? \"support\" : \"dealer\";\r\n            return r === \"dealer\" ? { ...DEALER_WEIGHTS } : maskWeightsForRole(DEFAULT_WEIGHTS, \"support\");\r\n          });\r\n          setSelectedJob(typeof json.selectedJob === \"string\" ? json.selectedJob : \"\");\r\n          setHighlightCoreId(null);\r\n          setHighlightGemId(null);\r\n          setQuickAddMode(false);\r\n          setStale(true);\r\n        });\r\n        setDataVersion(v => v + 1);\r\n        push(\"JSON 데이터를 불러왔습니다.\");\r\n      } catch (err) {\r\n        console.error(err);\r\n        push(\"가져오기 실패: JSON 형식이 올바르지 않아요.\");\r\n      }\r\n    };\r\n    reader.onerror = () => push(\"가져오기 실패: 파일을 읽을 수 없어요.\");\r\n    reader.readAsText(file);\r\n  }, [push, setCoresByCat, setGemsByCat, setCategory, setRole, setWeights, setSelectedJob]);\r\n\r\n  useEffect(() => {\r\n    if (results && results.length > 0) {\r\n      setStale(false);\r\n    }\r\n  }, [results]);\r\n\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n// 1) setGems를 useCallback으로 감싸서 참조를 안정화\r\nconst setGems = useCallback((updater) => {\r\n  setGemsByCat((prev) => {\r\n    const base = prev[category] ?? []; // 안전하게 기본값\r\n    const next =\r\n      typeof updater === \"function\" ? updater(base) : updater;\r\n    setStale(true); // 여기서만 호출하면 handleScanned 말미의 중복 호출은 제거 가능\r\n    return { ...prev, [category]: next };\r\n  });\r\n}, [setGemsByCat, category, setStale]);\r\n\r\n// 2) mapScannedGemToItem도 안정화(선택이지만 권장)\r\nconst mapScannedGemToItem = useCallback((g) => ({\r\n  id: uid(),\r\n  will: Number.isFinite(g?.will) ? g.will : null,\r\n  point: Number.isFinite(g?.point) ? g.point : null,\r\n  o1k: g?.opt1?.label ?? \"atk\",\r\n  o1v: Number.isFinite(g?.opt1?.level) ? g.opt1.level : 1,\r\n  o2k: g?.opt2?.label ?? \"add\",\r\n  o2v: Number.isFinite(g?.opt2?.level) ? g.opt2.level : 1,\r\n}), []);\r\n\r\n// 3) handleScanned deps에 안정화된 것들을 넣기\r\nconst handleScanned = useCallback((payload) => {\r\n  setScanOpen(false);\r\n  console.log(\"[ScanFromImageModal:onScanned]\", payload);\r\n\r\n  const scanned = Array.isArray(payload?.gems) ? payload.gems : [];\r\n  if (scanned.length === 0) {\r\n    push(\"스캔 결과가 비어 있어요.\");\r\n    return;\r\n  }\r\n\r\n  const items = scanned.map(mapScannedGemToItem);\r\n\r\n  setGems((prev) => {\r\n    const next = [...prev, ...items]; // 뒤에 추가\r\n    return next;\r\n  });\r\n\r\n  const lastId = items[items.length - 1]?.id;\r\n  if (lastId) setHighlightGemId(lastId);\r\n\r\n  push(`${items.length}개의 젬을 목록에 추가했습니다.`);\r\n\r\n  // setStale(true); // ← setGems 내부에서 이미 호출하므로 중복이면 제거 권장\r\n}, [push, setScanOpen, setHighlightGemId, setGems, mapScannedGemToItem]);\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) { didMountRef.current = true; return; }\r\n    setStale(true);\r\n  }, [role, weights, category]);\r\n\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (category !== \"order\" || !selectedJob) return;\r\n\r\n    setCoresByCat((prevByCat) => {\r\n      const list = prevByCat[category] ?? [];\r\n      let changed = false;\r\n\r\n      const next = list.map((c) => {\r\n        const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n        const items = getPresetItems(selectedJob, groupKey);\r\n        const isValid = c.preset && items.some((i) => i.value === c.preset);\r\n        const nextPreset = isValid ? c.preset : (items[0]?.value ?? undefined);\r\n\r\n        if (nextPreset !== c.preset) {\r\n          changed = true;\r\n          return { ...c, preset: nextPreset };\r\n        }\r\n        return c;\r\n      });\r\n\r\n      if (!changed) return prevByCat;\r\n      setStale(true);\r\n      return { ...prevByCat, [category]: next };\r\n    });\r\n  }, [category, selectedJob, cores, setCoresByCat, setStale]);\r\n\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: null, o2k: \"add\", o2v: null }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n\r\n    const initialPreset =\r\n      category === \"order\" && selectedJob\r\n        ? getPresetItems(selectedJob, GROUP_BY_CORE_NAME[nextName])[0]?.value\r\n        : undefined;\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false, preset: initialPreset },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs;\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n  // eslint-disable-next-line\r\n  const [dragging, setDragging] = useState(false);\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  useEffect(() => {\r\n    saveToStorage({ category, coresByCat, gemsByCat, role, weights, selectedJob });\r\n  }, [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  function QuickAddPad({ onAdd, focusOnMount = false }) {\r\n    const [o1k, setO1k] = useState(\"atk\");\r\n    const [o2k, setO2k] = useState(\"add\");\r\n    const [o1v, setO1v] = useState(1);\r\n    const [o2v, setO2v] = useState(1);\r\n    const [will, setWill] = useState(1);\r\n    const [point, setPoint] = useState(1);\r\n\r\n    const firstRef = useRef(null);\r\n    const focusAfterSubmitRef = useRef(false);\r\n    const WILL_INPUT_ID = \"quick-pad-will-input\";\r\n\r\n    useEffect(() => {\r\n      if (!focusOnMount) return;\r\n      requestAnimationFrame(() => {\r\n        firstRef.current?.focus?.();\r\n        firstRef.current?.select?.();\r\n      });\r\n    }, [focusOnMount]);\r\n\r\n    const focusWill = () => {\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          if (firstRef.current) {\r\n            try { firstRef.current.focus(); firstRef.current.select?.(); return; } catch { }\r\n          }\r\n          const el = document.getElementById(WILL_INPUT_ID);\r\n          if (el) { el.focus(); el.select?.(); }\r\n        });\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e?.preventDefault?.();\r\n      const id = uid();\r\n      onAdd({\r\n        id,\r\n        will: Number.isFinite(will) ? will : 0,\r\n        point: Number.isFinite(point) ? point : 0,\r\n        o1k,\r\n        o1v: Number.isFinite(o1v) ? o1v : 0,\r\n        o2k,\r\n        o2v: Number.isFinite(o2v) ? o2v : 0,\r\n      });\r\n\r\n      if (focusAfterSubmitRef.current) {\r\n        focusWill();\r\n        focusAfterSubmitRef.current = false;\r\n      }\r\n    };\r\n\r\n    const onKeyDownSubmit = (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        focusAfterSubmitRef.current = true;\r\n        handleSubmit(e);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white\">\r\n          <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\" title=\"빠른 추가\">\r\n            <Plus size={18} />\r\n          </div>\r\n\r\n          <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>필요 의지력</label>\r\n              <NumberInput\r\n                value={will}\r\n                onChange={setWill}\r\n                min={3}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{\r\n                  id: WILL_INPUT_ID,\r\n                  title: \"의지력\",\r\n                  placeholder: \"의지력\",\r\n                  onKeyDown: onKeyDownSubmit,\r\n                  ref: firstRef,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>(질서/혼돈)포인트</label>\r\n              <NumberInput\r\n                value={point}\r\n                onChange={setPoint}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{ title: \"포인트\", placeholder: \"포인트\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 1</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o1k}\r\n                onChange={(v) => setO1k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o1v}\r\n                onChange={setO1v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 2</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o2k}\r\n                onChange={(v) => setO2k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o2v}\r\n                onChange={setO2v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n            <button\r\n              type=\"submit\"\r\n              onClick={() => { (focusAfterSubmitRef.current = true); }}\r\n              className=\"h-10 w-full lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n              title=\"Enter로도 추가 가능\"\r\n            >\r\n              <Plus size={16} />\r\n              <span className=\"inline\"> 젬 추가</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"relative flex items-center my-4\">\r\n          <div className=\"flex-grow border-t\"></div>\r\n          <span className=\"mx-3 text-sm text-gray-600\">\r\n            아래에서 추가한 젬들을 확인하세요.\r\n          </span>\r\n          <div className=\"flex-grow border-t\"></div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n        @keyframes loa-marquee { 0%{ transform: translateX(-100%);} 100%{ transform: translateX(300%);} }\r\n        .animate-loa-marquee{ animation: loa-marquee 1.2s cubic-bezier(.4,0,.2,1) infinite; }\r\n      `}</style>\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div key={dataVersion} className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            <div className=\"flex items-center gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleExportJson}\r\n                className=\"h-10 px-3 rounded-xl inline-flex items-center gap-2 bg-white hover:bg-white/90\"\r\n                title=\"현재 입력값을 JSON으로 저장\"\r\n              >\r\n                <Download size={16} />\r\n                <span className=\"hidden md:inline text-sm\">저장하기</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleImportClick}\r\n                className=\"h-10 px-3 rounded-xl inline-flex items-center gap-2 bg-white hover:bg-white/90\"\r\n                title=\"JSON에서 불러오기\"\r\n              >\r\n                <Upload size={16} />\r\n                <span className=\"hidden md:inline text-sm\">불러오기</span>\r\n              </button>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\"application/json\"\r\n                className=\"hidden\"\r\n                onChange={handleImportFile}\r\n              />\r\n              <div className=\"h-6 w-px bg-white/50 mx-1 hidden sm:block\" aria-hidden />\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6 !mt-2`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              {category === \"order\" && (\r\n                <Dropdown\r\n                  className=\"w-32\"\r\n                  value={selectedJob}\r\n                  onChange={(val) => {\r\n                    setSelectedJob(val);\r\n                    setCores(prev => prev.map(c => {\r\n                      const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                      const items = getPresetItems(val, groupKey);\r\n                      const ok = c.preset && items.some(i => i.value === c.preset);\r\n                      return ok ? c : { ...c, preset: (items[0]?.value ?? undefined) };\r\n                    }));\r\n                  }}\r\n                  items={[{ value: \"\", label: \"선택 안함\" }, ...JOBS.map(j => ({ value: j, label: j }))]}\r\n                  placeholder=\"직업 선택\"\r\n                />\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const gradeMax = TARGET_MAX_BY_GRADE[c.grade];\r\n                      const thresholds = (CORE_THRESHOLDS[c.grade] ?? []).filter(v => v <= gradeMax);\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        thresholds.map(v => ({ value: String(v), label: `${v}P` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      let coreNameItems = CORE_NAME_ITEMS.map(it => ({ ...it }));\r\n\r\n                      if (category === \"order\" && selectedJob) {\r\n                        const allowed = getAllowedCoreNameSet(selectedJob);\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value) || !allowed.has(it.value)\r\n                        }));\r\n                      } else {\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value)\r\n                        }));\r\n                      }\r\n\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown\r\n                                  className=\"w-full lg:w-24\"\r\n                                  value={c.grade}\r\n                                  onChange={(val) => {\r\n                                    const g = (val);\r\n                                    const maxAllowed = TARGET_MAX_BY_GRADE[g];\r\n                                    const nextMin =\r\n                                      (c.minThreshold != null && c.minThreshold > maxAllowed)\r\n                                        ? maxAllowed\r\n                                        : c.minThreshold;\r\n                                    updateCore(c.id, { grade: g, minThreshold: nextMin });\r\n                                  }}\r\n                                  items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))}\r\n                                  placeholder=\"코어 등급\"\r\n                                />\r\n                              </div>\r\n                              {category === \"order\" && selectedJob && (\r\n                                (() => {\r\n                                  const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                                  const presetItems = getPresetItems(selectedJob, groupKey);\r\n                                  const resolvedPreset =\r\n                                    c.preset && presetItems.some(i => i.value === c.preset)\r\n                                      ? c.preset\r\n                                      : (presetItems[0]?.value ?? \"\");\r\n                                  return (\r\n                                    <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                      <label className={labelCls}>\r\n                                        직업 코어 선택\r\n                                        <CoreEffectInfo\r\n                                          job={selectedJob}\r\n                                          groupKey={groupKey}\r\n                                          preset={resolvedPreset}\r\n                                          grade={c.grade}\r\n                                          category={category}\r\n                                          coreName={c.name}\r\n                                          supply={CORE_SUPPLY[c.grade]}\r\n                                        />\r\n                                      </label>\r\n                                      <Dropdown\r\n                                        className=\"w-full\"\r\n                                        value={resolvedPreset}\r\n                                        onChange={(val) => updateCore(c.id, { preset: val })}\r\n                                        items={presetItems}\r\n                                        placeholder=\"직업 코어 선택\"\r\n                                      />\r\n                                    </div>\r\n                                  );\r\n                                })()\r\n                              )}\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 포인트</label>\r\n                                <Dropdown className=\"w-full lg:w-32\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val) }); else updateCore(c.id, { minThreshold: undefined }); }} items={targetItems} placeholder=\"목표 포인트 선택\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">선택한 포인트 이상으로 탐색</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">체크 해제 시, 목표 포인트와 <br className=\"hidden lg:block\" /><b className=\"text-primary\">정확히 일치하는 조합만 계산</b>합니다.</p>\r\n                              </div>\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div\r\n            className={`flex items-center gap-2 lg:gap-3 ${quickAddMode ? '' : 'mb-3'}`}\r\n          >\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-1\">\r\n              <span className=\"text-xs text-gray-600\">빠르게 추가</span>\r\n              <button\r\n                type=\"button\"\r\n                role=\"switch\"\r\n                aria-checked={quickAddMode}\r\n                onClick={() => setQuickAddMode(v => !v)}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition ${quickAddMode ? \"bg-[#a399f2]\" : \"bg-gray-300\"\r\n                  }`}\r\n                aria-label=\"빠르게 추가 모드\"\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-5 transform rounded-full bg-white shadow transition ${quickAddMode ? \"translate-x-5\" : \"translate-x-1\"\r\n                    }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              {!quickAddMode && (\r\n                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              )}\r\n              <button\r\n                className=\"hidden lg:inline-flex h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border  items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n                onClick={() => setScanOpen(true)}\r\n                aria-label=\"이미지에서 스캔 (Beta)\"\r\n              >\r\n                <Image size={16} />\r\n                <span className=\"hidden lg:inline\"> 이미지에서 스캔 (Beta)</span>\r\n              </button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          {quickAddMode && (\r\n            <p className=\"text-[11px] text-gray-500 mb-3\">\r\n              Tab 키로 입력 칸을 이동할 수 있고, Enter 키로 빠르게 추가할 수 있습니다.\r\n            </p>\r\n          )}\r\n          {quickAddMode && (\r\n            <div className=\"mb-3\">\r\n              <QuickAddPad\r\n                focusOnMount\r\n                onAdd={(gem) => {\r\n                  setGems(v => [gem, ...v]);\r\n                  setHighlightGemId(gem.id);\r\n                  setStale(true);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={3}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: (val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: (val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효 옵션 가중치</h2>\r\n\r\n            {/* 포지션 선택은 그대로 유지 */}\r\n            <div className={`flex items-center gap-4 text-sm`}>\r\n              <span className=\"text-xs text-gray-500 hidden sm:block\">포지션 선택</span>\r\n              <label className=\"inline-flex items-center gap-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  checked={role === \"dealer\"}\r\n                  onChange={() => {\r\n                    setRole(\"dealer\");\r\n                    setWeights({ ...DEALER_WEIGHTS });\r\n                  }}\r\n                  className=\"accent-primary\"\r\n                />\r\n                딜러\r\n              </label>\r\n              <label className=\"inline-flex items-center gap-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  checked={role === \"support\"}\r\n                  onChange={() => {\r\n                    setRole(\"support\");\r\n                    setWeights((w) => maskWeightsForRole(DEFAULT_WEIGHTS, \"support\"));\r\n                  }}\r\n                  className=\"accent-primary\"\r\n                />\r\n                서포터\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <p className=\"text-[12px] text-gray-600 mt-2\">\r\n            가중치는 역할 프리셋으로 고정됩니다.\r\n          </p>\r\n\r\n          {/* 옵션별 L1~L5 퍼센트 표 (반응형) */}\r\n          {(() => {\r\n            const levels = [1, 2, 3, 4, 5];\r\n            const allowSet =\r\n              role && ROLE_KEYS?.[role] && typeof ROLE_KEYS[role].has === \"function\"\r\n                ? ROLE_KEYS[role]\r\n                : null;\r\n\r\n            // 현재 역할에 해당하는 옵션만 노출 (역할 미선택이면 전체)\r\n            const showKeys = OPTIONS.filter((k) => !allowSet || allowSet.has(k));\r\n\r\n            const rows = showKeys.map((k) => {\r\n              const values = levels.map((L) => levelValueByRole(role, k, L));\r\n              const isCurve = role === \"dealer\"; // 딜러는 커브, 서포터는 선형\r\n              return { k, values, isCurve };\r\n            });\r\n\r\n            return (\r\n              <div className=\"mt-3\">\r\n                {/* 데스크톱/태블릿: 표 형태 */}\r\n                <div className=\"hidden sm:block overflow-x-auto\">\r\n                  <table className=\"min-w-full text-sm\">\r\n                    <colgroup>\r\n                      <col width=\"18%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                    </colgroup>\r\n                    <thead>\r\n                      <tr className=\"text-left text-gray-500\">\r\n                        <th className=\"py-2\">옵션</th>\r\n                        <th className=\"py-2\">Lv. 1</th>\r\n                        <th className=\"py-2\">Lv. 2</th>\r\n                        <th className=\"py-2\">Lv. 3</th>\r\n                        <th className=\"py-2\">Lv. 4</th>\r\n                        <th className=\"py-2\">Lv. 5</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {rows.map(({ k, values, isCurve }) => (\r\n                        <tr key={k} className=\"border-t\">\r\n                          <td className=\"py-2\">\r\n                            <span className=\"font-medium\">{OPTION_LABELS[k]}</span>\r\n                          </td>\r\n                          {values.map((v, i) => (\r\n                            <td key={i} className=\"py-2 tabular-nums\">\r\n                              {fmtByRole(role, v)}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                {/* 모바일: 카드 + 칩 형태 */}\r\n                <div className=\"sm:hidden space-y-2\">\r\n                  {rows.map(({ k, values, isCurve }) => (\r\n                    <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"text-sm font-medium\">{OPTION_LABELS[k]}</div>\r\n                        <span\r\n                          className={`text-[11px] ${isCurve ? \"text-primary\" : \"text-gray-400\"\r\n                            }`}\r\n                        >\r\n                          {isCurve ? \"커브\" : \"선형\"}\r\n                        </span>\r\n                      </div>\r\n\r\n                      {/* L1~L5 그리드: 세로 스크롤 없이 한눈에 */}\r\n                      <div className=\"mt-2 grid grid-cols-2 gap-2 text-[12px]\">\r\n                        {values.map((v, i) => (\r\n                          <div\r\n                            key={i}\r\n                            className=\"flex items-center justify-between px-2 py-1.5 rounded-lg bg-gray-50 border\"\r\n                          >\r\n                            <span className=\"text-gray-500\">Lv. {i + 1}</span>\r\n                            <span className=\"tabular-nums font-medium\">\r\n                              {fmtByRole(role, v)}\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            );\r\n          })()}\r\n\r\n        </section>\r\n\r\n\r\n\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-2\">\r\n          {stale && !isComputing && hasCalculated && (\r\n            <span className=\"inline-block text-[11px] px-3 py-1.5 rounded-lg bg-red-100 text-red-800 border border-red-200 text-center lg:text-left\">\r\n              입력값이 변경되었습니다. <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center gap-2 lg:ml-auto w-full lg:w-auto\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={calculate}\r\n              disabled={isComputing}\r\n              className=\"h-10 w-full lg:w-[120px] px-0 lg:px-3 rounded-xl ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n            >\r\n              {isComputing ? \"계산 중…\" : \"계산하기\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          {!isComputing && stale && hasCalculated && (\r\n            <p className=\"text-xs text-red-700 mt-1\">입력값이 변경되었습니다. 우측 상단의 <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.</p>\r\n          )}\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = results?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n              const presetFallback = (category === \"order\" && selectedJob)\r\n                ? getPresetItems(selectedJob, groupKey)[0]?.value\r\n                : undefined;\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name}\r\n                      {category === \"order\" && selectedJob && (c.preset || presetFallback) && (\r\n                        <>:&nbsp;{c.preset ?? presetFallback}</>\r\n                      )}&nbsp;\r\n                      <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"유효 옵션 합 \" : \"유효 옵션 합 \"}\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(3))}{role === 'dealer' ? \"%\" : \"\"}</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 포인트를 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <colgroup>\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"13%\"} />\r\n                          </colgroup>\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"유효 옵션 합 \" : \"유효 옵션 합 \"}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.wwill ?? g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(3))}{role === 'dealer' ? \"%\" : \"\"}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"} {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(3))}%</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n\r\n      <ScanFromImageModal\r\n        open={scanOpen}\r\n        onClose={() => setScanOpen(false)}\r\n        onScanned={handleScanned}\r\n      />\r\n\r\n      {isComputing && (\r\n        <div className=\"fixed inset-0 z-[99999] bg-black/35 backdrop-blur-[1px] flex items-center justify-center px-6\">\r\n          <div className=\"w-full max-w-md rounded-2xl bg-white/95 border shadow p-4\">\r\n            <div className=\"text-sm font-medium text-gray-800 mb-2\">{progress.label}</div>\r\n\r\n            <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n              {progress.indeterminate ? (\r\n                <div className=\"absolute inset-0\">\r\n                  <div className=\"h-full w-1/3 bg-[#a399f2] animate-loa-marquee rounded-full\" />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"h-full bg-[#a399f2] transition-[width] duration-100\"\r\n                  style={{ width: `${progress.pct}%` }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mt-2 text-right text-xs text-gray-600\">\r\n              {progress.indeterminate\r\n                ? (progress.pulse != null ? Number(progress.pulse).toLocaleString() : \"\")\r\n                : `${progress.pct}%`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/hooks/useOptimizer.js\r\nimport { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { flushSync } from 'react-dom';\r\n\r\nexport function useOptimizer(cores, gems, role, weights) {\r\n  const [calcVersion, setCalcVersion] = useState(0);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [computing, setComputing] = useState(false);\r\n  const [progress, setProgress] = useState({\r\n    pct: 0,\r\n    label: \"준비 중…\",\r\n    indeterminate: true,\r\n    phase: undefined,\r\n    coreIndex: null,\r\n    coreCount: null,\r\n    coreDone: null,\r\n    coreTotal: null,\r\n    rate: null,\r\n    elapsedMs: null,\r\n    etaMs: null,\r\n    pulse: 0,\r\n  });\r\n  const [priorityPicks, setPriorityPicks] = useState([]);\r\n  const workerRef = useRef(null);\r\n\r\n  // ✅ 새로 추가: 마지막으로 \"계산하기\"를 눌렀을 때의 입력값 스냅샷\r\n  const paramsRef = useRef({ cores, gems, role, weights });\r\n\r\n  useEffect(() => {\r\n    workerRef.current = new Worker(new URL('../workers/optimizer.worker.js', import.meta.url), { type: 'module' });\r\n    try {\r\n      workerRef.current?.postMessage({ type: \"kickoff\" });\r\n    } catch { }\r\n    return () => {\r\n      workerRef.current?.terminate();\r\n      workerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // ✅ 변경점: 의존성 배열을 calcVersion 하나만 사용\r\n  useEffect(() => {\r\n    if (calcVersion === 0) return;\r\n    let cancelled = false;\r\n\r\n    setTimeout(() => {\r\n      if (cancelled) return;\r\n      flushSync(() => {\r\n        setComputing(true);\r\n        setProgress({\r\n          pct: 0,\r\n          label: \"최적의 젬 조합을 찾고 있습니다…\",\r\n          indeterminate: false,\r\n          phase: 'gen',\r\n          coreIndex: null,\r\n          coreCount: paramsRef.current.cores?.length || null, // ← 스냅샷 사용\r\n          coreDone: null,\r\n          coreTotal: null,\r\n          rate: null,\r\n          elapsedMs: null,\r\n          etaMs: null,\r\n          pulse: 0,\r\n        });\r\n      });\r\n    }, 0);\r\n\r\n    (async () => {\r\n      try {\r\n        await new Promise(resolve => requestAnimationFrame(resolve));\r\n        const worker = workerRef.current;\r\n        if (!worker) throw new Error(\"Worker not initialized\");\r\n\r\n        const onMessage = (e) => {\r\n          if (cancelled) return;\r\n          const msg = e.data || {};\r\n          if (msg?.type === \"error\" || msg?.error) {\r\n            console.error(e.data?.error || msg?.error);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 0, label: \"에러\", indeterminate: true }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n          if (msg.type === \"progress\") {\r\n            const { done, total, indeterminate = false, phase, coreIndex, coreCount, coreDone, coreTotal, rate, elapsedMs, etaMs, pulse } = msg;\r\n            if (indeterminate || !total || total <= 0 || done == null) {\r\n              setProgress((p) => ({ \r\n                ...p, pct: 0, indeterminate: true, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: pulse ?? (p.pulse ?? 0)\r\n              }));\r\n            } else {\r\n              const pct = Math.max(0, Math.min(100, Math.floor((done / Math.max(1, total)) * 100)));\r\n              setProgress((p) => ({ \r\n                ...p, pct, indeterminate: false, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: undefined\r\n              }));\r\n            }\r\n            return;\r\n          }\r\n          if (msg.type === \"result\") {\r\n            const { picks } = msg;\r\n            setPriorityPicks(picks || []);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 100, label: \"완료\", indeterminate: false, pulse: undefined }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n        };\r\n\r\n        worker.addEventListener('message', onMessage);\r\n\r\n        // ✅ 스냅샷을 꺼내서 사용\r\n        const { cores: c, gems: g, role: r, weights: w } = paramsRef.current;\r\n        const perCoreLimit = g.length > 60 ? 800 : g.length > 45 ? 1200 : g.length > 30 ? 1600 : 2000;\r\n\r\n        worker.postMessage({ type: \"run\", cores: c, gems: g, role: r, weights: w, perCoreLimit });\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          console.error(err);\r\n          setComputing(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calcVersion]); // ← 오직 버튼 클릭으로 증가한 calcVersion에만 반응\r\n\r\n  // ✅ 변경점: 계산 버튼을 눌렀을 때 현재 입력값을 스냅샷으로 저장한 뒤 calcVersion 증가\r\n  const calculate = useCallback(() => {\r\n    paramsRef.current = { cores, gems, role, weights }; // 최신값 스냅샷\r\n    setCalcVersion(v => v + 1);\r\n    setHasCalculated(true);\r\n  }, [cores, gems, role, weights]);\r\n\r\n  return {\r\n    isComputing: computing,\r\n    progress,\r\n    results: priorityPicks,\r\n    calculate, // ← 이 함수가 “계산하기” 버튼 onClick에 연결되면 됩니다.\r\n    hasCalculated,\r\n  };\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =========================================================================\r\n * 1) 전역 동작 플래그\r\n *    - 시뮬레이션 분산 감소, 희귀사건 스케일업 등 런타임 전역 옵션\r\n * ========================================================================= */\r\nconst USE_ANTITHETIC = true;\r\nconst AUTO_SCALE_RARE = true;\r\nconst OFFICIAL_RNG = true;\r\n\r\n/* =========================================================================\r\n * 2) 상수/테이블\r\n *    - 등급 경계, 젬 타입별 유효 효과 풀, 희귀도별 시도/리롤, 수치 범위, 비용\r\n * ========================================================================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\n\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\n\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\n\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\n\r\n/* =========================================================================\r\n * 3) 결정적 난수 및 보조 수학 유틸\r\n *    - 해시 기반 시드, xorshift 변종 RNG, 경계 체크/클램프, CI 계산 등\r\n * ========================================================================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\n\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\n\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n);\r\n}\r\n\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001;\r\n  if (n >= 100000) return 0.0002;\r\n  if (n >= 50000) return 0.0003;\r\n  if (n >= 10000) return 0.0005;\r\n  if (n >= 5000) return 0.0007;\r\n  return 0.001;\r\n};\r\n\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n\r\n/* =========================================================================\r\n * 4) 표시/형식 유틸\r\n *    - 확률/숫자 출력, 부담 배지, 성공률 추정\r\n * ========================================================================= */\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";\r\n  if (x >= 1) return \"100.00000%\";\r\n  return (x * 100).toFixed(5) + \"%\";\r\n}\r\n\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity;\r\n  return expectedGold / p;\r\n}\r\n\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\n\r\n/* =========================================================================\r\n * 5) 효과/등급 판정 로직\r\n *    - 유효 효과 풀, 총점/등급, 목표 충족 판정, 거리(부족분) 계산\r\n * ========================================================================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\n\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\n\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\n\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\n\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n\r\n/* =========================================================================\r\n * 6) 슬롯(선택지) 구성/적용 로직\r\n *    - 선택지 가중치 테이블 구성, 표현/해석, 실제 반영\r\n * ========================================================================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\n\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n\r\n  return items;\r\n}\r\n\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\n\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\n\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n\r\n/* =========================================================================\r\n * 7) 시뮬레이션 코어\r\n *    - 몬테카를로 기반 확률/기대치 추정, 저분산 페어, 희귀사건 가드\r\n * ========================================================================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    useAntithetic = true,\r\n    autoScaleRare = true,\r\n    rareTargetSuccesses = 100,\r\n    rareMaxTrials = 200000,\r\n    rareTiers = [200000],\r\n  } = opts;\r\n\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n\r\n  let localMaxTrials = maxTrials;\r\n  let forceRare = false;\r\n\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n\r\n  while (n < localMaxTrials) {\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      if (n >= localMaxTrials) break;\r\n\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;\r\n      continue;\r\n    }\r\n\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n\r\n    if (rareGuardActive) {\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue;\r\n    }\r\n\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n\r\n/* =========================================================================\r\n * 8) 등급 표시용 스타일/정렬 보조\r\n *    - 확률 0% 제거, 내림차순 정렬, 동률 판정\r\n * ========================================================================= */\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",\r\n};\r\n\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n\r\n/* =========================================================================\r\n * 9) 공통 UI 유틸/컴포넌트\r\n *    - 클릭외부감지 훅, 드롭다운, 토스트 스택, 숫자 입력, Select 래퍼\r\n * ========================================================================= */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\nfunction Dropdown({\r\n  value,\r\n  items,\r\n  onChange,\r\n  placeholder,\r\n  className,\r\n  disabled,\r\n  bordered = true\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  set,\r\n  onChange,\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n\r\n/* =========================================================================\r\n * 10) 보조 헬퍼\r\n *     - 라벨 중복 여부, 등 기타 메인에서 참조하는 작은 유틸\r\n * ========================================================================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n\r\n/* =========================================================================\r\n * 11) 메인 컴포넌트 (GemSimulator)\r\n *     - 상태 정의, 파생값, 이펙트, 액션 핸들러, 렌더 스켈레톤만 유지\r\n *     - 요청 사항: 최종 UI 구현 마크업은 비워둠 (원본 로직 유지)\r\n * ========================================================================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n\r\n  const curValid = cur.aName !== cur.bName;\r\n\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n\r\n  const migratedRef = useRef(false);\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n\r\n  const [changeMode, setChangeMode] = useState(null);\r\n  const [changePick, setChangePick] = useState(\"\");\r\n\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]);\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n\r\n  const addLog = useCallback((entry) => {\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n\r\n  const simRef = useRef(null);\r\n  const [logsMax, setLogsMax] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct2 = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct2(nowProb)} → 다른 항목 보기 기대 ${pct2(rerollProb)} (▲${pct2(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct2(nowProb)}가 다른 항목 보기 기대 ${pct2(rerollProb)}보다 유리 (▼${pct2(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct2(nowProb)} vs 다른 항목 보기 ${pct2(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode: pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return;\r\n    }\r\n\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory();\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n\r\n  function manualReset() {\r\n    setLogs([]);\r\n    setHistory({ past: [], future: [] });\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory();\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1,\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n\r\n  const dupWarnShown = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);\r\n      setHistory({ past: [], future: [] });\r\n    }\r\n  }, [allLocked]);\r\n\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base;\r\n  }, [gemKey, pos, abModePrimary]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      {/* 전역 CSS 변수와 유틸리티 클래스 주입: 주요 색상 및 accent-color 지정 */}\r\n      <style>{`\r\n    :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n    .text-primary{ color:#a399f2; }\r\n    .accent-primary{ accent-color:#a399f2; }\r\n  `}</style>\r\n\r\n      {/* 중앙 컨테이너: 최대 폭 제한 및 수직 간격 */}\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더 섹션: 제목과 시뮬레이션 반복 횟수 선택 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            {/* 페이지 타이틀: 그라디언트 배경 위에서 가독성 위한 화이트 텍스트/드롭섀도 */}\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n\r\n            {/* 우측 컨트롤: 시뮬레이션 횟수 드롭다운 */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                {/* 시뮬레이션 반복 수 선택 Dropdown (SIM_OPTIONS 기반) */}\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 기본 설정 카드 (젬 타입/등급/기본 시도/리롤 안내) */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 카드 타이틀 */}\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (잠금 상태 제어) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 입력 행: 젬 타입/등급/기본 시도·리롤 표시 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 선택: GEM_TYPES 키 목록을 드롭다운으로 제공 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 등급 선택: 고급/희귀/영웅 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 현재 등급 기준 기본 시도/리롤 수 정보 표시 (읽기 전용) */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 현재 옵션 입력 카드 (현재 젬의 상태 입력/잠금) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (현재 값 고정 여부) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 현재 옵션 입력 행: 효율/포인트/효과 A/B 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 포인트 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 선택 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 선택 (A와 중복 불가) */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 목표 옵션 입력 카드 (목표 충족 방식/효과/레벨) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n\r\n            {/* 우측: 저장/편집 토글 (잠금 시 계산 활성) */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 목표 충족 방식 라디오: 상관 없음일 때 비활성화 */}\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n\r\n          {/* 목표 조건 입력 행: 효율/포인트/추가 효과/효과명 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 목표 의지력 효율 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 포인트 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 추가 효과 역할군: 상관 없음/공격형/지원형 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 효과명/레벨: 역할군이 상관 없음이면 비활성화 */}\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 효과 A 선택 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 A 레벨 하한 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 선택: BOTH 모드에서만 활성 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 레벨 하한: BOTH 모드일 때만 활성 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 2열 레이아웃: 좌측 시뮬, 우측 작업 내역 */}\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 좌측(2칸): 가공 시뮬레이션 패널 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 헤더: 타이틀 및 초기화 버튼 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 사용 안내: 모든 설정 잠금 이후 액션 가능 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n\r\n            {/* 본문: 현재 상태 카드 + 선택지 카드 */}\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 현재 젬 상태/리소스 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n\r\n                {/* 핵심 스탯(효율/포인트/효과 A/B) 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  {/* 효율 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n\r\n                  {/* 포인트 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n\r\n                  {/* 효과 A: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 효과 B: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 리소스 칩: 남은 가공/리롤/비용 증감률/누적 골드 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 이번 차수 선택지 + 액션 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n\r\n                {/* 4개 슬롯: 라벨 선택 + 적용 버튼 */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {/* 현재 슬롯 라벨 변경 드롭다운 */}\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        {/* 적용 버튼: 모든 설정 잠금 및 중복 미발생 등 조건 충족 시 활성 */}\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 버튼 및 추천 문구 */}\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 EV 근거 설명 (가능 시 노출) */}\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 우측(1칸): 작업 내역 패널 (Undo/Redo 포함) */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              {/* Undo/Redo 버튼: 단축키 안내 포함 */}\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 로그 비어있음/목록 렌더링 */}\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n\r\n        {/* 결과 출력 섹션: 스켈레톤/실데이터 2상태 렌더링 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            {/* 우측 표시: 실제 사용된 Monte Carlo 횟수 및 95% CI 폭 */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 계산 중 또는 데이터 미존재 시: 스켈레톤 UI */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 스켈레톤 칩 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 스켈레톤 카드 2장 */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 실데이터 표시: 1회차 선택지 목록 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 목표 달성 확률 및 등급 확률 카드 2열 */}\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 카드: STOP_ON_SUCCESS vs RUN_TO_END */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* 좌측: STOP_ON_SUCCESS 결과 */}\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n\r\n                      {/* 우측: RUN_TO_END 결과 */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n\r\n                  {/* 등급 확률 카드: 전설/유물/고대 각각의 달성 확률 및 순서 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n\r\n                    {/* 각 등급 확률 막대 및 수치 표시 (0%도 노출) */}\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* 100% 확정 배지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n\r\n                    {/* 등급 확률 순서 요약: 0% 제외, 동률 표기 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun);\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n\r\n      {/* 전역 토스트 스택: 중앙 오버레이로 알림 표시 */}\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n\r\n      {/* 광고 영역: Kakao Adfit 삽입 */}\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp, MessageCircle } from \"lucide-react\";\r\n\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll();\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\n\r\n/** 문의 모달 */\r\nfunction InquiryModal({ open, onClose }) {\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [body, setBody] = React.useState(\"\");\r\n  const [files, setFiles] = React.useState([]);          // File[] (여러 장)\r\n  const [sending, setSending] = React.useState(false);\r\n\r\n  \r\n\r\n  const endpoint =\r\n    import.meta.env?.VITE_DISCORD_PROXY ||\r\n    (typeof document !== \"undefined\" &&\r\n      document.querySelector('meta[name=\"arcgrid-proxy\"]')?.content) ||\r\n    (typeof window !== \"undefined\" && window.__ARCGRID_PROXY__) ||\r\n    \"\";\r\n  const apiKey =\r\n    import.meta.env?.VITE_DISCORD_API_KEY ||\r\n    (typeof document !== \"undefined\" &&\r\n      document.querySelector('meta[name=\"arcgrid-api-key\"]')?.content) ||\r\n    (typeof window !== \"undefined\" && window.__ARCGRID_API_KEY__) ||\r\n    \"\";\r\n\r\n  const MAX_FILES = 4;\r\n  const PER_FILE = 4 * 1024 * 1024;  // 4MB\r\n  const TOTAL = 16 * 1024 * 1024; // 16MB\r\n  const OK_TYPES = [\"image/png\", \"image/jpeg\", \"image/webp\", \"image/gif\"];\r\n\r\n  React.useEffect(() => {\r\n    if (!open) return;\r\n    const onKey = (e) => { if (e.key === \"Escape\") onClose?.(); };\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => window.removeEventListener(\"keydown\", onKey);\r\n  }, [open, onClose]);\r\n\r\n  const handleFiles = (e) => {\r\n    const picked = Array.from(e.target.files || []);\r\n    if (!picked.length) return;\r\n\r\n    let next = [...files];\r\n    for (const f of picked) {\r\n      if (!OK_TYPES.includes(f.type)) {\r\n        alert(\"이미지 파일만 첨부할 수 있어요. (png, jpg, webp, gif)\");\r\n        continue;\r\n      }\r\n      if (f.size > PER_FILE) {\r\n        alert(`파일 ${f.name}이(가) 5MB를 초과합니다.`);\r\n        continue;\r\n      }\r\n      if (next.length >= MAX_FILES) {\r\n        alert(`이미지는 최대 ${MAX_FILES}장까지 첨부할 수 있어요.`);\r\n        break;\r\n      }\r\n      next.push(f);\r\n    }\r\n\r\n    const totalSize = next.reduce((s, f) => s + f.size, 0);\r\n    if (totalSize > TOTAL) {\r\n      alert(`이미지 총 용량은 최대 ${(TOTAL / 1024 / 1024) | 0}MB까지 가능합니다.`);\r\n      return;\r\n    }\r\n\r\n    setFiles(next);\r\n    e.target.value = \"\"; // 같은 파일 다시 선택 가능하도록 초기화\r\n  };\r\n\r\n  const removeFileAt = (idx) => {\r\n    setFiles((arr) => arr.filter((_, i) => i !== idx));\r\n  };\r\n\r\n  const fileToBase64 = async (f) => {\r\n    const buf = await f.arrayBuffer();\r\n    let binary = \"\";\r\n    const bytes = new Uint8Array(buf);\r\n    const chunk = 0x8000;\r\n    for (let i = 0; i < bytes.length; i += chunk) {\r\n      binary += String.fromCharCode.apply(null, bytes.subarray(i, i + chunk));\r\n    }\r\n    return btoa(binary); // base64\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e?.preventDefault?.();\r\n    if (sending) return; // 더블클릭 방지 (프레임 경합)\r\n    if (!title.trim() || !body.trim()) {\r\n      alert(\"제목과 내용을 모두 입력하세요.\");\r\n      return;\r\n    }\r\n    if (!endpoint) {\r\n      alert(\"전송 경로가 설정되지 않았습니다. (VITE_DISCORD_PROXY)\");\r\n      return;\r\n    }\r\n    try {\r\n      setSending(true);\r\n\r\n      // File[] -> [{ name, type, data(base64) }, ...]\r\n      const images = [];\r\n      for (const f of files) {\r\n        const data = await fileToBase64(f);\r\n        images.push({ name: f.name, type: f.type, data });\r\n      }\r\n\r\n      const fd = new FormData();\r\n      const nonce = (crypto?.randomUUID && crypto.randomUUID()) || `${Date.now()}-${Math.random()}`;\r\n      fd.append(\"title\", title.trim().slice(0, 80));\r\n      fd.append(\"content\", body.trim().slice(0, 4000));\r\n      fd.append(\"nonce\", nonce); // ← 워커 디둡용 토큰\r\n      files.forEach((f) => fd.append(\"files[]\", f, f.name));\r\n     \r\n      const url = `${endpoint}${apiKey ? `?key=${encodeURIComponent(apiKey)}` : \"\"}`;\r\n      const res = await fetch(url, { method: \"POST\", body: fd }); // Content-Type 수동 지정 X\r\n      const data = await res.json().catch(() => ({}));\r\n      if (data?.ok) {\r\n        alert(\"문의가 전송되었습니다. 감사합니다!\");\r\n        setTitle(\"\"); setBody(\"\"); setFiles([]);\r\n        onClose?.();\r\n      } else {\r\n        alert(\"전송 실패: 잠시 후 다시 시도해 주세요.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"전송 중 오류가 발생했습니다.\");\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 z-[100] bg-black/40 backdrop-blur-[1px] flex items-center justify-center px-4\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      onClick={onClose}\r\n    >\r\n      <div\r\n        className=\"w-full max-w-lg rounded-2xl bg-white shadow-xl p-4 sm:p-5\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-base sm:text-lg font-semibold\">문의하기</h3>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"rounded-lg p-1 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-[#a399f2]/40\"\r\n            aria-label=\"닫기\"\r\n          >\r\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\"><path d=\"M6 6l12 12M6 18L18 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" /></svg>\r\n          </button>\r\n        </div>\r\n\r\n        <p className=\"mt-1 text-xs text-gray-600\">\r\n          제목/내용과 함께 이미지를 <b>최대 {MAX_FILES}장</b>까지 첨부할 수 있어요. (파일당 4MB, 총 16MB)\r\n        </p>\r\n\r\n        <form onSubmit={handleSubmit} className=\"mt-3 space-y-3\">\r\n          <div>\r\n            <label className=\"block text-xs text-gray-500 mb-1\">제목</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              maxLength={80}\r\n              placeholder=\"예) 아크그리드 계산 관련 문의\"\r\n              className=\"block mb-1 h-10 w-full px-3 rounded-xl border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n            />\r\n            <div className=\"text-[11px] text-gray-400 text-right\">{title.length}/80</div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-xs text-gray-500 mb-1\">내용</label>\r\n            <textarea\r\n              value={body}\r\n              onChange={(e) => setBody(e.target.value)}\r\n              rows={6}\r\n              maxLength={4000}\r\n              placeholder=\"문의 내용을 적어주세요. (재현 방법, 스크린샷 링크 등)\"\r\n              className=\"block mb-1 w-full px-3 py-2 rounded-xl border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n            />\r\n            <div className=\"text-[11px] text-gray-400 text-right\">{body.length}/4000</div>\r\n          </div>\r\n\r\n          <div>\r\n            {/* 이미지 첨부 (선택, 최대 {MAX_FILES}장) */}\r\n            <label className=\"block text-xs text-gray-500 mb-1\">\r\n              이미지 첨부 (선택, 최대 {MAX_FILES}장)\r\n            </label>\r\n\r\n            {/* 드래그&드롭 + 버튼 업로더 */}\r\n            <div\r\n              className={[\r\n                \"rounded-2xl border-2 border-dashed\",\r\n                \"border-gray-300 bg-gray-50/60 hover:bg-gray-50 transition\",\r\n                \"p-4 text-center\"\r\n              ].join(\" \")}\r\n              onDragOver={(e) => { e.preventDefault(); }}\r\n              onDrop={(e) => {\r\n                e.preventDefault();\r\n                const dropped = Array.from(e.dataTransfer?.files || []);\r\n                if (!dropped.length) return;\r\n                // 기존 handleFiles를 재활용: input change와 동일하게 처리하려면 아래 ingest 로직을 사용,\r\n                // 아니면 handleFiles를 수정해도 됩니다.\r\n                const fakeEvent = { target: { files: dropped } };\r\n                handleFiles(fakeEvent);\r\n              }}\r\n            >\r\n              {/* 숨겨진 파일 인풋 */}\r\n              <input\r\n                id=\"inq-files\"\r\n                type=\"file\"\r\n                accept={OK_TYPES.join(\",\")}\r\n                multiple\r\n                onChange={handleFiles}\r\n                disabled={sending}\r\n                className=\"sr-only\"\r\n              />\r\n\r\n              <div className=\"flex flex-col items-center justify-center gap-2\">\r\n                <div className=\"text-[13px] text-gray-600\">\r\n                  파일을 이곳에 <b>끌어다 놓기</b> 또는\r\n                  <label\r\n                    htmlFor=\"inq-files\"\r\n                    className={[\r\n                      \"inline-flex items-center justify-center gap-2\",\r\n                      \"px-3 h-8 ml-1 rounded-xl shadow-sm cursor-pointer\",\r\n                      \"border inline-flex items-center justify-center bg-white hover:bg-gray-50\"\r\n                    ].join(\" \")}\r\n                    title=\"이미지 선택\"\r\n                  >\r\n                    이미지 선택\r\n                  </label>\r\n                </div>\r\n                <div className=\"text-[11px] text-gray-500\">\r\n                  허용: png, jpg, webp, gif등 · 파일당 4MB · 총 16MB\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 미리보기 그리드 (기존 그대로 사용) */}\r\n            {files.length > 0 && (\r\n              <div className=\"mt-2 grid grid-cols-3 sm:grid-cols-4 gap-2\">\r\n                {files.map((f, idx) => {\r\n                  const url = URL.createObjectURL(f);\r\n                  return (\r\n                    <div key={idx} className=\"relative\">\r\n                      <img\r\n                        src={url}\r\n                        alt={f.name}\r\n                        className=\"h-24 w-full object-cover rounded-lg border\"\r\n                        onLoad={() => URL.revokeObjectURL(url)}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeFileAt(idx)}\r\n                        className=\"absolute -top-2 -right-2 bg-white border rounded-full w-6 h-6 text-xs font-bold\"\r\n                        title=\"제거\"\r\n                        aria-label=\"첨부 제거\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n            <div className=\"pt-1 flex items-center gap-2 justify-end\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"h-10 px-3 rounded-xl border inline-flex items-center justify-center bg-white hover:bg-gray-50\"\r\n              >\r\n                취소\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={sending}\r\n                className={[\r\n                  \"h-10 px-3 rounded-xl inline-flex items-center justify-center gap-2\",\r\n                  \"text-white\",\r\n                  \"hover:brightness-95 active:brightness-90\",\r\n                  \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/50\",\r\n                  sending ? \"opacity-70 cursor-not-allowed\" : \"\"\r\n                ].join(\" \")}\r\n                style={{ backgroundColor: \"#a399f2\" }}\r\n              >\r\n                {sending ? \"전송 중…\" : \"전송하기\"}\r\n              </button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n/** FAB 스택: 문의 + TOP */\r\nfunction FabStack({ onOpenInquiry }) {\r\n  const nearBottom = useNearBottom(520);\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)] flex flex-col gap-2\">\r\n      {/* 문의하기 FAB: 항상 노출 */}\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"문의하기\"\r\n        onClick={onOpenInquiry}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          nearBottom ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <MessageCircle size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">문의</span>\r\n      </button>\r\n\r\n      {/* TOP FAB: 하단 근처일 때 노출 */}\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          nearBottom ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CoreOnly() {\r\n  const [inqOpen, setInqOpen] = React.useState(false);\r\n\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n        <header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n          <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n            <nav aria-label=\"Core pages\">\r\n              <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/gem\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 가공 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/optimizer\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 장착 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            {/* 기본 경로 보정: /#/core → /#/core/optimizer */}\r\n            <Route index element={<Navigate to=\"/optimizer\" replace />} />\r\n\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n\r\n            {/* 나머지 경로도 optimizer로 보정 */}\r\n            <Route path=\"*\" element={<Navigate to=\"/optimizer\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n\r\n      {/* FAB 스택 & 모달 */}\r\n      <FabStack onOpenInquiry={() => setInqOpen(true)} />\r\n      <InquiryModal open={inqOpen} onClose={() => setInqOpen(false)} />\r\n    </HashRouter>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;"],"names":["LABEL_MAP","Map","CANON_LABELS","atk","add","boss","allyAtk","allyDmg","brand","norm","s","String","trim","toHalf","replace","ch","fromCharCode","charCodeAt","normalizeAscii","replaceAll","collapseKo","fixKoLabel","raw","t","c0","test","includes","lev","a","b","n","length","m","dp","Array","from","fill","i","j","cost","Math","min","fuzzyLabelKey","collapsed","has","get","k","v","entries","candidates","Object","map","_ref","key","canon","best","canonC","d","inferLevelFromTail","line","match","Number","stripTailGarbageBeforeLevel","slice","index","parseFromRaw","leftRaw","rightRaw","rights","rawRight","lines","split","x","filter","Boolean","out","lv","labelPart","push","labelKey","level","parseRightLines","lefts","rawLeft","nums","koHalf","will","parseLeftNumbers","console","groupCollapsed","maxN","max","_lefts$i$rawLeft","_lefts$i","_rights$i$rawRight","_rights$i","log","padStart","left","right","groupEnd","ScanFromImageModal","_progress$pct","open","onClose","onScanned","busy","setBusy","useState","progress","setProgress","label","pct","indeterminate","file","setFile","imgURL","setImgURL","imgNatural","setImgNatural","w","h","rectRel","setRectRel","excludesRel","setExcludesRel","tempExcludeRel","setTempExcludeRel","drag","setDrag","mode","setMode","wrapRef","useRef","imgRef","inputRef","worker","useMemo","Worker","URL","type","useEffect","onMessage","ev","payload","data","joinedWords","parsed","forEach","p","gems","list","arguments","undefined","point","opt1","opt2","_raw","leftA","rightA","leftB","rightB","pairParsedToGems","g","_payload$message","error","message","alert","addEventListener","removeEventListener","url","createObjectURL","revokeObjectURL","resetSelections","getRelPoint","e","_wrapRef$current","r","current","getBoundingClientRect","y","clientX","clientY","top","width","height","rectRelToNatural","rel","_wrapRef$current2","sx","sy","round","createPortal","_jsx","className","children","_jsxs","onClick","X","size","pickFile","_inputRef$current","click","disabled","ImageUp","title","BoxSelect","Eraser","Trash2","runManual","rect","excludes","arrayBuffer","then","buf","postMessage","mime","lang","ScanLine","ref","accept","onChange","_e$target$files","target","files","onMouseDown","button","start","x0","y0","x1","y1","onMouseMove","cur","abs","onMouseUp","prev","id","random","toString","onDragStart","preventDefault","style","cursor","src","alt","onLoad","img","currentTarget","naturalWidth","naturalHeight","draggable","position","border","background","pointerEvents","zIndex","stopPropagation","MinusCircle","document","body","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","OPTIONS","ROLE_KEYS","dealer","Set","support","DEALER_WEIGHTS","DEFAULT_WEIGHTS","DEALER_LEVEL_CURVES","SUPPORT_LEVEL_CURVES","sanitizeWeights","base","keys","num","isFinite","levelValueByRole","role","lvl","L","scoreGemForRole","gem","weights","sum","_w$key","allow","isArray","roleAllowsKey","basePct","scale","o1k","o1v","o2k","o2v","CORE_NAME_ITEMS","value","CATEGORY_LABEL","order","chaos","LS_KEY","JOBS","_ARC_CORES$jobs","ARC_CORES","CORE_NAME_BY_GROUP","GROUP_BY_CORE_NAME","CORE_ORDER","TARGET_MAX_BY_GRADE","getPresetItems","job","groupKey","_ARC_CORES$data$job2","_ARC_CORES$data2","getEffectsForPreset","preset","_ARC_CORES$data$job3","_ARC_CORES$data3","row","find","arr","flatMap","item","text","_ref2","_item$point","_ref3","_ref4","_ref5","_item$text","P","포인트","parseInt","desc","효과","_ref6","sort","normalizeEffects","uid","fmtByRole","toFixed","maskWeightsForRole","next","loadFromStorage","localStorage","getItem","JSON","parse","warn","dragPortal","PortalAwareDraggable","_ref7","draggableId","Draggable","provided","snapshot","rendered","isDragging","Dropdown","_ref8","items","placeholder","bordered","setOpen","focusedIndex","setFocusedIndex","btnRef","menuRef","itemRefs","menuPos","forceTick","listboxId","initFocusIndex","useCallback","sel","findIndex","firstEnabled","window","refs","handler","refsArray","React","handlerRef","listener","_handlerRef$current","some","contains","call","useOnClickOutside","useLayoutEffect","bottom","onScroll","_btnRef$current","passive","requestAnimationFrame","_ref9","_ref9$focus","el","focus","cancelAnimationFrame","selected","getNextEnabled","dir","step","menu","AnimatePresence","motion","ul","tabIndex","initial","opacity","animate","exit","transition","duration","onKeyDown","first","last","it","_btnRef$current2","_btnRef$current2$quer","_btnRef$current2$quer2","querySelector","_btnRef$current3","_btnRef$current3$quer","_btnRef$current3$quer2","isSelected","isActive","onMouseEnter","onItemMouseEnter","_btnRef$current4","_btnRef$current4$quer","_btnRef$current4$quer2","ChevronUp","ChevronDown","ToastStack","_ref0","toasts","div","stiffness","damping","msg","NumberInput","_ref1","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","clamp","inputMode","onBlur","onWheel","blur","CoreEffectInfo","_ref10","_TARGET_MAX_BY_GRADE$","_GROUP_BY_CORE_NAME$c","_CORE_LABEL$grade","_CORE_LABEL$grade2","_CORE_LABEL$grade3","_CORE_LABEL$grade4","_CORE_LABEL$grade5","grade","category","coreName","supply","effects","maxP","coreShort","LABEL_CLS","isAncient","toLowerCase","gradeColorCls","toUpperCase","onMouseLeave","onFocus","Info","color","pickRight","_","pickSlashValueByGrade","LoACoreOptimizer","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","_loadFromStorage$role","_loadFromStorage2","setWeights","saved","every","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","remove","setToasts","setTimeout","useToasts","quickAddMode","setQuickAddMode","scanOpen","setScanOpen","dataVersion","setDataVersion","stale","setStale","didMountRef","cores","isComputing","results","calculate","hasCalculated","calcVersion","setCalcVersion","setHasCalculated","computing","setComputing","phase","coreIndex","coreCount","coreDone","coreTotal","rate","elapsedMs","etaMs","pulse","priorityPicks","setPriorityPicks","workerRef","paramsRef","_workerRef$current","_workerRef$current2","terminate","cancelled","flushSync","_paramsRef$current$co","Promise","resolve","Error","_e$data","done","total","_p$pulse","floor","picks","c","perCoreLimit","err","useOptimizer","selectedJob","setSelectedJob","_loadFromStorage$sele","_loadFromStorage3","fileInputRef","buildSnapshot","app","version","exportedAt","Date","toISOString","handleExportJson","blob","Blob","stringify","stamp","getFullYear","getMonth","getDate","getHours","getMinutes","jobPart","createElement","href","download","appendChild","handleImportClick","_fileInputRef$current","handleImportFile","reader","FileReader","onload","json","result","onerror","readAsText","setCores","updater","setGems","_prev$category","mapScannedGemToItem","_g$opt1$label","_g$opt","_g$opt2","_g$opt2$label","_g$opt3","_g$opt4","handleScanned","_items","scanned","lastId","prevByCat","_prevByCat$category","changed","_items$0$value","_items$","name","nextPreset","updateGem","patch","updateCore","cs","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","idx","displayIndexGem","QuickAddPad","_ref11","onAdd","focusOnMount","setO1k","setO2k","setO1v","setO2v","setWill","setPoint","firstRef","focusAfterSubmitRef","WILL_INPUT_ID","_firstRef$current","_firstRef$current$foc","_firstRef$current2","_firstRef$current2$se","select","handleSubmit","_e$preventDefault","_firstRef$current$sel","_firstRef$current3","getElementById","_el$select","onKeyDownSubmit","shiftKey","onSubmit","Plus","setItem","saveToStorage","backgroundImage","backgroundAttachment","Download","Upload","val","_items$0$value2","_items$2","addCore","_getPresetItems$","nextName","existingNames","nextAvailableCoreName","minThreshold","enforceMin","DragDropContext","evt","Event","dispatchEvent","onDragEnd","destination","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","_CORE_THRESHOLDS$c$gr","gradeMax","thresholds","targetItems","concat","takenNames","coreNameItems","allowed","_ARC_CORES$data$job","_ARC_CORES$data","groups","getAllowedCoreNameSet","prov","_c$minThreshold","draggableProps","dragHandleProps","maxAllowed","nextMin","_presetItems$0$value","_presetItems$","presetItems","resolvedPreset","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","addGem","Image","removeGem","levels","allowSet","rows","values","isCurve","_ref12","_ref13","_getPresetItems$2","_c$preset","pick","hasResult","minOfGrade","presetFallback","_Fragment","totalWill","totalPoint","maxThr","thr","roleSum","_ref14","_g$wwill","_g$point","gi","disp","wwill","KakaoAdfit","toLocaleString","USE_ANTITHETIC","AUTO_SCALE_RARE","OFFICIAL_RNG","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","SIM_OPTIONS","hash32","str","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","lo","hi","zeroSuccessUpperBound","alpha","pow","epsilonByTrials","batchByTrials","fmtProbSmart","fmtProb","fmtNum","goldPerSuccess","expectedGold","Infinity","burdenBadge","tone","estimateRate","successes","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","score","meetsTargetByMode","abMode","tgtNames","pool","isAny","nm","TA","aName","TB","bName","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","reduce","gold","rrs","unlocked","cand","temp","res","namesList","before","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","ci","low","high","halfWidth","localMaxTrials","forceRare","tiers","hardCap","nextTier","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","toneBtn","success","info","warning","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","pad","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","_allOptionLabels$curs","_allOptionLabels$curs2","manLabels","setManLabels","_allOptionLabels$i","used","replacement","l","resultStop","setResultStop","resultRun","setResultRun","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","pct2","confirmEffectChange","allLocked","who","meta","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","RotateCcw","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","gps","badge","delay","grades","grad","comps","eps","diff","rankGradeOrder","InquiryModal","_document$querySelect","_document$querySelect2","setTitle","setBody","setFiles","sending","setSending","endpoint","content","__ARCGRID_PROXY__","apiKey","__ARCGRID_API_KEY__","TOTAL","OK_TYPES","handleFiles","picked","f","fileToBase64","async","binary","bytes","Uint8Array","apply","subarray","btoa","viewBox","stroke","strokeWidth","strokeLinecap","_crypto","images","fd","FormData","nonce","crypto","randomUUID","now","append","encodeURIComponent","fetch","method","catch","ok","maxLength","onDragOver","onDrop","_e$dataTransfer","dropped","dataTransfer","multiple","removeFileAt","backgroundColor","FabStack","onOpenInquiry","nearBottom","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","MessageCircle","scrollTo","behavior","CoreOnly","inqOpen","setInqOpen","HashRouter","basename","NavLink","to","Routes","Route","element","Navigate","path","adRef","ins","display","setAttribute","script","innerHTML"],"sourceRoot":""}