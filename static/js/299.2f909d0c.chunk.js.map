{"version":3,"file":"static/js/299.2f909d0c.chunk.js","mappings":"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","sources":["components/LoACoreOptimizer.jsx","components/GemSimulator.jsx","CoreOnly.jsx","components/KakaoAdfit.jsx"],"sourcesContent":["// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useMemo, useState, useRef, useLayoutEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n/* =============================== 상수 정의 =============================== */\r\nconst CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nconst CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nconst CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nconst GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nconst OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nconst OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nconst ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\nconst DEFAULT_WEIGHTS = { atk: 1, add: 1, boss: 1, brand: 1, allyDmg: 1, allyAtk: 1 };\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n// 카테고리: 질서 / 혼돈\r\nconst CATEGORY_LABEL = {\r\n  order: \"질서\",\r\n  chaos: \"혼돈\",\r\n};\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\"; // 로컬스토리지 키\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\nfunction sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nfunction scoreGemForRole(g, role, w) {\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? g.o1v * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? g.o2v * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nfunction* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1; while (p >= 0 && idx[p] === n - k + p) p--; if (p < 0) break; idx[p]++; for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\nfunction thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nfunction scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000) + (totalPoint * 10_000) + ((5_000 - totalWill) * 10) + roleSum - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nfunction enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin) {\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n  const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n  const effMin = minThreshold ?? minOfGrade;\r\n  const effEnforce = enforceMin || minThreshold == null;\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) { all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }); continue; }\r\n    for (const combo of combinations(pool, k)) {\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n  all.sort((a, b) => b.score - a.score);\r\n  let filtered;\r\n  if (effEnforce) {\r\n    filtered = all.filter(ci => {\r\n      const maxThr = Math.max(0, ...ci.thr);\r\n      return ci.list.length > 0 && maxThr >= (effMin ?? 0);\r\n    });\r\n  } else {\r\n    filtered = all.filter(ci => ci.list.length > 0 && ci.thr.length > 0);\r\n  }\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n  return filtered.slice(0, 200);\r\n}\r\n/* ===== 라운드 로빈 타깃 업그레이드 (강제 목표 ‘모두 충족’ 보장) ===== */\r\nfunction optimizeRoundRobinTargets(cores, pool, role, weights, perCoreLimit = 80) {\r\n  const W = sanitizeWeights(weights);\r\n  const thresholdsOf = (grade) => CORE_THRESHOLDS[grade];\r\n  const minOf = (grade) => Math.min(...thresholdsOf(grade));\r\n  const nextThreshold = (grade, current) => {\r\n    const arr = thresholdsOf(grade);\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (arr[i] > (current ?? -Infinity)) return arr[i];\r\n    }\r\n    return null;\r\n  };\r\n  const bestMinHit = (cands, target) => {\r\n    // target 이상 달성 조합 중 “딱 넘기는” 걸 우선\r\n    const ok = cands.filter(ci => (ci.thr.length ? Math.max(...ci.thr) : 0) >= target);\r\n    if (ok.length === 0) return null;\r\n    // totalPoint ASC → totalWill ASC → roleSum DESC → score DESC\r\n    ok.sort((a, b) => {\r\n      if (a.totalPoint !== b.totalPoint) return a.totalPoint - b.totalPoint;\r\n      if (a.totalWill !== b.totalWill) return a.totalWill - b.totalWill;\r\n      if (a.roleSum !== b.roleSum) return b.roleSum - a.roleSum;\r\n      return b.score - a.score;\r\n    });\r\n    return ok[0];\r\n  };\r\n  const bestScore = (cands) => cands.sort((a, b) => b.score - a.score)[0] || null;\r\n  const emptyPick = { list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 };\r\n  // 후보 생성 (현재 젬 풀 기준으로 perCoreLimit 상위만)\r\n  const candidatesFor = (core, gemPool) =>\r\n    enumerateCoreCombos(gemPool, core.grade, role, W, core.minThreshold, core.enforceMin)\r\n      .filter(ci => ci.list.length > 0)\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, perCoreLimit);\r\n  // 젬 풀 조작 헬퍼\r\n  const removeUsed = (gemPool, combo) => {\r\n    if (!combo || !combo.list) return gemPool;\r\n    const used = new Set(combo.list.map(g => g.id));\r\n    return gemPool.filter(g => !used.has(g.id));\r\n  };\r\n  // ---------- [단계 A] 강제 목표 “동시 충족”을 위한 전역 배치 ----------\r\n  // 1) 강제 코어를 우선 배치 대상으로 묶고(원래 순서 유지), 비강제는 뒤로\r\n  const enforcedIdx = cores\r\n    .map((c, i) => c.enforceMin ? i : -1)\r\n    .filter(i => i !== -1);\r\n  const nonEnforcedIdx = cores\r\n    .map((c, i) => !c.enforceMin ? i : -1)\r\n    .filter(i => i !== -1);\r\n  // 강제 코어 시작점을 회전시키며 여러 순열을 시도 → “강제 목표를 만족한 코어 수” 최대안을 채택\r\n  const rotations = Math.max(1, enforcedIdx.length);\r\n  let bestAssignment = { picks: cores.map(_ => emptyPick), remaining: pool.slice(), satisfiedCount: -1, scoreSum: -Infinity };\r\n  for (let r = 0; r < rotations; r++) {\r\n    const start = r % Math.max(1, enforcedIdx.length);\r\n    const ordered = enforcedIdx.length\r\n      ? enforcedIdx.slice(start).concat(enforcedIdx.slice(0, start)).concat(nonEnforcedIdx)\r\n      : nonEnforcedIdx.slice();\r\n    let remaining = pool.slice();\r\n    /** @type {ComboInfo[]} */\r\n    const picks = Array.from({ length: cores.length }, () => emptyPick);\r\n    for (const i of ordered) {\r\n      const c = cores[i];\r\n      const cands = candidatesFor(c, remaining);\r\n      let choice = null;\r\n      if (c.enforceMin) {\r\n        const effMin = (c.minThreshold ?? minOf(c.grade));\r\n        // 강제 단계에서는 “무조건 목표를 넘기는 해”만 선택 (없으면 비워둠)\r\n        choice = bestMinHit(cands, effMin);\r\n      } else {\r\n        // 비강제는 그냥 점수 최선\r\n        choice = bestScore(cands);\r\n      }\r\n      picks[i] = choice || emptyPick;\r\n      remaining = removeUsed(remaining, picks[i]);\r\n    }\r\n    // 강제 목표 달성 개수 및 품질 점수 계산\r\n    let satisfied = 0;\r\n    let quality = 0;\r\n    enforcedIdx.forEach(i => {\r\n      const c = cores[i];\r\n      const effMin = (c.minThreshold ?? minOf(c.grade));\r\n      const maxThr = picks[i].thr.length ? Math.max(...picks[i].thr) : 0;\r\n      if (maxThr >= effMin) satisfied++;\r\n      // tie-breaker: (달성한 thr 높이 + roleSum) 가중\r\n      quality += (maxThr >= effMin ? (maxThr - effMin + 1) : 0) * 1e6 + picks[i].roleSum;\r\n    });\r\n    if (\r\n      satisfied > bestAssignment.satisfiedCount ||\r\n      (satisfied === bestAssignment.satisfiedCount && quality > bestAssignment.scoreSum)\r\n    ) {\r\n      bestAssignment = { picks, remaining, satisfiedCount: satisfied, scoreSum: quality };\r\n    }\r\n  }\r\n  // 선택된 최적 배치\r\n  let picks = bestAssignment.picks;\r\n  let remaining = bestAssignment.remaining;\r\n  // 강제 코어가 모두 목표 달성했는지 확인\r\n  const allMinOk = enforcedIdx.every(i => {\r\n    const c = cores[i];\r\n    const effMin = (c.minThreshold ?? minOf(c.grade));\r\n    const maxThr = picks[i].thr.length ? Math.max(...picks[i].thr) : 0;\r\n    return maxThr >= effMin;\r\n  });\r\n  // 강제 목표가 하나라도 실패면 여기서 종료(가능한 한 많이 맞춘 상태 반환)\r\n  if (!allMinOk) {\r\n    return { picks };\r\n  }\r\n  // ---------- [단계 B] 라운드 로빈 업그레이드 (모두 목표 달성 후) ----------\r\n  let progressed = true;\r\n  while (progressed) {\r\n    progressed = false;\r\n    for (let i = 0; i < cores.length; i++) {\r\n      const c = cores[i];\r\n      const curMax = picks[i].thr.length ? Math.max(...picks[i].thr) : 0;\r\n      const nxt = nextThreshold(c.grade, curMax);\r\n      if (nxt == null) continue;\r\n      // 업그레이드 시도: 현 코어 젬 반납 후 재선택\r\n      // (다른 코어의 젬은 건드리지 않음 — 라운드로빈이 돌아가며 자연 조정)\r\n      // no-loop-func 회피: 콜백이 캡쳐할 변수를 루프 지역 상수로 고정\r\n      const currentRemaining = remaining;\r\n      const currentRemainingIds = new Set(currentRemaining.map(x => x.id));\r\n      const refundList = picks[i].list;\r\n      const poolWithRefund = currentRemaining.concat(\r\n        refundList.filter(g => !currentRemainingIds.has(g.id))\r\n      );\r\n      const cands = candidatesFor(c, poolWithRefund);\r\n      const upgrade = bestMinHit(cands, nxt);\r\n      if (upgrade) {\r\n        // 새 픽으로 교체\r\n        picks[i] = upgrade;\r\n        const usedNew = new Set(upgrade.list.map(g => g.id));\r\n        remaining = poolWithRefund.filter(g => !usedNew.has(g.id));\r\n        progressed = true;\r\n      }\r\n    }\r\n  }\r\n  return { picks };\r\n}\r\n// 역할 선택 시 반대 역할 키 가중치를 0으로 마스킹\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  // 반대 역할 키들은 0\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => {\r\n    next[k] = 0;\r\n  });\r\n  // 선택한 역할 키들은 1\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => {\r\n    next[k] = 1;\r\n  });\r\n  return next;\r\n}\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        // 자식이 function이면 provided/snapshot을 넘겨 \"자식이 직접\" props를 붙이게 함\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    // refs가 동일 ref 객체를 재사용하므로 이 deps로 충분\r\n    [refs]\r\n  );\r\n  // 최신 handler를 참조하도록 ref로 보관\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    // click 시점(캡처링)으로: 내부 onClick 먼저 실행되도록\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ value, items, onChange, placeholder, className }) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);   // 포지션 리렌더 트리거(값은 사용 안 함)\r\n  // 전역 close-all-dropdowns 이벤트 받으면 닫기\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n  // 버튼/메뉴 외부 클릭 시 닫기 (둘 다 제외)\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n  // 열릴 때 버튼 위치 측정 → 고정 포지션으로 포탈 렌더\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = {\r\n      top: rect.bottom + 4,\r\n      left: rect.left,\r\n      width: rect.width,\r\n    };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = {\r\n        top: r.bottom + 4,\r\n        left: r.left,\r\n        width: r.width,\r\n      };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n  const selected = items.find((i) => i.value === value);\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: menuPos.current.top,\r\n          left: menuPos.current.left,\r\n          width: menuPos.current.width,\r\n          zIndex: 9999, // 최상단\r\n        }}\r\n        className=\"rounded-xl border bg-white shadow-lg overflow-auto max-h-60\"\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (it.disabled) return;         // 비활성 항목 클릭 무시\r\n                onChange(it.value);\r\n                setOpen(false);\r\n              }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"\r\n                } ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setOpen((v) => !v)}\r\n        className=\"min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl border px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n      >\r\n        <span className=\"truncate text-sm\">\r\n          {selected ? selected.label : placeholder || \"선택\"}\r\n        </span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value,\r\n  onChange,          // (number|null)=>void\r\n  min,\r\n  max,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true, // blur 시 빈값을 0(or min)으로 보정할지\r\n  className = \"\",\r\n  inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  // 휠로 값 바뀌는 사고 방지(선택)\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"                     // ← 스핀/키보드 ↑↓ 유지\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}                     // ← \"\" 허용 (빈 입력 유지)\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);             // 입력 중 빈값은 null로 보존\r\n          return;\r\n        }\r\n        // number 타입은 브라우저가 숫자형 문자열만 넣어줌(예: \"1\", \"1.2\", \"1e2\")\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num)); // 입력 중에도 숫자 전달(필요하면 null로 바꿔도 됨)\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);          // blur 시에만 확정/보정\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n  // 3-1) 현재 카테고리\r\n  const [category, setCategory] = useState/** @type {Category} */(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  // 3-2) 카테고리별 코어/젬 상태\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n  // (기존) 기타 상태 그대로\r\n  const [role, setRole] = useState(\"dealer\");\r\n  const [weights, setWeights] = useState({ ...DEFAULT_WEIGHTS });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  // 현재 카테고리의 코어/젬만 뽑아쓰기\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n  // 현재 카테고리에 대해서만 set 하는 헬퍼\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const setGems = (updater) => {\r\n    setGemsByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n  const { picks: priorityPicks } = useMemo(\r\n    () => optimizeRoundRobinTargets(cores, gems, role, weights, 80),\r\n    [cores, gems, role, weights]\r\n  );\r\n  const resetWeights = () => setWeights({ ...DEFAULT_WEIGHTS });\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: 0, o2k: \"add\", o2v: 0 }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name)); // 현재 카테고리만\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs; // 변경 취소\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n  // DnD: 코어 순서가 곧 우선순위(위쪽이 더 높음)\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    // 드래그 시작하면 모든 드롭다운 닫기 이벤트 발송\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n  // UI tokens (모바일 최적화 포함)\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  // 인덱스 표기: 코어(위→1), 젬(아래→1)\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n  // ===== Self-tests (non-blocking) =====\r\n  useEffect(() => {\r\n    function runSelfTests() {\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id: \"t1\", will: 1, point: 1, o1k: \"atk\", o1v: 2, o2k: \"brand\", o2v: 3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id: \"t2\", will: 0, point: 10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n  useEffect(() => {\r\n    saveToStorage({\r\n      category,\r\n      coresByCat,\r\n      gemsByCat,\r\n      // 선택적으로 사용자 편의를 위해 가중치/역할도 함께 저장 가능\r\n      role,\r\n      weights,\r\n    });\r\n  }, [category, coresByCat, gemsByCat, role, weights]);\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 프라이머리 컬러 토큰 & 유틸 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n      `}</style>\r\n      {/* 모든 버튼 커서 포인터 */}\r\n      <style>{`button{cursor:pointer}`}</style>\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 타이틀 + 포지션(우측) */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            {/* 카테고리 선택 (먼저 선택) */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0\">\r\n              {/** 질서/혼돈 토글 */}\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 코어 입력 (DnD 우선순위) */}\r\n        <section className={`${card} p-4 lg:p-6 !mt-2 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        CORE_THRESHOLDS[c.grade].map(v => ({ value: String(v), label: `${v}P 이상` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      const coreNameItems = CORE_NAME_ITEMS.map(it => ({\r\n                        ...it,\r\n                        disabled: takenNames.has(it.value)\r\n                      }));\r\n                      const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              {/* Index badge - 모바일 좌측 정렬, 데스크톱 중앙 정렬 */}\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.grade} onChange={(val) => updateCore(c.id, { grade: /** @type {CoreGrade} */(val) })} items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))} placeholder=\"코어 등급\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 구간</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val), enforceMin: true }); else updateCore(c.id, { minThreshold: undefined, enforceMin: false }); }} items={targetItems} placeholder=\"구간\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">목표 구간 강제</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">선택 안 함이면 내부적으로 <br className=\"hidden lg:block\" />최소 구간 <b className=\"text-primary\">{minOfGrade}P</b>을 기본 목표로 적용합니다.</p>\r\n                              </div>\r\n                              {/* 모바일: 순서 버튼 + 삭제 버튼 묶음 */}\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3 mb-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                {/* 필요 의지력 + 포인트 */}\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* 옵션 1 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* 옵션 2 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16} /><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm`}>\r\n            <span className=\"text-xs text-gray-500\">포지션 선택</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"dealer\"}\r\n                onChange={() => {\r\n                  setRole(\"dealer\");\r\n                  setWeights((w) => maskWeightsForRole(w, \"dealer\"));\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              딜러\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"support\"}\r\n                onChange={() => {\r\n                  setRole(\"support\");\r\n                  setWeights((w) => maskWeightsForRole(w, \"support\"));\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              서포터\r\n            </label>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k]}\r\n                    onChange={(v) => setWeights((w) => ({ ...w, [k]: (v) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = priorityPicks?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name} <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>유효 옵션 합(<span className=\"font-semibold\">{role === 'dealer' ? \"딜러\" : \"서폿\"}</span>) <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 구간을 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">유효합</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">유효합 {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(2))}</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\nconst USE_ANTITHETIC = true;   // 저분산 고정 ON\r\nconst AUTO_SCALE_RARE = true;  // 자동 스케일업 고정 ON\r\n/* =========================\r\n   결정적 RNG 유틸리티 (원본 유지)\r\n   ========================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n// === 확률 경계 헬퍼 ===\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n/* =========================\r\n   등급/젬타입/상수 (원본 유지)\r\n   ========================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n// 고정 TRIALS 대신 opts로 제어 (기본값은 적당히 큼)\r\n// maxTrials: 최대 시뮬 회수, epsilon: 95% CI 반폭(절대값), batch: 배치 크기\r\n// note: successProb는 베르누이 평균이라 표준오차를 정확히 계산 가능\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n// % 포맷: 원래 값 그대로, 소수점 5자리 고정\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";           // 완전 0%면 0\r\n  if (x >= 1) return \"100.00000%\";                          // 전부 성공이면 100.00000%\r\n  return (x * 100).toFixed(5) + \"%\";                        // 그 외는 5자리 고정\r\n}\r\n// 레거시 호환\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n// 기대비용: 성공 1회 얻기 위해 드는 평균 골드 (확률이 낮을수록 ↑)\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity; // 성공확률 0%면 무한대 취급\r\n  return expectedGold / p;\r\n}\r\n// 퍼센트 유틸: width 계산용\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n// 시각적 뱃지(난이도): 확률이 낮을수록 \"골드부담 ↑\"\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n// 확률 추정기: mle(기본), laplace, jeffreys\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  // ✅ 경계 스냅: 전부 성공이면 1(=100%)로 고정\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":   // Beta(1,1) 사전 → (s+1)/(n+2)\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":  // Beta(0.5,0.5) 사전 → (s+0.5)/(n+1)\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\nconst OFFICIAL_RNG = true;\r\n/* ===== 시뮬레이션 횟수 옵션/헬퍼 ===== */\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n// 0 successes일 때의 95% 상한 (Clopper–Pearson 근사)\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n); // ~= 3/n\r\n}\r\n// 반복 수에 따른 수렴 기준(95% CI 반폭)과 배치 크기\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001; // ±0.01%p\r\n  if (n >= 100000) return 0.0002; // ±0.02%p\r\n  if (n >= 50000) return 0.0003; // ±0.03%p\r\n  if (n >= 10000) return 0.0005; // ±0.05%p\r\n  if (n >= 5000) return 0.0007; // ±0.07%p\r\n  return 0.001;                   // ±0.10%p\r\n};\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n/* =========================\r\n   효과명/포지션/스코어/목표 (원본 유지)\r\n   ========================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  // 이름 기반 목표: 유효풀(공격형/서폿) 내에서만 선택 가능하므로 UI가 보장하지만,\r\n  // 안전하게 한 번 더 보정\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n  if (abMode === \"ANY_ONE\") {\r\n    // 한 개 목표만 의미: (A 라인 or B 라인)가 \"목표 이름 A\" + 레벨≥t.aLvl\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    // BOTH: 두 개 목표 모두 충족 (순서 상관없이 A/B에 배치되기만 하면 됨)\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  // 기본(의지력 효율/포인트) 부족분\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    // A라인을 TA로 맞추기 vs B라인을 TA로 맞추기\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    // (A→TA + B→TB) vs (A→TB + B→TA) 중 더 싼 배치\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n/* =========================\r\n   가중치/라벨/슬롯/적용 (원본 유지)\r\n   ========================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\"); // 역할군 풀을 쓰려면 pos, 전체풀 쓰려면 \"상관 없음\"\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n  return items;\r\n}\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n/* =========================\r\n   시뮬레이션 (원본 유지)\r\n   ========================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n// ✅ 저분산(안티테틱) + 희귀사건 자동 스케일업(rare-guard) 버전\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    // ⬇️ 신규 옵션\r\n    useAntithetic = true,          // 저분산(권장): 안티테틱 페어 사용\r\n    autoScaleRare = true,          // 희귀사건 가드\r\n    rareTargetSuccesses = 100,      // 희귀사건 시 확보할 성공 표본 수 목표\r\n    rareMaxTrials = 200000,            // (구버전 호환용)\r\n    rareTiers = [200000], // ← 순차 확장 티어\r\n  } = opts;\r\n  // 의도 동일 (그대로)\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n  // ▶︎ 한 회 시뮬레이션 (특정 난수 발생기 rand를 주입)\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n  // 집계 변수\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n  // 동적으로 늘어날 수 있는 상한\r\n  let localMaxTrials = maxTrials;\r\n  // 추가: 희귀 강제 모드(0% 판독 시 일반 종료조건을 무시)\r\n  let forceRare = false;\r\n  // 희귀 티어 헬퍼\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    // 32-bit 안전 시드 셔플\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n  while (n < localMaxTrials) {\r\n    // 한 번에 돌릴 \"스텝\" 수 (안티테틱 켰으면 실제 trial 수는 최대 2배)\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      // 남은 예산 확인\r\n      if (n >= localMaxTrials) break;\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n      // 기본 경로\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n      // 안티테틱 페어 (같은 시드로 1-u 사용)\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n    // 0%면 즉시 희귀 강제 모드로 전환하고 상한을 '다음 티어'로 점프\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      // 최초엔 최소 티어까지, 이미 티어면 다음 티어로\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;   // ← 일반 조기 종료를 잠시 비활성화\r\n      continue;\r\n    }\r\n    // 희귀사건 가드: 성공 표본 부족하면 상한을 키워 더 돌린다(점진 확장)\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n    if (rareGuardActive) {\r\n      // 티어 기반 점프: 20만 → 50만 → 100만 (더 이상 티어 없으면 현 상한 유지)\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue; // 더 돌린다\r\n    }\r\n    // 일반 수렴 조건\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  // UI용: 원시 성공 회수(정수)\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n// ===== 등급별 그라디언트 색상 (start를 적당히 어둡게 조정) =====\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",  // 전설: 진한 오렌지브라운 → 골드브라운\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",  // 유물: 다크 오렌지레드 → 토마토브라운\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",  // 고대: 중간 골드브라운 → 레몬쉬폰\r\n};\r\n// 등급 확률 정렬 + 부등호(>=) 체인 생성용\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  // 0%는 표시 대상에서 제거\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n/* ===============================\r\n   공통 UI(LoACore 스타일): Dropdown + Toast + NumberInput\r\n   =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ \r\n  value, \r\n  items, \r\n  onChange, \r\n  placeholder, \r\n  className, \r\n  disabled, \r\n  bordered = true // 기본값: border 있음\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => { \r\n      window.removeEventListener(\"scroll\", onScroll); \r\n      window.removeEventListener(\"resize\", onScroll); \r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value,\r\n  set,                 // (old) (number)=>void\r\n  onChange,            // (new) (number|null)=>void\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n  // wheel 값 변동 방지(의도치 않은 증가/감소)\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  // 구버전/신버전 핸들러 분기\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        // 입력 중 빈 문자열 허용\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          // 구버전(set)은 입력 중 null을 전달하지 않음 (기존 동작 유지)\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          // 새 API: 입력 중에도 값 알림(클램프는 blur 시 확정)\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          // 구 API: 즉시 클램프 + 업데이트 (기존 동작과 동일)\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          // 구 API: null을 허용하지 않으므로 보정값(또는 min/0) 전달\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n/* ===============================\r\n   원래 Select API를 유지하면서 내부는 Dropdown 사용\r\n   =============================== */\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n/* =========================\r\n   중복 라벨 검출 (원본 유지)\r\n   ========================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n/* =========================\r\n   메인 컴포넌트\r\n   ========================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],   // 유효풀에서 시작\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n  // 시작 상태가 포지션 풀과 안 맞아도 계산은 진행 (이름 변경으로 충족 가능)\r\n  const curValid = cur.aName !== cur.bName;\r\n  // 시뮬레이션 반복 수 (Monte Carlo maxTrials)\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n  const migratedRef = useRef(false); // StrictMode 중복 실행 방지(개발모드)\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n  const [changeMode, setChangeMode] = useState(null); // { who: 'A'|'B', options: string[] }\r\n  const [changePick, setChangePick] = useState(\"\");\r\n  // ==== Undo/Redo 히스토리 ====\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n  // manual, changeMode, changePick 을 하나의 스냅샷으로 관리\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      // 용량 제한\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n  // ==== 작업 내역(Log) ====\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]); // 최신이 위로 오게 저장\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n  const addLog = useCallback((entry) => {\r\n    // entry: { type, title, detail?, meta? }\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      // 상태 복원\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      // 상태 복원\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n  // ⌨️ 단축키: Ctrl/Cmd+Z = Undo, Ctrl/Cmd+Shift+Z = Redo\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n  // 상태 비교해서 읽기 쉬운 diff 문자열 만들어주기\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n  // 포지션/젬타입 바뀔 때 목표 이름을 유효풀로 보정\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n  // 높이 동기화 refs & 상태\r\n  const simRef = useRef(null);       // 왼쪽(가공 시뮬레이션) 카드\r\n  const [logsMax, setLogsMax] = useState(null); // 오른쪽 카드 max-height(px)\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n    // 왼쪽 카드 높이에 영향을 주는 값들이 갱신되면 다시 계산\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n  /* 다른 항목 보기 EV (원본 유지) */\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        // 라벨별로도 결정성을 주고 싶다면 seed 변형해서 rand 쓰기 가능\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct(nowProb)} → 다른 항목 보기 기대 ${pct(rerollProb)} (▲${pct(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct(nowProb)}가 다른 항목 보기 기대 ${pct(rerollProb)}보다 유리 (▼${pct(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct(nowProb)} vs 다른 항목 보기 ${pct(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n  // BOTH로 전환 시, 목표 이름에 '상관없음'이 포함되어 있으면 유효한 이름으로 자동 보정\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n  /* 확률 계산 트리거 */\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    // 이전 예약 취소\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    // clean up: 이 이펙트가 갱신/언마운트되면 예약 취소 + 로딩 정리\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n  /* 사용자 액션: 토스트로 안내 */\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n    // 🔁 부여 효과 변경은 '선택 모드'로 전환하여 왼쪽에서 사용자가 직접 고르게 함\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return; // ✅ 여기서 종료 (아직 시도/골드 소모하지 않음)\r\n    }\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory(); // 변경 전 스냅샷 저장\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n  function manualReset() {\r\n    setLogs([]);   // 작업 내역 삭제\r\n    setHistory({ past: [], future: [] }); // 히스토리도 같이 초기화하면 깔끔\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory(); // 변경 전 스냅샷 저장\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1, // 이번 차수 소비\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n  /* ====== UI 토큰 ====== */\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n  const dupWarnShown = useRef(false);\r\n  // allLocked이 false로 변하면 logs 초기화\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);   // 작업 내역 삭제\r\n      setHistory({ past: [], future: [] }); // 히스토리도 같이 초기화하면 깔끔\r\n    }\r\n  }, [allLocked]);\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base; // BOTH면 '상관없음' 제외\r\n  }, [gemKey, pos, abModePrimary]);\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n      `}</style>\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 1) 기본 설정 */}\r\n        {/* 1) 기본 설정 */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n            {/* 타이틀 우측: 저장/편집 버튼 (LoACoreOptimizer 스타일) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* 코어 카드와 동일한 레이아웃/간격/높이 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n              {/* 등급 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n              {/* 가공/다른 항목 보기 */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 2) 현재 옵션 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* 2) 현재 옵션 설정 — 입력 블록 교체(간격/폭 기본설정 카드와 동일) */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 포인트 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 효과 A */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n              {/* A 레벨 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 효과 B */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n              {/* B 레벨 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 3) 목표 옵션 설정 — 입력 블록 교체(간격/폭 LoACore와 동일) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n            {/* ⬇️ 헤더 우측: '목표 충족 방식'을 저장/편집 버튼 왼쪽에 배치 */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {/* 저장/편집 토글 버튼 (그대로) */}\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n          {/* LoACore 코어행과 동일한 한 줄 카드 레이아웃 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 ≥ */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n              {/* 포인트 ≥ */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n              {/* 추가 효과 — 모바일에서 col-span-2 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 이름 A */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n                    {/* A 레벨 ≥ */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n                    {/* 목표 이름 B (BOTH일 때만 활성) */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n                    {/* B 레벨 ≥ */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 4) 가공 시뮬레이션 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 타이틀 + 우측 액션 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* 🔹 안내문 추가 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 왼쪽: 상태/리소스(가독성 업) */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n                {/* 작은 스탯 카드 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* 리소스 칩 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* 오른쪽: 선택지 + 액션 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* 6) 작업 내역 */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n        {/* 5) 결과 출력 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* ▷ 스켈레톤 전체 덮개: 계산 중/미준비 상태면 전체를 스켈레톤으로 */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 칩 스켈레톤 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 카드 스켈레톤 (2장) */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* ▷ 실제 결과 UI: 스켈레톤이 아닐 때 한 번에 노출 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      {/* STOP_ON_SUCCESS */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                      {/* RUN_TO_END */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n                  {/* 등급 확률 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      // ✅ 0%도 포함해서 모두 보여준다\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* ✅ 100%면 확정 배지 유지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) /* 0%면 막대폭 0% */ }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                    {/* 확률 순서 표시: 0%만 제외, 100%는 (확정) 표기 유지 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun); // ← 이 함수 안에서 0% 필터 유지\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp } from \"lucide-react\";\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll(); // 초기 상태 반영\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\nfunction TopFab() {\r\n  const visible = useNearBottom(520); // 아래 끝 520px 근처에서 등장\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)]\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          visible ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default function CoreOnly() {\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n<header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n  <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n    <nav aria-label=\"Core pages\">\r\n      <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n        <li>\r\n          <NavLink\r\n            to=\"/gem\"\r\n            className={({ isActive }) =>\r\n              [\r\n                \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\" // 은은한 브랜드 틴트\r\n                  : \"text-gray-700 hover:bg-gray-50\"\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 가공 헬퍼\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/optimizer\"\r\n            className={({ isActive }) =>\r\n              [\r\n                \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\"\r\n                  : \"text-gray-700 hover:bg-gray-50\"\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 장착 헬퍼\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</header>\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n            {/* 기본 경로 보정: /core → /core/optimizer */}\r\n            <Route path=\"*\" element={<Navigate to=\"/gem\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n      <TopFab /> \r\n    </HashRouter>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;"],"names":["CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","CORE_NAME_ITEMS","value","label","CATEGORY_LABEL","order","chaos","LS_KEY","CORE_ORDER","uid","Math","random","toString","slice","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_w$g$o1k","_w$g$o2k","has","o1k","o1v","o2k","o2v","combinations","arr","n","length","idx","Array","from","_","i","map","p","j","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","optimizeRoundRobinTargets","cores","pool","perCoreLimit","arguments","undefined","W","thresholdsOf","minOf","min","nextThreshold","current","Infinity","bestMinHit","cands","target","ok","ci","max","sort","a","b","bestScore","emptyPick","list","candidatesFor","core","gemPool","minThreshold","enforceMin","supply","minOfGrade","effMin","effEnforce","all","maxPick","push","filtered","maxThr","enumerateCoreCombos","removeUsed","used","id","enforcedIdx","c","nonEnforcedIdx","rotations","bestAssignment","picks","remaining","satisfiedCount","scoreSum","r","start","ordered","concat","choice","_c$minThreshold","satisfied","quality","_c$minThreshold2","every","_c$minThreshold3","progressed","curMax","nxt","currentRemaining","currentRemainingIds","x","refundList","poolWithRefund","upgrade","usedNew","maskWeightsForRole","prev","next","loadFromStorage","localStorage","getItem","JSON","parse","e","console","warn","dragPortal","document","body","PortalAwareDraggable","_ref","draggableId","index","children","_jsx","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","className","open","setOpen","useState","btnRef","useRef","menuRef","menuPos","top","left","width","forceTick","useEffect","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","isArray","handlerRef","listener","_handlerRef$current","some","contains","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","selected","find","menu","AnimatePresence","motion","ul","ref","initial","opacity","y","animate","exit","transition","duration","style","position","zIndex","it","type","onClick","disabled","String","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref3","toasts","onClose","div","scale","stiffness","damping","msg","NumberInput","_ref4","step","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","clamp","inputMode","onBlur","onWheel","currentTarget","blur","LoACoreOptimizer","title","category","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","remove","setToasts","setTimeout","useToasts","gems","setCores","updater","setGems","priorityPicks","useMemo","updateGem","patch","updateCore","cs","name","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","displayIndexGem","total","_w$brand","assert","gem","includes","cA","cB","log","runSelfTests","data","setItem","stringify","saveToStorage","backgroundImage","backgroundAttachment","addCore","nextName","existingNames","nextAvailableCoreName","Plus","DragDropContext","onDragStart","requestAnimationFrame","evt","Event","dispatchEvent","onDragEnd","result","destination","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","targetItems","takenNames","coreNameItems","prov","_c$minThreshold4","draggableProps","dragHandleProps","val","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","removeGem","resetWeights","RotateCcw","pick","hasResult","toFixed","_Fragment","_g$will2","_g$point2","gi","findIndex","disp","KakaoAdfit","USE_ANTITHETIC","AUTO_SCALE_RARE","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","lo","hi","fmtProbSmart","fmtProb","fmtNum","toLocaleString","goldPerSuccess","expectedGold","pct","round","burdenBadge","tone","estimateRate","successes","OFFICIAL_RNG","SIM_OPTIONS","zeroSuccessUpperBound","alpha","pow","epsilonByTrials","batchByTrials","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","meetsTargetByMode","abMode","tgtNames","isAny","nm","TA","aName","TB","bName","match","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","parseInt","replace","trim","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","floor","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","sum","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","gold","rrs","unlocked","rate","first","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","low","high","halfWidth","localMaxTrials","forceRare","tiers","hardCap","nextTier","cur","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","bordered","toneBtn","success","info","warning","error","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","Boolean","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","m","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","useCallback","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","d","Date","pad","padStart","getHours","getMinutes","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","key","toLowerCase","preventDefault","shiftKey","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","out","cursor","_allOptionLabels$curs","_ref5","_allOptionLabels$curs2","manLabels","setManLabels","_ref6","_allOptionLabels$i","replacement","l","resultStop","setResultStop","resultRun","setResultRun","isComputing","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","gps","badge","delay","grades","grad","comps","eps","diff","abs","rankGradeOrder","TopFab","visible","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","scrollTo","behavior","CoreOnly","HashRouter","basename","NavLink","to","isActive","Routes","Route","path","element","Navigate","adRef","ins","createElement","display","setAttribute","script","async","src","innerHTML","appendChild"],"sourceRoot":""}