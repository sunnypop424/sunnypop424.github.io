{"version":3,"file":"static/js/334.d3f06659.chunk.js","mappings":"yJAsBA,QArBA,WACE,MAAMA,GAAQC,EAAAA,EAAAA,QAAO,MAkBrB,OAjBAC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,UAAY,gBAChBH,EAAII,MAAMC,QAAU,OACpBL,EAAIM,aAAa,eAAgB,wBACjCN,EAAIM,aAAa,gBAAiB,OAClCN,EAAIM,aAAa,iBAAkB,MACnC,MAAMC,EAASN,SAASC,cAAc,UACtCK,EAAOC,KAAO,kBACdD,EAAOE,OAAQ,EACfF,EAAOG,IAAM,wCACTb,EAAMc,UACRd,EAAMc,QAAQC,UAAY,GAC1Bf,EAAMc,QAAQE,YAAYb,GAC1BH,EAAMc,QAAQE,YAAYN,KAE3B,KACIO,EAAAA,EAAAA,KAAA,OAAKC,IAAKlB,EAAOM,UAAU,yBACpC,C,+QCpBO,SAASa,EAAUC,GAAqB,IAAhBT,EAAIU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAEpCG,OAAOC,cAAc,IAAIC,YAAY,YAAa,CAAEC,OAAQ,CAAEP,MAAKT,UACrE,C,aCOA,MAAMiB,EAAY,CAChB,qBAAO,MACP,4BAAS,MACT,4BAAS,OACT,qBAAO,QACP,yCAAY,UACZ,yCAAY,WAMd,SAASC,IAA2C,IAAhBC,EAAQT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC7C,MAAMU,EAAQC,GACZC,OAAQ,OAADD,QAAC,IAADA,EAAAA,EAAK,IACTE,QAAQ,MAAO,IACfC,MAAM,MACNC,IAAKC,GAAMA,EAAEC,QACbC,OAAOC,SAENC,EAAIV,EARiBV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IASxBqB,EAAIX,EAAKD,GAETa,EAAS,CACb,yCACA,yCACA,4BACA,4BACA,qBACA,sBASF,SAASC,EAAWC,GAClB,MAAMC,EAAU,OAAJD,QAAI,IAAJA,EAAAA,EAAQ,GACdE,EAROA,IACbd,OAAQ,OAADc,QAAC,IAADA,EAAAA,EAAK,IACTb,QAAQ,gCAAiC,KACzCA,QAAQ,OAAQ,KAChBI,OAIOU,CAAMF,GAEhB,IAAIG,EAAW,KACf,IAAK,MAAMC,KAAOP,EAChB,GAAII,EAAEI,SAASD,GAAM,CACnBD,EAAWC,EACX,KACF,CAGF,IAAIE,EAAQC,IACZ,MAAMC,EAAOP,EAAEQ,MAAM,QAIrB,OAHID,GAAQA,EAAKhC,SACf8B,EAAQI,SAASF,EAAKA,EAAKhC,OAAS,GAAI,KAEnC,CAAE2B,WAAUG,QAAOtB,SAAUgB,EACtC,CAEA,MAAMW,EAAO,GACPC,EAAIC,KAAKC,IAAInB,EAAEnB,OAAQoB,EAAEpB,QAC/B,IAAK,IAAIuC,EAAI,EAAGA,EAAIH,EAAGG,IAAK,CAAC,IAADC,EAAAC,EAC1B,MAAMC,EAAc,QAAPF,EAAGrB,EAAEoB,UAAE,IAAAC,EAAAA,EAAI,GAGlBG,EAAQrB,EAFO,QAAPmB,EAAGrB,EAAEmB,UAAE,IAAAE,EAAAA,EAAI,IAGzBN,EAAKS,KAAK,CACRC,KAAMH,EACNf,SAAUgB,EAAMhB,SAChBG,MAAOa,EAAMb,MACbgB,QAASJ,EACTlC,SAAUmC,EAAMnC,UAEpB,CAEA,OAAO2B,CACT,CA0De,SAASY,EAAkBC,GAAgC,IAADC,EAAA,IAA9B,KAAEC,EAAI,QAAEC,EAAO,UAAEC,GAAWJ,EACrE,MAAOK,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,CAAEG,MAAO,GAAIC,IAAK,EAAGC,eAAe,KAEtEC,EAAMC,IAAWP,EAAAA,EAAAA,UAAS,OAC1BQ,EAAQC,IAAaT,EAAAA,EAAAA,UAAS,OAC9BU,EAAYC,IAAiBX,EAAAA,EAAAA,UAAS,CAAEY,EAAG,EAAGC,EAAG,KAGjDC,EAASC,IAAcf,EAAAA,EAAAA,UAAS,OAEhCgB,EAAaC,IAAkBjB,EAAAA,EAAAA,UAAS,KAExCkB,EAAgBC,IAAqBnB,EAAAA,EAAAA,UAAS,OAG9CoB,EAAMC,IAAWrB,EAAAA,EAAAA,UAAS,OAC1BsB,EAAMC,IAAWvB,EAAAA,EAAAA,UAAS,WAE3BwB,GAAUpG,EAAAA,EAAAA,QAAO,MACjBqG,GAASrG,EAAAA,EAAAA,QAAO,MAChBsG,GAAWtG,EAAAA,EAAAA,QAAO,MAGlBuG,GAASC,EAAAA,EAAAA,SAAQ,KACrB,IACE,OAAO,IAAIC,OAAO,IAAIC,IAAI,kBAAqD,CAAEhG,UAAM,GACzF,CAAE,MACA,OAAO,IAAI+F,OAAO,IAAIC,IAAI,kBAC5B,GACC,KAGHzG,EAAAA,EAAAA,WAAU,KACR,IAAKsG,EAAQ,OACb,MAAMI,EAAaC,IACjB,MAAM,KAAElG,EAAI,QAAEmG,GAAYD,EAAGE,MAAQ,CAAC,EACtC,GAAa,aAATpG,EACFoE,EAAY+B,QACP,GAAa,SAATnG,EAAiB,CAC1BiE,GAAQ,GACRG,EAAY,CAAEC,MAAO,GAAIC,IAAK,EAAGC,eAAe,IAGhD8B,QAAQC,eAAe,iCAAkC,iBACzDD,QAAQE,KAAW,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,cAAe,WACpCH,QAAQI,WAGRJ,QAAQC,eAAe,iCAAkC,iBACzDD,QAAQE,IAAI,eAAuB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAAS1C,UAAW,YAChD4C,QAAQE,IAAI,gBAAwB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAAShF,WAAY,YAClDkF,QAAQI,WAGR,MAAMC,EAASxF,GAAoB,OAAPiF,QAAO,IAAPA,OAAO,EAAPA,EAAS1C,UAAW,IAAW,OAAP0C,QAAO,IAAPA,OAAO,EAAPA,EAAShF,WAAY,IACzEkF,QAAQC,eAAe,qCAAqCI,EAAO/F,SAAU,iBAC7E+F,EAAOC,QAAQ,CAACC,EAAG1D,KAAO,IAAD2D,EACvBR,QAAQE,IACN,IAAIrD,EAAI,IACR,SAAS0D,EAAEpD,QACX,SAAmB,QAAnBqD,EAASD,EAAEtE,gBAAQ,IAAAuE,EAAAA,EAAI,QACvB,MAAMC,OAAOC,SAASH,EAAEnE,OAASmE,EAAEnE,MAAQ,SAG/C4D,QAAQI,WAER,MAAM,KAAEO,EAAI,QAAEC,GA1HtB,WAAsC,IAAZC,EAAIxG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC/B,MAAMsG,EAAO,GACPC,EAAU,GAEVE,EAASzF,IACb,GAAiB,kBAANA,GAAkBoF,OAAOC,SAASrF,GAAI,OAAOA,EACxD,MAAML,EAAIC,OAAQ,OAADI,QAAC,IAADA,EAAAA,EAAK,IACnBC,OACAJ,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACd6F,EAAIvE,SAASxB,EAAG,IACtB,OAAOyF,OAAOC,SAASK,GAAKA,EAAI1E,KAG5B2E,EAAS9E,IAAG,IAAA+E,EAAA,OAAM/E,GAAoB,QAAjB+E,EAAGrG,EAAUsB,UAAI,IAAA+E,EAAAA,EAAW,MACjDC,EAAWC,IACf,MAAMJ,EAAIN,OAAOU,GACjB,OAAOV,OAAOC,SAASK,GAAKpE,KAAKC,IAAI,EAAGD,KAAKyE,IAAI,EAAGL,IAAM,MAG5D,IAAK,IAAIlE,EAAI,EAAGwE,EAAS,EAAGxE,EAAIgE,EAAKvG,OAAQuC,GAAK,EAAGwE,IAAU,CAC7D,MAAMC,EAAIT,EAAKhE,GACT0E,EAAIV,EAAKhE,EAAI,GACnB,IAAKyE,IAAMC,EAAG,MAEd,MAAMpE,EAAO2D,EAAMQ,EAAEnE,MACfqE,EAAQV,EAAMS,EAAEpE,MAEtB,IAAKsD,OAAOC,SAASvD,KAAUsD,OAAOC,SAASc,GAAQ,CACrDZ,EAAQ1D,KAAKmE,GACb,QACF,CAEA,MAAMI,EAAMT,EAAMM,EAAErF,UACdyF,EAAMV,EAAMO,EAAEtF,UAEpB0E,EAAKzD,KAAK,CACRC,OACAqE,QACAG,KAAM,CAAE3D,MAAOyD,EAAKrF,MAAO8E,EAAQI,EAAElF,OAAQN,IAAKwF,EAAExG,UACpD8G,KAAM,CAAE5D,MAAO0D,EAAKtF,MAAO8E,EAAQK,EAAEnF,OAAQN,IAAKyF,EAAEzG,UACpD+G,KAAM,CACJC,MAAOR,EAAElE,QACT2E,OAAQT,EAAExG,SACVkH,MAAOT,EAAEnE,QACT6E,OAAQV,EAAEzG,WAGhB,CAEA,MAAO,CAAE6F,OAAMC,UACjB,CAqEkCsB,CAAiB7B,GAE3CL,QAAQC,eAAe,yCAAyCU,EAAKrG,SAAU,iBAC/EqG,EAAKL,QAAQ,CAAC6B,EAAGtF,KACfmD,QAAQE,IACN,QAAQrD,EAAI,IACZ,QAAQsF,EAAEhF,OACV,SAASgF,EAAEX,QACX,QAAQW,EAAER,KAAK3D,YAAYmE,EAAER,KAAKvF,SAClC,QAAQ+F,EAAEP,KAAK5D,YAAYmE,EAAEP,KAAKxF,YAGtC4D,QAAQI,YAEHQ,GAAW,IAAItG,QAClB0F,QAAQoC,KAAK,sEAA0BxB,EAAQyB,KAAK,OAG7C,OAAT3E,QAAS,IAATA,GAAAA,EAAY,IAAKoC,EAASO,SAAQM,OAAM2B,YAAa1B,GACvD,MAAO,GAAa,UAATjH,EAAkB,CAAC,IAAD4I,EAC3B3E,GAAQ,GACRG,EAAY,CAAEC,MAAO,GAAIC,IAAK,EAAGC,eAAe,IAChD8B,QAAQwC,MAAM,sBAAuC,QAAlBD,EAAS,OAAPzC,QAAO,IAAPA,OAAO,EAAPA,EAAS2C,eAAO,IAAAF,EAAAA,EAAIzC,EAASA,GAClE3F,EAAU,sJAAoC,QAChD,GAGF,OADAqF,EAAOkD,iBAAiB,UAAW9C,GAC5B,IAAMJ,EAAOmD,oBAAoB,UAAW/C,IAClD,CAACJ,EAAQ9B,KAGZxE,EAAAA,EAAAA,WAAU,KACR,IAAKiF,EAEH,YADAG,EAAU,MAGZ,MAAMsE,EAAMjD,IAAIkD,gBAAgB1E,GAEhC,OADAG,EAAUsE,GACH,IAAMjD,IAAImD,gBAAgBF,IAChC,CAACzE,IAGJ,MASM4E,EAAkBC,EAAAA,YAAkB,KACxCpE,EAAW,MACXE,EAAe,IACfE,EAAkB,MAClBE,EAAQ,OACP,IAKG+D,EAAqBD,EAAAA,YAAkBpJ,UAC3C,IAAK,IAADsJ,EACF,GAAuB,QAAvBA,EAAIC,UAAUC,iBAAS,IAAAF,GAAnBA,EAAqBG,KAAM,CAC7B,MAAMC,QAAcH,UAAUC,UAAUC,OACxC,IAAK,MAAME,KAAQD,EACjB,IAAK,MAAM3J,KAAQ4J,EAAKC,MACtB,GAAI7J,EAAK8J,WAAW,UAAW,CAC7B,MAAMC,QAAaH,EAAKI,QAAQhK,GAC1BwE,EAAO,IAAIyF,KAAK,CAACF,GAAO,UAAUG,KAAKC,YAAa,CAAEnK,KAAM+J,EAAK/J,MAAQ,cAI/E,OAHAoJ,IACA3E,EAAQD,QACRiB,EAAQ,UAEV,CAGJjF,EAAU,oJAAkC,UAC9C,MAEEA,EAAU,2MAAsD,OAEpE,CAAE,MAAO4J,GACP/D,QAAQwC,MAAM,uBAAwBuB,GACtC5J,EAAU,+NAAsD,QAClE,GACC,CAAC4I,IAKEiB,EAAeC,IAAO,IAADC,EACzB,MAAMC,EAAmB,QAAlBD,EAAG7E,EAAQvF,eAAO,IAAAoK,OAAA,EAAfA,EAAiBE,wBAC3B,IAAKD,EAAG,MAAO,CAAEE,EAAG,EAAGC,EAAG,GAC1B,MAAMD,EAAIJ,EAAEM,QAAUJ,EAAEK,KAClBF,EAAIL,EAAEQ,QAAUN,EAAEO,IACxB,MAAO,CACLL,EAAG1H,KAAKC,IAAI,EAAGD,KAAKyE,IAAIiD,EAAGF,EAAEQ,QAC7BL,EAAG3H,KAAKC,IAAI,EAAGD,KAAKyE,IAAIkD,EAAGH,EAAES,WAK3BC,EAAoBC,IAAS,IAADC,EAChC,MAAMZ,EAAmB,QAAlBY,EAAG1F,EAAQvF,eAAO,IAAAiL,OAAA,EAAfA,EAAiBX,wBAC3B,IAAKD,IAAMA,EAAEQ,QAAUR,EAAES,SAAWrG,EAAWE,IAAMF,EAAWG,EAAG,OAAO,KAC1E,MAAMsG,EAAKzG,EAAWE,EAAI0F,EAAEQ,MACtBM,EAAK1G,EAAWG,EAAIyF,EAAES,OAC5B,MAAO,CACLP,EAAG1H,KAAKC,IAAI,EAAGD,KAAKuI,MAAMJ,EAAIT,EAAIW,IAClCV,EAAG3H,KAAKC,IAAI,EAAGD,KAAKuI,MAAMJ,EAAIR,EAAIW,IAClCxG,EAAG9B,KAAKC,IAAI,EAAGD,KAAKuI,MAAMJ,EAAIrG,EAAIuG,IAClCtG,EAAG/B,KAAKC,IAAI,EAAGD,KAAKuI,MAAMJ,EAAIpG,EAAIuG,OAOtC/L,EAAAA,EAAAA,WAAU,KACR8F,EAAkB,OACjB,CAACG,KAmDJjG,EAAAA,EAAAA,WAAU,KACR,IAAKsE,EAAM,OACX,MAAM2H,EAAUvL,UACd,MAAMwL,EAAKnB,EAAEoB,cACb,IAAKD,EAAI,OAGT,MAAM9B,EAAQ8B,EAAG9B,OAAS,GAC1B,IAAK,MAAMgC,KAAMhC,EAAO,CAAC,IAADiC,EACtB,GAAW,QAAXA,EAAID,EAAG3L,YAAI,IAAA4L,GAAPA,EAAS9B,WAAW,UAAW,CAAC,IAAD+B,EACjC,MAAMC,EAAgB,QAAfD,EAAGF,EAAGI,iBAAS,IAAAF,OAAA,EAAZA,EAAAG,KAAAL,GACV,GAAIG,EAKF,OAJAxB,EAAE2B,iBACF7C,IACA3E,EAAQqH,QACRrG,EAAQ,UAGZ,CACF,CACAjF,EAAU,oJAAkC,YAG9C,OADAK,OAAOkI,iBAAiB,QAASyC,EAAS,CAAEU,SAAS,IAC9C,IAAMrL,OAAOmI,oBAAoB,QAASwC,EAAS,CAAEU,SAAS,KACpE,CAACrI,EAAMuF,IA0CV,OAAKvF,GAEEsI,EAAAA,EAAAA,eACL7L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,+FAA8FyM,UAE3GC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wGAAuGyM,SAAA,EAEpHC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iEAAgEyM,SAAA,EAC7E9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gBAAeyM,SAAC,qEAC/B9L,EAAAA,EAAAA,KAAA,UACEX,UAAU,+EACV2M,QAASxI,EACT,aAAW,eAAIsI,UAEf9L,EAAAA,EAAAA,KAACiM,EAAAA,EAAC,CAACC,KAAM,WAKbH,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wBAAuByM,SAAA,EAEpCC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,+BAA8ByM,SAAA,EAC3CC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oCAAmCyM,SAAA,EAChDC,EAAAA,EAAAA,MAAA,UACE1M,UAAU,wFACV2M,QAvNGG,KAAA,IAAAC,EAAA,OAAsB,QAAtBA,EAAM9G,EAASzF,eAAO,IAAAuM,OAAA,EAAhBA,EAAkBC,SAwN3BC,SAAU5I,EAAKoI,SAAA,EAEf9L,EAAAA,EAAAA,KAACuM,EAAAA,EAAO,CAACL,KAAM,MACflM,EAAAA,EAAAA,KAAA,QAAA8L,SAAO5H,EAAO,+CAAc,8CAG5BlE,EAAAA,EAAAA,KAAA,QAAMX,UAAU,wBAAuByM,SAAC,kBAC1CC,EAAAA,EAAAA,MAAA,UACE1M,UAAU,wFACV2M,QAAShD,EACTsD,SAAU5I,EACV8I,MAAM,4DAAmBV,SAAA,EAEzB9L,EAAAA,EAAAA,KAACyM,EAAAA,EAAc,CAACP,KAAM,MACtBlM,EAAAA,EAAAA,KAAA,QAAA8L,SAAM,0DAERC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,+BAA8ByM,SAAA,EAC3C9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,wBAAuByM,SAAC,qCACxCC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,IAAM7G,EAAQ,WACvBmH,SAAU5I,EACVrE,UAAW,+DAAuE,YAAT6F,EAAqB,iCAAmC,YACjIsH,MAAM,sDAAaV,SAAA,EAEnB9L,EAAAA,EAAAA,KAAC0M,EAAAA,EAAS,CAACR,KAAM,MACjBlM,EAAAA,EAAAA,KAAA,QAAA8L,SAAM,+CAERC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,IAAM7G,EAAQ,WACvBmH,SAAU5I,EACVrE,UAAW,+DAAuE,YAAT6F,EAAqB,6BAA+B,YAC7HsH,MAAM,yCAAUV,SAAA,EAEhB9L,EAAAA,EAAAA,KAAC2M,EAAAA,EAAM,CAACT,KAAM,MACdlM,EAAAA,EAAAA,KAAA,QAAA8L,SAAM,qCAIVC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,kCAAiCyM,SAAA,EAC9CC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASlD,EACTwD,SAAU5I,IAAUgB,GAAkC,IAAvBE,EAAYvE,OAC3ChB,UAAU,wFACVmN,MAAM,yEAAiBV,SAAA,EAEvB9L,EAAAA,EAAAA,KAAC4M,EAAAA,EAAM,CAACV,KAAM,MACdlM,EAAAA,EAAAA,KAAA,QAAA8L,SAAM,qDAERC,EAAAA,EAAAA,MAAA,UACE1M,UAAU,wFACV2M,QArHEa,KAChB,IAAK3I,EAEH,YADAhE,EAAU,yIAAsC,WAGlD,IAAKwE,EAEH,YADAxE,EAAU,wIAAgC,QAG5C,MAAM4M,EAAOlC,EAAiBlG,GAC9B,IAAKoI,EAEH,YADA5M,EAAU,wEAAkB,SAI9B,MAAM6M,GAAoCnI,GAnGM,IAAIzD,IAAIyJ,GAAkBtJ,OAAOC,SAqGjFoC,GAAQ,GACRG,EAAY,CAAEC,MAAO,wBAAUC,IAAK,EAAGC,eAAe,IACtDkB,EAAQ,WAERjB,EAAK8I,cAAcC,KAAMC,IACvB3H,EAAO4H,YACL,CACEzN,KAAM,OACNmG,QAAS,CACPqH,MACAE,KAAMlJ,EAAKxE,MAAQ,YACnB2N,KAAM,UACNP,OACAC,aAGJ,CAACG,OAqFSZ,UAAWpI,IAASQ,GAAWhB,EAC/B8I,MAAM,yCAAUV,SAAA,EAEhB9L,EAAAA,EAAAA,KAACsN,EAAAA,EAAQ,CAACpB,KAAM,MAChBlM,EAAAA,EAAAA,KAAA,QAAA8L,SAAM,qDAMZ9L,EAAAA,EAAAA,KAAA,SACEC,IAAKqF,EACL5F,KAAK,OACL6N,OAAO,UACPlO,UAAU,SACVmO,SAAWxD,IAAO,IAADyD,EACf,MAAMjC,GAAkB,QAAdiC,EAAAzD,EAAE0D,OAAOC,aAAK,IAAAF,OAAA,EAAdA,EAAiB,KAAM,KACjCtJ,EAAQqH,GACJA,GAAGrG,EAAQ,kBAMrBnF,EAAAA,EAAAA,KAAA,OAAKX,UAAU,qCAAoCyM,SAChD1H,GACCpE,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6CAA4CyM,UACzDC,EAAAA,EAAAA,MAAA,OACE9L,IAAKmF,EACL/F,UAAU,wBACVuO,YAhOK5D,IACnB,GAAiB,IAAbA,EAAE6D,OAAc,OACpB,IAAKzI,EAAQvF,QAAS,OACtB,MAAMyG,EAAIyD,EAAYC,GAChB8D,EAAQ,CAAE5I,OAAM6I,GAAIzH,EAAE8D,EAAG4D,GAAI1H,EAAE+D,EAAG4D,GAAI3H,EAAE8D,EAAG8D,GAAI5H,EAAE+D,GACvDpF,EAAQ6I,GACK,YAAT5I,EACFP,EAAW,MAEXI,EAAkB,OAwNNoJ,YApNKnE,IACnB,IAAKhF,EAAM,OACX,MAAMsB,EAAIyD,EAAYC,GAChBoE,EAAM,IAAKpJ,EAAMiJ,GAAI3H,EAAE8D,EAAG8D,GAAI5H,EAAE+D,GACtCpF,EAAQmJ,GACR,MAAMhE,EAAI1H,KAAKyE,IAAIiH,EAAIL,GAAIK,EAAIH,IACzB5D,EAAI3H,KAAKyE,IAAIiH,EAAIJ,GAAII,EAAIF,IACzB1J,EAAI9B,KAAK2L,IAAID,EAAIH,GAAKG,EAAIL,IAC1BtJ,EAAI/B,KAAK2L,IAAID,EAAIF,GAAKE,EAAIJ,IACd,YAAdhJ,EAAKE,KACPP,EAAW,CAAEyF,IAAGC,IAAG7F,IAAGC,MAEtBM,EAAkBP,EAAI,GAAKC,EAAI,EAAI,CAAE2F,IAAGC,IAAG7F,IAAGC,KAAM,OAyMxC6J,UArMEA,KAChB,IAAKtJ,EAAM,OACX,MAAMoF,EAAI1H,KAAKyE,IAAInC,EAAK+I,GAAI/I,EAAKiJ,IAC3B5D,EAAI3H,KAAKyE,IAAInC,EAAKgJ,GAAIhJ,EAAKkJ,IAC3B1J,EAAI9B,KAAK2L,IAAIrJ,EAAKiJ,GAAKjJ,EAAK+I,IAC5BtJ,EAAI/B,KAAK2L,IAAIrJ,EAAKkJ,GAAKlJ,EAAKgJ,IAEhB,YAAdhJ,EAAKE,OACHV,EAAI,GAAKC,EAAI,GACfI,EAAgB0J,GAAS,IAAIA,EAAM,CAAEC,GAAI9L,KAAK+L,SAASC,SAAS,IAAIC,MAAM,GAAIvE,IAAGC,IAAG7F,IAAGC,OAEzFM,EAAkB,OAEpBE,EAAQ,OAyLM2J,YAAc5E,GAAMA,EAAE2B,iBACtBrM,MAAO,CAAEuP,OAAQ,aAAc/C,SAAA,EAE/B9L,EAAAA,EAAAA,KAAA,OACEC,IAAKoF,EACLzF,IAAKwE,EACL0K,IAAI,UACJzP,UAAU,wCACV0P,OA7TC/E,IACjB,MAAMgF,EAAMhF,EAAEiF,cACd1K,EAAc,CAAEC,EAAGwK,EAAIE,aAAczK,EAAGuK,EAAIG,gBAC5CrG,KA2TgBsG,WAAW,IAIZ1K,IACC1E,EAAAA,EAAAA,KAAA,OACEV,MAAO,CACL+P,SAAU,WACV9E,KAAM7F,EAAQ0F,EACdK,IAAK/F,EAAQ2F,EACbK,MAAOhG,EAAQF,EACfmG,OAAQjG,EAAQD,EAChB6K,OAAQ,oBACRC,WAAY,wBACZC,cAAe,OACfC,OAAQ,KAMb7K,EAAYzD,IAAK+I,IAChBlK,EAAAA,EAAAA,KAAA,OAEEV,MAAO,CACL+P,SAAU,WACV9E,KAAML,EAAEE,EACRK,IAAKP,EAAEG,EACPK,MAAOR,EAAE1F,EACTmG,OAAQT,EAAEzF,EACV6K,OAAQ,qBACRC,WAAY,uBACZC,cAAe,OACfC,OAAQ,GACR3D,UAEF9L,EAAAA,EAAAA,KAAA,OAAKV,MAAO,CAAE+P,SAAU,WAAYrM,OAAQ,GAAIyH,KAAM,GAAI+E,cAAe,QAAS1D,UAChF9L,EAAAA,EAAAA,KAAA,UACEN,KAAK,SACLsM,QAAUhC,IAtOXwE,MAuOGxE,EAAE0F,kBAvOLlB,EAwOiBtE,EAAEsE,GAxOZ3J,EAAgB0J,GAASA,EAAKjN,OAAQ4I,GAAMA,EAAEsE,KAAOA,KA0O3DnP,UAAU,+EACVmN,MAAM,+CAAWV,UAEjB9L,EAAAA,EAAAA,KAAC2P,EAAAA,EAAW,CAACzD,KAAM,GAAI7M,UAAU,uBAvBhC6K,EAAEsE,KA8BV1J,IACC9E,EAAAA,EAAAA,KAAA,OACEV,MAAO,CACL+P,SAAU,WACV9E,KAAMzF,EAAesF,EACrBK,IAAK3F,EAAeuF,EACpBK,MAAO5F,EAAeN,EACtBmG,OAAQ7F,EAAeL,EACvB6K,OAAQ,iCACRC,WAAY,uBACZC,cAAe,OACfC,OAAQ,KAMb/L,IACC1D,EAAAA,EAAAA,KAAA,OAAKX,UAAU,yFAAwFyM,UACrGC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,qDAAoDyM,SAAA,EACjE9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,yCAAwCyM,SACpDjI,EAASE,OAAS,8BAErB/D,EAAAA,EAAAA,KAAA,OAAKX,UAAU,+DAA8DyM,SAC1EjI,EAASI,eACRjE,EAAAA,EAAAA,KAAA,OAAKX,UAAU,mBAAkByM,UAC/B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,qFAGjBW,EAAAA,EAAAA,KAAA,OACEX,UAAU,sDACVC,MAAO,CAAEoL,MAAO,GAAe,QAAfpH,EAAGO,EAASG,WAAG,IAAAV,EAAAA,EAAI,WAIzCtD,EAAAA,EAAAA,KAAA,SAAA8L,SAAQ,uGAOlBC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sBAAqByM,SAAA,EAClCC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,OAAMyM,SAAA,EACnBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACE9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,4BAA2ByM,SAAC,2EAAuC,kHAErFC,EAAAA,EAAAA,MAAA,KAAG1M,UAAU,cAAayM,SAAA,CAAC,0EACV9L,EAAAA,EAAAA,KAAA,UAAA8L,SAAQ,6DAAoB,oEAAc9L,EAAAA,EAAAA,KAAA,UAAA8L,SAAQ,uDAAmB,sEAEtFC,EAAAA,EAAAA,MAAA,MAAI1M,UAAU,UAASyM,SAAA,EACrBC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,iBACC9L,EAAAA,EAAAA,KAAA,UAAQX,UAAU,gBAAeyM,SAAC,oCAAe,8BAAM9L,EAAAA,EAAAA,KAAA,UAAQX,UAAU,gBAAeyM,SAAC,oCAAe,4EAE7GC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACE9L,EAAAA,EAAAA,KAAA,UAAQX,UAAU,gBAAeyM,SAAC,oCAAe,6CAAW9L,EAAAA,EAAAA,KAAA,UAAQX,UAAU,gBAAeyM,SAAC,wDAAoB,uCAIxHC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,EACE9L,EAAAA,EAAAA,KAAA,OACEJ,IAAI,wCACJkP,IAAI,8OAEN9O,EAAAA,EAAAA,KAAA,cAAA8L,UACEC,EAAAA,EAAAA,MAAA,MAAI1M,UAAU,eAAcyM,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,4DACS9L,EAAAA,EAAAA,KAAA,UAAA8L,SAAQ,2CAAiB,4CACpC9L,EAAAA,EAAAA,KAAA,UAAA8L,SAAQ,2CAAkB,MAAC9L,EAAAA,EAAAA,KAAA,UAAA8L,SAAQ,oFAAyB,oBAE9DC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACE9L,EAAAA,EAAAA,KAAA,UAAA8L,SAAQ,8BAAc,iBAAG9L,EAAAA,EAAAA,KAAA,UAAA8L,SAAQ,gEAAoB,2DAWzE3M,SAASyQ,MAjQO,IAmQpB,CCxrBO,MAAMC,EAAc,CAAEC,KAAM,EAAGC,OAAQ,GAAIC,MAAO,GAAIC,QAAS,IAEzDC,EAAsB,CACjCJ,KAAM,CAAC,EAAG,GACVC,OAAQ,CAAC,GAAI,IACbC,MAAO,CAAC,IACRC,QAAS,CAAC,KAGCE,EAAkB,CAC7BL,KAAM,CAAC,IACPC,OAAQ,CAAC,GAAI,IACbC,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5BC,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnBG,EAAa,CAAEN,KAAM,eAAMC,OAAQ,eAAMC,MAAO,eAAMC,QAAS,gBAC/DI,EAAS,CAAC,OAAQ,SAAU,QAAS,WACrCC,EAAgB,CAC3BC,IAAK,qBACLC,IAAK,4BACLC,KAAM,4BACNC,MAAO,qBACPC,QAAS,yCACTC,QAAS,0CAEEC,EAAU,CAAC,MAAO,MAAO,OAAQ,QAAS,UAAW,WACrDC,EAAY,CACvBC,OAAQ,IAAIC,IAAI,CAAC,MAAO,MAAO,SAC/BC,QAAS,IAAID,IAAI,CAAC,QAAS,UAAW,aAI3BE,EAAiB,CAC5BT,KAAM,EACND,IAAK,EACLD,IAAK,EACLG,MAAO,EACPC,QAAS,EACTC,QAAS,GAGEO,EAAkB,IAAKD,GAGvBE,EAAsB,CAEjCX,KAAM,CAAC,EAAG,KAAO,KAAO,KAAO,KAAO,MACtCD,IAAM,CAAC,EAAG,IAAO,KAAO,KAAO,KAAO,MACtCD,IAAM,CAAC,EAAG,KAAO,KAAO,KAAO,KAAO,OAI3Bc,EAAuB,CAElCX,MAAS,CAAC,EAAG,KAAO,KAAO,KAAO,KAAO,MAEzCE,QAAS,CAAC,EAAG,IAAO,IAAO,IAAO,IAAO,KAEzCD,QAAS,CAAC,EAAG,KAAO,KAAO,KAAO,KAAO,MAapC,SAASW,EAAgB9M,GAC9B,MAAM+M,EAAO,IAAKJ,GAClB,OAAK3M,GACLgN,OAAOC,KAAKF,GAAMlL,QAASqL,IACzB,MAAM7P,EAAM2C,EAAEkN,GACRC,EAAqB,kBAAR9P,EAAmBA,EAAM2E,OAAO3E,GACnD0P,EAAKG,GAAKlL,OAAOC,SAASkL,IAAQA,GAAO,EAAIA,EAAMR,EAAgBO,KAEvCH,GANfA,CAOjB,CAEO,SAASK,EAAiBC,EAAMC,EAAKC,GAC1C,MAAMvQ,EAAIkB,KAAKC,IAAI,EAAGD,KAAKyE,IAAI,EAAGX,OAAOuL,IAAQ,IAGjD,MAAa,WAATF,GAAqBT,EAAoBU,GACpCV,EAAoBU,GAAKtQ,IAAM,EAI3B,YAATqQ,GAAsBR,EAAqBS,GACtCT,EAAqBS,GAAKtQ,IAAM,EAIlCA,CACT,CAEO,SAASwQ,EAAgBC,EAAKJ,EAAMK,GACzC,MAAM1N,EAAI8M,EAAgBY,GAAW,CAAC,GACtC,IAAIC,EAAM,EAEV,MAAM3B,EAAMA,CAACsB,EAAKC,KAAS,IAADK,EACxB,IAAKN,IAAQC,EAAK,OAClB,GAAIF,IA3CD,SAAuBA,EAAMC,GAClC,MAAMO,EAAiB,OAATvB,QAAS,IAATA,OAAS,EAATA,EAAYe,GAC1B,OAAKQ,IACDC,MAAMC,QAAQF,GAAeA,EAAMnQ,SAAS4P,GAC5CO,GAA8B,oBAAdA,EAAMG,IAA2BH,EAAMG,IAAIV,IAC3DO,GAA0B,kBAAVA,KAA6BA,EAAMP,GAEzD,CAoCiBW,CAAcZ,EAAMC,GAAM,OAEvC,MAAMY,EAAUd,EAAiBC,EAAMC,EAAKC,GACtCY,EAAgB,QAAXP,EAAK5N,EAAEsN,UAAI,IAAAM,EAAAA,EAAI,EAC1BD,GAAOO,EAAUC,GAOnB,OAJAnC,EAAIyB,EAAIzK,IAAKyK,EAAIW,KACjBpC,EAAIyB,EAAIxK,IAAKwK,EAAIY,KAGVV,CACT,C,m57fC7EA,MAAMW,EAAkB,CACtB,CAAEC,MAAO,sBAAQhP,MAAO,uBACxB,CAAEgP,MAAO,sBAAQhP,MAAO,uBACxB,CAAEgP,MAAO,sBAAQhP,MAAO,wBAGpBiP,EAAiB,CAAEC,MAAO,eAAMC,MAAO,gBACvCC,EAAS,uBAETC,EAAsB,QAAlBC,EAAY,OAATC,QAAS,IAATA,OAAS,EAATA,EAAAA,YAAe,IAAAD,EAAAA,EAAI,GAC1BE,EAAqB,CAAE,SAAK,sBAAQ,SAAK,sBAAQ,SAAK,uBACtDC,EAAqB,CAAE,sBAAQ,SAAK,sBAAQ,SAAK,sBAAQ,UAEzDC,EAAa,CAAC,sBAAQ,sBAAQ,uBAE9BC,GAAsB,CAC1B5D,KAAM,GACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,IAkBX,SAAS0D,GAAeC,EAAKC,GAAW,IAADC,EAAAC,EACrC,IAAKH,IAAQC,EAAU,MAAO,GAE9B,OADsC,QAAzBC,EAAY,OAATR,QAAS,IAATA,GAAe,QAANS,EAATT,EAAAA,YAAe,IAAAS,OAAN,EAATA,EAAkBH,UAAI,IAAAE,EAAAA,EAAI,IAEvCxS,OAAO0I,GAAKA,EAAE,kBAAU6J,GACxB1S,IAAI6I,IAAC,CAAO+I,MAAO/I,EAAE,gBAAOjG,MAAOiG,EAAE,kBAC1C,CAwCA,SAASgK,GAAoBJ,EAAKC,EAAUI,GAAS,IAADC,EAAAC,EAClD,IAAKP,IAAQC,IAAaI,EAAQ,MAAO,GACzC,MACMG,GADgC,QAAzBF,EAAY,OAATZ,QAAS,IAATA,GAAe,QAANa,EAATb,EAAAA,YAAe,IAAAa,OAAN,EAATA,EAAkBP,UAAI,IAAAM,EAAAA,EAAI,IACtBG,KAAMrK,GAAMA,EAAE,kBAAU6J,GAAY7J,EAAE,kBAAUiK,GACpE,OA1CF,SAA0BpS,GACxB,IAAKA,EAAK,MAAO,GACjB,IAAIyS,EAAM,GA+BV,OA7BIhC,MAAMC,QAAQ1Q,GAChByS,EAAMzS,EAAI0S,QAASjL,IACjB,IAAKA,EAAM,MAAO,GAClB,GAAoB,kBAATA,EAAmB,CAC5B,MAAMkL,EAAIlL,EAAKhH,MAAM,eACfgE,EAAIkO,EAAIhO,OAAOgO,EAAE,IAAM,KAC7B,OAAOlO,EAAI,CAAC,CAAEiB,MAAOjB,EAAG1E,KAAM0H,EAAKrI,QAAQ,WAAY,IAAII,QAAUiI,EAAKjI,SAAY,EACxF,CACA,GAAoB,kBAATiI,EAAmB,CAAC,IAADjG,EAAAoR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC5B,IAAIxO,EAAoC,QAAnCjD,EAAuB,QAAvBoR,EAAa,QAAbC,EAAGpL,EAAK/B,aAAK,IAAAmN,EAAAA,EAAIpL,EAAKyL,SAAC,IAAAN,EAAAA,EAAInL,EAAK0L,0BAAG,IAAA3R,EAAAA,EAAI,KAC3B,kBAANiD,IAAgBA,EAAI/D,SAAS+D,EAAErF,QAAQ,MAAO,IAAK,KAC9D,MAAMa,EAAmD,QAAlD6S,EAAoC,QAApCC,EAAyB,QAAzBC,EAAY,QAAZC,EAAGxL,EAAK1H,YAAI,IAAAkT,EAAAA,EAAIxL,EAAK2L,YAAI,IAAAJ,EAAAA,EAAIvL,EAAK4L,oBAAE,IAAAN,EAAAA,EAAItL,EAAKyJ,aAAK,IAAA4B,EAAAA,EAAI,GAC7D,OAAOnO,OAAOC,SAASH,GAAK,CAAC,CAAEiB,MAAOf,OAAOF,GAAI1E,KAAMZ,OAAOc,KAAQ,EACxE,CACA,MAAO,KAEe,kBAARD,EAChByS,EAAM9C,OAAO2D,QAAQtT,GAAKV,IAAIiU,IAAa,IAAX1D,EAAGtQ,GAAEgU,EAEnC,MAAO,CAAE7N,MADChF,SAASvB,OAAO0Q,GAAGzQ,QAAQ,MAAO,IAAK,IAC9BW,KAAMZ,OAAOI,MAEV,kBAARS,IAChByS,EAAMzS,EAAIX,MAAM,SAASqT,QAASc,IAChC,MAAMb,EAAIa,EAAK/S,MAAM,eACfgE,EAAIkO,EAAIhO,OAAOgO,EAAE,IAAM,KAC7B,OAAOlO,EAAI,CAAC,CAAEiB,MAAOjB,EAAG1E,KAAMyT,EAAKpU,QAAQ,WAAY,IAAII,QAAUgU,EAAKhU,SAAY,MAInFiT,EACJhT,OAAQ8I,GAAM5D,OAAOC,SAAS2D,EAAE7C,QAAU6C,EAAExI,MAC5C0T,KAAK,CAACjO,EAAGC,IAAMD,EAAEE,MAAQD,EAAEC,MAChC,CAMSgO,CAAoB,OAAHnB,QAAG,IAAHA,OAAG,EAAHA,EAAM,gBAChC,CAOA,MAAMoB,GAAMA,IAAM9S,KAAK+L,SAASC,SAAS,IAAIC,MAAM,EAAG,GAQtD,SAAS8G,GAAU5D,EAAMzQ,GACvB,MAAM0F,EAAIN,OAAOpF,GACjB,OAAKoF,OAAOC,SAASK,GACL,WAAT+K,EAAoB,GAAG/K,EAAE4O,QAAQ,MAAQ5O,EAAE4O,QAAQ,GAD1B1U,OAAOI,EAEzC,CAEA,SAASuU,GAAmBpH,EAAMsD,GAChC,MAAM+D,EAAO,IAAKrH,IACO,WAATsD,EAAoBf,EAAUG,QAAUH,EAAUC,QAC1D1K,QAASqL,IAAQkE,EAAKlE,GAAK,IAGnC,OAFeZ,EAAUe,GAClBxL,QAASqL,IAAQkE,EAAKlE,GAAK,IAC3BkE,CACT,CAEA,SAASC,KACP,IACE,MAAMhU,EAAMiU,aAAaC,QAAQ5C,GACjC,OAAKtR,EACEmU,KAAKC,MAAMpU,GADD,IAEnB,CAAE,MAAOmI,GAEP,OADAjE,QAAQoC,KAAK,uBAAwB6B,GAC9B,IACT,CACF,CAgCA,MAAMkM,GAAiC,qBAAb/W,SAA2BA,SAASyQ,KAAO,KAErE,SAASuG,GAAoBC,GAAoC,IAAnC,YAAEC,EAAW,MAAEC,EAAK,SAAExK,GAAUsK,EAC5D,OACEpW,EAAAA,EAAAA,KAACuW,EAAAA,GAAS,CAACF,YAAaA,EAAaC,MAAOA,EAAMxK,SAC/CA,CAAC0K,EAAUC,KACV,MAAMC,EACgB,oBAAb5K,EAA0BA,EAAS0K,EAAUC,GAAY3K,EAClE,OAAO2K,EAASE,YAAcT,IAC1BrK,EAAAA,EAAAA,cAAa6K,EAAUR,IACvBQ,IAIZ,CASA,SAASE,GAAQC,GAAuE,IAAtE,MAAE9D,EAAK,MAAE1J,EAAK,SAAEmE,EAAQ,YAAEsJ,EAAW,UAAEzX,EAAS,SAAE0X,GAAW,GAAMF,EACnF,MAAOtT,EAAMyT,IAAWpT,EAAAA,EAAAA,WAAS,IAC1BqT,EAAcC,IAAmBtT,EAAAA,EAAAA,WAAU,GAC5CuT,GAASnY,EAAAA,EAAAA,QAAO,MAChBoY,GAAUpY,EAAAA,EAAAA,QAAO,MACjBqY,GAAWrY,EAAAA,EAAAA,QAAO,IAClBsY,GAAUtY,EAAAA,EAAAA,QAAO,CAAEyL,IAAK,EAAGF,KAAM,EAAGG,MAAO,KAC1C,CAAE6M,IAAa3T,EAAAA,EAAAA,UAAS,GACzB4T,GAAYxY,EAAAA,EAAAA,QAAO,WAAW0D,KAAK+L,SAASC,SAAS,IAAIC,MAAM,MAAM9O,QAErE4X,GAAiBC,EAAAA,EAAAA,aAAY,KACjC,MAAMC,EAAMtO,EAAMuO,UAAUhV,GAAKA,EAAEmQ,QAAUA,IAAUnQ,EAAE0J,UACzD,GAAIqL,GAAO,EAAG,OAAOA,EACrB,MAAME,EAAexO,EAAMuO,UAAUhV,IAAMA,EAAE0J,UAC7C,OAAOuL,GAAgB,EAAIA,GAAgB,GAC1C,CAACxO,EAAO0J,KAEX9T,EAAAA,EAAAA,WAAU,KACR,MAAMwF,EAAIA,IAAMuS,GAAQ,GAExB,OADAzW,OAAOkI,iBAAiB,sBAAuBhE,GACxC,IAAMlE,OAAOmI,oBAAoB,sBAAuBjE,IAC9D,IAlEL,SAA2BqT,EAAMC,GAC/B,MAAMC,EAAYjP,EAAAA,QAChB,IAAOuJ,MAAMC,QAAQuF,GAAQA,EAAO,CAACA,GACrC,CAACA,IAEGG,EAAalP,EAAAA,OAAagP,GAChChP,EAAAA,UAAgB,KAAQkP,EAAWpY,QAAUkY,GAAY,CAACA,IAC1DhP,EAAAA,UAAgB,KACd,MAAMmP,EAAYlO,IAAO,IAADmO,EAClBH,EAAUI,KAAKlO,IAAM,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGrK,UAAWqK,EAAErK,QAAQwY,SAASrO,EAAE0D,UACzC,QAAlByK,EAAAF,EAAWpY,eAAO,IAAAsY,GAAlBA,EAAAzM,KAAAuM,EAAqBjO,IAGvB,OADA7K,SAASsJ,iBAAiB,QAASyP,GAAU,GACtC,IAAM/Y,SAASuJ,oBAAoB,QAASwP,GAAU,IAC5D,CAACF,GACN,CAqDEM,CAAkB,CAACnB,EAAQC,GAAU,IAAMJ,GAAQ,KAEnDuB,EAAAA,EAAAA,iBAAgB,KACd,IAAKhV,IAAS4T,EAAOtX,QAAS,OAC9B,MAAMiN,EAAOqK,EAAOtX,QAAQsK,wBAC5BmN,EAAQzX,QAAU,CAAE4K,IAAKqC,EAAK0L,OAAS,EAAGjO,KAAMuC,EAAKvC,KAAMG,MAAOoC,EAAKpC,OACvE6M,EAAUnW,GAAKA,EAAI,GACnB,MAAMqX,EAAWA,KAAO,IAADC,EACrB,MAAMxO,EAAkB,QAAjBwO,EAAGvB,EAAOtX,eAAO,IAAA6Y,OAAA,EAAdA,EAAgBvO,wBACrBD,IACLoN,EAAQzX,QAAU,CAAE4K,IAAKP,EAAEsO,OAAS,EAAGjO,KAAML,EAAEK,KAAMG,MAAOR,EAAEQ,OAC9D6M,EAAUnW,GAAKA,EAAI,KAIrB,OAFAb,OAAOkI,iBAAiB,SAAUgQ,EAAU,CAAEE,SAAS,IACvDpY,OAAOkI,iBAAiB,SAAUgQ,GAC3B,KACLlY,OAAOmI,oBAAoB,SAAU+P,GACrClY,OAAOmI,oBAAoB,SAAU+P,KAEtC,CAAClV,KAEJtE,EAAAA,EAAAA,WAAU,KACR,IAAKsE,EAAM,OACX2T,EAAgBO,KAChB,MAAM3V,EAAI8W,sBAAsB,KAAO,IAADC,EAAAC,EACpC,MAAMC,EAAK1B,EAASxX,QAAQ4X,KACN,QAAtBoB,EAAG,OAAFE,QAAE,IAAFA,EAAAA,EAAM3B,EAAQvX,eAAO,IAAAgZ,GAAQ,QAARC,EAAtBD,EAAyBG,aAAK,IAAAF,GAA9BA,EAAApN,KAAAmN,KAEF,MAAO,IAAMI,qBAAqBnX,IACjC,CAACyB,EAAMkU,IAEV,MAAMyB,EAAW7P,EAAMgL,KAAMzR,GAAMA,EAAEmQ,QAAUA,GAEzCoG,EAAiBA,CAACrL,EAAOsL,KAC7B,MAAMtS,EAAIuC,EAAMhJ,OAChB,GAAU,IAANyG,EAAS,OAAQ,EACrB,IAAIlE,EAAIkL,EACR,IAAK,IAAIuL,EAAO,EAAGA,EAAOvS,EAAGuS,IAE3B,GADAzW,GAAKA,EAAIwW,EAAMtS,GAAKA,GACfuC,EAAMzG,GAAG0J,SAAU,OAAO1J,EAEjC,OAAQ,GAwDJ0W,EAAO/V,GACXvD,EAAAA,EAAAA,KAACuZ,EAAAA,EAAe,CAAAzN,UACd9L,EAAAA,EAAAA,KAACwZ,EAAAA,EAAOC,GAAE,CACRxZ,IAAKmX,EAELvF,KAAK,UACLrD,GAAIgJ,EACJkC,UAAW,EACX,wBAAuBzC,GAAgB,EAAI,GAAGO,SAAiBP,SAAiB3W,EAChFqZ,QAAS,CAAEC,QAAS,EAAGvP,GAAI,GAC3BwP,QAAS,CAAED,QAAS,EAAGvP,EAAG,GAC1ByP,KAAM,CAAEF,QAAS,EAAGvP,GAAI,GACxB0P,WAAY,CAAEC,SAAU,KACxB1a,MAAO,CAAE+P,SAAU,QAAS5E,IAAK6M,EAAQzX,QAAQ4K,IAAKF,KAAM+M,EAAQzX,QAAQ0K,KAAMG,MAAO4M,EAAQzX,QAAQ6K,MAAO+E,OAAQ,MACxHpQ,UAAW,yDAAwD0X,EAAW,SAAW,IACzFkD,UAnDiBjQ,IACrB,GAAc,cAAVA,EAAE8H,KAAiC,YAAV9H,EAAE8H,IAAmB,CAChD9H,EAAE2B,iBACF,MAAM4F,EAAO0F,GAAgB,EAAIA,EAAeQ,IAC1C7B,EAAiB,cAAV5L,EAAE8H,IAAsBqH,EAAe5H,EAAM,GAAM4H,EAAe5H,GAAO,GAClFqE,GAAQ,GAAGsB,EAAgBtB,EACjC,MAAO,GAAc,SAAV5L,EAAE8H,IAAgB,CAC3B9H,EAAE2B,iBACF,MAAMuO,EAAQ7Q,EAAMuO,UAAUhV,IAAMA,EAAE0J,UAClC4N,GAAS,GAAGhD,EAAgBgD,EAClC,MAAO,GAAc,QAAVlQ,EAAE8H,IAAe,CAC1B9H,EAAE2B,iBACF,IAAIwO,GAAQ,EACZ,IAAK,IAAIvX,EAAIyG,EAAMhJ,OAAS,EAAGuC,GAAK,EAAGA,IACrC,IAAKyG,EAAMzG,GAAG0J,SAAU,CAAE6N,EAAOvX,EAAG,KAAO,CAEzCuX,GAAQ,GAAGjD,EAAgBiD,EACjC,MAAO,GAAc,UAAVnQ,EAAE8H,KAA6B,MAAV9H,EAAE8H,IAAa,CAC7C9H,EAAE2B,iBACF,MAAMN,EAAKhC,EAAM4N,GACb5L,IAAOA,EAAGiB,WACZkB,EAASnC,EAAG0H,OACZiE,GAAQ,GACR4B,sBAAsB,SAAAwB,EAAAC,EAAAC,EAAA,OAAoB,QAApBF,EAAMjD,EAAOtX,eAAO,IAAAua,GAAyB,QAAzBC,EAAdD,EAAgBG,cAAc,iBAAS,IAAAF,GAAO,QAAPC,EAAvCD,EAAyCrB,aAAK,IAAAsB,OAAhC,EAAdA,EAAA5O,KAAA2O,KAEhC,KAAqB,WAAVrQ,EAAE8H,KACX9H,EAAE2B,iBACFqL,GAAQ,GACR4B,sBAAsB,SAAA4B,EAAAC,EAAAC,EAAA,OAAoB,QAApBF,EAAMrD,EAAOtX,eAAO,IAAA2a,GAAyB,QAAzBC,EAAdD,EAAgBD,cAAc,iBAAS,IAAAE,GAAO,QAAPC,EAAvCD,EAAyCzB,aAAK,IAAA0B,OAAhC,EAAdA,EAAAhP,KAAA+O,MACT,QAAVzQ,EAAE8H,KACXkF,GAAQ,IAqBmBlL,SAExBzC,EAAMlI,IAAI,CAACkK,EAAIzI,KACd,MAAM+X,EAAatP,EAAG0H,QAAUA,EAC1B6H,EAAWhY,IAAMqU,EACvB,OACEjX,EAAAA,EAAAA,KAAA,MAAA8L,UACE9L,EAAAA,EAAAA,KAAA,UACEC,IAAM8Y,GAAQ1B,EAASxX,QAAQ+C,GAAKmW,EACpCvK,GAAI,GAAGgJ,SAAiB5U,IACxBlD,KAAK,SACLmS,KAAK,SACL,gBAAe8I,EACfE,aAAcA,IA9BFjY,IAAMsU,EAAgBtU,GA8BdkY,CAAiBlY,GACrCoJ,QAASA,KACHX,EAAGiB,WACPkB,EAASnC,EAAG0H,OACZiE,GAAQ,GACR4B,sBAAsB,SAAAmC,EAAAC,EAAAC,EAAA,OAAoB,QAApBF,EAAM5D,EAAOtX,eAAO,IAAAkb,GAAyB,QAAzBC,EAAdD,EAAgBR,cAAc,iBAAS,IAAAS,GAAO,QAAPC,EAAvCD,EAAyChC,aAAK,IAAAiC,OAAhC,EAAdA,EAAAvP,KAAAsP,OAE9B,kBAAe3P,EAAGiB,eAAkBhM,EACpCjB,UAAW,yDACPgM,EAAGiB,SAAW,gCAAkC,yCAChDqO,EAAa,cAAgB,yBAC7BC,EAAW,wCAA0C,uBACvD9O,UAEF9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,iBAAgByM,SAAET,EAAGtH,WArBhC/C,OAAOqK,EAAG0H,WAjBnB,UA6CN,KAEJ,OACEhH,EAAAA,EAAAA,MAAA,OAAK9L,IAAKkX,EAAQ9X,UAAW,oBAAoBA,GAAa,KAAKyM,SAAA,EACjEC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACL,gBAAc,UACd,gBAAe6D,EACf,gBAAeA,EAAOiU,OAAYlX,EAClC2Z,UA/GmBjQ,IACvB,GAAc,cAAVA,EAAE8H,KAAiC,YAAV9H,EAAE8H,IAAmB,CAChD9H,EAAE2B,iBAEF,IADkBpI,EAEhByT,GAAQ,OACH,CACL,MAAMzF,EAAO0F,GAAgB,EAAIA,EAAeQ,IAC1C7B,EAAiB,cAAV5L,EAAE8H,IAAsBqH,EAAe5H,EAAM,GAAM4H,EAAe5H,GAAO,GAClFqE,GAAQ,GAAGsB,EAAgBtB,EACjC,CACF,KAAqB,UAAV5L,EAAE8H,KAA6B,MAAV9H,EAAE8H,MAChC9H,EAAE2B,iBACFqL,EAAQ5V,IAAMA,KAmGZ4K,QAASA,IAAMgL,EAAQ5V,IAAMA,GAC7B/B,UAAW,8KAA6K0X,EAAW,SAAW,IAAKjL,SAAA,EAEnN9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,mBAAkByM,SAAEoN,EAAWA,EAASnV,MAAQ+S,GAAe,kBAC/E9W,EAAAA,EAAAA,KAAA,QAAMX,UAAU,oCAAmCyM,SAChDvI,GAAOvD,EAAAA,EAAAA,KAACkb,EAAAA,EAAS,CAAChP,KAAM,MAASlM,EAAAA,EAAAA,KAACmb,EAAAA,EAAW,CAACjP,KAAM,UAGxD3I,IAAQsI,EAAAA,EAAAA,cAAayN,EAAMna,SAASyQ,QAG3C,CAuBA,SAASwL,GAAUC,GAAuB,IAAtB,OAAEC,EAAM,QAAE9X,GAAS6X,EASrC,OAAOxP,EAAAA,EAAAA,eACL7L,EAAAA,EAAAA,KAAA,OACEX,UAAU,yFACV,YAAU,SACVwS,KAAK,SAAQ/F,UAEb9L,EAAAA,EAAAA,KAACuZ,EAAAA,EAAe,CAAAzN,SACbwP,EAAOna,IAAIW,IACV,MAAMV,EAhBK1B,KACjB,OAAQA,GACN,IAAK,UAAW,MAAO,CAAE6b,KAAM,uDAAwDC,IAAK,8CAC5F,IAAK,UAAW,MAAO,CAAED,KAAM,iDAAkDC,IAAK,0CACtF,IAAK,QAAW,MAAO,CAAED,KAAM,8CAAiDC,IAAK,wCACrF,QAAgB,MAAO,CAAED,KAAM,oDAAqDC,IAAK,8CAW3EC,CAAU3Z,EAAEpC,MACtB,OACEqM,EAAAA,EAAAA,MAACyN,EAAAA,EAAOkC,IAAG,CAET/B,QAAS,CAAEC,QAAS,EAAGjH,MAAO,KAC9BkH,QAAS,CAAED,QAAS,EAAGjH,MAAO,GAC9BmH,KAAM,CAAEF,QAAS,EAAGjH,MAAO,KAC3BoH,WAAY,CAAEra,KAAM,SAAUic,UAAW,IAAKC,QAAS,IACvDvc,UAAW,+IAA+I+B,EAAEma,OAAOzP,SAAA,EAEnK9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,iBAAgByM,SAAEhK,EAAE3B,OACnCH,EAAAA,EAAAA,KAAA,UACEX,UAAW,mCAAmC+B,EAAEoa,MAChDxP,QAASA,IAAMxI,EAAQ1B,EAAE0M,IACzB,aAAW,eAAI1C,SAChB,mBAZIhK,EAAE0M,UAoBjBrP,SAASyQ,KAEb,CAEA,SAASiM,GAAWC,GAEhB,IAFiB,MACnB/I,EAAK,SAAEvF,EAAQ,IAAErG,EAAG,IAAExE,EAAG,KAAE0W,EAAO,EAAC,WAAE0C,GAAa,EAAK,WAAEC,GAAa,EAAI,UAAE3c,EAAY,GAAE,WAAE4c,EAAa,CAAC,GAC3GH,EACC,MAAMI,EAAS9a,GAAa,OAANA,QAAoBd,IAANc,EAAkB,GAAKJ,OAAOI,IAC3D+a,EAAOC,GAAYrT,EAAAA,SAAemT,EAAMnJ,IAC/ChK,EAAAA,UAAgB,KAAQqT,EAASF,EAAMnJ,KAAY,CAACA,IACpD,MAMMsJ,EAAmBtb,IACvB,GAAU,KAANA,EAAU,OAAOib,EAAiB,OAAH7U,QAAG,IAAHA,EAAAA,EAAO,EAAK,KAC/C,IAAIL,EAAIN,OAAOzF,GACf,OAAKyF,OAAOC,SAASK,IACrBA,EAAIiV,EAAajV,EAAIpE,KAAK4Z,MAAMxV,GAVnBA,KACb,IAAIsD,EAAItD,EAGR,OAFW,MAAPK,GAAeiD,EAAIjD,IAAKiD,EAAIjD,GACrB,MAAPxE,GAAeyH,EAAIzH,IAAKyH,EAAIzH,GACzByH,GAOAmS,CAAMzV,IAFmBkV,EAAiB,OAAH7U,QAAG,IAAHA,EAAAA,EAAO,EAAK,MAK5D,OACEnH,EAAAA,EAAAA,KAAA,SACEN,KAAK,SACL8c,UAAWT,EAAa,UAAY,UACpC1C,KAAMA,EACNlS,IAAKA,EACLxE,IAAKA,EACLoQ,MAAOoJ,EACP3O,SAAWxD,IACT,MAAM5I,EAAI4I,EAAE0D,OAAOqF,MACnB,GAAU,KAAN3R,EAGF,OAFAgb,EAAS,SACD,OAAR5O,QAAQ,IAARA,GAAAA,EAAW,OAGb4O,EAAShb,GACT,MAAMuQ,EAAMnL,OAAOpF,GACfoF,OAAOC,SAASkL,GACV,OAARnE,QAAQ,IAARA,GAAAA,EAAWuO,EAAapK,EAAMjP,KAAK4Z,MAAM3K,IAEjC,OAARnE,QAAQ,IAARA,GAAAA,EAAW,OAGfiP,OAAQA,KACN,MAAM3V,EAAIuV,EAAgBF,GAC1BC,EAAc,MAALtV,EAAY,GAAK9F,OAAO8F,IACzB,OAAR0G,QAAQ,IAARA,GAAAA,EAAW1G,IAEb4V,QA7BiB1S,GAAMA,EAAEiF,cAAc0N,OA8BvCtd,UAAWA,KACP4c,GAGV,CAOA,SAASW,GAAcC,GAAgE,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA9D,IAAExJ,EAAG,SAAEC,EAAQ,OAAEI,EAAM,MAAEoJ,EAAK,SAAEC,EAAQ,SAAEC,EAAQ,OAAEC,GAAQX,EAClF,MAAOtZ,EAAMyT,IAAWpT,EAAAA,EAAAA,WAAS,GAC3B3D,GAAMjB,EAAAA,EAAAA,QAAO,MAEbye,EAAUzJ,GAAoBJ,EAAKC,EAAUI,GAC7CyJ,EAAiC,QAA7BZ,EAAGpJ,GAAoB2J,UAAM,IAAAP,EAAAA,EAAI,IACrClW,EAAO6W,EAAQnc,OAAQ0I,GAAMA,EAAEzC,OAASmW,GAExCC,EACwB,QADfZ,EACbvJ,EAAmB+J,UAAS,IAAAR,EAAAA,EAC5BQ,EAAStc,QAAQ,mBAAU,IAEvB2c,EAAY,iDAEZC,GACgB,QAApBb,EAAW,OAAV5M,QAAU,IAAVA,OAAU,EAAVA,EAAaiN,UAAM,IAAAL,EAAAA,EAAI,IAAI9a,SAAS,iBAAyC,YAAhClB,OAAOqc,GAAOS,cAExDC,EAC4B,SAAhC/c,OAAOqc,GAAOW,gBAAgD,QAApBf,EAAW,OAAV7M,QAAU,IAAVA,OAAU,EAAVA,EAAaiN,UAAM,IAAAJ,EAAAA,EAAI,IAAI/a,SAAS,gBAAQ,mBACrD,WAAhClB,OAAOqc,GAAOW,gBAAkD,QAApBd,EAAW,OAAV9M,QAAU,IAAVA,OAAU,EAAVA,EAAaiN,UAAM,IAAAH,EAAAA,EAAI,IAAIhb,SAAS,gBAAQ,iBACvD,UAAhClB,OAAOqc,GAAOW,gBAAiD,QAApBb,EAAW,OAAV/M,QAAU,IAAVA,OAAU,EAAVA,EAAaiN,UAAM,IAAAF,EAAAA,EAAI,IAAIjb,SAAS,gBAAQ,kBACtD,YAAhClB,OAAOqc,GAAOW,gBAAmD,QAApBZ,EAAW,OAAVhN,QAAU,IAAVA,OAAU,EAAVA,EAAaiN,UAAM,IAAAD,EAAAA,EAAI,IAAIlb,SAAS,gBAAQ,iBACxF,gBAuBV,OACE6J,EAAAA,EAAAA,MAAA,QACE9L,IAAKA,EACLZ,UAAU,kEACVwb,aAAcA,IAAM7D,GAAQ,GAC5BiH,aAAcA,IAAMjH,GAAQ,GAC5BkH,QAASA,IAAMlH,GAAQ,GACvByF,OAAQA,IAAMzF,GAAQ,GAAOlL,SAAA,EAE7B9L,EAAAA,EAAAA,KAACme,EAAAA,EAAI,CAACjS,KAAM,GAAI,cAAY,OAAOkS,MAAM,aAEzCpe,EAAAA,EAAAA,KAACuZ,EAAAA,EAAe,CAAAzN,SACbvI,IACCwI,EAAAA,EAAAA,MAACyN,EAAAA,EAAOkC,IAAG,CACT/B,QAAS,CAAEC,QAAS,EAAGvP,GAAI,GAC3BwP,QAAS,CAAED,QAAS,EAAGvP,EAAG,GAC1ByP,KAAM,CAAEF,QAAS,EAAGvP,GAAI,GACxB0P,WAAY,CAAEC,SAAU,KACxB3a,UAAU,gHACVwS,KAAK,UAAS/F,SAAA,EAEdC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iCAAgCyM,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAMkH,EAAesK,GAAU,UAAGC,EAAS,MAAItJ,MAC/ClI,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,2BAA2B0e,IAAgBjS,SAAA,CAAEsE,EAAWiN,GAAO,uDAGjFtR,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,OAAMyM,SAAA,EACnB9L,EAAAA,EAAAA,KAAA,OAAKX,UAAWue,EAAU9R,SAAC,+BAC3BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,EACtC9L,EAAAA,EAAAA,KAAA,QAAA8L,SAAOkH,EAAesK,MACtBtd,EAAAA,EAAAA,KAAA,QAAMX,UAAU,OAAMyM,SAAC,YACvB9L,EAAAA,EAAAA,KAAA,QAAA8L,SAAO6R,WAIX5R,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,OAAMyM,SAAA,EACnB9L,EAAAA,EAAAA,KAAA,OAAKX,UAAWue,EAAU9R,SAAC,kDAC3BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,CAAE9K,OAAOwc,GAAQ,6BAG3Dxd,EAAAA,EAAAA,KAAA,OAAKX,UAAWue,EAAU9R,SAAC,8BACV,IAAhBlF,EAAKvG,QACJL,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gBAAeyM,SAAC,+DAE/B9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,iBAAgByM,SAC3BlF,EAAKzF,IAAK6I,IACT,MAAMpI,EAAmB,KAAZoI,EAAEzC,MAnEA3F,KAC7B,MAAMyc,EAAYR,EAElB,IAAIS,EAAM1c,EAAKX,QACb,4CACA,CAACsd,EAAGlX,EAAGC,KAAO+W,EAAY/W,EAAID,GAAK,KAarC,OAVAiX,EAAMA,EAAIrd,QACR,6CACA,CAACsd,EAAGlX,EAAGC,EAAGtD,KAASqa,EAAY/W,EAAID,GAAKrD,GAG1Csa,EAAMA,EAAIrd,QACR,sDACA,CAACsd,EAAGlX,EAAGC,IAAO+W,EAAY/W,EAAID,GAGzBiX,GAiDqCE,CAAsBxU,EAAEpI,MAAQoI,EAAEpI,KAChE,OACEmK,EAAAA,EAAAA,MAAA,MAEE1M,UAAU,wDAAuDyM,SAAA,EAEjEC,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,iDAAgDyM,SAAA,CAAC,IAC7D9B,EAAEzC,MAAM,SAEZvH,EAAAA,EAAAA,KAAA,QAAMX,UAAU,oCAAmCyM,SAChDlK,MAPEoI,EAAEzC,kBAmB7B,CAQe,SAASkX,MACtBxf,EAAAA,EAAAA,WAAU,KAAQE,SAASqN,MAAQ,gFAAuB,IAE1D,MAAO8Q,EAAUoB,IAAe9a,EAAAA,EAAAA,UAC9B,SAAA+a,EAAAC,EAAA,OAAkC,QAAlCD,EAAwB,QAAxBC,EAAO/I,YAAiB,IAAA+I,OAAA,EAAjBA,EAAmBtB,gBAAQ,IAAAqB,EAAAA,EAAI,WAEjCE,EAAYC,IAAiBlb,EAAAA,EAAAA,UAAS,KAAO,IAADmb,EACjD,MAAMC,EAASnJ,KACf,OAAyB,QAAzBkJ,EAAa,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQH,kBAAU,IAAAE,EAAAA,EAAI,CAAE9L,MAAO,GAAIC,MAAO,OAE5C+L,EAAWC,IAAgBtb,EAAAA,EAAAA,UAAS,KAAO,IAADub,EAC/C,MAAMH,EAASnJ,KACf,OAAwB,QAAxBsJ,EAAa,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQC,iBAAS,IAAAE,EAAAA,EAAI,CAAElM,MAAO,GAAIC,MAAO,OAG3CrB,EAAMuN,IAAWxb,EAAAA,EAAAA,UAAS,SAAAyb,EAAAC,EAAA,OAA6B,QAA7BD,EAAuB,QAAvBC,EAAMzJ,YAAiB,IAAAyJ,OAAA,EAAjBA,EAAmBzN,YAAI,IAAAwN,EAAAA,EAAI,YAC3DnN,EAASqN,IAAc3b,EAAAA,EAAAA,UAAS,KACrC,MAAM4b,EAAQ3J,KACRrR,EAAS,OAALgb,QAAK,IAALA,OAAK,EAALA,EAAOtN,QACjB,GAAI1N,GAAkB,kBAANA,EAAgB,CAI9B,OAHa,CAAC,MAAO,MAAO,OAAQ,QAAS,UAAW,WAAWrD,IAAIuQ,GAAKlL,OAAOhC,EAAEkN,KAChE+N,MAAMre,GAAW,IAANA,IAEV,OAALoe,QAAK,IAALA,GAAAA,EAAO3N,MAAuB,WAAf2N,EAAM3N,KAG/BP,EAAgB9M,GAFd,IAAK0M,EAGhB,CAEA,MAAO,IAAKA,MAEPwO,EAAiBC,IAAsB/b,EAAAA,EAAAA,UAAS,OAChDgc,EAAgBC,IAAqBjc,EAAAA,EAAAA,UAAS,OAC/C,OAAE0X,EAAM,KAAErY,EAAI,OAAE6c,GAvRxB,WACE,MAAOxE,EAAQyE,IAAanc,EAAAA,EAAAA,UAAS,IAC/BX,EAAO,SAAC9C,GAAwB,IAAnBT,EAAIU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OACxB,MAAMoO,EAAKgH,KACXuK,EAAUje,GAAK,IAAIA,EAAG,CAAE0M,KAAIrO,MAAKT,UACjCsgB,WAAW,IAAMD,EAAUje,GAAKA,EAAER,OAAO8I,GAAKA,EAAEoE,KAAOA,IAAM,IAC/D,EAYA,OATAvP,EAAAA,EAAAA,WAAU,KACR,MAAMghB,EAASjW,IACb,MAAM,IAAE7J,EAAG,KAAET,GAASsK,EAAEtJ,QAAU,CAAC,EAC9BP,GACL8C,EAAKjC,OAAOb,GAAMT,GAAQ,SAG5B,OADAa,OAAOkI,iBAAiB,YAAawX,GAC9B,IAAM1f,OAAOmI,oBAAoB,YAAauX,IACpD,IACI,CAAE3E,SAAQrY,OAAM6c,OAXPtR,GAAOuR,EAAUje,GAAKA,EAAER,OAAO8I,GAAKA,EAAEoE,KAAOA,IAY/D,CAoQmC0R,IAC1BC,EAAcC,IAAmBxc,EAAAA,EAAAA,WAAS,IAC1Cyc,GAAUC,KAAe1c,EAAAA,EAAAA,WAAS,IAClC2c,GAAaC,KAAkB5c,EAAAA,EAAAA,UAAS,IAExC6c,GAAOC,KAAY9c,EAAAA,EAAAA,WAAS,GAC7B+c,IAAc3hB,EAAAA,EAAAA,SAAO,GAErB4hB,GAAQ/B,EAAWvB,GACnB5W,GAAOuY,EAAU3B,IAEjB,YAAEuD,GAAW,SAAEhd,GAAQ,QAAEid,GAAO,UAAEC,GAAS,cAAEC,ICxsB9C,SAAsBJ,EAAOla,EAAMmL,EAAMK,GAC9C,MAAO+O,EAAaC,IAAkBtd,EAAAA,EAAAA,UAAS,IACxCod,EAAeG,IAAoBvd,EAAAA,EAAAA,WAAS,IAC5Cwd,EAAWC,IAAgBzd,EAAAA,EAAAA,WAAS,IACpCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,CACvCI,IAAK,EACLD,MAAO,4BACPE,eAAe,EACfqd,WAAOhhB,EACPihB,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,KAAM,KACNC,UAAW,KACXC,MAAO,KACPC,MAAO,KAEFC,EAAeC,IAAoBpe,EAAAA,EAAAA,UAAS,IAC7Cqe,GAAYjjB,EAAAA,EAAAA,QAAO,MAGnBkjB,GAAYljB,EAAAA,EAAAA,QAAO,CAAE4hB,QAAOla,OAAMmL,OAAMK,YA+H9C,OA7HAjT,EAAAA,EAAAA,WAAU,KACRgjB,EAAUpiB,QAAU,IAAI4F,OAAO,IAAIC,IAAI,kBAAoD,CAAEhG,UAAM,IACnG,IAAK,IAADyiB,EACe,QAAjBA,EAAAF,EAAUpiB,eAAO,IAAAsiB,GAAjBA,EAAmBhV,YAAY,CAAEzN,KAAM,WACzC,CAAE,MAAQ,CACV,MAAO,KAAO,IAAD0iB,EACM,QAAjBA,EAAAH,EAAUpiB,eAAO,IAAAuiB,GAAjBA,EAAmBC,YACnBJ,EAAUpiB,QAAU,OAErB,KAGHZ,EAAAA,EAAAA,WAAU,KACR,GAAoB,IAAhBgiB,EAAmB,OACvB,IAAIqB,GAAY,EAoGhB,OAlGAtC,WAAW,KACLsC,IACJC,EAAAA,EAAAA,WAAU,KAAO,IAADC,EACdnB,GAAa,GACbvd,EAAY,CACVE,IAAK,EACLD,MAAO,2FACPE,eAAe,EACfqd,MAAO,MACPC,UAAW,KACXC,WAAkC,QAAvBgB,EAAAN,EAAUriB,QAAQ+gB,aAAK,IAAA4B,OAAA,EAAvBA,EAAyBniB,SAAU,KAC9CohB,SAAU,KACVC,UAAW,KACXC,KAAM,KACNC,UAAW,KACXC,MAAO,KACPC,MAAO,OAGV,GAEH,WACE,UACQ,IAAIW,QAAQC,GAAW9J,sBAAsB8J,IACnD,MAAMnd,EAAS0c,EAAUpiB,QACzB,IAAK0F,EAAQ,MAAM,IAAIod,MAAM,0BAE7B,MAAMhd,EAAaqE,IACjB,GAAIsY,EAAW,OACf,MAAMniB,EAAM6J,EAAElE,MAAQ,CAAC,EACmB,IAAD8c,EAAzC,GAAkB,WAAX,OAAHziB,QAAG,IAAHA,OAAG,EAAHA,EAAKT,OAAuB,OAAHS,QAAG,IAAHA,GAAAA,EAAKoI,MAKhC,OAJAxC,QAAQwC,OAAY,QAANqa,EAAA5Y,EAAElE,YAAI,IAAA8c,OAAA,EAANA,EAAQra,SAAY,OAAHpI,QAAG,IAAHA,OAAG,EAAHA,EAAKoI,QACpC8Y,GAAa,GACbvd,EAAawC,IAAC,IAAWA,EAAGtC,IAAK,EAAGD,MAAO,eAAME,eAAe,UAChEsB,EAAOmD,oBAAoB,UAAW/C,GAGxC,GAAiB,aAAbxF,EAAIT,KAAqB,CAC3B,MAAM,KAAEmjB,EAAI,MAAEC,EAAK,cAAE7e,GAAgB,EAAK,MAAEqd,EAAK,UAAEC,EAAS,UAAEC,EAAS,SAAEC,EAAQ,UAAEC,EAAS,KAAEC,EAAI,UAAEC,EAAS,MAAEC,EAAK,MAAEC,GAAU3hB,EAChI,GAAI8D,IAAkB6e,GAASA,GAAS,GAAa,MAARD,EAC3C/e,EAAawC,IAAC,IAAAyc,EAAA,MAAM,IACfzc,EAAGtC,IAAK,EAAGC,eAAe,EAAMqd,QACnCC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAajb,EAAEib,UAC1BC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAalb,EAAEkb,UAC1BC,SAAkB,OAARA,QAAQ,IAARA,EAAAA,EAAYnb,EAAEmb,SACxBC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAapb,EAAEob,UAC1BC,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQrb,EAAEqb,KAChBC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAatb,EAAEsb,UAC1BC,MAAY,OAALA,QAAK,IAALA,EAAAA,EAASvb,EAAEub,MAClBC,MAAY,OAALA,QAAK,IAALA,EAAAA,EAAiB,QAAZiB,EAAKzc,EAAEwb,aAAK,IAAAiB,EAAAA,EAAI,SAEzB,CACL,MAAM/e,EAAMtB,KAAKC,IAAI,EAAGD,KAAKyE,IAAI,IAAKzE,KAAKsgB,MAAOH,EAAOngB,KAAKC,IAAI,EAAGmgB,GAAU,OAC/Ehf,EAAawC,IAAC,IACTA,EAAGtC,MAAKC,eAAe,EAAOqd,QACjCC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAajb,EAAEib,UAC1BC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAalb,EAAEkb,UAC1BC,SAAkB,OAARA,QAAQ,IAARA,EAAAA,EAAYnb,EAAEmb,SACxBC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAapb,EAAEob,UAC1BC,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQrb,EAAEqb,KAChBC,UAAoB,OAATA,QAAS,IAATA,EAAAA,EAAatb,EAAEsb,UAC1BC,MAAY,OAALA,QAAK,IAALA,EAAAA,EAASvb,EAAEub,MAClBC,WAAOxhB,IAEX,CACA,MACF,CACA,GAAiB,WAAbH,EAAIT,KAAmB,CACzB,MAAM,MAAEujB,GAAU9iB,EAKlB,OAJA6hB,EAAiBiB,GAAS,IAC1B5B,GAAa,GACbvd,EAAawC,IAAC,IAAWA,EAAGtC,IAAK,IAAKD,MAAO,eAAME,eAAe,EAAO6d,WAAOxhB,UAChFiF,EAAOmD,oBAAoB,UAAW/C,EAExC,GAGFJ,EAAOkD,iBAAiB,UAAW9C,GAGnC,MAAQib,MAAOsC,EAAGxc,KAAMwB,EAAG2J,KAAM3H,EAAGgI,QAAS1N,GAAM0d,EAAUriB,QACvDsjB,EACNjb,EAAE7H,QAAU,GAAK,KACjB6H,EAAE7H,QAAU,GAAK,IACjB6H,EAAE7H,QAAU,GAAM,IAClB6H,EAAE7H,QAAU,GAAM,IAClB6H,EAAE7H,QAAU,GAAM,IAClB6H,EAAE7H,QAAU,GAAM,IAAM,IAExBkF,EAAO4H,YAAY,CAAEzN,KAAM,MAAOkhB,MAAOsC,EAAGxc,KAAMwB,EAAG2J,KAAM3H,EAAGgI,QAAS1N,EAAG2e,gBAC5E,CAAE,MAAOrZ,GACFwY,IACHvc,QAAQwC,MAAMuB,GACduX,GAAa,GAEjB,CACD,EA3ED,GA6EO,KAAQiB,GAAY,IAE1B,CAACrB,IASG,CACLJ,YAAaO,EACbvd,WACAid,QAASiB,EACThB,WAVgBrJ,EAAAA,EAAAA,aAAY,KAC5BwK,EAAUriB,QAAU,CAAE+gB,QAAOla,OAAMmL,OAAMK,WACzCgP,EAAe9f,GAAKA,EAAI,GACxB+f,GAAiB,IAChB,CAACP,EAAOla,EAAMmL,EAAMK,IAOrB8O,gBAEJ,CD4iBuEoC,CAAaxC,GAAOla,GAAMmL,EAAMK,IAE9FmR,GAAaC,KAAkB1f,EAAAA,EAAAA,UAAS,SAAA2f,EAAAC,EAAA,OAAqC,QAArCD,EAAwB,QAAxBC,EAAO3N,YAAiB,IAAA2N,OAAA,EAAjBA,EAAmBH,mBAAW,IAAAE,EAAAA,EAAI,KAElFE,IAAezkB,EAAAA,EAAAA,QAAO,MAEtB0kB,IAAgBhM,EAAAA,EAAAA,aAAY,MAChCiM,IAAK,oBACLC,QAAS,EACTC,YAAY,IAAIja,MAAOka,cACvBxG,WACAuB,aACAI,YACApN,OACAK,QAASZ,EAAgBY,GACzBmR,iBACE,CAAC/F,EAAUuB,EAAYI,EAAWpN,EAAMK,EAASmR,KAE/CU,IAAmBrM,EAAAA,EAAAA,aAAY,KACnC,IACE,MAAM5R,EAAO4d,KACPja,EAAO,IAAIua,KAAK,CAAChO,KAAKiO,UAAUne,EAAM,KAAM,IAAK,CAAEpG,KAAM,qBACzDiJ,EAAMjD,IAAIkD,gBAAgBa,GAC1Bya,EAAI,IAAIta,KACRua,EAAQ,GAAGD,EAAEE,gBAAgBpjB,OAAOkjB,EAAEG,WAAa,GAAGC,SAAS,EAAG,OAAOtjB,OAAOkjB,EAAEK,WAAWD,SAAS,EAAG,OAAOtjB,OAAOkjB,EAAEM,YAAYF,SAAS,EAAG,OAAOtjB,OAAOkjB,EAAEO,cAAcH,SAAS,EAAG,OAG3LI,EACJrB,IAAeA,GAAYhiB,OACvB,IAAIgiB,GAAYhiB,OAAOJ,QAAQ,iBAAkB,MACjD,GAEAoG,EAAIlI,SAASC,cAAc,KACjCiI,EAAEsd,KAAOhc,EACTtB,EAAEud,SAAW,iCAAQF,KAAWP,SAChChlB,SAASyQ,KAAK7P,YAAYsH,GAC1BA,EAAEgF,QACFhF,EAAEyY,SACFE,WAAW,IAAMta,IAAImD,gBAAgBF,GAAM,KAC3C1F,EAAK,gEAAoB,UAC3B,CAAE,MAAO+G,GACPjE,QAAQwC,MAAMyB,GACd/G,EAAK,qFAAqB,QAC5B,GACC,CAACygB,GAAezgB,EAAMogB,KAEnBwB,IAAoBnN,EAAAA,EAAAA,aAAY,KAAO,IAADoN,EACtB,QAApBA,EAAArB,GAAa5jB,eAAO,IAAAilB,GAApBA,EAAsBzY,SACrB,IAEG0Y,IAAmBrN,EAAAA,EAAAA,aAAa1N,IAAO,IAADyD,EAC1C,MAAMvJ,EAAqB,QAAjBuJ,EAAGzD,EAAE0D,OAAOC,aAAK,IAAAF,OAAA,EAAdA,EAAiB,GAE9B,GADAzD,EAAE0D,OAAOqF,MAAQ,IACZ7O,EAAM,OAEX,MAAM8gB,EAAS,IAAIC,WACnBD,EAAOE,OAAS,KACd,IACE,MAAMC,EAAOnP,KAAKC,MAAMjV,OAAOgkB,EAAOI,SACtC,IAAKD,GAAwB,kBAATA,EAAmB,MAAM,IAAIxC,MAAM,WACvD,IAAKwC,EAAKtG,aAAesG,EAAKlG,UAAW,MAAM,IAAI0D,MAAM,mBACzDJ,EAAAA,EAAAA,WAAU,KACRzD,EAAcqG,EAAKtG,YACnBK,EAAaiG,EAAKlG,WAClBP,EAA8B,UAAlByG,EAAK7H,SAAuB,QAAU,SAClD8B,EAAsB,WAAd+F,EAAKtT,MAAmC,YAAdsT,EAAKtT,KAAqBsT,EAAKtT,KAAO,MACxE0N,EAAW,IAEI,YADW,YAAd4F,EAAKtT,KAAqB,UAAY,UACxB,IAAKX,GAAmByE,GAAmBxE,EAAiB,YAEtFmS,GAA2C,kBAArB6B,EAAK9B,YAA2B8B,EAAK9B,YAAc,IACzE1D,EAAmB,MACnBE,EAAkB,MAClBO,GAAgB,GAChBM,IAAS,KAEXF,GAAepf,GAAKA,EAAI,GACxB6B,EAAK,sEAAqB,UAC5B,CAAE,MAAO6G,GACP/D,QAAQwC,MAAMuB,GACd7G,EAAK,8GAA+B,QACtC,GAEF+hB,EAAOK,QAAU,IAAMpiB,EAAK,oGAA0B,SACtD+hB,EAAOM,WAAWphB,IACjB,CAACjB,EAAM6b,EAAeI,EAAcR,EAAaU,EAASG,EAAY+D,MAEzErkB,EAAAA,EAAAA,WAAU,KACJ6hB,IAAWA,GAAQzgB,OAAS,GAC9BqgB,IAAS,IAEV,CAACI,KAEJ,MAAMyE,GAAYC,IAChB1G,EAAevQ,IACb,MAAMqH,EAA0B,oBAAZ4P,EAAyBA,EAAQjX,EAAK+O,IAAakI,EAEvE,OADA9E,IAAS,GACF,IAAKnS,EAAM,CAAC+O,GAAW1H,MAI5B6P,IAAU/N,EAAAA,EAAAA,aAAa8N,IAC3BtG,EAAc3Q,IAAU,IAADmX,EACrB,MAAMnU,EAAqB,QAAjBmU,EAAGnX,EAAK+O,UAAS,IAAAoI,EAAAA,EAAI,GACzB9P,EACe,oBAAZ4P,EAAyBA,EAAQjU,GAAQiU,EAElD,OADA9E,IAAS,GACF,IAAKnS,EAAM,CAAC+O,GAAW1H,MAE/B,CAACsJ,EAAc5B,EAAUoD,KAGtBiF,IAAsBjO,EAAAA,EAAAA,aAAaxP,IAAC,IAAA0d,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAM,CAC9CzX,GAAIgH,KACJtS,KAAMsD,OAAOC,SAAU,OAADyB,QAAC,IAADA,OAAC,EAADA,EAAGhF,MAAQgF,EAAEhF,KAAO,KAC1CqE,MAAOf,OAAOC,SAAU,OAADyB,QAAC,IAADA,OAAC,EAADA,EAAGX,OAASW,EAAEX,MAAQ,KAC7CC,IAAmB,QAAhBoe,EAAG,OAAD1d,QAAC,IAADA,GAAO,QAAN2d,EAAD3d,EAAGR,YAAI,IAAAme,OAAN,EAADA,EAAS9hB,aAAK,IAAA6hB,EAAAA,EAAI,MACvBhT,IAAKpM,OAAOC,SAAU,OAADyB,QAAC,IAADA,GAAO,QAAN4d,EAAD5d,EAAGR,YAAI,IAAAoe,OAAN,EAADA,EAAS3jB,OAAS+F,EAAER,KAAKvF,MAAQ,EACtDsF,IAAmB,QAAhBse,EAAG,OAAD7d,QAAC,IAADA,GAAO,QAAN8d,EAAD9d,EAAGP,YAAI,IAAAqe,OAAN,EAADA,EAASjiB,aAAK,IAAAgiB,EAAAA,EAAI,MACvBlT,IAAKrM,OAAOC,SAAU,OAADyB,QAAC,IAADA,GAAO,QAAN+d,EAAD/d,EAAGP,YAAI,IAAAse,OAAN,EAADA,EAAS9jB,OAAS+F,EAAEP,KAAKxF,MAAQ,IACpD,IAGE+jB,IAAgBxO,EAAAA,EAAAA,aAAa7R,IACjCya,IAAY,GACZva,QAAQE,IAAI,iCAAkCJ,GAE9C,MAAMc,EAAU2L,MAAMC,QAAe,OAAP1M,QAAO,IAAPA,OAAO,EAAPA,EAASwC,aAAexC,EAAQwC,YAAc,GAItEgB,GAHUiJ,MAAMC,QAAe,OAAP1M,QAAO,IAAPA,OAAO,EAAPA,EAASa,MAAQb,EAAQa,KAAO,IAGxCvF,IAAIwkB,IAG1B,GAAItc,EAAMhJ,OAAS,EAAG,CAAC,IAAD8lB,EACpBV,GAASlX,GAAS,IAAIA,KAASlF,IAC/B,MAAM+c,EAAgC,QAA1BD,EAAG9c,EAAMA,EAAMhJ,OAAS,UAAE,IAAA8lB,OAAA,EAAvBA,EAAyB3X,GACpC4X,GAAQvG,EAAkBuG,EAChC,CAIA,IAAIjmB,EAAM,GACNT,EAAO,OACP2J,EAAMhJ,OAAS,EACbsG,EAAQtG,OAAS,GACnBF,EAAM,6BAASwG,EAAQyB,KAAK,wCAAeiB,EAAMhJ,2FACjDX,EAAO,YAEPS,EAAM,GAAGkJ,EAAMhJ,2FACfX,EAAO,WAILiH,EAAQtG,OAAS,GACnBF,EAAM,oIAAgCwG,EAAQyB,KAAK,eACnD1I,EAAO,YAEPS,EAAM,mEACNT,EAAO,QAIXuD,EAAK9C,EAAKT,IACT,CAACuD,EAAMqd,GAAaT,EAAmB4F,GAASE,MAG9CU,GAAWC,KAAgB1iB,EAAAA,EAAAA,UAAS,CAAEV,KAAM,OAAQqE,MAAO,QAC5Dgf,GAASnlB,GAAMoF,OAAOC,SAASrF,GAG/BolB,IAAe9O,EAAAA,EAAAA,aAAY,KAC/B+N,GAASlX,IACP,MAAMkY,EAAUlY,EAAKpN,IAAI,CAAC+G,EAAGtF,KAAC,CAAQsF,IAAGtF,OAczC,OAbA6jB,EAAQnR,KAAK,CAACoR,EAAGC,KACf,MAAMC,EAAML,GAAMG,EAAExe,EAAEhF,MAAO2jB,EAAMN,GAAMI,EAAEze,EAAEhF,MAC7C,GAAI0jB,IAAQC,EAAK,OAAOA,EAAMD,EAC9B,GAAIA,GAAOF,EAAExe,EAAEhF,OAASyjB,EAAEze,EAAEhF,KAC1B,MAA0B,SAAnBmjB,GAAUnjB,KAAkByjB,EAAEze,EAAEhF,KAAOwjB,EAAExe,EAAEhF,KAAOwjB,EAAExe,EAAEhF,KAAOyjB,EAAEze,EAAEhF,KAE1E,MAAM4jB,EAAMP,GAAMG,EAAExe,EAAEX,OAAQwf,EAAMR,GAAMI,EAAEze,EAAEX,OAC9C,OAAIuf,IAAQC,EAAYA,EAAMD,EAC1BA,GAAOJ,EAAExe,EAAEX,QAAUof,EAAEze,EAAEX,MACA,QAApB8e,GAAU9e,MAAkBmf,EAAExe,EAAEX,MAAQof,EAAEze,EAAEX,MAAQof,EAAEze,EAAEX,MAAQmf,EAAExe,EAAEX,MAEtEmf,EAAE9jB,EAAI+jB,EAAE/jB,IAEV6jB,EAAQtlB,IAAI6lB,IAAA,IAAC,EAAE9e,GAAG8e,EAAA,OAAK9e,OAE/B,CAACud,GAASY,GAAUnjB,KAAMmjB,GAAU9e,SAGvCtI,EAAAA,EAAAA,WAAU,KAAQunB,MAAmB,CAACA,MAGpCvnB,EAAAA,EAAAA,WAAU,KACH0hB,GAAY9gB,QACjB6gB,IAAS,GADmBC,GAAY9gB,SAAU,GAEjD,CAACgS,EAAMK,EAASoL,KAenBre,EAAAA,EAAAA,WAAU,KACS,UAAbqe,GAAyB+F,IAE7BvE,EAAemI,IAAe,IAADC,EAC3B,MAAMtgB,EAA0B,QAAtBsgB,EAAGD,EAAU3J,UAAS,IAAA4J,EAAAA,EAAI,GACpC,IAAIC,GAAU,EAEd,MAAMvR,EAAOhP,EAAKzF,IAAK+hB,IAAO,IAADkE,EAAAC,EAC3B,MAAMxT,EAAWL,EAAmB0P,EAAEoE,MAChCje,EAAQsK,GAAe0P,GAAaxP,GAEpC0T,EADUrE,EAAEjP,QAAU5K,EAAM+O,KAAMxV,GAAMA,EAAEmQ,QAAUmQ,EAAEjP,QAC/BiP,EAAEjP,OAAyB,QAAnBmT,EAAY,QAAZC,EAAIhe,EAAM,UAAE,IAAAge,OAAA,EAARA,EAAUtU,aAAK,IAAAqU,EAAAA,OAAI9mB,EAE5D,OAAIinB,IAAerE,EAAEjP,QACnBkT,GAAU,EACH,IAAKjE,EAAGjP,OAAQsT,IAElBrE,IAGT,OAAKiE,GACLzG,IAAS,GACF,IAAKuG,EAAW,CAAC3J,GAAW1H,IAFdqR,KAItB,CAAC3J,EAAU+F,GAAazC,GAAO9B,EAAe4B,KAEjD,MASM8G,GAAYA,CAAChZ,EAAIiZ,IAAUhC,GAAQrkB,GAAKA,EAAED,IAAI+G,GAAKA,EAAEsG,KAAOA,EAAK,IAAKtG,KAAMuf,GAAUvf,IAsBtFwf,GAAaA,CAAClZ,EAAIiZ,IAAUlC,GAASoC,IACzC,GAAI,SAAUF,EAAO,CAEnB,GADYE,EAAGvP,KAAK8K,GAAKA,EAAE1U,KAAOA,GAAM0U,EAAEoE,OAASG,EAAMH,MAGvD,OADArkB,EAAK,GAAGwkB,EAAMH,mFACPK,CAEX,CACA,OAAOA,EAAGxmB,IAAI+hB,GAAKA,EAAE1U,KAAOA,EAAK,IAAK0U,KAAMuE,GAAUvE,MAGjD0E,GAAUC,KAAejkB,EAAAA,EAAAA,WAAS,GAiBnCkkB,GAAiB,+FACjBC,GAAe,4CACfC,GAAO,iCACPC,GAAO,0EACPC,GAAW,mCACXC,GAAoBC,GAAQA,EAAM,EAClCC,GAAkBA,CAACD,EAAKtF,IAAUA,EAAQsF,EAE1CE,GAAiBC,IAAU,IAADC,EAC9B,MAAMC,EAAiB,OAAX5Y,QAAW,IAAXA,OAAW,EAAXA,EAAc0Y,EAAKlL,OAC/B,OAAoB,QAApBmL,EAAY,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAM/K,cAAM,IAAAgL,EAAAA,EAAIC,GAO1B,SAASC,GAAWC,GAAmC,IAAlC,MAAEC,EAAK,aAAEC,GAAe,GAAOF,EAClD,MAAOnhB,EAAKshB,IAAUllB,EAAAA,EAAAA,UAAS,QACxB6D,EAAKshB,IAAUnlB,EAAAA,EAAAA,UAAS,QACxBgP,EAAKoW,IAAUplB,EAAAA,EAAAA,UAAS,IACxBiP,EAAKoW,IAAUrlB,EAAAA,EAAAA,UAAS,IACxBV,EAAMgmB,IAAWtlB,EAAAA,EAAAA,UAAS,IAC1B2D,EAAO4hB,IAAYvlB,EAAAA,EAAAA,UAAS,GAE7BwlB,GAAWpqB,EAAAA,EAAAA,QAAO,MAClBqqB,GAAsBrqB,EAAAA,EAAAA,SAAO,GAC7BsqB,EAAgB,wBAEtBrqB,EAAAA,EAAAA,WAAU,KACH4pB,GACLjQ,sBAAsB,KAAO,IAAD2Q,EAAAC,EAAAC,EAAAC,EACV,QAAhBH,EAAAH,EAASvpB,eAAO,IAAA0pB,GAAO,QAAPC,EAAhBD,EAAkBvQ,aAAK,IAAAwQ,GAAvBA,EAAA9d,KAAA6d,GACgB,QAAhBE,EAAAL,EAASvpB,eAAO,IAAA4pB,GAAQ,QAARC,EAAhBD,EAAkBE,cAAM,IAAAD,GAAxBA,EAAAhe,KAAA+d,MAED,CAACZ,IAEJ,MAYMe,EAAgB5f,IAAO,IAAD6f,EACzB,OAAD7f,QAAC,IAADA,GAAiB,QAAhB6f,EAAD7f,EAAG2B,sBAAc,IAAAke,GAAjBA,EAAAne,KAAA1B,GACA,MAAMwE,EAAKgH,KACXoT,EAAM,CACJpa,KACAtL,KAAMsD,OAAOC,SAASvD,GAAQA,EAAO,EACrCqE,MAAOf,OAAOC,SAASc,GAASA,EAAQ,EACxCC,MACAoL,IAAKpM,OAAOC,SAASmM,GAAOA,EAAM,EAClCnL,MACAoL,IAAKrM,OAAOC,SAASoM,GAAOA,EAAM,IAGhCwW,EAAoBxpB,UAxBxB+Y,sBAAsB,KACpBA,sBAAsB,KACpB,GAAIwQ,EAASvpB,QACX,IAAK,IAADiqB,EAAAC,EAAyD,OAAvDX,EAASvpB,QAAQmZ,aAAgC,QAAvB8Q,GAAAC,EAAAX,EAASvpB,SAAQ8pB,cAAM,IAAAG,GAAvBA,EAAApe,KAAAqe,GAAqC,CAAE,MAAQ,CAEjF,MAAMhR,EAAK5Z,SAAS6qB,eAAeV,GAC1B,IAADW,EAAJlR,IAAMA,EAAGC,QAAkB,QAATiR,EAAAlR,EAAG4Q,cAAM,IAAAM,GAATA,EAAAve,KAAAqN,QAoBxBsQ,EAAoBxpB,SAAU,IAI5BqqB,EAAmBlgB,IACT,UAAVA,EAAE8H,KAAoB9H,EAAEmgB,WAC1Bd,EAAoBxpB,SAAU,EAC9B+pB,EAAa5f,KAIjB,OACE+B,EAAAA,EAAAA,MAAA,QAAMqe,SAAUR,EAAa9d,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,yJAAwJyM,SAAA,EACrK9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,oHAAoHmN,MAAM,4BAAOV,UAC9I9L,EAAAA,EAAAA,KAACqqB,EAAAA,EAAI,CAACne,KAAM,QAGdH,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oEAAmEyM,SAAA,EAChFC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sDAAqDyM,SAAA,EAClE9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,qCAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAO7P,EACPsK,SAAU0b,EACV/hB,IAAK,EACLxE,IAAK,EACL0W,KAAM,EACN0C,YAAY,EACZ1c,UAAW,GAAGyoB,oBACd7L,WAAY,CACVzN,GAAI8a,EACJ9c,MAAO,qBACPsK,YAAa,qBACbmD,UAAWiQ,EACXjqB,IAAKmpB,SAIXrd,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sDAAqDyM,SAAA,EAClE9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,mDAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAOxL,EACPiG,SAAU2b,EACVhiB,IAAK,EACLxE,IAAK,EACL0W,KAAM,EACN0C,YAAY,EACZ1c,UAAW,GAAGyoB,oBACd7L,WAAY,CAAEzP,MAAO,qBAAOsK,YAAa,qBAAOmD,UAAWiQ,YAKjEne,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6DAA4DyM,SAAA,EACzEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,8BAA6ByM,SAAA,EAC1C9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,oBAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,iBACV0T,MAAOvL,EACPgG,SAAWpM,GAAM0nB,EAAO1nB,GACxBiI,MAAOwH,EAAQ1P,IAAIuQ,IAAC,CAAOqB,MAAOrB,EAAG3N,MAAOuM,EAAcoB,MAC1DoF,YAAY,kCAGhB/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sBAAqByM,SAAA,EAClC9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,kBAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAOH,EACPpF,SAAUwb,EACV7hB,IAAK,EACLxE,IAAK,EACL0W,KAAM,EACN0C,YAAY,EACZ1c,UAAU,8GACV4c,WAAY,CAAEnF,YAAa,IAAKmD,UAAWiQ,YAKjDne,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6DAA4DyM,SAAA,EACzEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,8BAA6ByM,SAAA,EAC1C9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,oBAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,iBACV0T,MAAOtL,EACP+F,SAAWpM,GAAM2nB,EAAO3nB,GACxBiI,MAAOwH,EAAQ1P,IAAIuQ,IAAC,CAAOqB,MAAOrB,EAAG3N,MAAOuM,EAAcoB,MAC1DoF,YAAY,kCAGhB/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sBAAqByM,SAAA,EAClC9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,kBAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAOF,EACPrF,SAAUyb,EACV9hB,IAAK,EACLxE,IAAK,EACL0W,KAAM,EACN0C,YAAY,EACZ1c,UAAU,8GACV4c,WAAY,CAAEnF,YAAa,IAAKmD,UAAWiQ,YAKjDlqB,EAAAA,EAAAA,KAAA,OAAKX,UAAU,yEAAwEyM,UACrFC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,KAASqd,EAAoBxpB,SAAU,GAChDR,UAAU,gIACVmN,MAAM,8CAAeV,SAAA,EAErB9L,EAAAA,EAAAA,KAACqqB,EAAAA,EAAI,CAACne,KAAM,MACZlM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,SAAQyM,SAAC,kCAK/BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,kCAAiCyM,SAAA,EAC9C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wBACfW,EAAAA,EAAAA,KAAA,QAAMX,UAAU,6BAA4ByM,SAAC,oGAG7C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,4BAIvB,CAEA,OApLAJ,EAAAA,EAAAA,WAAU,MA90BZ,SAAuB6G,GACrB,IACEgQ,aAAawU,QAAQnX,EAAQ6C,KAAKiO,UAAUne,GAC9C,CAAE,MAAOkE,GACPjE,QAAQoC,KAAK,qBAAsB6B,EACrC,CACF,CAy0BIugB,CAAc,CAAEjN,WAAUuB,aAAYI,YAAWpN,OAAMK,UAASmR,kBAC/D,CAAC/F,EAAUuB,EAAYI,EAAWpN,EAAMK,EAASmR,MAmLlDtX,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wCAAwCC,MAAO,CAC5DkrB,gBAAiB,4CACjBC,qBAAsB,SACtB3e,SAAA,EACA9L,EAAAA,EAAAA,KAAA,SAAA8L,SAAQ,yiBASR9L,EAAAA,EAAAA,KAAA,SAAA8L,SAAQ,4BAERC,EAAAA,EAAAA,MAAA,OAAuB1M,UAAU,2CAA0CyM,SAAA,EACzE9L,EAAAA,EAAAA,KAAA,WAASX,UAAU,eAAcyM,UAC/BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oDAAmDyM,SAAA,EAChE9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,+GAA8GyM,SAAC,wFAG7HC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iDAAgDyM,SAAA,EAC7DC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAAS+X,GACT1kB,UAAU,iFACVmN,MAAM,sEAAmBV,SAAA,EAEzB9L,EAAAA,EAAAA,KAAC0qB,EAAAA,EAAQ,CAACxe,KAAM,MAChBlM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,2BAA0ByM,SAAC,iCAE7CC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAAS6Y,GACTxlB,UAAU,iFACVmN,MAAM,4CAAaV,SAAA,EAEnB9L,EAAAA,EAAAA,KAAC2qB,EAAAA,EAAM,CAACze,KAAM,MACdlM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,2BAA0ByM,SAAC,iCAE7C9L,EAAAA,EAAAA,KAAA,SACEC,IAAKwjB,GACL/jB,KAAK,OACL6N,OAAO,mBACPlO,UAAU,SACVmO,SAAUuX,MAEZ/kB,EAAAA,EAAAA,KAAA,OAAKX,UAAU,4CAA4C,oBAC3DW,EAAAA,EAAAA,KAAA,UACEgM,QAASA,IAAM0S,EAAY,SAC3Brf,UAAW,8EAA0F,UAAbie,EAAuB,WAAa,eAC5H9Q,MAAM,wCAASV,SAEdkH,EAAeC,SAElBjT,EAAAA,EAAAA,KAAA,UACEgM,QAASA,IAAM0S,EAAY,SAC3Brf,UAAW,8EAA0F,UAAbie,EAAuB,WAAa,eAC5H9Q,MAAM,wCAASV,SAEdkH,EAAeE,iBAMxBnH,EAAAA,EAAAA,MAAA,WAAS1M,UAAW,GAAG2oB,sBAAwBlc,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,mCAAkCyM,SAAA,EAC/CC,EAAAA,EAAAA,MAAA,MAAI1M,UAAW0oB,GAAajc,SAAA,CAAEkH,EAAesK,GAAU,iCACvDvR,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oDAAmDyM,SAAA,CAClD,UAAbwR,IACCtd,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,OACV0T,MAAOsQ,GACP7V,SAAWod,IACTtH,GAAesH,GACfrF,GAAShX,GAAQA,EAAKpN,IAAI+hB,IAAM,IAAD2H,EAAAC,EAC7B,MAAMjX,EAAWL,EAAmB0P,EAAEoE,MAChCje,EAAQsK,GAAeiX,EAAK/W,GAElC,OADWqP,EAAEjP,QAAU5K,EAAM+O,KAAKxV,GAAKA,EAAEmQ,QAAUmQ,EAAEjP,QACzCiP,EAAI,IAAKA,EAAGjP,OAAwB,QAAlB4W,EAAW,QAAXC,EAAGzhB,EAAM,UAAE,IAAAyhB,OAAA,EAARA,EAAU/X,aAAK,IAAA8X,EAAAA,OAAIvqB,OAGxD+I,MAAO,CAAC,CAAE0J,MAAO,GAAIhP,MAAO,gCAAcqP,EAAKjS,IAAI4pB,IAAC,CAAOhY,MAAOgY,EAAGhnB,MAAOgnB,MAC5EjU,YAAY,+BAGhB/K,EAAAA,EAAAA,MAAA,UAAQ1M,UAAU,2IAA2I2M,QA1UzJgf,IAAMzF,GAASoC,IAAO,IAADsD,EACnC,GAAItD,EAAGtnB,QAAU,EAAgD,OAA3C4C,EAAK,oGAA0B,WAAmB0kB,EACxE,MACMuD,EAnzBV,SAA+BC,GAC7B,IAAK,MAAMrkB,KAAK2M,EAAY,IAAK0X,EAAc3Y,IAAI1L,GAAI,OAAOA,EAC9D,OAAO,IACT,CAgzBqBskB,CADA,IAAIpa,IAAI2W,EAAGxmB,IAAI+hB,GAAKA,EAAEoE,QAEvC,IAAK4D,EAAoD,OAAxCjoB,EAAK,oGAA0B,QAAgB0kB,EAChE,MAAMnZ,EAAKgH,KACXmK,EAAmBnR,GAMnB,MAAO,CACL,CAAEA,KAAI8Y,KAAM4D,EAAU7N,MAAO,QAASgO,kBAAc/qB,EAAWgrB,YAAY,EAAOrX,OAJrE,UAAbqJ,GAAwB+F,GACwC,QAD7B4H,EAC/BtX,GAAe0P,GAAa7P,EAAmB0X,IAAW,UAAE,IAAAD,OAAA,EAA5DA,EAA8DlY,WAC9DzS,MAGDqnB,KA4ToL,aAAW,4BAAO7b,SAAA,EAAC9L,EAAAA,EAAAA,KAACqqB,EAAAA,EAAI,CAACne,KAAM,MAAMlM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,mBAAkByM,SAAC,yCAG3PC,EAAAA,EAAAA,MAAA,KAAG1M,UAAU,wCAAuCyM,SAAA,CAAC,oGAAqB9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,0IAC7EC,EAAAA,EAAAA,MAAA,KAAG1M,UAAU,wCAAuCyM,SAAA,CAAC,0EAAe9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,0IAEvEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,OAAMyM,SAAA,EACnB9L,EAAAA,EAAAA,KAACurB,EAAAA,GAAe,CAAC3c,YAhTPA,KAClBgK,sBAAsB,IAAMiP,IAAY,IACxC,MAAM2D,EAAM,IAAIC,MAAM,uBACtBlrB,OAAOC,cAAcgrB,IA6S8BE,UA3SlCtG,IACjBxM,sBAAsB,IAAMiP,IAAY,IACnCzC,EAAOuG,aACZpG,GAAShX,IACP,MAAMqH,EAAOtD,MAAMsZ,KAAKrd,IACjBsd,GAASjW,EAAKkW,OAAO1G,EAAO2G,OAAOzV,MAAO,GAEjD,OADAV,EAAKkW,OAAO1G,EAAOuG,YAAYrV,MAAO,EAAGuV,GAClCjW,KAoS+D9J,UAC9D9L,EAAAA,EAAAA,KAACgsB,EAAAA,GAAS,CAACC,YAAY,kBAAkBC,yBAAyB,EAAKpgB,SACnE0K,IACAzK,EAAAA,EAAAA,MAAA,OAAK9L,IAAKuW,EAAS2V,YAAc3V,EAAS4V,eAAgB/sB,UAAU,sBAAqByM,SAAA,CACtF8U,GAAMzf,IAAI,CAAC+hB,EAAGkF,KAAS,IAADiE,EAAAC,EACrB,MAAM9O,EAAS8K,GAAcpF,GACvBqJ,EAA8C,QAAjCF,EAAsB,OAAnBnc,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAsBgT,EAAE7F,cAAM,IAAAgP,EAAAA,EAAI,CAACxc,EAAYqT,EAAE7F,QACjEmP,EAAW9Y,GAAoBwP,EAAE7F,OACjCoP,GAAsC,QAAzBH,EAACnc,EAAgB+S,EAAE7F,cAAM,IAAAiP,EAAAA,EAAI,IAAIhrB,OAAOF,GAAKA,GAAKorB,GAC/DE,EAAc,CAAC,CAAE3Z,MAAO,GAAIhP,MAAO,iCAAc4oB,OACrDF,EAAWtrB,IAAIC,IAAC,CAAO2R,MAAO/R,OAAOI,GAAI2C,MAAO,GAAG3C,SAE/CwrB,EAAa,IAAI5b,IAAI4P,GAAMtf,OAAO8I,GAAKA,EAAEoE,KAAO0U,EAAE1U,IAAIrN,IAAIiJ,GAAKA,EAAEkd,OACvE,IAAIuF,EAAgB/Z,EAAgB3R,IAAIkK,IAAE,IAAUA,KAEpD,GAAiB,UAAbiS,GAAwB+F,GAAa,CACvC,MAAMyJ,EAttC9B,SAA+BlZ,GAAM,IAADmZ,EAAAC,EAClC,MAAM7X,EAAgC,QAAzB4X,EAAY,OAATzZ,QAAS,IAATA,GAAe,QAAN0Z,EAAT1Z,EAAAA,YAAe,IAAA0Z,OAAN,EAATA,EAAkBpZ,UAAI,IAAAmZ,EAAAA,EAAI,GACpCE,EAAS,IAAIjc,IAAImE,EAAQhU,IAAI6I,GAAKA,EAAE,kBAI1C,OAHc,IAAIgH,IAChBsB,MAAMsZ,KAAKqB,GAAQ9rB,IAAI+G,GAAKqL,EAAmBrL,IAAI5G,OAAOC,SAG9D,CA+sCwC2rB,CAAsB7J,IACtCwJ,EAAgBA,EAAc1rB,IAAIkK,IAAE,IAC/BA,EACHiB,SAAUsgB,EAAWpa,IAAInH,EAAG0H,SAAW+Z,EAAQta,IAAInH,EAAG0H,SAE1D,MACE8Z,EAAgBA,EAAc1rB,IAAIkK,IAAE,IAC/BA,EACHiB,SAAUsgB,EAAWpa,IAAInH,EAAG0H,UAIhC,OACE/S,EAAAA,EAAAA,KAACmW,GAAoB,CAAYE,YAAa6M,EAAE1U,GAAI8H,MAAO8R,EAAItc,SAC3DqhB,IAAI,IAAAC,EAAA,OACJrhB,EAAAA,EAAAA,MAAA,OAAK9L,IAAKktB,EAAKhB,YAAcgB,EAAKE,kBAAoBF,EAAKG,gBAAiBjuB,UAAW,gJAA+I6jB,EAAE1U,KAAOkR,EAAkB,gBAAkB,IAAMpgB,MAAO6tB,EAAKE,eAAe/tB,MAAMwM,SAAA,EACxTC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oIAAmIyM,SAAA,CAAC,IAAEqc,GAAiBC,OACtKrc,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6CAA4CyM,SAAA,EACzD9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,+BAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CAACvX,UAAU,iBAAiB0T,MAAOmQ,EAAEoE,KAAM9Z,SAAWod,GAAQlD,GAAWxE,EAAE1U,GAAI,CAAE8Y,KAAMsD,IAAQvhB,MAAOwjB,EAAe/V,YAAY,2BAE5I/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iCAAgCyM,SAAA,EAC7C9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,+BAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,iBACV0T,MAAOmQ,EAAE7F,MACT7P,SAAWod,IAAS,IAAD2C,EACjB,MAAMrlB,EAAK0iB,EACL4C,EAAa9Z,GAAoBxL,GACjCulB,EACe,MAAlBvK,EAAEmI,cAAwBnI,EAAEmI,aAAemC,EACxCA,EACAtK,EAAEmI,aAEFqC,EAA+B,QAA3BH,EAAsB,OAAnBrd,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAsBhI,UAAE,IAAAqlB,EAAAA,EAAI,CAAC1d,EAAY3H,IAChDylB,EACS,MAAZzK,EAAE1F,QAAkBkQ,EAAKxrB,SAASghB,EAAE1F,QAAW0F,EAAE1F,OAASkQ,EAAK,GAClEhG,GAAWxE,EAAE1U,GAAI,CAAE6O,MAAOnV,EAAGmjB,aAAcoC,EAASjQ,OAAQmQ,KAE9DtkB,MAAOgH,EAAOlP,IAAI+G,IAAC,CAAO6K,MAAO7K,EAAGnE,MAAOqM,EAAWlI,MACtD4O,YAAY,iCAGF,UAAbwG,GAAwB+F,IACvB,EAACuK,EAAAC,KACC,MAAMha,EAAWL,EAAmB0P,EAAEoE,MAChCwG,EAAcna,GAAe0P,GAAaxP,GAC1Cka,EACJ7K,EAAEjP,QAAU6Z,EAAY1V,KAAKxV,GAAKA,EAAEmQ,QAAUmQ,EAAEjP,QAC5CiP,EAAEjP,OACoB,QADd2Z,EACO,QADPC,EACPC,EAAY,UAAE,IAAAD,OAAA,EAAdA,EAAgB9a,aAAK,IAAA6a,EAAAA,EAAI,GAChC,OACE7hB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,+CAA8CyM,SAAA,EAC3DC,EAAAA,EAAAA,MAAA,SAAO1M,UAAW6oB,GAASpc,SAAA,CAAC,0CAE1B9L,EAAAA,EAAAA,KAAC4c,GAAc,CACbhJ,IAAKyP,GACLxP,SAAUA,EACVI,OAAQ8Z,EACR1Q,MAAO6F,EAAE7F,MACTC,SAAUA,EACVC,SAAU2F,EAAEoE,KACZ9J,OAAQ8K,GAAcpF,SAG1BljB,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,SACV0T,MAAOgb,EACPvgB,SAAWod,GAAQlD,GAAWxE,EAAE1U,GAAI,CAAEyF,OAAQ2W,IAC9CvhB,MAAOykB,EACPhX,YAAY,6CAInB,EA9BD,IAgCF/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iCAAgCyM,SAAA,EAC7C9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,oCAC3B,CAAC,OAAQ,UAAU5J,SAASlB,OAAOkiB,EAAE7F,SACpCrd,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,iBACV0T,MAAO/R,OAAOwc,GACdhQ,SAAWod,IACT,MAAMjZ,EAAMnL,OAAOokB,GACfpkB,OAAOC,SAASkL,IAAM+V,GAAWxE,EAAE1U,GAAI,CAAEgP,OAAQ7L,KAEvDtI,MAAOkjB,EAAcprB,IAAIC,IAAC,CAAO2R,MAAO/R,OAAOI,GAAI2C,MAAO,GAAG3C,OAC7D0V,YAAY,+BAGd9W,EAAAA,EAAAA,KAAA,OAAKX,UAAU,0EAAyEyM,UACtF9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,6BAA4ByM,SAAE0R,UAIpDzR,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iCAAgCyM,SAAA,EAC7C9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,qCAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CAACvX,UAAU,iBAAiB0T,MAAO/R,OAAqB,QAAfosB,EAAClK,EAAEmI,oBAAY,IAAA+B,EAAAA,EAAI,IAAK5f,SAAWod,IAAmBlD,GAAWxE,EAAE1U,GAAlBoc,EAAsB,CAAES,aAAc7kB,OAAOokB,IAA+B,CAAES,kBAAc/qB,KAAiB+I,MAAOqjB,EAAa5V,YAAY,qDAElP/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iCAAgCyM,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,EACtC9L,EAAAA,EAAAA,KAAA,SAAOwO,GAAI,OAAO0U,EAAE1U,KAAM9O,KAAK,WAAWL,UAAU,iBAAiB2uB,QAAS9K,EAAEoI,WAAY9d,SAAWxD,GAAM0d,GAAWxE,EAAE1U,GAAI,CAAE8c,WAAYthB,EAAE0D,OAAOsgB,aACrJhuB,EAAAA,EAAAA,KAAA,SAAOiuB,QAAS,OAAO/K,EAAE1U,KAAMnP,UAAU,UAASyM,SAAC,oFAErDC,EAAAA,EAAAA,MAAA,KAAG1M,UAAU,6BAA4ByM,SAAA,CAAC,4EAAiB9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,qBAAoBW,EAAAA,EAAAA,KAAA,KAAGX,UAAU,eAAcyM,SAAC,gFAAmB,6BAE9IC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sEAAqEyM,SAAA,EAClF9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,sBACf0M,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,qCAAoCyM,SAAA,EACjD9L,EAAAA,EAAAA,KAAA,UAAQX,UAAU,6EAA6E2M,QAASA,KAAMkiB,OA/f1H5X,EA+fqI8R,EA/f3H7C,GAAShX,IACrC,GAAI+H,GAAS,EAAG,OAAO/H,EACvB,MAAMqH,EAAO,IAAIrH,GAEjB,OADCqH,EAAKU,EAAQ,GAAIV,EAAKU,IAAU,CAACV,EAAKU,GAAQV,EAAKU,EAAQ,IACrDV,IAJWU,OA+f2I,aAAW,eAAIxK,UAAC9L,EAAAA,EAAAA,KAACkb,EAAAA,EAAS,CAAChP,KAAM,QAChKlM,EAAAA,EAAAA,KAAA,UAAQX,UAAU,6EAA6E2M,QAASA,KAAMmiB,OA1fxH7X,EA0fqI8R,EA1f3H7C,GAAShX,IACvC,GAAI+H,GAAS/H,EAAKlO,OAAS,EAAG,OAAOkO,EACrC,MAAMqH,EAAO,IAAIrH,GAEjB,OADCqH,EAAKU,EAAQ,GAAIV,EAAKU,IAAU,CAACV,EAAKU,GAAQV,EAAKU,EAAQ,IACrDV,IAJaU,OA0f2I,aAAW,qBAAKxK,UAAC9L,EAAAA,EAAAA,KAACmb,EAAAA,EAAW,CAACjP,KAAM,WAEvKH,EAAAA,EAAAA,MAAA,UAAQ1M,UAAU,4HAA4H2M,QAASA,KAAMoiB,OAhcvK5f,EAgckL0U,EAAE1U,GA/btM+W,GAASoC,GAAMA,EAAGtnB,QAAU,EAAIsnB,EAAKA,EAAGrmB,OAAO4hB,GAAKA,EAAE1U,KAAOA,SACzDkR,IAAoBlR,GAAImR,EAAmB,OAF7BnR,OAgcyLlC,SAAUsU,GAAMvgB,QAAU,EAAG,aAAW,4BAAOyL,SAAA,EAAC9L,EAAAA,EAAAA,KAAC4M,EAAAA,EAAM,CAACV,KAAM,MAAMlM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,mBAAkByM,SAAC,6BAnGnQoX,EAAE1U,MA0GhCgI,EAASM,mBAKA,IAAjB8J,GAAMvgB,SAAgBL,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wCAAuCyM,SAAC,uKAIlFC,EAAAA,EAAAA,MAAA,WAAS1M,UAAW,GAAG2oB,gBAAkBlc,SAAA,EACvCC,EAAAA,EAAAA,MAAA,OACE1M,UAAW,qCAAoC8gB,EAAe,GAAK,QAASrU,SAAA,EAE5EC,EAAAA,EAAAA,MAAA,MAAI1M,UAAW0oB,GAAajc,SAAA,CAAEkH,EAAesK,GAAU,2BACvDvR,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,+BAA8ByM,SAAA,EAC3C9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,wBAAuByM,SAAC,qCACxC9L,EAAAA,EAAAA,KAAA,UACEN,KAAK,SACLmS,KAAK,SACL,eAAcsO,EACdnU,QAASA,IAAMoU,EAAgBhf,IAAMA,GACrC/B,UAAW,uEAAsE8gB,EAAe,eAAiB,eAEjH,aAAW,+CAAWrU,UAEtB9L,EAAAA,EAAAA,KAAA,QACEX,UAAW,2EAA0E8gB,EAAe,gBAAkB,yBAK5HpU,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,uCAAsCyM,SAAA,EACjDqU,IACApU,EAAAA,EAAAA,MAAA,UAAQ1M,UAAU,8HAA8H2M,QAngB/IqiB,KACb,MAAM7f,EAAKgH,KACXiQ,GAAQrkB,GAAK,CAAC,CAAEoN,KAAItL,KAAM,KAAMqE,MAAO,KAAMC,IAAK,MAAOoL,IAAK,KAAMnL,IAAK,MAAOoL,IAAK,SAAWzR,IAChGye,EAAkBrR,IAggB2J,aAAW,sBAAM1C,SAAA,EAAC9L,EAAAA,EAAAA,KAACqqB,EAAAA,EAAI,CAACne,KAAM,MAAMlM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,mBAAkByM,SAAC,6BAE1OC,EAAAA,EAAAA,MAAA,UACE1M,UAAU,yIACV2M,QAASA,IAAMsU,IAAY,GAC3B,aAAW,qDAAiBxU,SAAA,EAE5B9L,EAAAA,EAAAA,KAACsuB,EAAAA,EAAK,CAACpiB,KAAM,MACblM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,mBAAkByM,SAAC,4DAErCC,EAAAA,EAAAA,MAAA,UAAQ1M,UAAU,8HAA8H2M,QAASA,IAAMyZ,GAAQ,IAAK,aAAW,4BAAO3Z,SAAA,EAAC9L,EAAAA,EAAAA,KAAC4M,EAAAA,EAAM,CAACV,KAAM,MAAMlM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,mBAAkByM,SAAC,wCAGzPqU,IACCngB,EAAAA,EAAAA,KAAA,KAAGX,UAAU,iCAAgCyM,SAAC,iLAI/CqU,IACCngB,EAAAA,EAAAA,KAAA,OAAKX,UAAU,OAAMyM,UACnB9L,EAAAA,EAAAA,KAAC0oB,GAAW,CACVG,cAAY,EACZD,MAAQ3W,IACNwT,GAAQrkB,GAAK,CAAC6Q,KAAQ7Q,IACtBye,EAAkB5N,EAAIzD,IACtBkS,IAAS,SAKjB3U,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,4CAA2CyM,SAAA,EAEtD9L,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,OACV0T,MAAOsT,GAAUnjB,KACjBsK,SAAWod,GAAQtE,GAAcvlB,IAAC,IAAWA,EAAGmC,KAAM0nB,KACtDvhB,MAAO,CACL,CAAE0J,MAAO,OAAQhP,MAAO,6BACxB,CAAEgP,MAAO,MAAQhP,MAAO,8BAE1B+S,YAAY,qCAEd9W,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,OACV0T,MAAOsT,GAAU9e,MACjBiG,SAAWod,GAAQtE,GAAcvlB,IAAC,IAAWA,EAAGwG,MAAOqjB,KACvDvhB,MAAO,CACL,CAAE0J,MAAO,MAAQhP,MAAO,6BACxB,CAAEgP,MAAO,OAAQhP,MAAO,8BAE1B+S,YAAY,qCAEd9W,EAAAA,EAAAA,KAAA,UACEX,UAAU,8GACV2M,QAASwa,GACTha,MAAM,iFACN,aAAW,qBAAKV,UAElB9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,UAASyM,SAAC,6BAG9BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sBAAqByM,SAAA,CACjCpF,GAAKvF,IAAI,CAAC+G,EAAGkgB,KACZrc,EAAAA,EAAAA,MAAA,OAAgB1M,UAAW,2JAA0J6I,EAAEsG,KAAOoR,EAAiB,gBAAkB,IAAK9T,SAAA,EACpOC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oHAAmHyM,SAAA,CAAC,IAAEuc,GAAgBD,EAAK1hB,GAAKrG,YAC/J0L,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oEAAmEyM,SAAA,EAChFC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sDAAqDyM,SAAA,EAClE9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,qCAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAO7K,EAAEhF,KACTsK,SAAWpM,GAAMomB,GAAUtf,EAAEsG,GAAI,CAAEtL,KAAM9B,IACzC+F,IAAK,EACLxE,IAAK,EACL0W,KAAM,EACN0C,YAAY,EACZ1c,UAAW,GAAGyoB,oBACd7L,WAAY,CAAEzP,MAAO,qBAAOsK,YAAa,4BAG7C/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sDAAqDyM,SAAA,EAClE9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,mDAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAO7K,EAAEX,MACTiG,SAAWpM,GAAMomB,GAAUtf,EAAEsG,GAAI,CAAEjH,MAAOnG,IAC1C+F,IAAK,EACLxE,IAAK,EACL0W,KAAM,EACN0C,YAAY,EACZ1c,UAAW,GAAGyoB,oBACd7L,WAAY,CAAEzP,MAAO,qBAAOsK,YAAa,+BAI/C/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6DAA4DyM,SAAA,EACzEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,8BAA6ByM,SAAA,EAC1C9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,oBAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CAACvX,UAAU,iBAAiB0T,MAAO7K,EAAEV,IAAKgG,SAAWod,GAAQpD,GAAUtf,EAAEsG,GAAI,CAAEhH,IAAMojB,IAASvhB,MAAOwH,EAAQ1P,IAAIuQ,IAAC,CAAOqB,MAAOrB,EAAG3N,MAAOuM,EAAcoB,MAAQoF,YAAY,kCAEvL/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sBAAqByM,SAAA,EAClC9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,kBAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAO7K,EAAE0K,IACTpF,SAAWpM,GAAMomB,GAAUtf,EAAEsG,GAAI,CAAEoE,IAAKxR,IACxC+F,IAAK,EACLxE,IAAK,EACL0W,KAAM,EACN0C,YAAY,EACZ1c,UAAU,8GACV4c,WAAY,CAAEnF,YAAa,cAIjC/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6DAA4DyM,SAAA,EACzEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,8BAA6ByM,SAAA,EAC1C9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,oBAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CAACvX,UAAU,iBAAiB0T,MAAO7K,EAAET,IAAK+F,SAAWod,GAAQpD,GAAUtf,EAAEsG,GAAI,CAAE/G,IAAMmjB,IAASvhB,MAAOwH,EAAQ1P,IAAIuQ,IAAC,CAAOqB,MAAOrB,EAAG3N,MAAOuM,EAAcoB,MAAQoF,YAAY,kCAEvL/K,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sBAAqByM,SAAA,EAClC9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,kBAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAO7K,EAAE2K,IACTrF,SAAWpM,GAAMomB,GAAUtf,EAAEsG,GAAI,CAAEqE,IAAKzR,IACxC+F,IAAK,EACLxE,IAAK,EACL0W,KAAM,EACN0C,YAAY,EACZ1c,UAAU,8GACV4c,WAAY,CAAEnF,YAAa,cAIjC9W,EAAAA,EAAAA,KAAA,OAAKX,UAAU,4FAA2FyM,UACxGC,EAAAA,EAAAA,MAAA,UAAQ1M,UAAU,4HAA4H2M,QAASA,KAAMuiB,OAloB1J/f,EAkoBoKtG,EAAEsG,GAjoBvLiX,GAAQrkB,GAAKA,EAAEE,OAAO4G,GAAKA,EAAEsG,KAAOA,SAChCoR,IAAmBpR,GAAIqR,EAAkB,OAF5BrR,OAkoB2K,aAAW,sBAAM1C,SAAA,EAAC9L,EAAAA,EAAAA,KAAC4M,EAAAA,EAAM,CAACV,KAAM,MAAMlM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,mBAAkByM,SAAC,yBArEjP5D,EAAEsG,KAyEG,IAAhB9H,GAAKrG,SAAgBL,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wCAAuCyM,SAAC,wDAIjFC,EAAAA,EAAAA,MAAA,WAAS1M,UAAW,GAAG2oB,gBAAkBlc,SAAA,EACvCC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,mCAAkCyM,SAAA,EAC/C9L,EAAAA,EAAAA,KAAA,MAAIX,UAAW0oB,GAAajc,SAAC,kDAG7BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,kCAAkCyM,SAAA,EAChD9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,wCAAuCyM,SAAC,qCACxDC,EAAAA,EAAAA,MAAA,SAAO1M,UAAU,iCAAgCyM,SAAA,EAC/C9L,EAAAA,EAAAA,KAAA,SACEN,KAAK,QACL4nB,KAAK,OACL0G,QAAkB,WAATnc,EACTrE,SAAUA,KACR4R,EAAQ,UACRG,EAAW,IAAKrO,KAElB7R,UAAU,mBACV,mBAGJ0M,EAAAA,EAAAA,MAAA,SAAO1M,UAAU,iCAAgCyM,SAAA,EAC/C9L,EAAAA,EAAAA,KAAA,SACEN,KAAK,QACL4nB,KAAK,OACL0G,QAAkB,YAATnc,EACTrE,SAAUA,KACR4R,EAAQ,WACRG,EAAY/a,GAAMmR,GAAmBxE,EAAiB,aAExD9R,UAAU,mBACV,+BAORW,EAAAA,EAAAA,KAAA,KAAGX,UAAU,iCAAgCyM,SAAC,yGAK7C,MACC,MAAM0iB,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GACtBC,EACJ5c,GAAiB,OAATf,QAAS,IAATA,GAAAA,EAAYe,IAAwC,oBAAxBf,EAAUe,GAAMW,IAChD1B,EAAUe,GACV,KAKArP,EAFWqO,EAAQvP,OAAQoQ,IAAO+c,GAAYA,EAASjc,IAAId,IAE3CvQ,IAAKuQ,IACzB,MAAMgd,EAASF,EAAOrtB,IAAKK,GAAMoQ,EAAiBC,EAAMH,EAAGlQ,IAE3D,MAAO,CAAEkQ,IAAGgd,SAAQC,QADK,WAAT9c,KAIlB,OACE9F,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,OAAMyM,SAAA,EAEnB9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,kCAAiCyM,UAC9CC,EAAAA,EAAAA,MAAA,SAAO1M,UAAU,qBAAoByM,SAAA,EACnCC,EAAAA,EAAAA,MAAA,YAAAD,SAAA,EACE9L,EAAAA,EAAAA,KAAA,OAAK0K,MAAM,SACX1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAM,SACX1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAM,SACX1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAM,SACX1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAM,SACX1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAM,YAEb1K,EAAAA,EAAAA,KAAA,SAAA8L,UACEC,EAAAA,EAAAA,MAAA,MAAI1M,UAAU,0BAAyByM,SAAA,EACrC9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,OAAMyM,SAAC,kBACrB9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,OAAMyM,SAAC,WACrB9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,OAAMyM,SAAC,WACrB9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,OAAMyM,SAAC,WACrB9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,OAAMyM,SAAC,WACrB9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,OAAMyM,SAAC,gBAGzB9L,EAAAA,EAAAA,KAAA,SAAA8L,SACGtJ,EAAKrB,IAAIytB,IAAA,IAAC,EAAEld,EAAC,OAAEgd,EAAM,QAAEC,GAASC,EAAA,OAC/B7iB,EAAAA,EAAAA,MAAA,MAAY1M,UAAU,WAAUyM,SAAA,EAC9B9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,OAAMyM,UAClB9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,cAAayM,SAAEwE,EAAcoB,OAE9Cgd,EAAOvtB,IAAI,CAACC,EAAGwB,KACd5C,EAAAA,EAAAA,KAAA,MAAYX,UAAU,oBAAmByM,SACtC2J,GAAU5D,EAAMzQ,IADVwB,MALJ8O,aAgBjB1R,EAAAA,EAAAA,KAAA,OAAKX,UAAU,sBAAqByM,SACjCtJ,EAAKrB,IAAI0tB,IAAA,IAAC,EAAEnd,EAAC,OAAEgd,EAAM,QAAEC,GAASE,EAAA,OAC/B9iB,EAAAA,EAAAA,MAAA,OAAa1M,UAAU,iCAAgCyM,SAAA,EACrDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oCAAmCyM,SAAA,EAChD9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,sBAAqByM,SAAEwE,EAAcoB,MACpD1R,EAAAA,EAAAA,KAAA,QACEX,UAAW,gBAAesvB,EAAU,eAAiB,iBAChD7iB,SAEJ6iB,EAAU,eAAO,qBAKtB3uB,EAAAA,EAAAA,KAAA,OAAKX,UAAU,0CAAyCyM,SACrD4iB,EAAOvtB,IAAI,CAACC,EAAGwB,KACdmJ,EAAAA,EAAAA,MAAA,OAEE1M,UAAU,6EAA4EyM,SAAA,EAEtFC,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,gBAAeyM,SAAA,CAAC,OAAKlJ,EAAI,MACzC5C,EAAAA,EAAAA,KAAA,QAAMX,UAAU,2BAA0ByM,SACvC2J,GAAU5D,EAAMzQ,OALdwB,QAfH8O,SA8BnB,EAzFA,OA+FH3F,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,kDAAiDyM,SAAA,CAC7D2U,KAAUI,IAAeG,KACxBjV,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,yHAAwHyM,SAAA,CAAC,yEACzH9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,6BAAQ,2FAG7B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,sDAAqDyM,UAClE9L,EAAAA,EAAAA,KAAA,UACEN,KAAK,SACLsM,QAAS+U,GACTzU,SAAUuU,GACVxhB,UAAU,sJAAqJyM,SAE9J+U,GAAc,4BAAU,mCAK/B9U,EAAAA,EAAAA,MAAA,WAAS1M,UAAW,GAAG2oB,gBAAkBlc,SAAA,EACvCC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0CAAyCyM,SAAA,EACtD9L,EAAAA,EAAAA,KAAA,MAAIX,UAAW0oB,GAAajc,SAAC,iBAI5B,MAEC,KADewG,MAAMC,QAAQuO,KAAYA,GAAQ1I,KAAKlO,GAAKA,GAAKA,EAAEtD,MAAQsD,EAAEtD,KAAKvG,OAAS,IAC7E,OAAO,KACpB,MAAMyuB,EAAehO,GAAQiO,OAAO,CAACC,EAAK9kB,IAAM8kB,IAAQ,OAAD9kB,QAAC,IAADA,OAAC,EAADA,EAAG+kB,UAAW,GAAI,GACzE,OACEjvB,EAAAA,EAAAA,KAAA,OAAKX,UAAU,oCAAmCyM,UAChDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAW4oB,GAAKnc,SAAA,CAAC,gBACP,WAAT+F,EAAoB,mDAAuC,6CAAiC,KAChG9F,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,6BAA4ByM,SAAA,CACzCgjB,EAAapZ,QAAQ,GAAa,WAAT7D,EAAoB,IAAM,UAK7D,EAdA,OAgBH9F,EAAAA,EAAAA,MAAA,KAAG1M,UAAU,6BAA4ByM,SAAA,CAAC,4CAAU9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,mBAAQ,uEAC7D+U,IAAeJ,IAASO,KACxBjV,EAAAA,EAAAA,MAAA,KAAG1M,UAAU,4BAA2ByM,SAAA,CAAC,yGAAqB9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,6BAAQ,2FAE3E9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,iBAAgByM,SAC5B8U,GAAMzf,IAAI,CAAC+hB,EAAGtgB,KAAO,IAADssB,EAAAC,EACnB,MAAM3R,EAAS8K,GAAcpF,GACvBkM,EAAc,OAAPtO,SAAO,IAAPA,QAAO,EAAPA,GAAUle,GACjBysB,KAAeD,GAAQA,EAAKxoB,MAAQwoB,EAAKxoB,KAAKvG,OAAS,GACvDivB,EAAa5sB,KAAKyE,OAAOgJ,EAAgB+S,EAAE7F,QAC3CxJ,EAAWL,EAAmB0P,EAAEoE,MAChCiI,EAA+B,UAAbjS,GAAwB+F,GACJ,QADe6L,EACvDvb,GAAe0P,GAAaxP,GAAU,UAAE,IAAAqb,OAAA,EAAxCA,EAA0Cnc,WAC1CzS,EACJ,OACEyL,EAAAA,EAAAA,MAAA,OAAgB1M,UAAU,iCAAgCyM,SAAA,EACxDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oDAAmDyM,SAAA,EAChEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,CACrCoX,EAAEoE,KACW,UAAbhK,GAAwB+F,KAAgBH,EAAEjP,QAAUsb,KACnDxjB,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,CAAE,QAAgB,QAATqjB,EAACjM,EAAEjP,cAAM,IAAAkb,EAAAA,EAAII,KACtB,QACFxjB,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,wBAAuByM,SAAA,CAAC,IAAEsE,EAAW8S,EAAE7F,OAAO,UAE/DgS,IACCtjB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,+DAA8DyM,SAAA,EAC3EC,EAAAA,EAAAA,MAAA,OAAK1M,UAAW4oB,GAAKnc,SAAA,CAAC,8BAAM9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,gBAAeyM,SAAE9K,OAAOouB,EAAKK,aAAkB,oBAAMzvB,EAAAA,EAAAA,KAAA,QAAA8L,SAAO9K,OAAOwc,KAAe,MAAEzR,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,sBAAK9K,OAAOwc,EAAS4R,EAAKK,cAAkB,QAClL1jB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW4oB,GAAKnc,SAAA,CAAC,8BAAM9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,gBAAeyM,SAAE9K,OAAOouB,EAAKM,iBACxE,MACC,MAAMC,EAASP,EAAKQ,IAAIvvB,OAASqC,KAAKC,OAAOysB,EAAKQ,KAAO,KACzD,OACE7jB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW4oB,GAAKnc,SAAA,CAAC,8BACd9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,gBAAeyM,SAAY,MAAV6jB,EAAiB3uB,OAAO2uB,GAAU,mBAG9E,EAPA,IAQD5jB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW4oB,GAAKnc,SAAA,CAAW,WAAT+F,EAAoB,mDAAuC,qCAChF9F,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,6BAA4ByM,SAAA,CAAE9K,OAAOouB,EAAKH,QAAQvZ,QAAQ,IAAc,WAAT7D,EAAoB,IAAM,eAI/Gwd,GAKAtjB,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EACE9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,uCAAsCyM,UACnDC,EAAAA,EAAAA,MAAA,SAAO1M,UAAU,qBAAoByM,SAAA,EACnCC,EAAAA,EAAAA,MAAA,YAAAD,SAAA,EACE9L,EAAAA,EAAAA,KAAA,OAAK0K,MAAO,SACZ1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAO,SACZ1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAO,SACZ1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAO,SACZ1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAO,SACZ1K,EAAAA,EAAAA,KAAA,OAAK0K,MAAO,YAEd1K,EAAAA,EAAAA,KAAA,SAAA8L,UACEC,EAAAA,EAAAA,MAAA,MAAI1M,UAAU,0BAAyByM,SAAA,EACrC9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,YAAWyM,SAAC,kBAC1B9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,YAAWyM,SAAC,wBAC1B9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,YAAWyM,SAAC,wBAC1B9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,YAAWyM,SAAC,mBAC1B9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,YAAWyM,SAAC,mBAC1B9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,YAAWyM,SAAW,WAAT+F,EAAoB,mDAAuC,4CAG1F7R,EAAAA,EAAAA,KAAA,SAAA8L,SACGsjB,EAAKxoB,KAAKzF,IAAI+G,IAAM,IAAD2nB,EAAAC,EAAAC,EAClB,MAAMC,EAAKtpB,GAAKkR,UAAUxN,GAAKA,EAAEoE,KAAOtG,EAAEsG,IACpCyhB,EAAO5H,GAAgB2H,EAAItpB,GAAKrG,QACtC,OACE0L,EAAAA,EAAAA,MAAA,MAAe1M,UAAU,WAAUyM,SAAA,EACjCC,EAAAA,EAAAA,MAAA,MAAI1M,UAAU,YAAWyM,SAAA,CAAC,IAAE9K,OAAOivB,OACnCjwB,EAAAA,EAAAA,KAAA,MAAIX,UAAU,YAAWyM,SAAE9K,OAAwB,QAAlB6uB,EAAQ,QAARC,EAAC5nB,EAAEgoB,aAAK,IAAAJ,EAAAA,EAAI5nB,EAAEhF,YAAI,IAAA2sB,EAAAA,EAAI,MACvD7vB,EAAAA,EAAAA,KAAA,MAAIX,UAAU,YAAWyM,SAAE9K,OAAc,QAAR+uB,EAAC7nB,EAAEX,aAAK,IAAAwoB,EAAAA,EAAI,MAC7ChkB,EAAAA,EAAAA,MAAA,MAAI1M,UAAU,YAAWyM,SAAA,CAAEwE,EAAcpI,EAAEV,KAAK,IAAExG,OAAOkH,EAAE0K,SAC3D7G,EAAAA,EAAAA,MAAA,MAAI1M,UAAU,YAAWyM,SAAA,CAAEwE,EAAcpI,EAAET,KAAK,IAAEzG,OAAOkH,EAAE2K,SAC3D9G,EAAAA,EAAAA,MAAA,MAAI1M,UAAU,yBAAwByM,SAAA,CAAE9K,OAAOgR,EAAgB9J,EAAG2J,EAAMP,EAAgBY,IAAUwD,QAAQ,IAAc,WAAT7D,EAAoB,IAAM,QANlI3J,EAAEsG,cAcrBxO,EAAAA,EAAAA,KAAA,OAAKX,UAAU,2BAA0ByM,SACtCsjB,EAAKxoB,KAAKzF,IAAI+G,IACb,MAAM8nB,EAAKtpB,GAAKkR,UAAUxN,GAAKA,EAAEoE,KAAOtG,EAAEsG,IACpCyhB,EAAO5H,GAAgB2H,EAAItpB,GAAKrG,QACtC,OACE0L,EAAAA,EAAAA,MAAA,OAAgB1M,UAAU,iCAAgCyM,SAAA,EACxDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,4CAA2CyM,SAAA,EACxDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,cAAayM,SAAA,CAAC,IAAE9K,OAAOivB,OACtClkB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,uBAAsByM,SAAA,CAAW,WAAT+F,EAAoB,mDAA2B,YAATA,EAAqB,yDAAmB,oCAAW,IAAE7Q,OAAOgR,EAAgB9J,EAAG2J,EAAMP,EAAgBY,IAAUwD,QAAQ,IAAI,WAE1M3J,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,gDAA+CyM,SAAA,EAC5D9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gBAAeyM,SAAC,wBAC/B9L,EAAAA,EAAAA,KAAA,OAAA8L,SAAM9K,OAAOkH,EAAEhF,SACflD,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gBAAeyM,SAAC,wBAC/B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,eAAcyM,SAAE9K,OAAOkH,EAAEX,UACxCvH,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gBAAeyM,SAAC,mBAC/BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAMwE,EAAcpI,EAAEV,KAAK,IAAExG,OAAOkH,EAAE0K,SACtC5S,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gBAAeyM,SAAC,mBAC/BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAMwE,EAAcpI,EAAET,KAAK,IAAEzG,OAAOkH,EAAE2K,aAbhC3K,EAAEsG,YAjDpBzC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6BAA4ByM,SAAA,CAAC,0OAC4B,MAAlBoX,EAAEmI,aAAuB,mBAASiE,qCAAuB,GAAG,SA5B5GpM,EAAE1U,aAnkBZ+R,KA2qBVvgB,EAAAA,EAAAA,KAACob,GAAU,CAACE,OAAQA,EAAQ9X,QAASsc,KACrC9f,EAAAA,EAAAA,KAAA,OAAKX,UAAU,OAAMyM,UACnB9L,EAAAA,EAAAA,KAACmwB,EAAAA,EAAU,OAGbnwB,EAAAA,EAAAA,KAACoD,EAAkB,CACjBG,KAAM8c,GACN7c,QAASA,IAAM8c,IAAY,GAC3B7c,UAAWyiB,KAGZrF,KACC7gB,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gGAA+FyM,UAC5GC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,4DAA2DyM,SAAA,EACxE9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,yCAAwCyM,SAAEjI,GAASE,SAElE/D,EAAAA,EAAAA,KAAA,OAAKX,UAAU,+DAA8DyM,SAC1EjI,GAASI,eACRjE,EAAAA,EAAAA,KAAA,OAAKX,UAAU,mBAAkByM,UAC/B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,kEAGjBW,EAAAA,EAAAA,KAAA,OACEX,UAAU,sDACVC,MAAO,CAAEoL,MAAO,GAAG7G,GAASG,aAKlChE,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wCAAuCyM,SACnDjI,GAASI,cACa,MAAlBJ,GAASie,MAAgBtb,OAAO3C,GAASie,OAAOsO,iBAAmB,GACpE,GAAGvsB,GAASG,gBAO9B,C,sEE/4DA,MAAMqsB,IAAiB,EACjBC,IAAkB,EAClBC,IAAe,EAMfC,GAAQ,CAAEC,WAAY,EAAGC,WAAY,GAAIC,UAAW,GAAIC,UAAW,GAAIC,YAAa,IAEpFC,GAAY,CAChB,4BAAS,CAAEC,SAAU,EAAGC,OAAQ,CAAC,qBAAO,6BAAU/f,QAAS,CAAC,qBAAO,2CACnE,4BAAS,CAAE8f,SAAU,EAAGC,OAAQ,CAAC,qBAAO,6BAAU/f,QAAS,CAAC,yCAAY,2CACxE,4BAAS,CAAE8f,SAAU,GAAIC,OAAQ,CAAC,4BAAS,6BAAU/f,QAAS,CAAC,qBAAO,2CACtE,4BAAS,CAAE8f,SAAU,EAAGC,OAAQ,CAAC,qBAAO,6BAAU/f,QAAS,CAAC,qBAAO,2CACnE,4BAAS,CAAE8f,SAAU,EAAGC,OAAQ,CAAC,qBAAO,6BAAU/f,QAAS,CAAC,yCAAY,2CACxE,4BAAS,CAAE8f,SAAU,GAAIC,OAAQ,CAAC,4BAAS,6BAAU/f,QAAS,CAAC,qBAAO,4CAGlEggB,GAAkB,CAAEC,eAAI,EAAGC,eAAI,EAAGC,eAAI,GACtCC,GAAsB,CAAEH,eAAI,EAAGC,eAAI,EAAGC,eAAI,GAE1CE,GAAW,EACXC,GAAW,EACXC,GAAmB,IAEnBC,GAAc,CAClB,CAAE1e,MAAO,IAAMhP,MAAO,8BACtB,CAAEgP,MAAO,IAAMhP,MAAO,8BACtB,CAAEgP,MAAO,IAAOhP,MAAO,+BACvB,CAAEgP,MAAO,IAAOhP,MAAO,gCAOzB,SAAS2tB,GAAOC,GACd,IAAIltB,EAAI,WACR,IAAK,IAAI7B,EAAI,EAAGA,EAAI+uB,EAAItxB,OAAQuC,IAC9B6B,GAAKktB,EAAIC,WAAWhvB,GACpB6B,EAAI/B,KAAKmvB,KAAKptB,EAAG,UAEnB,OAAOA,IAAM,CACf,CAEA,SAASqtB,GAAsBC,GAE7B,OAAOL,GADM1b,KAAKiO,UAAU8N,KACL,CACzB,CAEA,SAASC,GAAQC,GACf,IAAIlxB,EAAIkxB,IAAS,EACjB,OAAO,WAOL,OANAlxB,GAAKA,GAAK,GACVA,KAAO,EACPA,GAAKA,IAAM,GACXA,KAAO,EACPA,GAAKA,GAAK,EACVA,KAAO,GACCA,IAAM,GAAK,UACrB,CACF,CAEA,MAAMmxB,GAAc5rB,KAAQE,OAAOF,GAAK,GAClC6rB,GAAa7rB,GAAME,OAAOF,IAAM,EAEhCiW,GAAQA,CAACnb,EAAGgxB,EAAIC,IAAO3vB,KAAKC,IAAIyvB,EAAI1vB,KAAKyE,IAAIkrB,EAAIjxB,IASvD,SAASkxB,GAAsBxrB,GAAkB,IAAfyrB,EAAKnyB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACxC,OAAO,EAAIsC,KAAK8vB,IAAID,EAAO,EAAIzrB,EACjC,CAEA,MAAM2rB,GAAmB3rB,GACnBA,GAAK,IAAe,KACpBA,GAAK,IAAe,KACpBA,GAAK,IAAc,KACnBA,GAAK,IAAc,KACnBA,GAAK,IAAa,KACf,KAGH4rB,GAAiB5rB,GACjBA,GAAK,IAAc,IACnBA,GAAK,IAAc,IACnBA,GAAK,IAAa,IACf,IAOT,SAAS6rB,GAAarsB,GACpB,MAAM8D,EAAI5D,OAAOF,GACjB,OAAKE,OAAOC,SAAS2D,IAAMA,GAAK,EAAU,KACtCA,GAAK,EAAU,cACP,IAAJA,GAASsL,QAAQ,GAAK,GAChC,CAEA,MAAMkd,GAAWtsB,GAAMqsB,GAAarsB,GAC9BusB,GAAU/rB,GAAMA,EAAEspB,iBAExB,SAAS0C,GAAeC,EAAczsB,GACpC,OAAKE,OAAOC,SAASssB,IAAiBA,GAAgB,EAAU,GAC3DvsB,OAAOC,SAASH,IAAMA,GAAK,EAAU0sB,IACnCD,EAAezsB,CACxB,CAEA,MAAMtC,GAAOsC,GAAM,GAAG5D,KAAKC,IAAI,EAAGD,KAAKyE,IAAI,IAAKzE,KAAKuI,MAAyB,KAAlBzE,OAAOF,IAAM,SAEzE,SAAS2sB,GAAY3sB,GACnB,OAAIA,GAAK,GAAa,CAAEvC,MAAO,eAAMmvB,KAAM,qDACvC5sB,GAAK,IAAa,CAAEvC,MAAO,eAAMmvB,KAAM,+CACvC5sB,GAAK,IAAa,CAAEvC,MAAO,eAAMmvB,KAAM,kDACpC,CAAEnvB,MAAO,4BAASmvB,KAAM,2CACjC,CAEA,SAASC,GAAaC,EAAWtsB,GAC/B,GAAIA,GAAK,EAAG,OAAO,EACnB,GAAkB,IAAdssB,EAAiB,OAAO,EAC5B,GAAIA,IAActsB,EAAG,OAAO,EAC5B,OAJwC1G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAKzC,IAAK,UACH,OAAQgzB,EAAY,IAAMtsB,EAAI,GAChC,IAAK,WACH,OAAQssB,EAAY,KAAQtsB,EAAI,GAElC,QACE,OAAOssB,EAAYtsB,EAEzB,CAMA,SAASusB,GAAmBC,EAAQC,GAClC,MAAMrrB,EAAI4oB,GAAUwC,GACpB,OAAKprB,EACO,uBAARqrB,EAAsBrrB,EAAE8oB,OAChB,uBAARuC,EAAsBrrB,EAAE+I,QACrB,IAAI/I,EAAE8oB,UAAW9oB,EAAE+I,SAHX,EAIjB,CAEA,MAAMuiB,GAAczyB,GAAMA,EAAE0yB,IAAM1yB,EAAE2yB,IAAM3yB,EAAE4yB,KAAO5yB,EAAE6yB,KAErD,SAASC,GAAQC,GACf,OAAIA,GAAStD,GAAMK,YAAoB,eACnCiD,GAAStD,GAAMG,WAAamD,GAAStD,GAAMI,UAAkB,eAC7DkD,GAAStD,GAAMC,YAAcqD,GAAStD,GAAME,WAAmB,eAC5D,2BACT,CAEA,SAASqD,GAAkBR,EAAKS,EAAQjzB,EAAGe,EAAGwxB,EAAQW,GACpD,MAAM1iB,EAAOxQ,EAAE0yB,KAAO3xB,EAAE2xB,KAAO1yB,EAAE2yB,KAAO5xB,EAAE4xB,IAC1C,GAAY,8BAARH,EAAiB,OAAOhiB,EAC5B,MAAM2iB,EAAOb,GAAmBC,EAAQC,GAClCY,EAASC,GAAc,6BAAPA,EAChBC,EAAKF,EAAc,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUK,OAAS,2BAAUJ,EAAKhyB,SAAiB,OAAR+xB,QAAQ,IAARA,OAAQ,EAARA,EAAUK,OAAiB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUK,MAAQ,KAC3FC,EAAKJ,EAAc,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAS,2BAAUN,EAAKhyB,SAAiB,OAAR+xB,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAiB,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUO,MAAQ,KAC3FlyB,EAAQA,CAACmyB,EAAUC,EAASC,EAAYC,IAC5CT,EAAMQ,GAAeT,EAAKhyB,SAASuyB,IAAaC,GAAWE,EACtDH,IAAaE,GAAcD,GAAWE,EAE7C,GAAe,YAAXZ,EAAsB,CACxB,MAAMa,EAAMR,IAAO/xB,EAAMvB,EAAEuzB,MAAOvzB,EAAE4yB,KAAMU,EAAIvyB,EAAE6xB,OAASrxB,EAAMvB,EAAEyzB,MAAOzzB,EAAE6yB,KAAMS,EAAIvyB,EAAE6xB,OACtF,OAAOpiB,KAAUsjB,CACnB,CACE,SAAKR,IAAOE,KACLhjB,IACJjP,EAAMvB,EAAEuzB,MAAOvzB,EAAE4yB,KAAMU,EAAIvyB,EAAE6xB,OAASrxB,EAAMvB,EAAEyzB,MAAOzzB,EAAE6yB,KAAMW,EAAIzyB,EAAE8xB,OACnEtxB,EAAMvB,EAAEuzB,MAAOvzB,EAAE4yB,KAAMY,EAAIzyB,EAAE8xB,OAAStxB,EAAMvB,EAAEyzB,MAAOzzB,EAAE6yB,KAAMS,EAAIvyB,EAAE6xB,OAG1E,CAqCA,SAASmB,GAAmB1zB,GAAK,OAAa,IAANA,CAAS,CAEjD,SAAS2zB,GAAmBC,EAAOC,EAAc1B,EAAKD,EAAQ4B,GAC5D,MAAMn0B,EAAIi0B,EACJ3rB,EAAQ,GAEVtI,EAAE0yB,IAAM,GAAGpqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,MAAO,GAAK7wB,EAAG,QAC5DzD,EAAE0yB,KAAO,GAAGpqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,MAAO,GAAK7wB,EAAG,MAC7DzD,EAAE0yB,KAAO,GAAGpqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,MAAO,GAAK7wB,EAAG,OAC7DzD,EAAE0yB,KAAO,GAAGpqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,MAAO,GAAK7wB,EAAG,MAC7DswB,GAAmB/zB,EAAE0yB,MAAMpqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,OAAQ,GAAK7wB,EAAG,IAE7EzD,EAAE2yB,IAAM,GAAGrqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,MAAO,GAAK7wB,EAAG,QAC5DzD,EAAE2yB,KAAO,GAAGrqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,MAAO,GAAK7wB,EAAG,MAC7DzD,EAAE2yB,KAAO,GAAGrqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,MAAO,GAAK7wB,EAAG,OAC7DzD,EAAE2yB,KAAO,GAAGrqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,MAAO,GAAK7wB,EAAG,MAC7DswB,GAAmB/zB,EAAE2yB,MAAMrqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,MAAOC,OAAQ,GAAK7wB,EAAG,IAE7EzD,EAAE4yB,KAAO,GAAGtqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,MAAO,GAAK7wB,EAAG,QAC/DzD,EAAE4yB,MAAQ,GAAGtqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,MAAO,GAAK7wB,EAAG,MAChEzD,EAAE4yB,MAAQ,GAAGtqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,MAAO,GAAK7wB,EAAG,OAChEzD,EAAE4yB,MAAQ,GAAGtqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,MAAO,GAAK7wB,EAAG,MAChEswB,GAAmB/zB,EAAE4yB,OAAOtqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,OAAQ,GAAK7wB,EAAG,IAEhFzD,EAAE6yB,KAAO,GAAGvqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,MAAO,GAAK7wB,EAAG,QAC/DzD,EAAE6yB,MAAQ,GAAGvqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,MAAO,GAAK7wB,EAAG,MAChEzD,EAAE6yB,MAAQ,GAAGvqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,MAAO,GAAK7wB,EAAG,OAChEzD,EAAE6yB,MAAQ,GAAGvqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,MAAO,GAAK7wB,EAAG,MAChEswB,GAAmB/zB,EAAE6yB,OAAOvqB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAASC,OAAQ,GAAK7wB,EAAG,IAEpF,MAAM8wB,EAAQjC,GAAmBC,EAAQ,6BACnCiC,EAAaD,EAAMh0B,OAAQwF,GAAMA,IAAM/F,EAAEyzB,OAAS1tB,IAAM/F,EAAEuzB,OAAOj0B,OAAS,EAC1Em1B,EAAaF,EAAMh0B,OAAQwF,GAAMA,IAAM/F,EAAEuzB,OAASxtB,IAAM/F,EAAEyzB,OAAOn0B,OAAS,EAchF,OAZIk1B,GAAYlsB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,YAAc5wB,EAAG,OACxDgxB,GAAYnsB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,YAAc5wB,EAAG,OAExDywB,EAAe,IACG,IAAhBC,GAAmB7rB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,OAAQK,IAAK,GAAKjxB,EAAG,QAClD,IAAjB0wB,GAAoB7rB,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,OAAQK,KAAM,GAAKjxB,EAAG,OACzE6E,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,cAAeM,OAAQ,GAAKlxB,EAAG,MAC1D6E,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,cAAeM,OAAQ,GAAKlxB,EAAG,OAG5D6E,EAAMpG,KAAK,CAAEkyB,KAAM,CAAEC,KAAM,QAAU5wB,EAAG,OAEjC6E,CACT,CAEA,SAASssB,GAAkBR,EAAMp0B,GAC/B,OAAQo0B,EAAKC,MACX,IAAK,MAAO,MAAO,oCAAUD,EAAKE,MAAQ,EAAI,IAAMF,EAAKE,MAAQ,MACjE,IAAK,MAAO,MAAO,uBAAOF,EAAKE,MAAQ,EAAI,IAAMF,EAAKE,MAAQ,MAC9D,IAAK,QAAS,MAAO,GAAGt0B,EAAEuzB,aAAaa,EAAKE,MAAQ,EAAI,IAAMF,EAAKE,MAAQ,OAC3E,IAAK,QAAS,MAAO,GAAGt0B,EAAEyzB,aAAaW,EAAKE,MAAQ,EAAI,IAAMF,EAAKE,MAAQ,OAC3E,IAAK,WAAY,MAAO,GAAGt0B,EAAEuzB,kCAC7B,IAAK,WAAY,MAAO,GAAGvzB,EAAEyzB,kCAC7B,IAAK,OAAQ,OAAoB,IAAbW,EAAKM,IAAY,+CAAmB,+CACxD,IAAK,OAAQ,MAAO,yCACpB,IAAK,cAAe,MAAO,2CAA4B,IAAhBN,EAAKO,OAAe,WAAQ,YACnE,QAAS,MAAO,GAEpB,CAEA,SAASE,GAAY7xB,EAAOhD,GAE1B,MAAM4Q,EAAO7P,GAAOA,EAAEI,SAAS,OAAS,EAAIK,SAAST,EAAEb,QAAQ,UAAW,IAAK,KAAO,EACtF,OAFA8C,EAAQA,EAAM1C,QAEJmI,WAAW,mCAAkB,CAAE4rB,KAAM,MAAOC,MAAO1jB,EAAI5N,IAC7DA,EAAMyF,WAAW,sBAAe,CAAE4rB,KAAM,MAAOC,MAAO1jB,EAAI5N,IAC1DA,EAAMyF,WAAWzI,EAAEuzB,MAAQ,KAAavwB,EAAM7B,SAAS,gBAAQ,CAAEkzB,KAAM,YAAe,CAAEA,KAAM,QAASC,MAAO1jB,EAAI5N,IAClHA,EAAMyF,WAAWzI,EAAEyzB,MAAQ,KAAazwB,EAAM7B,SAAS,gBAAQ,CAAEkzB,KAAM,YAAe,CAAEA,KAAM,QAASC,MAAO1jB,EAAI5N,IAClHA,EAAMyF,WAAW,6BAAiB,CAAE4rB,KAAM,OAAQK,IAAK1xB,EAAM7B,SAAS,SAAW,GAAK,GACtF6B,EAAMyF,WAAW,0CAAoB,CAAE4rB,KAAM,QAC7CrxB,EAAMyF,WAAW,0CAAoB,CAAE4rB,KAAM,cAAeM,OAAQ3xB,EAAM7B,SAAS,MAAQ,EAAI,GAC5F,IACT,CAEA,SAAS2zB,GAAUvC,EAAQC,EAAKxyB,EAAGo0B,EAAMD,EAAaY,GACpD,MAAMC,EAAuB,oBAAVD,EAAuBA,EAAQpzB,KAAK+L,OACvD,IAAImH,EAAO,IAAK7U,GAChB,MAAMi1B,EAAkBxE,KAAqC,IAAjB0D,EAAqB,EAAoB,IAAhBA,EAAoB,EAAI,GAC7F,IAAIe,EAAW,EACXC,EAAc,EAClB,MAAMZ,EAAQjC,GAAmBC,EAAQ,6BAEzC,OAAQ6B,EAAKC,MACX,IAAK,MAAOxf,EAAK6d,IAAMlX,GAAM3G,EAAK6d,IAAM0B,EAAKE,MAAO,EAAG9D,IAAW,MAClE,IAAK,MAAO3b,EAAK8d,IAAMnX,GAAM3G,EAAK8d,IAAMyB,EAAKE,MAAO,EAAG9D,IAAW,MAClE,IAAK,QAAS3b,EAAK+d,KAAOpX,GAAM3G,EAAK+d,KAAOwB,EAAKE,MAAO,EAAG9D,IAAW,MACtE,IAAK,QAAS3b,EAAKge,KAAOrX,GAAM3G,EAAKge,KAAOuB,EAAKE,MAAO,EAAG9D,IAAW,MACtE,IAAK,WAAY,CACf,MAAM2C,EAAOoB,EAAMh0B,OAAQwF,GAAMA,IAAM8O,EAAK4e,OAAS1tB,IAAM8O,EAAK0e,OAChE,GAAIJ,EAAK7zB,OAAQ,CACf,MAAM+uB,EAAO8E,EAAKxxB,KAAKsgB,MAAM+S,IAAQ7B,EAAK7zB,SAC1CuV,EAAK0e,MAAQlF,CACf,CACA,KACF,CACA,IAAK,WAAY,CACf,MAAM8E,EAAOoB,EAAMh0B,OAAQwF,GAAMA,IAAM8O,EAAK0e,OAASxtB,IAAM8O,EAAK4e,OAChE,GAAIN,EAAK7zB,OAAQ,CACf,MAAM+uB,EAAO8E,EAAKxxB,KAAKsgB,MAAM+S,IAAQ7B,EAAK7zB,SAC1CuV,EAAK4e,MAAQpF,CACf,CACA,KACF,CACA,IAAK,OAAQ6G,EAAWd,EAAKM,IAAK,MAClC,IAAK,OAEL,QAAS,MADT,IAAK,cAAeS,GAAef,EAAKO,OAI1C,MAAO,CAAE9f,OAAMogB,kBAAiBC,WAAUC,cAC5C,CAMA,MAAMC,GAAa,CAAEC,YAAa,EAAGC,WAAY,EAAGC,UAAW,EAAGC,YAAa,EAAGxD,aAAc,GAEhG,SAASyD,GACPlD,EAAQC,EAAKS,EAAQlmB,EAAOJ,EAAQ+oB,EAAQxB,EAAcyB,EAASxB,EAAayB,EAAgBC,EAAmB3E,EAAMgC,GACxH,IADkIvG,EAAIttB,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,CAAC,EAE3I,MAAM,UACJy2B,EAAY,IAAK,QACjBC,EAAU,KAAK,MACfC,EAAQ,IAAI,UACZC,EAAYt0B,KAAKyE,IAAI,IAAO0vB,GAAU,UACtCI,EAAY,WAAU,cACtBC,GAAgB,EAAI,cACpBC,GAAgB,EAAI,oBACpBC,EAAsB,IAAG,cACzBC,EAAgB,IAAM,UACtBC,EAAY,CAAC,MACX5J,EAEE6J,EAAgBx2B,GA5KxB,SAA4BwyB,EAAKS,EAAQjzB,EAAGe,EAAGwxB,EAAQW,GACrD,IAAI9hB,EAAMzP,KAAKC,IAAI,EAAGb,EAAE2xB,IAAM1yB,EAAE0yB,KAAO/wB,KAAKC,IAAI,EAAGb,EAAE4xB,IAAM3yB,EAAE2yB,KAC7D,GAAY,8BAARH,EAAiB,OAAOphB,EAE5B,MAAM+hB,EAAOb,GAAmBC,EAAQC,GAClCY,EAASC,GAAc,6BAAPA,EAChBC,EAAKF,EAAc,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUK,OAAS,2BAAUJ,EAAKhyB,SAAiB,OAAR+xB,QAAQ,IAARA,OAAQ,EAARA,EAAUK,OAAiB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUK,MAAQ,KAC3FC,EAAKJ,EAAc,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAS,2BAAUN,EAAKhyB,SAAiB,OAAR+xB,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAiB,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUO,MAAQ,KAE3FgD,EAAcA,CAACC,EAASC,EAAQ/C,EAAYgD,IAC5CxD,EAAMQ,IACWT,EAAKhyB,SAASu1B,GAAW,EAAI,GAC5B/0B,KAAKC,IAAI,EAAGg1B,EAAYD,IAEtCD,IAAY9C,EAAa,EAAI,GAAKjyB,KAAKC,IAAI,EAAGg1B,EAAYD,GAGpE,GAAe,YAAX1D,EAAsB,CACxB,IAAKK,EAAI,OAAO7tB,OAAOoxB,kBACvB,MAAMC,EAAKL,EAAYz2B,EAAEuzB,MAAOvzB,EAAE4yB,KAAMU,EAAIvyB,EAAE6xB,MACxCmE,EAAKN,EAAYz2B,EAAEyzB,MAAOzzB,EAAE6yB,KAAMS,EAAIvyB,EAAE6xB,MAC9CxhB,GAAOzP,KAAKyE,IAAI0wB,EAAIC,EACtB,KAAO,CACL,IAAKzD,IAAOE,EAAI,OAAO/tB,OAAOoxB,kBAC9B,MAAMG,EAAMP,EAAYz2B,EAAEuzB,MAAOvzB,EAAE4yB,KAAMU,EAAIvyB,EAAE6xB,MAAQ6D,EAAYz2B,EAAEyzB,MAAOzzB,EAAE6yB,KAAMW,EAAIzyB,EAAE8xB,MACpFoE,EAAMR,EAAYz2B,EAAEuzB,MAAOvzB,EAAE4yB,KAAMY,EAAIzyB,EAAE8xB,MAAQ4D,EAAYz2B,EAAEyzB,MAAOzzB,EAAE6yB,KAAMS,EAAIvyB,EAAE6xB,MAC1FxhB,GAAOzP,KAAKyE,IAAI4wB,EAAKC,EACvB,CACA,OAAO7lB,CACT,CA+I8B8lB,CAAmB1E,EAAKS,EAAQjzB,EAAG2M,EAAQ4lB,EAAQW,GAEzEiE,EAAWC,IACf,MAAMC,EAAqB9jB,IACzB,MAAMnC,EAAMmC,EAAIya,OAAO,CAAC1nB,EAAGC,IAAMD,EAAIC,EAAE9C,EAAG,GAC1C,IAAI0F,EAAIiuB,IAAShmB,EACjB,IAAK,IAAIvP,EAAI,EAAGA,EAAI0R,EAAIjU,OAAQuC,IAAsB,GAAfsH,GAAKoK,EAAI1R,GAAG4B,EAAO0F,GAAK,EAAG,OAAOtH,EACzE,OAAO0R,EAAIjU,OAAS,GAGtB,IAAIU,EAAI,IAAK+M,GACTuqB,EAAO,EACP9tB,EAAO0qB,EACPqD,EAAM5B,EACN6B,EAAW5B,EACXhV,EAAOuT,EACPhb,GAAQ,EAEZ,GAAe,oBAAXuc,GACF1C,GAAkBR,EAAKS,EAAQjzB,EAAG2M,EAAQ4lB,EAAQW,GAAW,CAC7D,MACM/rB,EAAI2rB,GADIL,GAAWzyB,IAEzB,MAAO,CACLq1B,YAAa,EACbC,WAAkB,iBAANnuB,EAAa,EAAI,EAC7BouB,UAAiB,iBAANpuB,EAAa,EAAI,EAC5BquB,YAAmB,iBAANruB,EAAa,EAAI,EAC9B6qB,aAAc,EAElB,CAEA,KAAOxoB,EAAO,GAAG,CACf,IAAIiuB,EAAO,GACX,GAAIte,GAAS0c,EAAkBv2B,OAAS,EACtCm4B,EAAO5B,EAAkBjoB,MAAM,EAAG,OAC7B,CACL,MAAMulB,EAAOa,GAAmBh0B,EAAGwJ,EAAMgpB,EAAKD,EAAQ3R,GACtD,IAAKuS,EAAK7zB,OAAQ,MAClB,MAAMo4B,EAAO,IAAIvE,GACXptB,EAAIpE,KAAKyE,IAAI,EAAGsxB,EAAKp4B,QAC3B,IAAK,IAAIuC,EAAI,EAAGA,EAAIkE,EAAGlE,IAAK,CAC1B,MAAMwlB,EAAMgQ,EAAkBK,GAC9BD,EAAKv1B,KAAKw1B,EAAKrQ,GAAK+M,MACpBsD,EAAK3M,OAAO1D,EAAK,EACnB,CACF,CAEA,GAAImI,GAAc,CAChB,MAAMnB,EAAOoJ,EAAK91B,KAAKsgB,MAAMmV,IAASK,EAAKn4B,SACrCq4B,EAAM7C,GAAUvC,EAAQC,EAAKxyB,EAAGquB,EAAMzN,EAAMwW,GAClDp3B,EAAI23B,EAAI9iB,KAAMyiB,GAAQK,EAAI1C,gBAAiBrU,EAAO+W,EAAIzC,SAAUqC,GAAOI,EAAIxC,YAAaqC,GAAW,CACrG,KAAO,CACL,MAAMI,EAAYtF,GAAmBC,EAAQC,GACvCe,EAAQvzB,EAAEuzB,MAAOE,EAAQzzB,EAAEyzB,MAC3Be,EAAaoD,EAAUvgB,KAAMtR,GAAMA,IAAM0tB,GAAS1tB,IAAMwtB,GACxDkB,EAAamD,EAAUvgB,KAAMtR,GAAMA,IAAMwtB,GAASxtB,IAAM0tB,GACxDoE,EAASrB,EAAax2B,GAC5B,IAAI83B,EAAO,KACX,IAAK,MAAMC,KAAMN,EAAM,CACrB,GAAgB,aAAZM,EAAG1D,OAAwBG,EAAY,SAC3C,GAAgB,aAAZuD,EAAG1D,OAAwBI,EAAY,SAC3C,MAAMkD,EAAM7C,GAAUvC,EAAQC,EAAKxyB,EAAG+3B,EAAInX,EAAMwW,GAC1CY,EAAOH,EAASrB,EAAamB,EAAI9iB,QAClCijB,GAAQE,EAAOF,EAAKE,QACvBF,EAAO,CAAEjjB,KAAM8iB,EAAI9iB,KAAMyiB,KAAMK,EAAI1C,gBAAiBC,SAAUyC,EAAIzC,SAAU+C,IAAKN,EAAIxC,YAAa6C,QAEtG,CACA,GAAIF,GAAQA,EAAKE,MAAQ,GAAKR,GAAYD,EAAM,EAAG,CAAEA,GAAO,EAAGpe,GAAQ,EAAO,QAAU,CACpF2e,IAAQ93B,EAAI83B,EAAKjjB,KAAMyiB,GAAQQ,EAAKR,KAAM1W,EAAOkX,EAAK5C,SAAUqC,GAAOO,EAAKG,IAAKT,GAAW,EAClG,CAGA,GADAhuB,GAAQ,EAAG2P,GAAQ,EACJ,oBAAXuc,GAAgC1C,GAAkBR,EAAKS,EAAQjzB,EAAG2M,EAAQ4lB,EAAQW,GAAW,KACnG,CAEA,MACM/rB,EAAI2rB,GADIL,GAAWzyB,IAEzB,MAAO,CACLq1B,YAAarC,GAAkBR,EAAKS,EAAQjzB,EAAG2M,EAAQ4lB,EAAQW,GAAY,EAAI,EAC/EoC,WAAkB,iBAANnuB,EAAa,EAAI,EAC7BouB,UAAiB,iBAANpuB,EAAa,EAAI,EAC5BquB,YAAmB,iBAANruB,EAAa,EAAI,EAC9B6qB,aAAcsF,IAIlB,IAAIvxB,EAAI,EACJmyB,EAAU,EAAGC,EAAY,EAAGC,EAAW,EAAGC,EAAa,EAAGC,EAAU,EACpEC,EAAM,IAAKnD,GAAYoD,WAAY,EAAGC,GAAI,CAAEC,IAAK,EAAGC,KAAM,EAAGC,UAAW,IAExEC,EAAiB/C,EACjBgD,GAAY,EAEhB,MAAMC,EAAQxnB,MAAMC,QAAQ+kB,IAAcA,EAAUj3B,OAChD,IAAIi3B,GAAWhiB,KAAK,CAACjO,EAAGC,IAAMD,EAAIC,GAClC,CAAC+vB,GAEC0C,EAAUD,EAAMA,EAAMz5B,OAAS,GAC/B25B,EAAY5rB,GAAQ0rB,EAAMzlB,KAAKvS,GAAKA,EAAIsM,IAAQA,EAChD6rB,EAAYH,EAAM,GAElBI,EAAeA,CAACC,EAAU/R,KACf+R,IAAa,EAAMz3B,KAAKmvB,KAAMzJ,EAAM,IAAO,EAAG,cAAgB,KAC5D,EAGbgS,EAAWA,KACf,MAAM9zB,EAAI2yB,EAAUv2B,KAAKC,IAAI,EAAGmE,GAChC,IAAI0yB,EACJ,GAAU,IAANlzB,EAAS,CACX,MAAM+zB,EAAK/H,GAAsBxrB,GACjC0yB,EAAK,CAAEC,IAAK,EAAGC,KAAMW,EAAIV,UAAWU,EAAK,EAC3C,MAAO,GAAU,IAAN/zB,EAAS,CAClB,MACMmzB,EAAM,EADDnH,GAAsBxrB,GAEjC0yB,EAAK,CAAEC,MAAKC,KAAM,EAAGC,WAAY,EAAIF,GAAO,EAC9C,KAAO,CACL,MAAMj1B,EApZZ,SAAkB8B,EAAGQ,GAAc,IAAXwzB,EAACl6B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAC1B,MAAMm6B,EAAQ,EAAKD,EAAIA,EAAKxzB,EACtB0zB,GAAUl0B,EAAKg0B,EAAIA,GAAM,EAAIxzB,IAAMyzB,EACnCE,EAAUH,EAAIC,EAAS73B,KAAKg4B,KAAMp0B,GAAK,EAAIA,GAAKQ,EAAMwzB,EAAIA,GAAM,EAAIxzB,EAAIA,IAC9E,MAAO,CAAE2yB,IAAK/2B,KAAKC,IAAI,EAAG63B,EAASC,GAASf,KAAMh3B,KAAKyE,IAAI,EAAGqzB,EAASC,GACzE,CA+YgBE,CAASr0B,EAAGQ,GACtB0yB,EAAK,CAAEC,IAAKj1B,EAAEi1B,IAAKC,KAAMl1B,EAAEk1B,KAAMC,WAAYn1B,EAAEk1B,KAAOl1B,EAAEi1B,KAAO,EACjE,CAEA,OADAH,EAAIE,GAAKA,EACFA,GAGT,KAAO1yB,EAAI8yB,GAAgB,CACzB,MAAMgB,EAAQ7D,EACd,IAAK,IAAIn0B,EAAI,EAAGA,EAAIg4B,KACd9zB,GAAK8yB,GADgBh3B,IAAK,CAG9B,MAAMi4B,EAAYX,EAAajI,IAAS,EAAGnrB,EAAIlE,GAGzCk4B,EAAM5C,EADDlG,GAAQ6I,IASnB,GAPA5B,GAAW6B,EAAI1E,YACf8C,GAAa4B,EAAIzE,WACjB8C,GAAY2B,EAAIxE,UAChB8C,GAAc0B,EAAIvE,YAClB8C,GAAWyB,EAAI/H,aACfjsB,GAAK,EAEDowB,GAAiBpwB,EAAI8yB,EAAgB,CACvC,MAAMmB,EAAS/I,GAAQ6I,GAEjBG,EAAM9C,EADD+C,IAAM,EAAIF,KAErB9B,GAAW+B,EAAI5E,YACf8C,GAAa8B,EAAI3E,WACjB8C,GAAY6B,EAAI1E,UAChB8C,GAAc4B,EAAIzE,YAClB8C,GAAW2B,EAAIjI,aACfjsB,GAAK,CACP,CACF,CAEA,MACMo0B,EADKd,IACGT,WAAa,EAE3B,GAAIxC,GAAiBrwB,GAAKkwB,GAAyB,IAAZiC,GAAiBW,EAAiBG,EAAS,CAChFH,EAAiBA,EAAiBK,EAAYA,EAAYD,EAASJ,GACnEC,GAAY,EACZ,QACF,CAQA,GALE1C,GACArwB,GAAKkwB,GACLiC,EAAU7B,GACVwC,EAAiBG,EAEE,CACnB,MAAMnkB,EAAOgkB,EAAiBK,EAAYA,EAAYD,EAASJ,GAC/DA,EAAiBl3B,KAAKyE,IAAI4yB,EAASnkB,GACnC,QACF,CAEA,IAAKikB,GAAaqB,GAAMpE,GAAWhwB,GAAKkwB,EAAW,KACrD,CASA,OAPAsC,EAAIC,WAAazyB,EACjBwyB,EAAIlD,YAAcjD,GAAa8F,EAASnyB,EAAGmwB,GAC3CqC,EAAIjD,WAAalD,GAAa+F,EAAWpyB,EAAGmwB,GAC5CqC,EAAIhD,UAAYnD,GAAagG,EAAUryB,EAAGmwB,GAC1CqC,EAAI/C,YAAcpD,GAAaiG,EAAYtyB,EAAGmwB,GAC9CqC,EAAIvG,aAAesG,EAAU32B,KAAKC,IAAI,EAAGmE,GACzCwyB,EAAIlG,UAAsB,EAAV6F,EACTK,CACT,CAMA,MAAM6B,GAAkB,CACtBC,OAAQ,2CACRC,MAAO,2CACPC,QAAS,4CAuCX,SAAS1kB,GAAQvT,GAQb,IARc,MAChB0P,EAAK,MACL1J,EAAK,SACLmE,EAAQ,YACRsJ,EAAW,UACXzX,EAAS,SACTiN,EAAQ,SACRyK,GAAW,GACZ1T,EACC,MAAOE,EAAMyT,IAAWpT,EAAAA,EAAAA,WAAS,GAC3BuT,GAASnY,EAAAA,EAAAA,QAAO,MAChBoY,GAAUpY,EAAAA,EAAAA,QAAO,MACjBsY,GAAUtY,EAAAA,EAAAA,QAAO,CAAEyL,IAAK,EAAGF,KAAM,EAAGG,MAAO,KAC1C,CAAE6M,IAAa3T,EAAAA,EAAAA,UAAS,IAE/B3E,EAAAA,EAAAA,WAAU,KACR,MAAMwF,EAAIA,IAAMuS,GAAQ,GAExB,OADAzW,OAAOkI,iBAAiB,sBAAuBhE,GACxC,IAAMlE,OAAOmI,oBAAoB,sBAAuBjE,IAC9D,IAjCL,SAA2BqT,EAAMC,GAC/B,MAAMC,GAAYxS,EAAAA,EAAAA,SAAQ,IAAO8M,MAAMC,QAAQuF,GAAQA,EAAO,CAACA,GAAQ,CAACA,IAClEG,GAAajZ,EAAAA,EAAAA,QAAO+Y,IAC1B9Y,EAAAA,EAAAA,WAAU,KAAQgZ,EAAWpY,QAAUkY,GAAY,CAACA,KACpD9Y,EAAAA,EAAAA,WAAU,KACR,MAAMiZ,EAAYlO,IAAO,IAADmO,EAClBH,EAAUI,KAAKlO,IAAM,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGrK,UAAWqK,EAAErK,QAAQwY,SAASrO,EAAE0D,UACzC,QAAlByK,EAAAF,EAAWpY,eAAO,IAAAsY,GAAlBA,EAAAzM,KAAAuM,EAAqBjO,IAGvB,OADA7K,SAASsJ,iBAAiB,QAASyP,GAAU,GACtC,IAAM/Y,SAASuJ,oBAAoB,QAASwP,GAAU,IAC5D,CAACF,GACN,CAuBEM,CAAkB,CAACnB,EAAQC,GAAU,IAAMJ,GAAQ,KAEnDuB,EAAAA,EAAAA,iBAAgB,KACd,IAAKhV,IAAS4T,EAAOtX,QAAS,OAC9B,MAAMiN,EAAOqK,EAAOtX,QAAQsK,wBAC5BmN,EAAQzX,QAAU,CAAE4K,IAAKqC,EAAK0L,OAAS,EAAGjO,KAAMuC,EAAKvC,KAAMG,MAAOoC,EAAKpC,OACvE6M,EAAWnW,GAAMA,EAAI,GACrB,MAAMqX,EAAWA,KAAO,IAADC,EACrB,MAAMxO,EAAkB,QAAjBwO,EAAGvB,EAAOtX,eAAO,IAAA6Y,OAAA,EAAdA,EAAgBvO,wBAA8BD,IACxDoN,EAAQzX,QAAU,CAAE4K,IAAKP,EAAEsO,OAAS,EAAGjO,KAAML,EAAEK,KAAMG,MAAOR,EAAEQ,OAC9D6M,EAAWnW,GAAMA,EAAI,KAIvB,OAFAb,OAAOkI,iBAAiB,SAAUgQ,EAAU,CAAEE,SAAS,IACvDpY,OAAOkI,iBAAiB,SAAUgQ,GAC3B,KACLlY,OAAOmI,oBAAoB,SAAU+P,GACrClY,OAAOmI,oBAAoB,SAAU+P,KAEtC,CAAClV,IAEJ,MAAM2V,EAAW7P,EAAMgL,KAAMzR,GAAMA,EAAEmQ,QAAUA,GAEzCuG,EAAO/V,IAAS+I,GACpBtM,EAAAA,EAAAA,KAACuZ,EAAAA,EAAe,CAAAzN,UACd9L,EAAAA,EAAAA,KAACwZ,EAAAA,EAAOC,GAAE,CACRxZ,IAAKmX,EAELuC,QAAS,CAAEC,QAAS,EAAGvP,GAAI,EAAGsI,MAAO,KACrCkH,QAAS,CAAED,QAAS,EAAGvP,EAAG,EAAGsI,MAAO,GACpCmH,KAAM,CAAEF,QAAS,EAAGvP,GAAI,EAAGsI,MAAO,KAClCoH,WAAY,CAAEC,SAAU,KACxB1a,MAAO,CAAE+P,SAAU,QAAS5E,IAAK6M,EAAQzX,QAAQ4K,IAAKF,KAAM+M,EAAQzX,QAAQ0K,KAAMG,MAAO4M,EAAQzX,QAAQ6K,MAAO+E,OAAQ,MACxHpQ,UAAW,yDAAwD0X,EAAW,SAAW,IAAKjL,SAE7FzC,EAAMlI,IAAKkK,IACVrL,EAAAA,EAAAA,KAAA,MAAA8L,UACE9L,EAAAA,EAAAA,KAAA,UACEN,KAAK,SACLsM,QAASA,KAAYX,EAAGiB,WAAkBkB,EAASnC,EAAG0H,OAAQiE,GAAQ,KACtE,kBAAe3L,EAAGiB,eAAkBhM,EACpCjB,UAAW,sCAAsCgM,EAAGiB,SAAW,qBAAuB,sBAAsBjB,EAAG0H,QAAUA,EAAQ,cAAgB,KAAKjH,UAEtJ9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,iBAAgByM,SAAET,EAAGtH,WAPhC/C,OAAOqK,EAAG0H,UATjB,UAsBN,KAEJ,OACEhH,EAAAA,EAAAA,MAAA,OAAK9L,IAAKkX,EAAQ9X,UAAW,oBAAoBA,GAAa,KAAKyM,SAAA,EACjEC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,KAAOM,GAAY0K,EAAS5V,IAAOA,GAC5CkL,SAAUA,EACVjN,UAAW,6KAA6K0X,EAAW,SAAW,MAAMzK,EAAW,qBAAuB,KAAKR,SAAA,EAE3P9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,mBAAkByM,SAAEoN,EAAWA,EAASnV,MAAQ+S,GAAe,kBAC/E9W,EAAAA,EAAAA,KAAA,QAAMX,UAAU,oCAAmCyM,SAAEvI,GAAOvD,EAAAA,EAAAA,KAACkb,EAAAA,EAAS,CAAChP,KAAM,MAASlM,EAAAA,EAAAA,KAACmb,EAAAA,EAAW,CAACjP,KAAM,UAE1G3I,GAAQ+V,IAGf,CAaA,SAAS8B,GAAU3G,GAAuB,IAAtB,OAAE6G,EAAM,QAAE9X,GAASiR,EACrC,MAOM8mB,EAAWrI,IAAU,CACzBsI,QAAS,6CACTC,KAAM,qCACNC,QAAS,yCACTnzB,MAAO,wCACP2qB,IAAS,0CAEX,OACElzB,EAAAA,EAAAA,KAAA,OAAKX,UAAU,sGAAqGyM,UAClH9L,EAAAA,EAAAA,KAACuZ,EAAAA,EAAe,CAAAzN,SACbwP,EAAOna,IAAKW,IACXiK,SAAAA,EAAAA,MAACyN,EAAAA,EAAOkC,IAAG,CAET/B,QAAS,CAAEC,QAAS,EAAGjH,MAAO,KAC9BkH,QAAS,CAAED,QAAS,EAAGjH,MAAO,GAC9BmH,KAAM,CAAEF,QAAS,EAAGjH,MAAO,KAC3BoH,WAAY,CAAEra,KAAM,SAAUic,UAAW,IAAKC,QAAS,IACvDvc,UAAW,+IAxBL6zB,EAwB2JpxB,EAAEoxB,KAxBnJ,CACxBsI,QAAS,uDACTC,KAAM,2CACNC,QAAS,iDACTnzB,MAAO,+CACP2qB,IAAS,mDAmB0KpnB,SAAA,EAE3K9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,iBAAgByM,SAAEhK,EAAE3B,OACnCH,EAAAA,EAAAA,KAAA,UACEX,UAAW,mCAAmCk8B,EAAQz5B,EAAEoxB,QACxDlnB,QAASA,IAAMxI,EAAQ1B,EAAE0M,IACzB,aAAW,eAAI1C,SAChB,mBAZIhK,EAAE0M,IAnBD0kB,WAuClB,CAEA,SAASrX,GAAWlH,GAYhB,IAZiB,MACnB5B,EAAK,IACL4oB,EAAG,SACHnuB,EAAQ,IACRrG,EAAMmqB,GAAQ,IACd3uB,EAAM,GAAE,KACR0W,EAAO,EAAC,WACR0C,GAAa,EAAK,WAClBC,GAAa,EAAI,UACjB3c,EAAY,GAAE,WACd4c,EAAa,CAAC,EAAC,SACf3P,GACDqI,EACC,MAAMuH,EAAS9a,GAAa,OAANA,QAAoBd,IAANc,EAAkB,GAAKJ,OAAOI,IAC3D+a,EAAOC,GAAYrT,EAAAA,SAAemT,EAAMnJ,IAC/ChK,EAAAA,UAAgB,KAAQqT,EAASF,EAAMnJ,KAAY,CAACA,IAEpD,MAAM6oB,EAAc90B,IAClB,IAAIsD,EAAItD,EAGR,OAFW,MAAPK,GAAeiD,EAAIjD,IAAKiD,EAAIjD,GACrB,MAAPxE,GAAeyH,EAAIzH,IAAKyH,EAAIzH,GACzByH,GAaHyxB,EAAgC,oBAAbruB,EACnBsuB,EAAyB,oBAARH,EAEvB,OACE37B,EAAAA,EAAAA,KAAA,SACEN,KAAK,SACL8c,UAAWT,EAAa,UAAY,UACpC1C,KAAMA,EACNlS,IAAKA,EACLxE,IAAKA,EACL2J,SAAUA,EACVyG,MAAOoJ,EACP3O,SAAWxD,IACT,MAAM5I,EAAI4I,EAAE0D,OAAOqF,MACnB,GAAU,KAAN3R,EAGF,OAFAgb,EAAS,SACLyf,GAAWruB,EAAS,OAG1B4O,EAAShb,GACT,MAAMuQ,EAAMnL,OAAOpF,GACnB,IAAKoF,OAAOC,SAASkL,GAEnB,YADIkqB,GAAWruB,EAAS,OAG1B,MAAM1G,EAAIiV,EAAapK,EAAMjP,KAAK4Z,MAAM3K,GACpCkqB,EACFruB,EAAS1G,GACAg1B,GACTH,EAAIC,EAAW90B,KAGnB2V,OAAQA,KACN,MAAM3V,EA3Ca/F,KACvB,GAAU,KAANA,EAAU,OAAOib,EAAiB,OAAH7U,QAAG,IAAHA,EAAAA,EAAO,EAAK,KAC/C,IAAIL,EAAIN,OAAOzF,GACf,OAAKyF,OAAOC,SAASK,IACrBA,EAAIiV,EAAajV,EAAIpE,KAAK4Z,MAAMxV,GACzB80B,EAAW90B,IAFckV,EAAiB,OAAH7U,QAAG,IAAHA,EAAAA,EAAO,EAAK,MAwC5CkV,CAAgBF,GAC1BC,EAAc,MAALtV,EAAY,GAAK9F,OAAO8F,IAC7B+0B,EACFruB,EAAS1G,GACAg1B,GACTH,EAAS,MAAL70B,EAAgB,OAAHK,QAAG,IAAHA,EAAAA,EAAO,EAAKL,IAGjC4V,QA3CiB1S,GAAMA,EAAEiF,cAAc0N,OA4CvCtd,UAAW,gGAAgGA,OACvG4c,GAGV,CAEA,MAAM8f,GAASnnB,IAAqD,IAApD,MAAE7B,EAAK,IAAE4oB,EAAG,QAAEK,EAAO,SAAE1vB,EAAQ,YAAEwK,GAAalC,EAC5D,MAAMvL,GAAS2yB,GAAW,IAAI76B,IAAK86B,IAAC,IAAAC,EAAAC,EAAA,MACrB,kBAANF,EACH,CAAElpB,MAAOkpB,EAAGl4B,MAAOk4B,GACnB,CAAElpB,MAAc,QAATmpB,EAAED,EAAElpB,aAAK,IAAAmpB,EAAAA,EAAID,EAAGl4B,MAAc,QAATo4B,EAAEF,EAAEl4B,aAAK,IAAAo4B,EAAAA,EAAIn7B,OAAOi7B,MAEtD,OACEj8B,EAAAA,EAAAA,KAAC4W,GAAQ,CACP7D,MAAOA,EACPvF,SAAUmuB,EACVtyB,MAAOA,EACPiD,WAAYA,EACZjN,UAAU,mBACVyX,YAAaA,GAAe,kBASlC,SAASslB,GAAmBC,GAC1B,MAAM/nB,EAAM+nB,EAAO/6B,OAAOC,SAC1B,OAAO,IAAIyP,IAAIsD,GAAKpI,OAASoI,EAAIjU,MACnC,CAOe,SAASi8B,KAAgB,IAADC,EACrC,MAAM,OAAEjhB,EAAM,KAAErY,EAAI,OAAE6c,GAxKxB,WACE,MAAOxE,EAAQyE,IAAanc,EAAAA,EAAAA,UAAS,IAOrC,MAAO,CAAE0X,SAAQrY,KANJ,SAAC9C,GAAwB,IAAnB+yB,EAAI9yB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OACxB,MAAMoO,EAAK9L,KAAK+L,SAASC,SAAS,IAAIC,MAAM,EAAG,GAC/CoR,EAAWje,GAAM,IAAIA,EAAG,CAAE0M,KAAIrO,MAAK+yB,UACnClT,WAAW,IAAMD,EAAWje,GAAMA,EAAER,OAAQ8I,GAAMA,EAAEoE,KAAOA,IAAM,KACnE,EAEuBsR,OADPtR,GAAOuR,EAAWje,GAAMA,EAAER,OAAQ8I,GAAMA,EAAEoE,KAAOA,IAEnE,CA+JmC0R,IAE1BoT,EAAQkJ,IAAa54B,EAAAA,EAAAA,UAAS,8BAC9B2vB,EAAKkJ,IAAU74B,EAAAA,EAAAA,UAAS,8BACxB84B,EAAQC,IAAa/4B,EAAAA,EAAAA,UAAS,iBAC9Bg5B,EAAeC,IAAoBj5B,EAAAA,EAAAA,UAAS,WAE7Ck5B,GAAgBt3B,EAAAA,EAAAA,SAAQ,IAAM6tB,GAAmBC,EAAQ,6BAAU,CAACA,IACpEyJ,GAAkBv3B,EAAAA,EAAAA,SAAQ,IAAM6tB,GAAmBC,EAAQ,6BAAU,CAACA,KAErEllB,EAAK4uB,IAAUp5B,EAAAA,EAAAA,UAAS,CAAE6vB,IAAKnC,GAAUoC,IAAKpC,GAAUgD,MAAOwI,EAAc,GAAInJ,KAAMrC,GAAUkD,MAAOsI,EAAc,IAAMA,EAAc,GAAIlJ,KAAMtC,MACpJ2L,EAAKC,IAAUt5B,EAAAA,EAAAA,UAAS,CAAE6vB,IAAKnC,GAAUoC,IAAKpC,GAAUqC,KAAMrC,GAAUsC,KAAMtC,MAE9E2C,EAAUkJ,IAAev5B,EAAAA,EAAAA,UAAS,CACvC0wB,MAAOjB,GAAmBC,EAAQC,GAAK,GACvCiB,MAAOnB,GAAmBC,EAAQC,GAAK,IAAMF,GAAmBC,EAAQC,GAAK,MAGxE6J,EAAaC,IAAkBz5B,EAAAA,EAAAA,WAAS,IACxC05B,EAAWC,IAAgB35B,EAAAA,EAAAA,WAAS,IACpC45B,EAAWC,IAAgB75B,EAAAA,EAAAA,WAAS,GAErC85B,EAAWtvB,EAAIkmB,QAAUlmB,EAAIomB,OAE5BmJ,EAAWC,IAAgBh6B,EAAAA,EAAAA,UAAS,KAErCi6B,GAAc7+B,EAAAA,EAAAA,SAAO,IAC3BC,EAAAA,EAAAA,WAAU,KACJ4+B,EAAYh+B,UAChBg+B,EAAYh+B,SAAU,EACtBm9B,EAAOj8B,IAAC,IACHA,EACH0yB,IAAK/wB,KAAKC,IAAI5B,EAAE0yB,IAAKnC,IACrBoC,IAAKhxB,KAAKC,IAAI5B,EAAE2yB,IAAKpC,IACrBqC,KAAMjxB,KAAKC,IAAI5B,EAAE4yB,KAAMrC,IACvBsC,KAAMlxB,KAAKC,IAAI5B,EAAE6yB,KAAMtC,OAEzB4L,EAAOp7B,IAAC,IACHA,EACH2xB,IAAK/wB,KAAKC,IAAIb,EAAE2xB,IAAKnC,IACrBoC,IAAKhxB,KAAKC,IAAIb,EAAE4xB,IAAKpC,IACrBqC,KAAMjxB,KAAKC,IAAIb,EAAE6xB,KAAMrC,IACvBsC,KAAMlxB,KAAKC,IAAIb,EAAE8xB,KAAMtC,SAExB,IAEH,MAAOwM,EAAQC,IAAan6B,EAAAA,EAAAA,UAAS,MACnCqxB,aAAchE,GAAgByL,GAC9BhG,QAASrF,GAAoBqL,GAC7BnE,UAAU,EACVrD,YAAa,EACbmD,KAAM,EACNrD,MAAO,IAAK5mB,OAGdnP,EAAAA,EAAAA,WAAU,KACR8+B,EAAWvpB,IAAC,IACPA,EACHygB,aAAchE,GAAgByL,GAC9BhG,QAASrF,GAAoBqL,GAC7B1H,MAAO,IAAK5mB,GACZmqB,UAAU,EACVrD,YAAa,EACbmD,KAAM,MAEP,CAACqE,EAAQtuB,IAEZ,MAAO4vB,EAAYC,IAAiBr6B,EAAAA,EAAAA,UAAS,OACtCs6B,EAAYC,IAAiBv6B,EAAAA,EAAAA,UAAS,KAGtCw6B,EAASC,IAAcz6B,EAAAA,EAAAA,UAAS,CAAE06B,KAAM,GAAIC,OAAQ,KAErDC,GAAe9mB,EAAAA,EAAAA,aAAY,MAC/BomB,OAAQ9nB,KAAKC,MAAMD,KAAKiO,UAAU6Z,IAClCE,WAAYA,EAAa,IAAKA,EAAYhC,QAAS,IAAIgC,EAAWhC,UAAa,KAC/EkC,eACE,CAACJ,EAAQE,EAAYE,IAEnBO,GAAkB/mB,EAAAA,EAAAA,aAAagnB,IACnCX,EAAUW,EAAKZ,QACfG,EAAcS,EAAKV,YACnBG,EAAcO,EAAKR,aAClB,IAEGS,GAAcjnB,EAAAA,EAAAA,aAAY,KAC9B2mB,EAAW55B,IACT,MAAMm6B,EAAW,IAAIn6B,EAAE65B,KAAME,KAC7B,KAAOI,EAASv+B,OAlBE,IAkBsBu+B,EAASC,QACjD,MAAO,CAAEP,KAAMM,EAAUL,OAAQ,OAElC,CAACC,IAEEM,EAAUV,EAAQE,KAAKj+B,OAAS,EAChC0+B,EAAUX,EAAQG,OAAOl+B,OAAS,GAGjC2+B,EAAMC,IAAWr7B,EAAAA,EAAAA,UAAS,IAC3Bs7B,EAASA,KACb,MAAMhb,EAAI,IAAIta,KACRu1B,EAAOr4B,GAAM9F,OAAO8F,GAAGwd,SAAS,EAAG,KACzC,MAAO,GAAG6a,EAAIjb,EAAEM,eAAe2a,EAAIjb,EAAEO,iBAAiB0a,EAAIjb,EAAEkb,iBAGxDC,GAAS3nB,EAAAA,EAAAA,aAAa4nB,IAC1BL,EAAS1wB,GAAS,CAChB,CAAEC,GAAI9L,KAAK+L,SAASC,SAAS,IAAIC,MAAM,GAAI4wB,KAAML,OAAaI,MAC3D/wB,GACHI,MAAM,EAZQ,OAaf,IAEG6wB,GAAO9nB,EAAAA,EAAAA,aAAY,KACvB2mB,EAAW55B,IACT,GAAsB,IAAlBA,EAAE65B,KAAKj+B,OAAc,OAAOoE,EAChC,MAAM8J,EAAO9J,EAAE65B,KAAK75B,EAAE65B,KAAKj+B,OAAS,GAC9Bo/B,EAAUh7B,EAAE65B,KAAK3vB,MAAM,GAAI,GAC3B9O,EAAU2+B,IAGhB,OAFAC,EAAgBlwB,GAChB8wB,EAAO,CAAE3/B,KAAM,OAAQ8M,MAAO,2BAAQ9L,OAAQ,iDACvC,CAAE49B,KAAMmB,EAASlB,OAAQ,CAAC1+B,KAAY4E,EAAE85B,YAEhD,CAACE,EAAiBD,EAAca,IAE7BK,GAAOhoB,EAAAA,EAAAA,aAAY,KACvB2mB,EAAW55B,IACT,GAAwB,IAApBA,EAAE85B,OAAOl+B,OAAc,OAAOoE,EAClC,MAAMmR,EAAOnR,EAAE85B,OAAO,GAChBoB,EAAal7B,EAAE85B,OAAO5vB,MAAM,GAC5B9O,EAAU2+B,IAGhB,OAFAC,EAAgB7oB,GAChBypB,EAAO,CAAE3/B,KAAM,OAAQ8M,MAAO,2BAAQ9L,OAAQ,0CACvC,CAAE49B,KAAM,IAAI75B,EAAE65B,KAAMz+B,GAAU0+B,OAAQoB,MAE9C,CAAClB,EAAiBD,EAAca,KAEnCpgC,EAAAA,EAAAA,WAAU,KACR,MAAM2gC,EAAS51B,KACCA,EAAE61B,SAAW71B,EAAE81B,UAED,MAAxB91B,EAAE8H,IAAIgM,gBACR9T,EAAE2B,iBACE3B,EAAEmgB,SAAgB4U,GAASW,IACpBZ,GAASU,MAIxB,OADAj/B,OAAOkI,iBAAiB,UAAWm3B,GAC5B,IAAMr/B,OAAOmI,oBAAoB,UAAWk3B,IAClD,CAACd,EAASC,EAASS,EAAME,IAE5B,MAAMK,EAAYA,CAACnH,EAAQoH,KACzB,MAAMC,EAAQ,GACRC,EAAS,SAACxuB,GAAkB,IAAf3N,EAAK3D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGsR,EACrBknB,EAAOlnB,KAAOsuB,EAAMtuB,IAAIuuB,EAAMh9B,KAAK,GAAGc,KAAS60B,EAAOlnB,WAAMsuB,EAAMtuB,KACxE,EAGA,GAFAwuB,EAAO,MAAO,gBACdA,EAAO,MAAO,sBACVtH,EAAOtE,QAAU0L,EAAM1L,OAASsE,EAAOjF,OAASqM,EAAMrM,KAAM,CAC9D,MAAMrM,EAAOsR,EAAOtE,QAAU0L,EAAM1L,MAAQ0L,EAAM1L,MAAQ,GAAGsE,EAAOtE,cAAS0L,EAAM1L,QACnF2L,EAAMh9B,KAAK,KAAKqkB,QAAWsR,EAAOjF,aAAQqM,EAAMrM,OAClD,CACA,GAAIiF,EAAOpE,QAAUwL,EAAMxL,OAASoE,EAAOhF,OAASoM,EAAMpM,KAAM,CAC9D,MAAMtM,EAAOsR,EAAOpE,QAAUwL,EAAMxL,MAAQwL,EAAMxL,MAAQ,GAAGoE,EAAOpE,cAASwL,EAAMxL,QACnFyL,EAAMh9B,KAAK,KAAKqkB,QAAWsR,EAAOhF,aAAQoM,EAAMpM,OAClD,CACA,OAAOqM,EAAM73B,KAAK,YAGpBnJ,EAAAA,EAAAA,WAAU,KACR,MAAMi1B,EAAOb,GAAmBC,EAAQC,GACxC4J,EAAagD,IACX,MAAM94B,EAAI6sB,EAAKhyB,SAASi+B,EAAI7L,OAAS6L,EAAI7L,MAAQJ,EAAK,GAChDkM,EAAQlM,EAAK,IAAMA,EAAK,GACxB5sB,EAAI4sB,EAAKhyB,SAASi+B,EAAI3L,OAAS2L,EAAI3L,MAASntB,IAAM+4B,EAAQlM,EAAK7f,KAAKvN,GAAKA,IAAMO,IAAMA,EAAI+4B,EAC/F,MAAO,CAAE9L,MAAOjtB,EAAGmtB,MAAOltB,MAE3B,CAACgsB,EAAQC,IAEZ,MAAM8M,IAAkB76B,EAAAA,EAAAA,SAAQ,KAC9B,MACM62B,EADQtH,GAAmB+I,EAAO9I,MAAO8I,EAAO7I,aAAc1B,EAAKD,EAAQwK,EAAO5I,aACnE/zB,IAAKkK,GAAOsqB,GAAkBtqB,EAAG8pB,KAAM2I,EAAO9I,QACnE,OAAO1iB,MAAMsZ,KAAK,IAAI5a,IAAIqrB,KACzB,CAACyB,EAAO9I,MAAO8I,EAAO7I,aAAc6I,EAAO5I,YAAa3B,EAAKD,IAE1DgN,IAAgB96B,EAAAA,EAAAA,SAAQ,KAC5B,MAAM+6B,EAAO,CAAC,qCAAa,wBAAU,GAAGzC,EAAO9I,MAAMV,eAAgB,GAAGwJ,EAAO9I,MAAMR,gBAC/ElW,EAAM,GACZ,IAAIzP,EAAS,EACb,IAAK,MAAMrK,KAAK+7B,EACd,GAAIF,GAAgBn+B,SAASsC,KAAO8Z,EAAIpc,SAASsC,GAAI8Z,EAAIrb,KAAKuB,OACzD,CACH,IADI,IAADg8B,EACI3xB,EAASwxB,GAAgBhgC,QAAUie,EAAIpc,SAASm+B,GAAgBxxB,KAAUA,IACjFyP,EAAIrb,KAA4B,QAAxBu9B,EAACH,GAAgBxxB,UAAO,IAAA2xB,EAAAA,EAAIh8B,GACpCqK,GACF,CAEF,KAAOyP,EAAIje,OAAS,GAAG,CACrB,IADsB,IAADwU,EAAA4rB,EACd5xB,EAASwxB,GAAgBhgC,QAAUie,EAAIpc,SAASm+B,GAAgBxxB,KAAUA,IACjFyP,EAAIrb,KAAoD,QAAhD4R,EAA0B,QAA1B4rB,EAACJ,GAAgBxxB,YAAS,IAAA4xB,EAAAA,EAAIJ,GAAgB,UAAE,IAAAxrB,EAAAA,EAAI,yCAC9D,CACA,OAAOyJ,EAAI3P,MAAM,EAAG,IACnB,CAAC0xB,GAAiBvC,EAAO9I,MAAMV,MAAOwJ,EAAO9I,MAAMR,SAE/CkM,GAAWC,KAAgB/8B,EAAAA,EAAAA,UAAS08B,KAE3CrhC,EAAAA,EAAAA,WAAU,KACR0hC,GAAcpyB,IACZ,MAAMqH,EAAOrH,EAAKpN,IAAI,CAACC,EAAGwB,KAAC,IAAAwS,EAAAwrB,EAAA,OAAMP,GAAgBn+B,SAASd,GAAKA,EAA4C,QAA3CgU,EAAqB,QAArBwrB,EAAGP,GAAgBz9B,UAAE,IAAAg+B,EAAAA,EAAIP,GAAgB,UAAE,IAAAjrB,EAAAA,EAAIhU,IACzGy/B,EAAO,IAAI7vB,IACjB,IAAK,IAAIpO,EAAI,EAAGA,EAAIgT,EAAKvV,OAAQuC,IAAK,CACpC,IAAKi+B,EAAKruB,IAAIoD,EAAKhT,IAAK,CAAEi+B,EAAKrwB,IAAIoF,EAAKhT,IAAK,QAAU,CACvD,MAAMk+B,EAAcT,GAAgBhsB,KAAM0sB,IAAOF,EAAKruB,IAAIuuB,IACtDD,IAAelrB,EAAKhT,GAAKk+B,EAAaD,EAAKrwB,IAAIswB,GACrD,CACA,OAAOlrB,KAER,CAACyqB,KAEJ,MAAOW,GAAYC,KAAiBr9B,EAAAA,EAAAA,UAAS,OACtCs9B,GAAWC,KAAgBv9B,EAAAA,EAAAA,UAAS,OACpCid,GAAaugB,KAAkBx9B,EAAAA,EAAAA,WAAS,GACzCy9B,IAAWriC,EAAAA,EAAAA,QAAO,GAClBsiC,IAAWtiC,EAAAA,EAAAA,QAAO,MAElBuiC,IAASviC,EAAAA,EAAAA,QAAO,OACfwiC,GAASC,KAAc79B,EAAAA,EAAAA,UAAS,OAEvC2U,EAAAA,EAAAA,iBAAgB,KACd,MAAMmpB,EAASA,KACTH,GAAO1hC,SACT4hC,GAAWF,GAAO1hC,QAAQ8hC,eAK9B,OAFAD,IACAnhC,OAAOkI,iBAAiB,SAAUi5B,GAC3B,IAAMnhC,OAAOmI,oBAAoB,SAAUg5B,IACjD,CAAC5D,EAAQ4C,GAAWQ,GAAWF,GAAYhD,EAAYR,EAAWJ,EAAaE,IAElF,MACMsE,GAAM,MAENC,IAA+BnqB,EAAAA,EAAAA,aAAY,CAAC2kB,EAAQyF,EAAUC,EAAOC,EAAWC,EAAUC,EAAOjQ,KACrG,IAAIjD,EAAM,EAAGmT,EAAM,EACnB,IAAK,MAAMC,KAAM/F,EAAQ,CACvB,MAAMvD,EAAKlD,GAAYwM,EAAIH,EAASjN,OAAQ,IAAK8D,EAAI,SACrD,GAAgB,aAAZA,EAAG1D,KAAqB,CAE1B,KADW/B,GAAmByO,EAAU,6BAASxgC,OAAQwF,GAAMA,IAAMm7B,EAASjN,MAAMR,OAAS1tB,IAAMm7B,EAASjN,MAAMV,OAAOj0B,OAAS,GACzH,QACX,CACA,GAAgB,aAAZy4B,EAAG1D,KAAqB,CAE1B,KADW/B,GAAmByO,EAAU,6BAASxgC,OAAQwF,GAAMA,IAAMm7B,EAASjN,MAAMV,OAASxtB,IAAMm7B,EAASjN,MAAMR,OAAOn0B,OAAS,GACzH,QACX,CACA,MAAMq4B,EAAM7C,GAAUiM,EAAUC,EAAOE,EAASjN,MAAO8D,EAAImJ,EAAS/M,YAAa,IACvElD,GAAQC,EAAOP,GAAO0Q,GAAtBpQ,IAEJqQ,EAAa,CACjBpN,aAAcgN,EAAShN,aAAe,EACtCyB,QAASuL,EAASvL,QAAUgC,EAAIxC,YAChCqC,UAAU,EACVrD,YAAawD,EAAIzC,SACjBoC,KAAM4J,EAAS5J,KAAOK,EAAI1C,gBAC1BhB,MAAO0D,EAAI9iB,MAgBboZ,GAdUwH,GACRsL,EAAUC,EAAOC,EAAWK,EAAWrN,MAAOkN,EAAO,aACrDG,EAAWpN,aAAcoN,EAAW3L,QAAS2L,EAAWnN,YAAamN,EAAW9J,SAAU,GAC1FtG,EAAOP,GAAO0Q,GAAKnO,EACnB,CACE4C,UAAWn0B,KAAKyE,IAAI,IAAMw2B,GAC1B3G,UAAWt0B,KAAKyE,IAAI,IAAMw2B,GAC1B7G,QAAS,KACTC,MAAO,IACPE,UAAW,WACXC,cAAe7G,GACf8G,eAAe,IAGVf,YAAa+L,GAAO,CAC/B,CACA,OAAOA,EAAMnT,EAAMmT,EAAM,GACxB,CAAClO,EAAU0J,IAEd,SAAS2E,GAAmBrQ,EAAM6P,EAAUC,EAAOE,GACjD,MAAMlM,EAAM/D,GAAQC,GAEdwG,EAAO,IADA1D,GAAmBkN,EAASjN,MAAOiN,EAAShN,aAAc8M,EAAOD,EAAUG,EAAS/M,cAE3F5W,EAAM,GACN8Z,EAAqB9jB,IACzB,MAAMnC,EAAMmC,EAAIya,OAAO,CAAC1nB,EAAGC,IAAMD,EAAIC,EAAE9C,EAAG,GAC1C,IAAI0F,EAAI6rB,IAAQ5jB,EAChB,IAAK,IAAIvP,EAAI,EAAGA,EAAI0R,EAAIjU,OAAQuC,IAAsB,GAAfsH,GAAKoK,EAAI1R,GAAG4B,EAAO0F,GAAK,EAAG,OAAOtH,EACzE,OAAO0R,EAAIjU,OAAS,GAEhByG,EAAIpE,KAAKyE,IAAI,EAAGsxB,EAAKp4B,QAC3B,IAAK,IAAIuC,EAAI,EAAGA,EAAIkE,EAAGlE,IAAK,CAAE,MAAMwlB,EAAMgQ,EAAkBK,GAAOna,EAAIrb,KAAKw1B,EAAKrQ,GAAK+M,MAAOsD,EAAK3M,OAAO1D,EAAK,EAAI,CAClH,OAAO9J,CACT,CAEA,SAASikB,GAAcC,EAAOzhC,GAAK,OAAOyhC,EAAMrhC,IAAK23B,GAAOnD,GAAkBmD,EAAI/3B,GAAK,CAEvF,MAAM0hC,IAAej9B,EAAAA,EAAAA,SAAQ,KAC3B,IAAKs4B,EAAOvF,SAAU,MAAO,CAAEmK,cAAc,EAAOC,OAAQ,uJAC5D,GAAI7E,EAAOpH,SAAW,EAAG,MAAO,CAAEgM,cAAc,EAAOC,OAAQ,0EAC/D,GAAI7E,EAAO7I,cAAgB,EAAG,MAAO,CAAEyN,cAAc,EAAOC,OAAQ,+IACpE,MAAMX,EAAoB,8BAARzO,EAAkB,UAAYqJ,EAC1CgG,EAAW9Q,GAAsB,CAAEwB,SAAQC,MAAKmJ,SAAQoB,SAAQb,MAAKyD,aAAWsB,YAAWa,KAAM,cACjGC,EAAUjB,GAA6BnB,GAAWpN,EAAQC,EAAKyO,EAAWlE,EAAQb,EAAK2F,EAAW,GACxG,IAAI5T,EAAM,EACV,IAAK,IAAIpsB,EAAI,EAAGA,EAvEK,GAuEeA,IAAK,CACvC,MAAMqvB,EAAO2Q,EAAW,IAAW,GAAJhgC,EACzBmgC,EAAoB,IAAKjF,EAAQpH,QAASoH,EAAOpH,QAAU,GAE3DsM,EAAYT,GADDD,GAAmBrQ,EAAMqB,EAAQC,EAAKwP,GACbA,EAAkB/N,OAE5DhG,GADa6S,GAA6BmB,EAAW1P,EAAQC,EAAKyO,EAAWe,EAAmB9F,EAAKhL,EAAO,GAE9G,CACA,MAAMgR,EAAajU,EA/EE,GAgFfqG,EAAQ4N,EAAaH,EACrBI,EAAQ94B,IAAW,IAAJA,GAASsL,QAAQ,GAAK,IAC3C,OAAI2f,EAAQuM,GACH,CAAEc,cAAc,EAAMC,OAAQ,wHAA8BO,EAAKJ,iEAA0BI,EAAKD,aAAiBC,EAAK7N,QACpHA,GAASuM,GACX,CAAEc,cAAc,EAAOC,OAAQ,8HAA+BO,EAAKJ,gEAAyBI,EAAKD,sCAAsBC,GAAM7N,QAE7H,CAAEqN,cAAc,EAAOC,OAAQ,+DAAkBO,EAAKJ,gDAAwBI,EAAKD,kBAAsB,IAAYvtB,QAAQ,UAErI,CAAC4d,EAAQC,EAAKmJ,EAAQoB,EAAQb,EAAKyD,GAAW9D,EAAeiF,KAgIhE,SAASsB,KACP,IAAKnF,EAAY,OACjB,IAAKoF,GAAmE,YAAtDngC,EAAK,iKAAqC,WAC5D07B,IACA,MAAM3I,EACJxE,KAA4C,IAAxBsM,EAAO5I,YAAqB,EAA2B,IAAvB4I,EAAO5I,YAAoB,EAAI,GAC/E0D,EAAS,IAAKkF,EAAO9I,OAC3B+I,EAAWvpB,IACT,MAAMoB,EAAO,IAAKpB,EAAEwgB,OAGpB,MAFuB,MAAnBgJ,EAAWqF,IAAaztB,EAAK0e,MAAQ4J,EACpCtoB,EAAK4e,MAAQ0J,EACX,CACLjJ,aAAczgB,EAAEygB,aAAe,EAC/ByB,QAASliB,EAAEkiB,QACX6B,UAAU,EACVrD,YAAa1gB,EAAE0gB,YACfmD,KAAM7jB,EAAE6jB,KAAOrC,EACfhB,MAAOpf,KAGX,MAAMoqB,EAAQ,IAAKlC,EAAO9I,SAA8B,MAAnBgJ,EAAWqF,IAAc,CAAE/O,MAAO4J,GAAe,CAAE1J,MAAO0J,IAC/FmB,EAAO,CACL3/B,KAAM,SACN8M,MAAO,2CAAawxB,EAAWqF,eAAUnF,IACzCx9B,OAAQq/B,EAAUnH,EAAQoH,GAC1BsD,KAAM,CAAEC,KAAMvN,KAEhBiI,EAAc,MACdh7B,EAAK,oFAAoB,UAC3B,CAEA,SAASugC,KACPvF,EAAc,MACdh7B,EAAK,wEAAkB,UACzB,EAhKAhE,EAAAA,EAAAA,WAAU,KACR,GAAsB,SAAlB29B,GAAoC,8BAARrJ,EAAiB,OACjD,MAAMhiB,EAAO8hB,GAAmBC,EAAQC,GACxC4J,EAAa5uB,IACX,MAAMlH,EAAIkK,EAAKrP,SAASqM,EAAK+lB,QAAyB,6BAAf/lB,EAAK+lB,MAAmB/lB,EAAK+lB,MAAQ/iB,EAAK,GAC3EkyB,EAAalyB,EAAK8C,KAAMvN,GAAMA,IAAMO,IAAMkK,EAAK,GAC/CjK,EAAIiK,EAAKrP,SAASqM,EAAKimB,QAAyB,6BAAfjmB,EAAKimB,OAAoBjmB,EAAKimB,QAAUntB,EAAIkH,EAAKimB,MAAQiP,EAChG,MAAO,CAAEnP,MAAOjtB,EAAGmtB,MAAOltB,MAE3B,CAACs1B,EAAetJ,EAAQC,KAE3Bt0B,EAAAA,EAAAA,WAAU,KACR,IAAKu+B,IAAcE,EAAqD,OAAzCuD,GAAc,WAAOE,GAAa,MACjE,GAAI/E,GAAmBsE,IAErB,OADAO,GAAc,WAAOE,GAAa,MAGpC,MAAMvK,EAAoB8J,GAAUv/B,IAAKihC,GAAOxM,GAAYwM,EAAItE,EAAO9I,QAAQ1zB,OAAQ8I,KAAQA,GACzF43B,EAAoB,8BAARzO,EAAkB,UAAYqJ,EAC1CgG,EAAW9Q,GAAsB,CAAEwB,SAAQC,MAAKmJ,SAAQoB,SAAQb,MAAKrG,oBAAmB8M,SAAkB,8BAARnQ,EAAkB,YAAcqJ,IAClI+G,IAAUtC,GAASxhC,QA2BzB,OA1BAuhC,IAAe,GACXE,GAASzhC,SAAS+jC,aAAatC,GAASzhC,SAC5CyhC,GAASzhC,QAAUmgB,WAAW,KAC5B,MAAM6jB,EAAa,CACjBhN,UAAW8G,EACX3G,UAAW2G,EACX7G,QAASrE,GAAgBkL,GACzB5G,MAAOrE,GAAciL,GACrB1G,UAAW,WACXC,cAAe7G,GACf8G,cAAe7G,GACf8G,oBAAqB,IACrBE,UAAW,CAAC,MAERwM,EAAOtN,GACXlD,EAAQC,EAAKyO,EAAWlE,EAAO9I,MAAOiI,EAAK,kBAC3Ca,EAAO7I,aAAc6I,EAAOpH,QAASoH,EAAO5I,YAAa4I,EAAOvF,SAAU3B,EAAmBgM,EAAW,IAAK3O,EAC7G4P,GAEIE,EAAMvN,GACVlD,EAAQC,EAAKyO,EAAWlE,EAAO9I,MAAOiI,EAAK,aAC3Ca,EAAO7I,aAAc6I,EAAOpH,QAASoH,EAAO5I,YAAa4I,EAAOvF,SAAU3B,EAAmBgM,EAAW,IAAK3O,EAC7G4P,GAEEF,IAAUtC,GAASxhC,UAAWohC,GAAc6C,GAAO3C,GAAa4C,GAAM3C,IAAe,KACxF,GACI,KACDE,GAASzhC,UACX+jC,aAAatC,GAASzhC,SACtByhC,GAASzhC,QAAU,QAGtB,CAACyzB,EAAQC,EAAKmJ,EAAQgB,EAAUI,EAAQb,EAAKO,EAAWkD,GAAW9D,EAAe3I,EAAU0J,KA6G/F1+B,EAAAA,EAAAA,WAAU,KAAQE,SAASqN,MAAQ,gFAAuB,IAE1D,MAAMwb,GAAO,4CACPE,GAAW,mCACXH,GAAe,4CACf2b,GAAmB,8BAARnQ,EAAkB,YAAcqJ,EAG3CoH,GAAkC,IAAvBlG,EAAO5I,YAAoB,SAAkC,IAAxB4I,EAAO5I,YAAqB,QAAU,KACtFkO,GAAYhG,GAAeE,GAAaE,EACxCyG,GAAS7H,GAAmBsE,IAG5BwD,IAAe1+B,EAAAA,EAAAA,SACnB,IAAMk4B,IAAa7c,MAAiBqgB,IAAaF,KACjD,CAACtD,EAAU7c,GAAaqgB,GAAWF,KAG/BmD,IAAkBf,IAAaa,MAAYjG,GAAcF,EAAO7I,cAAgB,EAChFmP,IAAkBhB,MAAepF,GAAcF,EAAO7I,cAAgB,GAAK6I,EAAOpH,SAAW,EAE7F2N,IAAerlC,EAAAA,EAAAA,SAAO,IAE5BC,EAAAA,EAAAA,WAAU,KACHmkC,KACHnE,EAAQ,IACRZ,EAAW,CAAEC,KAAM,GAAIC,OAAQ,OAEhC,CAAC6E,MAEJnkC,EAAAA,EAAAA,WAAU,KACJglC,GACGI,GAAaxkC,UAChBoD,EAAK,yGACLohC,GAAaxkC,SAAU,GAGzBwkC,GAAaxkC,SAAU,GAExB,CAACokC,GAAQhhC,IAEZ,MAAMqhC,IAAa9+B,EAAAA,EAAAA,SAAQ,KACzB,MAAM+L,EAAO8hB,GAAmBC,EAAQC,GACxC,MAAY,8BAARA,EAAwBhiB,EACH,YAAlBqrB,EAA8B,CAAC,8BAAWrrB,GAAQA,GACxD,CAAC+hB,EAAQC,EAAKqJ,IAEjB,OACE7wB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wCAAwCC,MAAO,CAAEkrB,gBAAiB,4CAA6CC,qBAAsB,SAAU3e,SAAA,EAE5J9L,EAAAA,EAAAA,KAAA,SAAA8L,SAAQ,8KAORC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,2CAA0CyM,SAAA,EAEvD9L,EAAAA,EAAAA,KAAA,WAASX,UAAU,eAAcyM,UAC/BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oDAAmDyM,SAAA,EAEhE9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,+GAA8GyM,SAAC,qGAK7HC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iDAAgDyM,SAAA,EAC7D9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,yCAAwCyM,SAAC,iDACzD9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gBAAeyM,UAE5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CACP7D,MAAO4qB,EACPnwB,SAAUowB,EACVv0B,MAAOooB,GACP3a,YAAY,mCACZC,UAAU,eAQpBhL,EAAAA,EAAAA,MAAA,WAAS1M,UAAW,GAAG2oB,WAAalc,SAAA,EAClCC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,EAEtC9L,EAAAA,EAAAA,KAAA,MAAIX,UAAW0oB,GAAajc,SAAC,+BAG7B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,kCAAiCyM,SAC7CsxB,GACCrxB,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EACE9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,yCAAwCyM,SAAC,oDACzDC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,IAAMqxB,GAAe,GAC9Bh+B,UAAU,gGAA+FyM,SAAA,EAEzG9L,EAAAA,EAAAA,KAACukC,GAAAA,EAAK,CAACr4B,KAAM,KAAM,kCAKvBH,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,IAAMqxB,GAAe,GAC9Bh+B,UAAU,gGAA+FyM,SAAA,EAEzG9L,EAAAA,EAAAA,KAACwkC,GAAAA,EAAI,CAACt4B,KAAM,KAAM,oCAQ1BlM,EAAAA,EAAAA,KAAA,OAAKX,UAAU,OAAMyM,UACnBC,EAAAA,EAAAA,MAAA,OACE1M,UAAU,2KAMrByM,SAAA,EAGWC,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,qDAAoD+9B,EAAc,aAAe,IAAKtxB,SAAA,EACpG9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,yBAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,SACV0T,MAAOugB,EACP9lB,SAAWpM,GAAMo7B,EAAUp7B,GAC3BiI,MAAOmI,OAAOC,KAAKqf,IAAW3vB,IAAKuQ,IAAC,CAAQqB,MAAOrB,EAAG3N,MAAO2N,KAC7DoF,YAAY,sBACZxK,SAAU8wB,QAKdrxB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,qDAAoD+9B,EAAc,aAAe,IAAKtxB,SAAA,EACpG9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,kBAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,SACV0T,MAAO2pB,EACPlvB,SAAWpM,GAAMu7B,EAAUv7B,GAC3BiI,MAAO,CAAC,eAAM,eAAM,gBAAMlI,IAAKuQ,IAAC,CAAQqB,MAAOrB,EAAG3N,MAAO2N,KACzDoF,YAAY,eACZxK,SAAU8wB,QAKdrxB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0DAAyDyM,SAAA,EACtE9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,sEAC5BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0EAAyEyM,SAAA,CAAC,8BACjF9L,EAAAA,EAAAA,KAAA,KAAGX,UAAU,OAAMyM,SAAEmlB,GAAgByL,KAAY,+CAAY,KACnE18B,EAAAA,EAAAA,KAAA,KAAGX,UAAU,OAAMyM,SAAEulB,GAAoBqL,KAAY,wBAQ/D3wB,EAAAA,EAAAA,MAAA,WAAS1M,UAAW2oB,GAAKlc,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,EACtC9L,EAAAA,EAAAA,KAAA,MAAIX,UAAW0oB,GAAajc,SAAC,4CAG7B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,kCAAiCyM,SAC7CwxB,GACCvxB,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EACE9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,yCAAwCyM,SAAC,oDAGzDC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,IAAMuxB,GAAa,GAC5Bl+B,UAAU,gGAA+FyM,SAAA,EAEzG9L,EAAAA,EAAAA,KAACukC,GAAAA,EAAK,CAACr4B,KAAM,KAAM,kCAKvBH,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,IAAMuxB,GAAa,GAC5Bl+B,UAAU,gGAA+FyM,SAAA,EAEzG9L,EAAAA,EAAAA,KAACwkC,GAAAA,EAAI,CAACt4B,KAAM,KAAM,oCAQ1BlM,EAAAA,EAAAA,KAAA,OAAKX,UAAU,OAAMyM,UACnBC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,4KAM1ByM,SAAA,EAEaC,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,sCAAqCi+B,EAAY,aAAe,IAAKxxB,SAAA,EACnF9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,qCAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAO3E,EAAIqlB,IACXkI,IAAMv6B,GAAM47B,EAAO,IAAK5uB,EAAKqlB,IAAKlX,GAAMnb,EAAGkwB,GAAUC,MACrDpqB,IAAKmqB,GACL3uB,IAAK4uB,GACLjlB,SAAUgxB,QAKdvxB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,sCAAqCi+B,EAAY,aAAe,IAAKxxB,SAAA,EACnF9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,wBAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAO3E,EAAIslB,IACXiI,IAAMv6B,GAAM47B,EAAO,IAAK5uB,EAAKslB,IAAKnX,GAAMnb,EAAGkwB,GAAUC,MACrDpqB,IAAKmqB,GACL3uB,IAAK4uB,GACLjlB,SAAUgxB,QAKdvxB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,sCAAqCi+B,EAAY,aAAe,IAAKxxB,SAAA,EACnF9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,oBAC5B9L,EAAAA,EAAAA,KAAC+7B,GAAM,CACLhpB,MAAO3E,EAAIkmB,MACXqH,IAAMv6B,GAAM47B,EAAO,IAAK5uB,EAAKkmB,MAAOlzB,IACpC46B,QAASe,EACTzwB,SAAUgxB,EACVxmB,YAAawmB,EAAY,gCAASh9B,QAKtCyL,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,sCAAqCi+B,EAAY,aAAe,IAAKxxB,SAAA,EACnF9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,iCAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAO3E,EAAIulB,KACXgI,IAAMv6B,GAAM47B,EAAO,IAAK5uB,EAAKulB,KAAMpX,GAAMnb,EAAGkwB,GAAUC,MACtDpqB,IAAKmqB,GACL3uB,IAAK4uB,GACLjlB,SAAUgxB,QAKdvxB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,sCAAqCi+B,EAAY,aAAe,IAAKxxB,SAAA,EACnF9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,oBAC5B9L,EAAAA,EAAAA,KAAC+7B,GAAM,CACLhpB,MAAO3E,EAAIomB,MACXmH,IAAMv6B,GAAM47B,EAAO,IAAK5uB,EAAKomB,MAAOpzB,IACpC46B,QAASe,EAAgBz7B,OAAQwF,GAAMA,IAAMsH,EAAIkmB,OACjDhoB,SAAUgxB,EACVxmB,YAAawmB,EAAY,gCAASh9B,QAKtCyL,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,sCAAqCi+B,EAAY,aAAe,IAAKxxB,SAAA,EACnF9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,iCAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAO3E,EAAIwlB,KACX+H,IAAMv6B,GAAM47B,EAAO,IAAK5uB,EAAKwlB,KAAMrX,GAAMnb,EAAGkwB,GAAUC,MACtDpqB,IAAKmqB,GACL3uB,IAAK4uB,GACLjlB,SAAUgxB,gBAQpBvxB,EAAAA,EAAAA,MAAA,WAAS1M,UAAW2oB,GAAKlc,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,EACtC9L,EAAAA,EAAAA,KAAA,MAAIX,UAAW0oB,GAAajc,SAAC,4CAG7B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,4CAA2CyM,SACvD0xB,GACCzxB,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EACE9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,yCAAwCyM,SAAC,oDACzDC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,IAAMyxB,GAAa,GAC5Bp+B,UAAU,gGAA+FyM,SAAA,EAEzG9L,EAAAA,EAAAA,KAACukC,GAAAA,EAAK,CAACr4B,KAAM,KAAM,kCAKvBH,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,IAAMyxB,GAAa,GAC5Bp+B,UAAU,gGAA+FyM,SAAA,EAEzG9L,EAAAA,EAAAA,KAACwkC,GAAAA,EAAI,CAACt4B,KAAM,KAAM,oCAQ1BH,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,yCAAwCm+B,GAAqB,8BAARjK,EAAkB,aAAe,IAAKznB,SAAA,EACzG9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,wBAAuByM,SAAC,4CACxCC,EAAAA,EAAAA,MAAA,SAAO1M,UAAU,iCAAgCyM,SAAA,EAC/C9L,EAAAA,EAAAA,KAAA,SACEN,KAAK,QACLsuB,QAA2B,YAAlB4O,EACTpvB,SAAUA,IAAMqvB,EAAiB,WACjCvwB,SAAUkxB,GAAqB,8BAARjK,EACvBl0B,UAAU,mBACV,2BAGJ0M,EAAAA,EAAAA,MAAA,SAAO1M,UAAU,iCAAgCyM,SAAA,EAC/C9L,EAAAA,EAAAA,KAAA,SACEN,KAAK,QACLsuB,QAA2B,SAAlB4O,EACTpvB,SAAUA,IAAMqvB,EAAiB,QACjCvwB,SAAUkxB,GAAqB,8BAARjK,EACvBl0B,UAAU,mBACV,iBAMNW,EAAAA,EAAAA,KAAA,OAAKX,UAAU,OAAMyM,UACnBC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wKAM1ByM,SAAA,EAEaC,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,mDAAkDm+B,EAAY,aAAe,IAAK1xB,SAAA,EAChG9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,4CAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAOkqB,EAAIxJ,IACXkI,IAAMv6B,GAAM87B,EAAO,IAAKD,EAAKxJ,IAAKlX,GAAMnb,EAAGkwB,GAAUC,MACrDpqB,IAAKmqB,GACL3uB,IAAK4uB,GACLjlB,SAAUkxB,QAKdzxB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,mDAAkDm+B,EAAY,aAAe,IAAK1xB,SAAA,EAChG9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,+BAC5B9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAOkqB,EAAIvJ,IACXiI,IAAMv6B,GAAM87B,EAAO,IAAKD,EAAKvJ,IAAKnX,GAAMnb,EAAGkwB,GAAUC,MACrDpqB,IAAKmqB,GACL3uB,IAAK4uB,GACLjlB,SAAUkxB,QAKdzxB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,+DAA8Dm+B,EAAY,aAAe,IAAK1xB,SAAA,EAC5G9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,+BAC5B9L,EAAAA,EAAAA,KAAC4W,GAAQ,CACPvX,UAAU,sBACV0T,MAAOwgB,EACP/lB,SAAWpM,GAAMq7B,EAAOr7B,GACxBiI,MAAO,CAAC,4BAAS,qBAAO,sBAAOlI,IAAIuQ,IAAC,CAAOqB,MAAOrB,EAAG3N,MAAO2N,KAC5DoF,YAAY,4BACZxK,SAAUkxB,OAKb,MACC,MAAMiH,EAAkBjH,GAAqB,8BAARjK,EAC/BmR,EAAiBD,GAAqC,SAAlB7H,EACpC+H,EAASF,EAAkB,aAAe,GAC1CG,EAAUF,EAAiB,aAAe,GAChD,OACE34B,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EAEEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,sCAAqCm+B,GAAqB,8BAARjK,EAAkB,aAAe,IAAKznB,SAAA,EACtG9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,iCAC5B9L,EAAAA,EAAAA,KAAC+7B,GAAM,CACLhpB,MAAOkhB,EAASK,MAChBqH,IAAMv6B,GAAM+7B,EAAar7B,IAAC,IAAWA,EAAGwyB,MAAOlzB,KAC/C46B,QAA2B,SAAlBY,EACL0H,GAAWhjC,OAAQwF,GAAMA,IAAMmtB,EAASO,OACxC8P,GACJh4B,SAAUkxB,GAAqB,8BAARjK,QAK3BxnB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,kDAAkDslC,IAAS74B,SAAA,EACzE9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAnZ7B,qDAoZE9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAOkqB,EAAItJ,KACXgI,IAAMv6B,GAAM87B,EAAO,IAAKD,EAAKtJ,KAAMpX,GAAMnb,EAAGkwB,GAAUC,MACtDpqB,IAAKmqB,GACL3uB,IAAK4uB,GACLjlB,SAAUm4B,QAKd14B,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,sCAAsCm+B,GAAqB,8BAARjK,GAAqC,SAAlBqJ,EAA4B,aAAe,IAAK9wB,SAAA,EACpI9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SAAC,iCAC5B9L,EAAAA,EAAAA,KAAC+7B,GAAM,CACLhpB,MAAOkhB,EAASO,MAChBmH,IAAMv6B,GAAM+7B,EAAar7B,IAAC,IAAWA,EAAG0yB,MAAOpzB,KAC/C46B,QAA2B,SAAlBY,EACL0H,GAAWhjC,OAAQwF,GAAMA,IAAMmtB,EAASK,OACxCgQ,GACJh4B,SAAUkxB,GAAqB,8BAARjK,GAAqC,SAAlBqJ,QAK9C7wB,EAAAA,EAAAA,MAAA,OAAK1M,UAAW,kDAAkDulC,IAAU94B,SAAA,EAC1E9L,EAAAA,EAAAA,KAAA,SAAOX,UAAW6oB,GAASpc,SA3a7B,qDA4aE9L,EAAAA,EAAAA,KAAC6b,GAAW,CACV9I,MAAOkqB,EAAIrJ,KACX+H,IAAMv6B,GAAM87B,EAAO,IAAKD,EAAKrJ,KAAMrX,GAAMnb,EAAGkwB,GAAUC,MACtDpqB,IAAKmqB,GACL3uB,IAAK4uB,GACLjlB,SAAUo4B,SAKnB,EA1DA,YAgEP34B,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sDAAqDyM,SAAA,EAElEC,EAAAA,EAAAA,MAAA,WAAS9L,IAAKshC,GAAQliC,UAAW,iBAAmB2oB,GAAKlc,SAAA,EAEvDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,EACtC9L,EAAAA,EAAAA,KAAA,MAAIX,UAAW0oB,GAAajc,SAAC,iDAC7B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,kCAAiCyM,UAC9CC,EAAAA,EAAAA,MAAA,UACEC,QArfhB,WACEizB,EAAQ,IACRZ,EAAW,CAAEC,KAAM,GAAIC,OAAQ,KAC/BR,EAAU,CAAE9I,aAAchE,GAAgByL,GAAShG,QAASrF,GAAoBqL,GAASnE,UAAU,EAAOrD,YAAa,EAAGmD,KAAM,EAAGrD,MAAO,IAAK5mB,IACjJ,EAkfgB/O,UAAU,gGAA+FyM,SAAA,EAEzG9L,EAAAA,EAAAA,KAAC6kC,GAAAA,EAAS,CAAC34B,KAAM,KAAM,6DAO7BH,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6BAA4ByM,SAAA,CAAC,6EACxB9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,+DAAiB,oDAIxCC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,aAAYyM,SAAA,EAEzBC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iCAAgCyM,SAAA,EAC7C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6BAA4ByM,SAAC,sCAG5CC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iCAAgCyM,SAAA,EAE7CC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,yFAAwFyM,SAAA,EACrG9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wBAAuByM,SAAC,qCACvC9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wBAAuByM,SAAEgyB,EAAO9I,MAAMvB,UAIvD1nB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,yFAAwFyM,SAAA,EACrG9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wBAAuByM,SAAC,qDACvC9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wBAAuByM,SAAEgyB,EAAO9I,MAAMtB,UAKrD1zB,EAAAA,EAAAA,KAAA,OAAKX,UAAU,yFAAwFyM,SAChF,OAAV,OAAVkyB,QAAU,IAAVA,OAAU,EAAVA,EAAYqF,MACXt3B,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EACE9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,SAAQyM,UACrB9L,EAAAA,EAAAA,KAAC+7B,GAAM,CACLhpB,MAAOmrB,EACPvC,IAAKwC,EACLnC,QAASgC,EAAWhC,aAGxBjwB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,yBAAwByM,SAAA,EACrC9L,EAAAA,EAAAA,KAAA,UAAQgM,QAASm3B,GACf9jC,UAAU,yEAAwEyM,SAAC,kBAGrF9L,EAAAA,EAAAA,KAAA,UAAQgM,QAASw3B,GACfnkC,UAAU,+DAA8DyM,SAAC,wBAM/EC,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EACE9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wBAAuByM,SAAEgyB,EAAO9I,MAAMV,SACrDvoB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wBAAuByM,SAAA,CAAC,OAAKgyB,EAAO9I,MAAMrB,cAQ/D3zB,EAAAA,EAAAA,KAAA,OAAKX,UAAU,yFAAwFyM,SAChF,OAAV,OAAVkyB,QAAU,IAAVA,OAAU,EAAVA,EAAYqF,MACXt3B,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EACE9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,SAAQyM,UACrB9L,EAAAA,EAAAA,KAAC+7B,GAAM,CACLhpB,MAAOmrB,EACPvC,IAAKwC,EACLnC,QAASgC,EAAWhC,aAGxBjwB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,yBAAwByM,SAAA,EACrC9L,EAAAA,EAAAA,KAAA,UAAQgM,QAASm3B,GACf9jC,UAAU,yEAAwEyM,SAAC,kBAGrF9L,EAAAA,EAAAA,KAAA,UAAQgM,QAASw3B,GACfnkC,UAAU,+DAA8DyM,SAAC,wBAM/EC,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EACE9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wBAAuByM,SAAEgyB,EAAO9I,MAAMR,SACrDzoB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wBAAuByM,SAAA,CAAC,OAAKgyB,EAAO9I,MAAMpB,iBAQnE7nB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,uDAAsDyM,SAAA,CAClEgyB,EAAO7I,cAAgB,GACtBj1B,EAAAA,EAAAA,KAAA,OAAKX,UAAU,qIAAoIyM,SAAC,oEAIpJC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,kDAAiDyM,SAAA,EAC9DC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,8CAA6CyM,SAAA,CAAC,2CAClD9L,EAAAA,EAAAA,KAAA,KAAGX,UAAU,OAAMyM,SAAEgyB,EAAO7I,mBAEvClpB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,8CAA6CyM,SAAA,CAAC,2CAClD9L,EAAAA,EAAAA,KAAA,KAAGX,UAAU,OAAMyM,SAAEgyB,EAAOpH,cAEvC3qB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,8CAA6CyM,SAAA,CAAC,wDAC/C9L,EAAAA,EAAAA,KAAA,KAAGX,UAAU,OAAMyM,SAAEk4B,YAIvCj4B,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,8CAA6CyM,SAAA,CAAC,8BACrD9L,EAAAA,EAAAA,KAAA,KAAGX,UAAU,OAAMyM,SAAE+mB,GAAOiL,EAAOzF,QAAU,eAMzDtsB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,sCAAqCyM,SAAA,EAClD9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6BAA4ByM,SAAC,gEAG5C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wCAAuCyM,SACnD40B,GAAUv/B,IAAI,CAAC4C,EAAOqkB,KACrBrc,EAAAA,EAAAA,MAAA,OAAe1M,UAAU,iDAAgDyM,SAAA,EACvEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6BAA4ByM,SAAA,CAAC,gBAAIsc,EAAM,MACtDrc,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,EAEtC9L,EAAAA,EAAAA,KAAC+7B,GAAM,CACLhpB,MAAOhP,EACP43B,IAAMv6B,IACJ,MAAM0jC,EAAK,IAAIpE,IACfoE,EAAG1c,GAAOhnB,EACVu/B,GAAamE,IAEf9I,QAASqE,MAGXrgC,EAAAA,EAAAA,KAAA,UACEgM,QAASA,IAxsBjC,SAAqB+4B,GACnB,IAAK3B,GAA8E,YAAjEngC,EAAK,qMAAgD,WAEvE,GADA07B,KACKnB,EAAyC,YAA5Bv6B,EAAK,uFACvB,GAAI66B,EAAO7I,cAAgB,EAAG,OAC9B,GAAImH,GAAmBsE,IAA6C,YAA/Bz9B,EAAK,yGAC1C,MAAMc,EAAQ28B,GAAUqE,GACxB,IAAK1E,GAAgBn+B,SAAS6B,GAA8C,YAApCd,EAAK,6HAC7C,MAAM+hC,EAASpP,GAAY7xB,EAAO+5B,EAAO9I,OACzC,IAAKgQ,EAAkC,YAAxB/hC,EAAK,oEAEpB,GAAoB,aAAhB+hC,EAAO5P,MAAuC,aAAhB4P,EAAO5P,KAAqB,CAC5D,MACMlB,EADQb,GAAmBC,EAAQ,6BACtBhyB,OAAQwF,GAAMA,IAAMg3B,EAAO9I,MAAMV,OAASxtB,IAAMg3B,EAAO9I,MAAMR,OAChF,OAAIN,EAAK7zB,QAAU,OAAK4C,EAAK,oIAC7Bg7B,EAAc,CAAEoF,IAAqB,aAAhB2B,EAAO5P,KAAsB,IAAM,IAAK4G,QAAS9H,IACtEiK,EAAcjK,EAAK,SACnBjxB,EAAK,2NAAkD,QAEzD,CAEA,GAAI66B,EAAO7I,cAAgB,EAEzB,YADAhyB,EAAK,gHAA4B,WAInC,MAAM21B,EAAS,IAAKkF,EAAO9I,OACrB0D,EAAM7C,GAAUvC,EAAQC,EAAKuK,EAAO9I,MAAOgQ,EAAQlH,EAAO5I,aAC1D+P,EAAmBnH,EAAO7I,aAAe,EAE/C8I,EAAWvpB,IAAC,CACVygB,aAAcgQ,EACdvO,QAASliB,EAAEkiB,QAAUgC,EAAIxC,YACzBqC,UAAU,EACVrD,YAAawD,EAAIzC,SACjBoC,KAAM7jB,EAAE6jB,KAAOK,EAAI1C,gBACnBhB,MAAO0D,EAAI9iB,QAGbypB,EAAO,CACL3/B,KAAM,QACN8M,MAAO,gBAAMu4B,EAAU,mBAAShhC,IAChCrD,OAAQq/B,EAAUnH,EAAQF,EAAI9iB,MAC9B0tB,KAAM,CAAEC,KAAM7K,EAAI1C,gBAAiBf,aAAcgQ,EAAkB/O,YAAawC,EAAIxC,eAGlF+O,EAAmB,GACrBhiC,EAAK,6MAA8C,UAEvD,CAupBuCiiC,CAAY9c,GAC3B,gBAAe+b,GACf9kC,UAAW,wOAET8kC,GAAiB,gCAAkC,kCACnDF,GAAS,gCAAkC,KAAKn4B,SACnD,sBArBKsc,OA8Bdrc,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,yCAAwCyM,SAAA,EACrDC,EAAAA,EAAAA,MAAA,UAAQC,QArqBxB,WACOo3B,GACDtF,EAAO7I,cAAgB,EAAKhyB,EAAK,0IAChC66B,EAAOvF,SACRuF,EAAOpH,SAAW,EAAKzzB,EAAK,wFAChC07B,IACAZ,EAAWvpB,IAAC,IAAWA,EAAGkiB,QAASliB,EAAEkiB,QAAU,KAC/C2I,EAAO,CACL3/B,KAAM,SACN8M,MAAO,sDACP9L,OAAQ,uDAAeo9B,EAAOpH,QAAU,aAPlBzzB,EAAK,4IAFXA,EAAK,iKAAqC,UAW9D,EAypB2CqJ,SAAU83B,GACnC/kC,UAAW,+BAA+B+kC,GAAiB,gCAAkC,6DAA6Dt4B,SAAA,EAC1J9L,EAAAA,EAAAA,KAACmlC,GAAAA,EAAU,CAACj5B,KAAM,KAAM,0CACd4xB,EAAOpH,QAAQ,aAE3B12B,EAAAA,EAAAA,KAAA,QAAMX,UAAU,wBAAuByM,SACpCgyB,EAAO7I,cAAgB,EACpB,4BACC6I,EAAOvF,SAENuF,EAAOpH,SAAW,EAChB,sDACC+L,GAAaC,aAAe,sDAAgB,4DAH/C,wEAQT5E,EAAOvF,UAAYuF,EAAOpH,QAAU,IACnC12B,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6BAA4ByM,SAAE22B,GAAaE,mBAOlE52B,EAAAA,EAAAA,MAAA,WACE1M,UAAW,GAAG2oB,0BACd1oB,MAAOkiC,GAAU,CAAE4D,UAAW5D,SAAYlhC,EAAUwL,SAAA,EAEpDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,EACtC9L,EAAAA,EAAAA,KAAA,MAAIX,UAAW0oB,GAAajc,SAAC,+BAE7BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,kCAAiCyM,SAAA,EAC9C9L,EAAAA,EAAAA,KAAA,UACEgM,QAASwzB,EACTlzB,UAAWwyB,EACXz/B,UAAW,uCAAwCy/B,EAA4C,4BAAlC,yEAC7DtyB,MAAM,wCAAmBV,UAEzB9L,EAAAA,EAAAA,KAACqlC,GAAAA,EAAK,CAACn5B,KAAM,QAEflM,EAAAA,EAAAA,KAAA,UACEgM,QAAS0zB,EACTpzB,UAAWyyB,EACX1/B,UAAW,+BAAgC0/B,EAA4C,4BAAlC,yEACrDvyB,MAAM,8CAAyBV,UAE/B9L,EAAAA,EAAAA,KAACslC,GAAAA,EAAK,CAACp5B,KAAM,aAMF,IAAhB8yB,EAAK3+B,QACJL,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6BAA4ByM,SAAC,kDAE5C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,8CAA6CyM,SACzDkzB,EAAK79B,IAAK4/B,IACTh1B,EAAAA,EAAAA,MAAA,OAAgB1M,UAAU,iCAAgCyM,SAAA,EACxDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oCAAmCyM,SAAA,EAChD9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,sBAAqByM,SACjCi1B,EAAEv0B,SAELxM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,4BAA2ByM,SAAEi1B,EAAExB,UAEhDwB,EAAErgC,SACDV,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6BAA4ByM,SAAEi1B,EAAErgC,SAEhDqgC,EAAEuC,OACDv3B,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wDAAuDyM,SAAA,CACnE,SAAUi1B,EAAEuC,OACXv3B,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,6CAA4CyM,SAAA,CAAC,gBACvD+mB,GAAOkO,EAAEuC,KAAKC,MAAM,QAG3B,iBAAkBxC,EAAEuC,OACnBv3B,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,6CAA4CyM,SAAA,CAAC,6BACpDi1B,EAAEuC,KAAKrO,aAAa,YAG9B,gBAAiB8L,EAAEuC,MAA+B,IAAvBvC,EAAEuC,KAAKpN,cACjCnqB,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,6CAA4CyM,SAAA,CAAC,0CACjDi1B,EAAEuC,KAAKpN,YAAc,EAAI,IAAI6K,EAAEuC,KAAKpN,cAAgB6K,EAAEuC,KAAKpN,oBAxBrE6K,EAAEvyB,cAqCtBzC,EAAAA,EAAAA,MAAA,WAAS1M,UAAW2oB,GAAKlc,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,EACtC9L,EAAAA,EAAAA,KAAA,MAAIX,UAAW0oB,GAAajc,SAAC,+BAE7B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,kCAAiCyM,UAC9CC,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,4EAA2EyM,SAAA,CAAC,eAC7E+mB,GAAOnwB,KAAKC,KAAa,OAATu+B,SAAS,IAATA,QAAS,EAATA,GAAW3H,aAAc,GAAa,OAAVyH,SAAU,IAAVA,QAAU,EAAVA,GAAYzH,aAAc,IAAI,SAC7E,OAAT2H,SAAS,IAATA,IAAa,QAAJ3E,EAAT2E,GAAW1H,UAAE,IAAA+C,GAAbA,EAAe5C,UACZ,UAAgC,IAAzBuH,GAAU1H,GAAGG,WAAiBjkB,QAAQ,aAC7C,WAMTwuB,IACCn4B,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,iBAAgByM,SAAA,EAE7B9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6BAA4ByM,SAAC,+FAC5C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,yBAAwByM,SACpC,IAAIwG,MAAM,IAAInR,IAAI,CAACod,EAAG3b,KACrB5C,EAAAA,EAAAA,KAAA,OAEEX,UAAU,iDADLuD,OAMX5C,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6CAA4CyM,SACxD,CAAC,EAAG,GAAG3K,IAAKuQ,IACX3F,EAAAA,EAAAA,MAAA,OAAa1M,UAAU,iCAAgCyM,SAAA,EACrD9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gDACfW,EAAAA,EAAAA,KAAA,OAAKX,UAAU,sDACfW,EAAAA,EAAAA,KAAA,OAAKX,UAAU,uDACfW,EAAAA,EAAAA,KAAA,OAAKX,UAAU,sDAJPqS,UAUhB3F,EAAAA,EAAAA,MAAAyjB,EAAAA,SAAA,CAAA1jB,SAAA,EAEEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6BAA4ByM,SAAA,EACzC9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6BAA4ByM,SAAC,+FAC5C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,yBAAwByM,SACpC40B,GAAUv/B,IAAI,CAAC4/B,EAAGn+B,KACjB5C,EAAAA,EAAAA,KAAA,QAEEX,UAAU,oFAAmFyM,SAE5Fi1B,GAHIn+B,SAUZs+B,IAAaF,KACZj1B,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6CAA4CyM,SAAA,EAEzDC,EAAAA,EAAAA,MAACyN,EAAAA,EAAOkC,IAAG,CACT/B,QAAS,CAAEC,QAAS,EAAGvP,EAAG,GAC1BwP,QAAS,CAAED,QAAS,EAAGvP,EAAG,GAC1B0P,WAAY,CAAEC,SAAU,KACxB3a,UAAU,iCAAgCyM,SAAA,EAE1CC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oCAAmCyM,SAAA,EAChD9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gDAA+CyM,SAAC,4CAG/D9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,4DAA2DyM,SAC3D,cAAb43B,GACG,sDACa,YAAbA,GACE,iFACA,uFAKV33B,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,6CAA4CyM,SAAA,EACzDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,qDAAoDyM,SAAA,EACjEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oCAAmCyM,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wBAAuByM,SAAA,CAAC,yDACtB+mB,GAAOmO,GAAW5N,WAAW,YAAKP,GAAOmO,GAAWzH,YAAY,cAC3E,+BACRv5B,EAAAA,EAAAA,KAAA,OAAKX,UAAU,0BAAyByM,SACrC6mB,GAAaqO,GAAW5K,YAAa4K,GAAWxH,OAEnDx5B,EAAAA,EAAAA,KAAA,OAAKX,UAAU,2DAA0DyM,UACvE9L,EAAAA,EAAAA,KAACwZ,EAAAA,EAAOkC,IAAG,CACT/B,QAAS,CAAEjP,MAAO,GAClBmP,QAAS,CAAEnP,MAAO,GAAGhI,KAAKuI,MAA+B,IAAzB+1B,GAAW5K,iBAC3Crc,WAAY,CAAEra,KAAM,SAAUic,UAAW,IAAKC,QAAS,IACvDvc,UAAU,0DAIb,MACC,MAAMkmC,EAAMzS,GAAekO,GAAWjO,aAAciO,GAAW5K,aACzDoP,EAAQvS,GAAY+N,GAAW5K,aACrC,OACErqB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,+DAA8DyM,SAAA,EAC3EC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,yBACE9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,6BAAQ,MAAE9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAItF,OAAOC,SAAS8+B,GAAO1S,GAAOnwB,KAAKuI,MAAMs6B,IAAQ,WAAQ,SAElFx5B,EAAAA,EAAAA,MAAA,QAAM1M,UAAW,iCAAiCmmC,EAAMtS,OAAOpnB,SAAA,CAAC,6BACvD05B,EAAMzhC,UAEf/D,EAAAA,EAAAA,KAAA,QAAMX,UAAU,4BAA2ByM,SAAC,4GAKjD,EAhBA,OAoBHC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,qDAAoDyM,SAAA,EACjE9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,oCAAmCyM,UAChDC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wBAAuByM,SAAA,CAAC,yDACtB+mB,GAAOqO,GAAU9N,WAAW,YAAKP,GAAOqO,GAAU3H,YAAY,iBAGjFv5B,EAAAA,EAAAA,KAAA,OAAKX,UAAU,0BAAyByM,SAAE8mB,GAAQsO,GAAU9K,gBAC5Dp2B,EAAAA,EAAAA,KAAA,OAAKX,UAAU,2DAA0DyM,UACvE9L,EAAAA,EAAAA,KAACwZ,EAAAA,EAAOkC,IAAG,CACT/B,QAAS,CAAEjP,MAAO,GAClBmP,QAAS,CAAEnP,MAAO,GAAGhI,KAAKuI,MAA8B,IAAxBi2B,GAAU9K,iBAC1Crc,WAAY,CAAEra,KAAM,SAAUic,UAAW,IAAKC,QAAS,IACvDvc,UAAU,0DAIb,MACC,MAAMkmC,EAAMzS,GAAeoO,GAAUnO,aAAcmO,GAAU9K,aACvDoP,EAAQvS,GAAYiO,GAAU9K,aACpC,OACErqB,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,+DAA8DyM,SAAA,EAC3EC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,yBACE9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,6BAAQ,MAAE9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAItF,OAAOC,SAAS8+B,GAAO1S,GAAOnwB,KAAKuI,MAAMs6B,IAAQ,WAAQ,SAElFx5B,EAAAA,EAAAA,MAAA,QAAM1M,UAAW,iCAAiCmmC,EAAMtS,OAAOpnB,SAAA,CAAC,6BACvD05B,EAAMzhC,UAEf/D,EAAAA,EAAAA,KAAA,QAAMX,UAAU,4BAA2ByM,SAAC,4GAKjD,EAhBA,aAsBPC,EAAAA,EAAAA,MAACyN,EAAAA,EAAOkC,IAAG,CACT/B,QAAS,CAAEC,QAAS,EAAGvP,EAAG,GAC1BwP,QAAS,CAAED,QAAS,EAAGvP,EAAG,GAC1B0P,WAAY,CAAEC,SAAU,IAAKyrB,MAAO,KACpCpmC,UAAU,iCAAgCyM,SAAA,EAE1C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gDAA+CyM,SAAC,8BAK9D,MACC,IAAKo1B,GAAW,OAAO,KACvB,MAAMwE,EAAS,CACb,CAAE5zB,IAAK,aAAcwV,KAAM,sBAAahhB,EAAGE,OAAO06B,GAAU7K,YAAc,GAAIsP,KAAMxK,GAAgBC,QACpG,CAAEtpB,IAAK,YAAawV,KAAM,uBAAchhB,EAAGE,OAAO06B,GAAU5K,WAAa,GAAIqP,KAAMxK,GAAgBE,OACnG,CAAEvpB,IAAK,cAAewV,KAAM,qBAAYhhB,EAAGE,OAAO06B,GAAU3K,aAAe,GAAIoP,KAAMxK,GAAgBG,UAEvG,OACEt7B,EAAAA,EAAAA,KAAA,OAAKX,UAAU,yBAAwByM,SACpC45B,EAAOvkC,IAAI+G,IACV6D,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oCAAmCyM,SAAA,EAChD9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,gBAAeyM,SAAE5D,EAAEof,QACnCvb,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,0BAAyByM,SAAA,CAErCqmB,GAAUjqB,EAAE5B,KACXtG,EAAAA,EAAAA,KAAA,QAAMX,UAAU,8FAA6FyM,SAAC,kBAIhH9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAI8mB,GAAQ1qB,EAAE5B,YAGlBtG,EAAAA,EAAAA,KAAA,OAAKX,UAAU,2DAA0DyM,UACvE9L,EAAAA,EAAAA,KAACwZ,EAAAA,EAAOkC,IAAG,CACT/B,QAAS,CAAEjP,MAAO,GAClBmP,QAAS,CAAEnP,MAAOynB,GAAUjqB,EAAE5B,GAAK,OAAStC,GAAIkE,EAAE5B,IAClDyT,WAAY,CAAEra,KAAM,SAAUic,UAAW,IAAKC,QAAS,IACvDvc,UAAU,0BACVC,MAAO,CAAEkrB,gBAAiBtiB,EAAEy9B,YAnBxBz9B,EAAE4J,OA0BnB,EApCA,GAuCA,MACC,MAAM,MAAEmB,EAAK,MAAE2yB,GAxqDrC,SAAwB7B,GAAoB,IAAf8B,EAAGzlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACjC,IAAK2jC,EAAK,MAAO,CAAE9wB,MAAO,GAAI2yB,MAAO,IACrC,IAAItxB,EAAM,CACR,CAAExC,IAAK,aAAc/N,MAAO,eAAMuC,EAAGE,OAAOu9B,EAAI1N,YAAc,GAAIsP,KAAMxK,GAAgBC,QACxF,CAAEtpB,IAAK,YAAa/N,MAAO,eAAMuC,EAAGE,OAAOu9B,EAAIzN,WAAa,GAAIqP,KAAMxK,GAAgBE,OACtF,CAAEvpB,IAAK,cAAe/N,MAAO,eAAMuC,EAAGE,OAAOu9B,EAAIxN,aAAe,GAAIoP,KAAMxK,GAAgBG,UAG5F,GADAhnB,EAAMA,EAAIhT,OAAO+J,IAAO6mB,GAAW7mB,EAAG/E,KACjCgO,EAAIjU,OAAQ,MAAO,CAAE4S,MAAO,GAAI2yB,MAAO,IAC5CtxB,EAAIgB,KAAK,CAACjO,EAAGC,IAAMA,EAAEhB,EAAIe,EAAEf,GAC3B,MAAMs/B,EAAQ,GACd,IAAK,IAAIhjC,EAAI,EAAGA,EAAI0R,EAAIjU,OAAS,EAAGuC,IAAK,CACvC,MAAMkjC,EAAOxxB,EAAI1R,GAAG0D,EAAIgO,EAAI1R,EAAI,GAAG0D,EACnCs/B,EAAM3iC,KAAKP,KAAK2L,IAAIy3B,IAASD,EAAM,IAAM,IAC3C,CACA,MAAO,CAAE5yB,MAAOqB,EAAKsxB,QACvB,CAwpD+CG,CAAe7E,IACxC,OAAKjuB,EAAM5S,QAET0L,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,8BAA6ByM,SAAA,EAC1C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6BAA4ByM,SAAC,kDAC5C9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,sCAAqCyM,SACjDmH,EAAM9R,IAAI,CAACkK,EAAI+c,KACdrc,EAAAA,EAAAA,MAAChD,EAAAA,SAAc,CAAA+C,SAAA,EACbC,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,kFAAiFyM,SAAA,EAC/F9L,EAAAA,EAAAA,KAAA,QACEX,UAAU,qDACVC,MAAO,CAAEkrB,gBAAiBnf,EAAGs6B,SAE/B55B,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,UAASyM,SAAA,CACtBT,EAAGtH,MAAOouB,GAAU9mB,EAAG/E,GAAK,kBAAU,SAG1C8hB,EAAMnV,EAAM5S,OAAS,IACpBL,EAAAA,EAAAA,KAAA,QAAMX,UAAU,mCAAkCyM,SAChC,MAAf85B,EAAMxd,GAAe,SAAM,aAZb/c,EAAGyG,WANN,IA0B3B,EA5BA,mBAsCf9R,EAAAA,EAAAA,KAACob,GAAU,CAACE,OAAQA,EAAQ9X,QAASsc,KAGrC9f,EAAAA,EAAAA,KAAA,OAAKX,UAAU,OAAMyM,UACnB9L,EAAAA,EAAAA,KAACmwB,EAAAA,EAAU,QAKnB,C,0oRClvEM6V,IAZY1zB,MAAMC,QAAQ0zB,IAC5BA,GACA3zB,MAAMC,QAAuB,OAAf0zB,SAAe,IAAfA,QAAe,EAAfA,GAAiBC,OAC7BD,GAAgBC,MAChB,IASH/kC,IAAK2F,IAE+B,IAADq/B,EAAAC,EAAlC,GAAIt/B,IAAMA,EAAE0F,OAAS1F,EAAEu/B,UACrB,MAAO,CACL75B,MAAc,QAAT25B,EAAEr/B,EAAE0F,aAAK,IAAA25B,EAAAA,EAAI,GAClBG,KAAY,QAARF,EAAEt/B,EAAEw/B,YAAI,IAAAF,EAAAA,EAAI,GAChBC,SAAU/zB,MAAMC,QAAQzL,EAAEu/B,UACtBv/B,EAAEu/B,SAASllC,IAAKJ,IAAC,IAAAwlC,EAAA,MAAM,CACvBC,QAAkB,QAAXD,EAAExlC,EAAEylC,eAAO,IAAAD,EAAAA,EAAI,GACtBE,QAASn0B,MAAMC,QAAQxR,EAAE0lC,SAAW1lC,EAAE0lC,QAAU,MAEhD,IAKR,MAAMj6B,GACF,OAAD1F,QAAC,IAADA,OAAC,EAADA,EAAG0F,QAASxL,OAAO8F,EAAE0F,SACpB,OAAD1F,QAAC,IAADA,GAAAA,EAAG4/B,IAAM,MAAM5/B,EAAE4/B,cAAgB,UAC9Br9B,EAAQiJ,MAAMC,QAAS,OAADzL,QAAC,IAADA,OAAC,EAADA,EAAGuC,OAASvC,EAAEuC,MAAQ,GAClD,MAAO,CACLmD,QACA85B,MAAO,OAADx/B,QAAC,IAADA,OAAC,EAADA,EAAGw/B,OAAQ,GACjBD,SAAU,CACR,CACEG,QAAS,GACTC,QAASp9B,OAMhBiM,KAAK,CAACjO,EAAGC,IAAMtG,OAAOsG,EAAEg/B,MAAMK,cAAc3lC,OAAOqG,EAAEi/B,QAElDM,GAAgB,sBAEhBC,GAAc//B,GAAOA,EAAI,GAAGA,EAAE0F,OAAS,MAAM1F,EAAEw/B,MAAQ,KAAO,GA2CpE,SAASQ,GAAU3mC,GAAqB,IAAhBT,EAAIU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAC7B,IAEEF,EADyB,kBAARC,EAAmBA,EAAM6V,KAAKiO,UAAU9jB,GAC5CT,EACf,CAAE,MACAQ,EAAUc,OAAOb,GAAMT,EACzB,CACF,CAGA,SAASqnC,GAAY1jC,GAAqB,IAAD2jC,EAAAC,EAAA,IAAnB,KAAE1jC,EAAI,QAAEC,GAASH,EACrC,MAAOmJ,EAAO06B,GAAYn+B,EAAAA,SAAe,KAClC6G,EAAMu3B,GAAWp+B,EAAAA,SAAe,KAChC4E,EAAOy5B,GAAYr+B,EAAAA,SAAe,KAClCs+B,EAASC,GAAcv+B,EAAAA,UAAe,GAGvCw+B,EAEiB,qBAAbpoC,WAC8C,QADtB6nC,EAC9B7nC,SAASob,cAAc,qCAA6B,IAAAysB,OAAA,EAApDA,EAAsDQ,aAAa,aAClD,qBAAXjnC,QAA0BA,OAAOknC,mBACzC,GAEIC,EAEiB,qBAAbvoC,WACgD,QADxB8nC,EAC9B9nC,SAASob,cAAc,uCAA+B,IAAA0sB,OAAA,EAAtDA,EAAwDO,aAAa,aACpD,qBAAXjnC,QAA0BA,OAAOonC,qBACzC,GAIIC,EAAQ,SACRC,EAAW,CAAC,YAAa,aAAc,aAAc,aAE3D9+B,EAAAA,UAAgB,KACd,IAAKxF,EAAM,OACX,MAAMq8B,EAAS51B,IAAsB,WAAVA,EAAE8H,MAAyB,OAAPtO,QAAO,IAAPA,GAAAA,MAE/C,OADAjD,OAAOkI,iBAAiB,UAAWm3B,GAC5B,IAAMr/B,OAAOmI,oBAAoB,UAAWk3B,IAClD,CAACr8B,EAAMC,IAEV,MAAMskC,EAAe99B,IAAO,IAAD+9B,EACzB,MAAMC,EAAS11B,MAAMsZ,MAAM,OAAD5hB,QAAC,IAADA,GAAS,QAAR+9B,EAAD/9B,EAAG0D,cAAM,IAAAq6B,OAAR,EAADA,EAAWp6B,QAAS,IAC9C,IAAKq6B,EAAO3nC,OAAQ,OAEpB,IAAIuV,EAAO,IAAIjI,GACf,IAAK,MAAMnC,KAAKw8B,EACd,GAAKH,EAAS3lC,SAASsJ,EAAE9L,MAIzB,GAAI8L,EAAEU,KArBO,QAsBX46B,GAAU,gBAAMt7B,EAAE8b,+DAAwB,eAD5C,CAIA,GAAI1R,EAAKvV,QA1BK,EA0BgB,CAC5BymC,GAAU,0GAAsC,WAChD,KACF,CACAlxB,EAAK3S,KAAKuI,EALV,MANEs7B,GAAU,4GAA4C,WAcxClxB,EAAKmZ,OAAO,CAAChuB,EAAGyK,IAAMzK,EAAIyK,EAAEU,KAAM,GACpC07B,EACdd,GAAU,6GAAwD,YAIpEM,EAASxxB,GACL5L,GAAKA,EAAE0D,SAAQ1D,EAAE0D,OAAOqF,MAAQ,MA6CtC,OACE/S,EAAAA,EAAAA,KAAA,OACEwO,GAAG,gBACHnP,UAAU,8FACVwS,KAAK,SACL,aAAW,OACX,cAAatO,EAAO,QAAU,OAC9ByI,QAASxI,EACTlE,MAAO,CAELsa,QAASrW,EAAO,EAAI,EACpB0kC,WAAY1kC,EAAO,UAAY,SAC/BiM,cAAejM,EAAO,OAAS,OAE/B2kC,gBAAiB,mBACjBC,eAAgB,aAChBr8B,UAEFC,EAAAA,EAAAA,MAAA,OACE1M,UAAU,4DACV2M,QAAUhC,GAAMA,EAAE0F,kBAAkB5D,SAAA,EAEpCC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oCAAmCyM,SAAA,EAChD9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,qCAAoCyM,SAAC,8BACnD9L,EAAAA,EAAAA,KAAA,UACEN,KAAK,SACLsM,QAASxI,EACTnE,UAAU,2FACV,aAAW,eAAIyM,UAEf9L,EAAAA,EAAAA,KAAA,OAAK0K,MAAM,KAAKC,OAAO,KAAKy9B,QAAQ,YAAWt8B,UAAC9L,EAAAA,EAAAA,KAAA,QAAMkkB,EAAE,uBAAuBmkB,OAAO,eAAeC,YAAY,IAAIC,cAAc,kBAIvIx8B,EAAAA,EAAAA,MAAA,KAAG1M,UAAU,6BAA4ByM,SAAA,CAAC,0EACzB9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,yBAAS,uGAG7BC,EAAAA,EAAAA,MAAA,QAAMqe,SA9ESzqB,UAAc,IAADkqB,EAEhC,GADC,OAAD7f,QAAC,IAADA,GAAiB,QAAhB6f,EAAD7f,EAAG2B,sBAAc,IAAAke,GAAjBA,EAAAne,KAAA1B,IACIq9B,EACJ,GAAK76B,EAAMnL,QAAWuO,EAAKvO,OAI3B,GAAKkmC,EAIL,IACED,GAAW,GAEX,MAAMkB,EAAK,IAAIC,SACTC,EAASC,QAAUA,OAAOC,YAAcD,OAAOC,cAAiB,GAAGh/B,KAAKC,SAASnH,KAAK+L,WAC5F+5B,EAAGK,OAAO,QAASr8B,EAAMnL,OAAOsN,MAAM,EAAG,KACzC65B,EAAGK,OAAO,UAAWj5B,EAAKvO,OAAOsN,MAAM,EAAG,MAC1C65B,EAAGK,OAAO,QAASH,GACnB/6B,EAAMtH,QAASmF,GAAMg9B,EAAGK,OAAO,UAAWr9B,EAAGA,EAAE8b,OAE/C,MAAM3e,EAAM,GAAG4+B,IAAWG,EAAS,QAAQoB,mBAAmBpB,KAAY,KACpEhP,QAAYqQ,MAAMpgC,EAAK,CAAEqgC,OAAQ,OAAQp5B,KAAM44B,IAC/C1iC,QAAa4yB,EAAIvT,OAAO8jB,MAAM,MAAS,IACzCnjC,GAAQA,EAAKojC,IACfpC,GAAU,iGAAuB,WACjCI,EAAS,IAAKC,EAAQ,IAAKC,EAAS,IAC7B,OAAP5jC,QAAO,IAAPA,GAAAA,KAEAsjC,GAAU,qGAA2B,QAEzC,CAAE,MAAOh9B,GACP/D,QAAQwC,MAAMuB,GACdg9B,GAAU,+EAAoB,QAChC,CAAC,QACCQ,GAAW,EACb,MA5BER,GAAU,2FAAsB,cAJhCA,GAAU,qFAAqB,YA0ECznC,UAAU,iBAAgByM,SAAA,EACtDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACE9L,EAAAA,EAAAA,KAAA,SAAOX,UAAU,mCAAkCyM,SAAC,kBACpD9L,EAAAA,EAAAA,KAAA,SACEN,KAAK,OACLqT,MAAOvG,EACPgB,SAAWxD,GAAMk9B,EAASl9B,EAAE0D,OAAOqF,OACnCo2B,UAAW,GACXryB,YAAY,gFACZzX,UAAU,oHAEZ0M,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,uCAAsCyM,SAAA,CAAEU,EAAMnM,OAAO,aAGtE0L,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACE9L,EAAAA,EAAAA,KAAA,SAAOX,UAAU,mCAAkCyM,SAAC,kBACpD9L,EAAAA,EAAAA,KAAA,YACE+S,MAAOnD,EACPpC,SAAWxD,GAAMm9B,EAAQn9B,EAAE0D,OAAOqF,OAClCvQ,KAAM,EACN2mC,UAAW,IACXryB,YAAY,4IACZzX,UAAU,oHAEZ0M,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,uCAAsCyM,SAAA,CAAE8D,EAAKvP,OAAO,eAGrE0L,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACE9L,EAAAA,EAAAA,KAAA,SAAOX,UAAU,mCAAkCyM,SAAC,0EAIpDC,EAAAA,EAAAA,MAAA,OACE1M,UAAW,CACT,qCACA,4DACA,mBACA+I,KAAK,KACPghC,WAAap/B,IAAQA,EAAE2B,kBACvB09B,OAASr/B,IAAO,IAADs/B,EACbt/B,EAAE2B,iBACF,MAAM49B,EAAUj3B,MAAMsZ,MAAmB,QAAd0d,EAAAt/B,EAAEw/B,oBAAY,IAAAF,OAAA,EAAdA,EAAgB37B,QAAS,IACpD,IAAK47B,EAAQlpC,OAAQ,OAErBynC,EADkB,CAAEp6B,OAAQ,CAAEC,MAAO47B,MAErCz9B,SAAA,EAEF9L,EAAAA,EAAAA,KAAA,SACEwO,GAAG,YACH9O,KAAK,OACL6N,OAAQ,CAAC,YAAa,aAAc,aAAc,aAAanF,KAAK,KACpEqhC,UAAQ,EACRj8B,SAAUs6B,EACVx7B,SAAU+6B,EACVhoC,UAAU,aAGZ0M,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,kDAAiDyM,SAAA,EAC9DC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,4BAA2ByM,SAAA,CAAC,0CACjC9L,EAAAA,EAAAA,KAAA,KAAA8L,SAAG,oCAAU,iBACrB9L,EAAAA,EAAAA,KAAA,SACEiuB,QAAQ,YACR5uB,UAAW,CACT,gDACA,oDACA,4EACA+I,KAAK,KACPoE,MAAM,kCAAQV,SACf,wCAIH9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,4BAA2ByM,SAAC,yFAO9C6B,EAAMtN,OAAS,IACdL,EAAAA,EAAAA,KAAA,OAAKX,UAAU,6CAA4CyM,SACxD6B,EAAMxM,IAAI,CAACqK,EAAG4c,KACb,MAAMzf,EAAMjD,IAAIkD,gBAAgB4C,GAChC,OACEO,EAAAA,EAAAA,MAAA,OAAe1M,UAAU,WAAUyM,SAAA,EACjC9L,EAAAA,EAAAA,KAAA,OACEJ,IAAK+I,EACLmG,IAAKtD,EAAE8b,KACPjoB,UAAU,6CACV0P,OAAQA,IAAMrJ,IAAImD,gBAAgBF,MAEpC3I,EAAAA,EAAAA,KAAA,UACEN,KAAK,SACLsM,QAASA,IA7KToc,IAAQgf,EAAU9yB,GAAQA,EAAIhT,OAAO,CAACid,EAAG3b,IAAMA,IAAMwlB,IA6KtCshB,CAAathB,GAC5B/oB,UAAU,kFACVmN,MAAM,eACN,aAAW,4BAAOV,SACnB,WAbOsc,WAuBpBrc,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,2CAA0CyM,SAAA,EACvD9L,EAAAA,EAAAA,KAAA,UACEN,KAAK,SACLsM,QAASxI,EACTnE,UAAU,gGAA+FyM,SAC1G,kBAGD9L,EAAAA,EAAAA,KAAA,UACEN,KAAK,SACL4M,SAAU+6B,EACVhoC,UAAW,CACT,qEACA,aACA,2CACA,kFACAgoC,EAAU,gCAAkC,IAC5Cj/B,KAAK,KACP9I,MAAO,CAAE4oC,gBAAiB,WAAYp8B,SAErCu7B,EAAU,4BAAU,uCAOnC,CAMA,SAASsC,GAAU/nC,GAEjB,OADcZ,OAAOY,GAAMV,MAAM,oBACpBC,IAAI,CAACmF,EAAG1D,IACnB0D,EAAEkD,WAAW,OAASlD,EAAEsjC,SAAS,OAC7B5pC,EAAAA,EAAAA,KAAA,UAAA8L,SAAiBxF,EAAEqI,MAAM,GAAI,IAAhB/L,IACb5C,EAAAA,EAAAA,KAAC+I,EAAAA,SAAc,CAAA+C,SAAUxF,GAAJ1D,GAE7B,CAuBA,SAASinC,GAAKp1B,GAAsC,IAArC,KAAElR,EAAI,SAAEuI,EAAQ,SAAEkO,EAAW,KAAKvF,EAC/C,MAAMxU,EAAM8I,EAAAA,OAAa,MACnB+gC,EAAU/gC,EAAAA,QAAa,GACvBghC,EAAgBhhC,EAAAA,OAAa,MAwDnC,OAtDAA,EAAAA,gBAAsB,KACpB,MAAMgQ,EAAK9Y,EAAIJ,QACf,IAAKkZ,EAAI,OAGLgxB,EAAclqC,UAChBkZ,EAAGrQ,oBAAoB,gBAAiBqhC,EAAclqC,SACtDkqC,EAAclqC,QAAU,MAG1BkZ,EAAGzZ,MAAM0qC,SAAW,SACpBjxB,EAAGzZ,MAAM2qC,WAAa,aACtBlxB,EAAGzZ,MAAMya,WAAa,cAAcC,WAEpC,MAAMkwB,EAAU9oC,IAAQ2X,EAAGzZ,MAAM8lC,UAAYhkC,GAG7C,IAAK0oC,EAAQjqC,QAGX,OAFAqqC,EAAO3mC,EAAO,OAAS,YACvBumC,EAAQjqC,SAAU,GAIpB,MAAMsqC,EAAUA,IAAMpxB,EAAGqxB,aAAe,KAExC,GAAI7mC,EAGF2mC,EAAO,OACPtxB,sBAAsB,KACpBA,sBAAsB,KACpBsxB,EAAOC,KACP,MAAME,EAAQA,KACZH,EAAO,QACPnxB,EAAGrQ,oBAAoB,gBAAiB2hC,GACxCN,EAAclqC,QAAU,MAE1BkZ,EAAGtQ,iBAAiB,gBAAiB4hC,GACrCN,EAAclqC,QAAUwqC,UAGvB,CAIU,SADAC,iBAAiBvxB,GAAIqsB,WACb8E,EAAOC,KAC9BvxB,sBAAsB,KACpBA,sBAAsB,KACpBsxB,EAAO,UAGb,GACC,CAAC3mC,EAAMuI,EAAUkO,KAGlBha,EAAAA,EAAAA,KAAA,OAAKC,IAAKA,EAAK,eAAcsD,EAAKuI,SAC/BA,GAGP,CAQA,SAASy+B,GAAe51B,GAA4B,IAA3B,KAAEpR,EAAI,QAAEC,EAAO,MAAE0iC,GAAOvxB,EAE/C,MAAO61B,EAASC,GAAc1hC,EAAAA,SAAe,GAC7CA,EAAAA,UAAgB,KACVxF,GAAMknC,EAAW,IACpB,CAAClnC,IAEJwF,EAAAA,UAAgB,KACd,IAAKxF,EAAM,OACX,MAAMq8B,EAAS51B,IAAsB,WAAVA,EAAE8H,MAAyB,OAAPtO,QAAO,IAAPA,GAAAA,MAE/C,OADAjD,OAAOkI,iBAAiB,UAAWm3B,GAC5B,IAAMr/B,OAAOmI,oBAAoB,UAAWk3B,IAClD,CAACr8B,EAAMC,IAEV,MAAMknC,EAAUtiB,IACdqiB,EAAYr8B,GAASA,IAAQga,GAAO,EAAIA,IAG1C,OACEpoB,EAAAA,EAAAA,KAAA,OACEX,UAAU,8FACVwS,KAAK,SACL,aAAW,OACX,cAAatO,EAAO,QAAU,OAC9ByI,QAASxI,EACTlE,MAAO,CACLsa,QAASrW,EAAO,EAAI,EACpB0kC,WAAY1kC,EAAO,UAAY,SAC/BiM,cAAejM,EAAO,OAAS,OAC/B2kC,gBAAiB,mBACjBC,eAAgB,aAChBr8B,UAEFC,EAAAA,EAAAA,MAAA,OACE1M,UAAU,sDACV2M,QAAUhC,GAAMA,EAAE0F,kBAAkB5D,SAAA,EAEpCC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,oCAAmCyM,SAAA,EAChD9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,wBAAuByM,SAAC,+BACtC9L,EAAAA,EAAAA,KAAA,UACEN,KAAK,SACLsM,QAASxI,EACTnE,UAAU,2FACV,aAAW,eAAIyM,UAEf9L,EAAAA,EAAAA,KAAA,OAAK0K,MAAM,KAAKC,OAAO,KAAKy9B,QAAQ,YAAWt8B,UAC7C9L,EAAAA,EAAAA,KAAA,QAAMkkB,EAAE,uBAAuBmkB,OAAO,eAAeC,YAAY,IAAIC,cAAc,kBAKzFvoC,EAAAA,EAAAA,KAAA,OAAKX,UAAU,uCAAsCyM,SACzB,KAAnB,OAALo6B,QAAK,IAALA,EAAAA,EAAS,IAAI7lC,QACbL,EAAAA,EAAAA,KAAA,OAAKX,UAAU,wBAAuByM,SAAC,qEAEvC9L,EAAAA,EAAAA,KAAA,MAAIX,UAAU,WAAUyM,UACf,OAALo6B,QAAK,IAALA,EAAAA,EAAS,IAAI/kC,IAAI,CAAC2F,EAAGshB,KAAS,IAADuiB,EAC7B,MAAMC,EAASJ,IAAYpiB,EAC3B,OACErc,EAAAA,EAAAA,MAAA,MAAc1M,UAAU,OAAMyM,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACLsM,QAASA,IAAM0+B,EAAOtiB,GACtBnO,UAAYjQ,IACI,UAAVA,EAAE8H,KAA6B,MAAV9H,EAAE8H,MACzB9H,EAAE2B,iBACF++B,EAAOtiB,KAGX,gBAAewiB,EACfvrC,UAAW,+KAESurC,EAAS,iCAAmC,sBAAuB9+B,SAAA,EAGvF9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,+BAA8ByM,SAC3ChF,EAAE0F,OAAS,YAGdxM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,4BAA2ByM,SACxChF,EAAEw/B,MAAQ,MAGbtmC,EAAAA,EAAAA,KAAA,QAAM,iBAAYX,UAAU,oBAAmByM,UAC7C9L,EAAAA,EAAAA,KAACmb,EAAAA,EAAW,CACVjP,KAAM,GACN7M,UAAW,uCAAsCurC,EAAS,aAAe,YAK/E5qC,EAAAA,EAAAA,KAAC6pC,GAAK,CAACtmC,KAAMqnC,EAAO9+B,UAClB9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,iBAAgByM,UACjB,QAAX6+B,EAAC7jC,EAAEu/B,gBAAQ,IAAAsE,EAAAA,EAAI,IAAIxpC,IAAI,CAAC0pC,EAAKC,KAAE,IAAAC,EAAA,OAC9Bh/B,EAAAA,EAAAA,MAAA,OAAc1M,UAAU,iBAAgByM,SAAA,CACrC++B,EAAIrE,SAAUxmC,EAAAA,EAAAA,KAAA,OAAKX,UAAU,qBAAoByM,SAAE++B,EAAIrE,UAAiB,MACzExmC,EAAAA,EAAAA,KAAA,MAAIX,UAAU,iDAAgDyM,UAC/C,QAAZi/B,EAACF,EAAIpE,eAAO,IAAAsE,EAAAA,EAAI,IAAI5pC,IAAI,CAACmG,EAAG0jC,KAC3BhrC,SAAAA,EAAAA,KAAA,MAAA8L,UA9LVlK,EA8LqC0F,EA7L3CtG,OAAOY,GAAMV,MAAM,UACpBC,IAAI,CAACmF,EAAG2kC,KACnB,MAAMC,EAAQ5kC,EAAEpF,MAAM,MACtB,OACElB,EAAAA,EAAAA,KAAA,KAAYX,UAAW4rC,EAAK,SAAW,GAAGn/B,SACvCo/B,EAAM/pC,IAAI,CAACgqC,EAAIC,KACdr/B,EAAAA,EAAAA,MAAChD,EAAAA,SAAc,CAAA+C,SAAA,CACZ69B,GAAUwB,GACVC,EAAKF,EAAM7qC,OAAS,GAAIL,EAAAA,EAAAA,KAAA,SAAS,OAFforC,KAFjBH,OAyL2BD,GA9LzC,IAAsBppC,QA0LckpC,WAnCT1iB,aAuD3B,CAEA,SAASijB,KACP,MAAMC,EA1hBR,WAAwD,IAAjCC,EAASnrC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGG,OAAOirC,YACxC,MAAOlN,EAAMmN,GAAW1iC,EAAAA,UAAe,GAoBvC,OAlBAA,EAAAA,UAAgB,KACd,IAAIjH,EAAIypC,EACR,MAAMG,EAAWA,KAEXH,IAAchrC,OAAOirC,cAAa1pC,EAAIvB,OAAOirC,cAE7C/yB,EAAWA,IAAMgzB,EAAQlrC,OAAOorC,SAAW7pC,GAMjD,OAJA4pC,IACAjzB,IACAlY,OAAOkI,iBAAiB,SAAUijC,GAClCnrC,OAAOkI,iBAAiB,SAAUgQ,EAAU,CAAEE,SAAS,IAChD,KACLpY,OAAOmI,oBAAoB,SAAUgjC,GACrCnrC,OAAOmI,oBAAoB,SAAU+P,KAEtC,CAAC8yB,IAEGjN,CACT,CAogBesN,CAAc,KAC3B,OACE5rC,EAAAA,EAAAA,KAAA,OAAKX,UAAU,gDAA+CyM,UAC5DC,EAAAA,EAAAA,MAAA,UACErM,KAAK,SACL,aAAW,sBACXsM,QAASA,IAAMzL,OAAOsrC,SAAS,CAAEphC,IAAK,EAAGqhC,SAAU,WACnDzsC,UAAW,CACT,mHACA,+GACA,oCACAisC,EAAO,4BAA8B,+CACrCljC,KAAK,KAAK0D,SAAA,EAEZ9L,EAAAA,EAAAA,KAACkb,EAAAA,EAAS,CAAChP,KAAM,MACjBlM,EAAAA,EAAAA,KAAA,QAAMX,UAAU,uCAAsCyM,SAAC,YAI/D,CAGe,SAASigC,KACtB,MAAOC,EAASC,GAAcljC,EAAAA,UAAe,IACtCmjC,EAAWC,GAAgBpjC,EAAAA,UAAe,GAG3CqjC,EAAcrjC,EAAAA,QAAc,KAAMsjC,OA7jBb/3B,EA6jBiC0xB,GA5jBrD,IAAI1xB,GAAKgB,KAAK,CAACjO,EAAGC,KACvB,MAAMglC,EAAK,IAAI1iC,MAAM,OAADvC,QAAC,IAADA,OAAC,EAADA,EAAGi/B,OAAQ,GAAGiG,UAElC,OADW,IAAI3iC,MAAM,OAADtC,QAAC,IAADA,OAAC,EAADA,EAAGg/B,OAAQ,GAAGiG,UACtBD,IAJhB,IAA6Bh4B,GA6jB+C,IACpEk4B,EAASJ,EAAY,IAGpBK,EAAQC,GAAa3jC,EAAAA,SAAe,KACzC,IAAKyjC,EAAQ,OAAO,EACpB,IA1kBJ,SAAsBG,GACpB,MAAMzoB,EAAI,IAAIta,KAAK+iC,GACnB,OAAInmC,OAAOomC,MAAM1oB,EAAEqoB,YACX3iC,KAAKC,MAAQqa,EAAEqoB,WAAc,KACvC,CAskBSM,CAAaL,EAAOlG,MAAO,OAAO,EAEvC,OADaxwB,aAAaC,QAAQ6wB,MAClBC,GAAW2F,KAGvBM,EAAY/jC,EAAAA,YAAkB,KAClCojC,GAAa,GAETK,IACF12B,aAAawU,QAAQsc,GAAeC,GAAW2F,IAC/CE,GAAU,KAEX,CAACF,IAEJ,OACEzgC,EAAAA,EAAAA,MAACghC,EAAAA,GAAU,CAACC,SAAS,QAAOlhC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAK1M,UAAU,wCAAuCyM,SAAA,EAC5D9L,EAAAA,EAAAA,KAAA,UAAQX,UAAU,0EAAyEyM,UACzF9L,EAAAA,EAAAA,KAAA,OAAKX,UAAU,8CAA6CyM,UAC1D9L,EAAAA,EAAAA,KAAA,OAAK,aAAW,aAAY8L,UAC1BC,EAAAA,EAAAA,MAAA,MACE1M,UAAW,CACT,4BAEA,sCAEA,gEACA+I,KAAK,KAAK0D,SAAA,EAEZ9L,EAAAA,EAAAA,KAAA,MAAA8L,UACE9L,EAAAA,EAAAA,KAACitC,EAAAA,GAAO,CACNC,GAAG,OACH7tC,UAAWuV,IAAA,IAAC,SAAEgG,GAAUhG,EAAA,MACtB,CAEE,+FACA,4BACA,oEACAgG,EACI,iCACA,iCAEJ,sBACAxS,KAAK,MACR0D,SACF,wCAKH9L,EAAAA,EAAAA,KAAA,MAAA8L,UACE9L,EAAAA,EAAAA,KAACitC,EAAAA,GAAO,CACNC,GAAG,aACH7tC,UAAWwV,IAAA,IAAC,SAAE+F,GAAU/F,EAAA,MACtB,CACE,+FACA,4BACA,oEACA+F,EACI,iCACA,iCACJ,sBACAxS,KAAK,MACR0D,SACF,wCAKH9L,EAAAA,EAAAA,KAAA,MAAA8L,UAEE9L,EAAAA,EAAAA,KAACitC,EAAAA,GAAO,CACNC,GAAG,SACHlhC,QAAUhC,IACRA,EAAE2B,iBACF3B,EAAE0F,kBACFo9B,KAEFztC,UAAWA,IACT,CACE,+FACA,4BACA,oEACA,iCACA,sBACA+I,KAAK,KAET,gBAAc,SACd,gBAAe8jC,EAAUpgC,UAEzBC,EAAAA,EAAAA,MAAA,QAAM1M,UAAU,iCAAgCyM,SAAA,EAC9C9L,EAAAA,EAAAA,KAAA,QAAA8L,SAAM,8BACL2gC,IACCzsC,EAAAA,EAAAA,KAAA,QACEX,UAAU,4KACgGyM,SAC3G,gBAQT9L,EAAAA,EAAAA,KAAA,MAAA8L,UAEE9L,EAAAA,EAAAA,KAACitC,EAAAA,GAAO,CACNC,GAAG,WACHlhC,QAAUhC,IACRA,EAAE2B,iBACF3B,EAAE0F,kBACFu8B,GAAW,IAEb5sC,UAAWA,IACT,CACE,+FACA,4BACA,oEACA,iCACA,sBACA+I,KAAK,KAET,gBAAc,SACd,iBAAe,EACf,gBAAc,gBAAe0D,UAE7B9L,EAAAA,EAAAA,KAAA,QAAMX,UAAU,iCAAgCyM,UAC9C9L,EAAAA,EAAAA,KAAA,QAAA8L,SAAM,6CASZ9L,EAAAA,EAAAA,KAAA,QAAA8L,UACEC,EAAAA,EAAAA,MAACohC,EAAAA,GAAM,CAAArhC,SAAA,EACL9L,EAAAA,EAAAA,KAACotC,EAAAA,GAAK,CAAC92B,OAAK,EAAC+2B,SAASrtC,EAAAA,EAAAA,KAACstC,EAAAA,GAAQ,CAACJ,GAAG,aAAajsC,SAAO,OACvDjB,EAAAA,EAAAA,KAACotC,EAAAA,GAAK,CAACG,KAAK,OAAOF,SAASrtC,EAAAA,EAAAA,KAACs8B,GAAY,OACzCt8B,EAAAA,EAAAA,KAACotC,EAAAA,GAAK,CAACG,KAAK,aAAaF,SAASrtC,EAAAA,EAAAA,KAACye,GAAgB,OACnDze,EAAAA,EAAAA,KAACotC,EAAAA,GAAK,CAACG,KAAK,IAAIF,SAASrtC,EAAAA,EAAAA,KAACstC,EAAAA,GAAQ,CAACJ,GAAG,aAAajsC,SAAO,eAKhEjB,EAAAA,EAAAA,KAACqrC,GAAM,KACPrrC,EAAAA,EAAAA,KAAC+mC,GAAY,CAACxjC,KAAMyoC,EAASxoC,QAASA,IAAMyoC,GAAW,MACvDjsC,EAAAA,EAAAA,KAACuqC,GAAe,CAAChnC,KAAM2oC,EAAW1oC,QAASA,IAAM2oC,GAAa,GAAQjG,MAAOkG,MAGnF,C","sources":["components/KakaoAdfit.jsx","lib/toastBus.js","components/ScanFromImageModal.jsx","lib/optimizerCore.js","components/LoACoreOptimizer.jsx","hooks/useOptimizer.js","components/GemSimulator.jsx","CoreOnly.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;","// src/lib/toastBus.js\r\nexport function showToast(msg, type = \"info\") {\r\n  // type: \"info\" | \"success\" | \"warning\" | \"error\"\r\n  window.dispatchEvent(new CustomEvent(\"app:toast\", { detail: { msg, type } }));\r\n}\r\n","// src/components/ScanFromImageModal.jsx\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { X, ScanLine, Eraser, BoxSelect, Trash2, MinusCircle, ImageUp, ClipboardPaste } from \"lucide-react\";\r\n// parseFromRaw는 당김 현상을 유발하므로 사용하지 않음\r\n// import parseFromRaw from \"../lib/ocrRescueFromRaw\";\r\nimport { showToast } from \"../lib/toastBus\";\r\n\r\n/* -----------------------------------------------------------\r\n *  내부 옵션 키 매핑 (한글 라벨 → 내부키)\r\n * ----------------------------------------------------------- */\r\nconst LABEL2KEY = {\r\n  \"공격력\": \"atk\",\r\n  \"추가 피해\": \"add\",\r\n  \"보스 피해\": \"boss\",\r\n  \"낙인력\": \"brand\",\r\n  \"아군 피해 강화\": \"allyDmg\",\r\n  \"아군 공격 강화\": \"allyAtk\",\r\n};\r\n\r\n/* -----------------------------------------------------------\r\n *  왼쪽/오른쪽을 \"당기지 않는\" 락스텝 파서\r\n * ----------------------------------------------------------- */\r\nfunction parseNoShift(rawLeft = \"\", rawRight = \"\") {\r\n  const norm = (s) =>\r\n    String(s ?? \"\")\r\n      .replace(/\\r/g, \"\")\r\n      .split(\"\\n\")\r\n      .map((v) => v.trim())\r\n      .filter(Boolean);\r\n\r\n  const L = norm(rawLeft);\r\n  const R = norm(rawRight);\r\n\r\n  const LABELS = [\r\n    \"아군 공격 강화\",\r\n    \"아군 피해 강화\",\r\n    \"보스 피해\",\r\n    \"추가 피해\",\r\n    \"공격력\",\r\n    \"낙인력\",\r\n  ];\r\n\r\n  const clean = (t) =>\r\n    String(t ?? \"\")\r\n      .replace(/[^\\u3131-\\uD79D0-9A-Za-z.\\s]/g, \" \")\r\n      .replace(/\\s+/g, \" \")\r\n      .trim();\r\n\r\n  function parseRight(text) {\r\n    const raw = text ?? \"\";\r\n    const t = clean(raw);\r\n\r\n    let labelKey = null;\r\n    for (const lab of LABELS) {\r\n      if (t.includes(lab)) {\r\n        labelKey = lab;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let level = NaN;\r\n    const nums = t.match(/\\d+/g);\r\n    if (nums && nums.length) {\r\n      level = parseInt(nums[nums.length - 1], 10);\r\n    }\r\n    return { labelKey, level, rawRight: raw };\r\n  }\r\n\r\n  const rows = [];\r\n  const N = Math.max(L.length, R.length);\r\n  for (let i = 0; i < N; i++) {\r\n    const leftStr = L[i] ?? \"\";\r\n    const rightStr = R[i] ?? \"\";\r\n\r\n    const right = parseRight(rightStr);\r\n    rows.push({\r\n      will: leftStr,\r\n      labelKey: right.labelKey,\r\n      level: right.level,\r\n      rawLeft: leftStr,\r\n      rawRight: right.rawRight,\r\n    });\r\n  }\r\n\r\n  return rows;\r\n}\r\n\r\n/** 2줄(홀수/짝수)을 1개 젬으로 묶되, 오인식 시 해당 젬은 스킵 */\r\nfunction pairParsedToGems(list = []) {\r\n  const gems = [];\r\n  const skipped = []; // 제외된 젬의 1-based 인덱스\r\n\r\n  const toNum = (v) => {\r\n    if (typeof v === \"number\" && Number.isFinite(v)) return v;\r\n    const s = String(v ?? \"\")\r\n      .trim()\r\n      .replace(/[|Il]/g, \"1\")\r\n      .replace(/[Oo]/g, \"0\")\r\n      .replace(/[sS]/g, \"5\")\r\n      .replace(/[bB]/g, \"6\");\r\n    const n = parseInt(s, 10);\r\n    return Number.isFinite(n) ? n : NaN;\r\n  };\r\n\r\n  const toKey = (lab) => (lab ? LABEL2KEY[lab] ?? null : null);\r\n  const clampLv = (lv) => {\r\n    const n = Number(lv);\r\n    return Number.isFinite(n) ? Math.max(1, Math.min(5, n)) : null;\r\n  };\r\n\r\n  for (let i = 0, gemIdx = 1; i < list.length; i += 2, gemIdx++) {\r\n    const a = list[i];\r\n    const b = list[i + 1];\r\n    if (!a || !b) break;\r\n\r\n    const will = toNum(a.will);\r\n    const point = toNum(b.will);\r\n\r\n    if (!Number.isFinite(will) || !Number.isFinite(point)) {\r\n      skipped.push(gemIdx);\r\n      continue;\r\n    }\r\n\r\n    const o1k = toKey(a.labelKey);\r\n    const o2k = toKey(b.labelKey);\r\n\r\n    gems.push({\r\n      will,\r\n      point,\r\n      opt1: { label: o1k, level: clampLv(a.level), raw: a.rawRight },\r\n      opt2: { label: o2k, level: clampLv(b.level), raw: b.rawRight },\r\n      _raw: {\r\n        leftA: a.rawLeft,\r\n        rightA: a.rawRight,\r\n        leftB: b.rawLeft,\r\n        rightB: b.rawRight,\r\n      },\r\n    });\r\n  }\r\n\r\n  return { gems, skipped };\r\n}\r\n\r\nexport default function ScanFromImageModal({ open, onClose, onScanned }) {\r\n  const [busy, setBusy] = useState(false);\r\n  const [progress, setProgress] = useState({ label: \"\", pct: 0, indeterminate: true });\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [imgURL, setImgURL] = useState(null);\r\n  const [imgNatural, setImgNatural] = useState({ w: 0, h: 0 });\r\n\r\n  // 포함 ROI (wrapRef 상대좌표)\r\n  const [rectRel, setRectRel] = useState(null); // {x,y,w,h}\r\n  // 제외 영역들 (wrapRef 상대좌표)\r\n  const [excludesRel, setExcludesRel] = useState([]); // [{id,x,y,w,h}]\r\n  // 제외 영역 드래그 임시 박스\r\n  const [tempExcludeRel, setTempExcludeRel] = useState(null);\r\n\r\n  // 드래그 상태\r\n  const [drag, setDrag] = useState(null); // {mode:'include'|'exclude', x0,y0,x1,y1}\r\n  const [mode, setMode] = useState(\"include\");\r\n\r\n  const wrapRef = useRef(null);\r\n  const imgRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // 워커\r\n  const worker = useMemo(() => {\r\n    try {\r\n      return new Worker(new URL(\"../workers/gemScanner.worker.js\", import.meta.url), { type: \"module\" });\r\n    } catch {\r\n      return new Worker(new URL(\"../workers/gemScanner.worker.js\", import.meta.url));\r\n    }\r\n  }, []);\r\n\r\n  // 워커 메시지\r\n  useEffect(() => {\r\n    if (!worker) return;\r\n    const onMessage = (ev) => {\r\n      const { type, payload } = ev.data || {};\r\n      if (type === \"progress\") {\r\n        setProgress(payload);\r\n      } else if (type === \"done\") {\r\n        setBusy(false);\r\n        setProgress({ label: \"\", pct: 0, indeterminate: true });\r\n\r\n        // joined(디버그)\r\n        console.groupCollapsed(\"%c[Gem OCR] ROI words (joined)\", \"color:#8b5cf6\");\r\n        console.log(payload?.joinedWords || \"(empty)\");\r\n        console.groupEnd();\r\n\r\n        // raw left/right\r\n        console.groupCollapsed(\"%c[Gem OCR] Raw (left / right)\", \"color:#0ea5e9\");\r\n        console.log(\"rawLeft:\\n\" + (payload?.rawLeft || \"(empty)\"));\r\n        console.log(\"rawRight:\\n\" + (payload?.rawRight || \"(empty)\"));\r\n        console.groupEnd();\r\n\r\n        // 당김 없는 파싱 → 고정 인덱스 매칭\r\n        const parsed = parseNoShift(payload?.rawLeft || \"\", payload?.rawRight || \"\");\r\n        console.groupCollapsed(`%c[Gem OCR] Parsed(no-shift) rows ${parsed.length}`, \"color:#10b981\");\r\n        parsed.forEach((p, i) => {\r\n          console.log(\r\n            `#${i + 1}`,\r\n            `will='${p.will}'`,\r\n            `label=${p.labelKey ?? \"(?)\"}`,\r\n            `Lv.${Number.isFinite(p.level) ? p.level : \"?\"}`\r\n          );\r\n        });\r\n        console.groupEnd();\r\n\r\n        const { gems, skipped } = pairParsedToGems(parsed);\r\n\r\n        console.groupCollapsed(`%c[Gem OCR] Gems (paired, after-skip) ${gems.length}`, \"color:#22c55e\");\r\n        gems.forEach((g, i) => {\r\n          console.log(\r\n            `Gem #${i + 1}`,\r\n            `will=${g.will}`,\r\n            `point=${g.point}`,\r\n            `opt1=${g.opt1.label}(Lv.${g.opt1.level})`,\r\n            `opt2=${g.opt2.label}(Lv.${g.opt2.level})`\r\n          );\r\n        });\r\n        console.groupEnd();\r\n\r\n        if ((skipped || []).length) {\r\n          console.warn(\"[Gem OCR] 오인식으로 제외된 젬:\", skipped.join(\", \"));\r\n        }\r\n\r\n        onScanned?.({ ...payload, parsed, gems, skippedGems: skipped });\r\n      } else if (type === \"error\") {\r\n        setBusy(false);\r\n        setProgress({ label: \"\", pct: 0, indeterminate: true });\r\n        console.error(\"[gem-scanner:error]\", payload?.message ?? payload, payload);\r\n        showToast(\"이미지 스캔 중 오류가 발생했어요. 콘솔을 확인해 주세요.\", \"error\");\r\n      }\r\n    };\r\n    worker.addEventListener(\"message\", onMessage);\r\n    return () => worker.removeEventListener(\"message\", onMessage);\r\n  }, [worker, onScanned]);\r\n\r\n  // 파일 선택 시 미리보기 URL\r\n  useEffect(() => {\r\n    if (!file) {\r\n      setImgURL(null);\r\n      return;\r\n    }\r\n    const url = URL.createObjectURL(file);\r\n    setImgURL(url);\r\n    return () => URL.revokeObjectURL(url);\r\n  }, [file]);\r\n\r\n  // 이미지 로드 → 원본 크기 보관 & 기존 선택 초기화\r\n  const onImgLoad = (e) => {\r\n    const img = e.currentTarget;\r\n    setImgNatural({ w: img.naturalWidth, h: img.naturalHeight });\r\n    resetSelections();\r\n  };\r\n\r\n  const pickFile = () => inputRef.current?.click();\r\n\r\n  // 전체 선택 초기화 (안정 레퍼런스)\r\n  const resetSelections = React.useCallback(() => {\r\n    setRectRel(null);\r\n    setExcludesRel([]);\r\n    setTempExcludeRel(null);\r\n    setDrag(null);\r\n  }, []);\r\n\r\n\r\n  \r\n  // 버튼으로 클립보드에서 이미지 읽기 (HTTPS + 사용자 제스처 필요)\r\n  const pasteFromClipboard = React.useCallback(async () => {\r\n    try {\r\n      if (navigator.clipboard?.read) {\r\n        const items = await navigator.clipboard.read();\r\n        for (const item of items) {\r\n          for (const type of item.types) {\r\n            if (type.startsWith(\"image/\")) {\r\n              const blob = await item.getType(type);\r\n              const file = new File([blob], `pasted-${Date.now()}.png`, { type: blob.type || \"image/png\" });\r\n              resetSelections();\r\n              setFile(file);\r\n              setMode(\"include\");\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        showToast(\"클립보드에 이미지가 없습니다. 먼저 화면을 캡처하세요.\", \"warning\");\r\n      } else {\r\n        // Safari 등 일부 브라우저는 read 미지원\r\n        showToast(\"브라우저가 이미지 붙여넣기 API를 지원하지 않습니다. 대신 Ctrl+V로 시도해 보세요.\", \"info\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"[pasteFromClipboard]\", err);\r\n      showToast(\"클립보드에서 이미지를 가져오지 못했습니다. 브라우저 권한/HTTPS 여부를 확인해 주세요.\", \"error\");\r\n    }\r\n  }, [resetSelections]);\r\n\r\n\r\n\r\n  // 래퍼 기준 좌표 가져오기\r\n  const getRelPoint = (e) => {\r\n    const r = wrapRef.current?.getBoundingClientRect();\r\n    if (!r) return { x: 0, y: 0 };\r\n    const x = e.clientX - r.left;\r\n    const y = e.clientY - r.top;\r\n    return {\r\n      x: Math.max(0, Math.min(x, r.width)),\r\n      y: Math.max(0, Math.min(y, r.height)),\r\n    };\r\n  };\r\n\r\n  // 래퍼 상대 → 원본 해상도 사각형\r\n  const rectRelToNatural = (rel) => {\r\n    const r = wrapRef.current?.getBoundingClientRect();\r\n    if (!r || !r.width || !r.height || !imgNatural.w || !imgNatural.h) return null;\r\n    const sx = imgNatural.w / r.width;\r\n    const sy = imgNatural.h / r.height;\r\n    return {\r\n      x: Math.max(0, Math.round(rel.x * sx)),\r\n      y: Math.max(0, Math.round(rel.y * sy)),\r\n      w: Math.max(1, Math.round(rel.w * sx)),\r\n      h: Math.max(1, Math.round(rel.h * sy)),\r\n    };\r\n  };\r\n\r\n  const convertExcludesToNatural = (arr) => (arr || []).map(rectRelToNatural).filter(Boolean);\r\n\r\n  // 모드 전환 시 임시 박스 정리\r\n  useEffect(() => {\r\n    setTempExcludeRel(null);\r\n  }, [mode]);\r\n\r\n  // 드래그 시작/이동/끝 (wrap 기준)\r\n  const onMouseDown = (e) => {\r\n    if (e.button !== 0) return;\r\n    if (!wrapRef.current) return;\r\n    const p = getRelPoint(e);\r\n    const start = { mode, x0: p.x, y0: p.y, x1: p.x, y1: p.y };\r\n    setDrag(start);\r\n    if (mode === \"include\") {\r\n      setRectRel(null);\r\n    } else {\r\n      setTempExcludeRel(null);\r\n    }\r\n  };\r\n\r\n  const onMouseMove = (e) => {\r\n    if (!drag) return;\r\n    const p = getRelPoint(e);\r\n    const cur = { ...drag, x1: p.x, y1: p.y };\r\n    setDrag(cur);\r\n    const x = Math.min(cur.x0, cur.x1);\r\n    const y = Math.min(cur.y0, cur.y1);\r\n    const w = Math.abs(cur.x1 - cur.x0);\r\n    const h = Math.abs(cur.y1 - cur.y0);\r\n    if (drag.mode === \"include\") {\r\n      setRectRel({ x, y, w, h });\r\n    } else {\r\n      setTempExcludeRel(w > 0 && h > 0 ? { x, y, w, h } : null);\r\n    }\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    if (!drag) return;\r\n    const x = Math.min(drag.x0, drag.x1);\r\n    const y = Math.min(drag.y0, drag.y1);\r\n    const w = Math.abs(drag.x1 - drag.x0);\r\n    const h = Math.abs(drag.y1 - drag.y0);\r\n\r\n    if (drag.mode === \"exclude\") {\r\n      if (w > 2 && h > 2) {\r\n        setExcludesRel((prev) => [...prev, { id: Math.random().toString(36).slice(2), x, y, w, h }]);\r\n      }\r\n      setTempExcludeRel(null);\r\n    }\r\n    setDrag(null);\r\n  };\r\n\r\n  const removeExclude = (id) => setExcludesRel((prev) => prev.filter((r) => r.id !== id));\r\n\r\n  // 전역 붙여넣기 — 버튼 UX와 동일하게 동작\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    const onPaste = async (e) => {\r\n      const dt = e.clipboardData;\r\n      if (!dt) return;\r\n\r\n      // 1) 이미지 우선 탐색\r\n      const items = dt.items || [];\r\n      for (const it of items) {\r\n        if (it.type?.startsWith(\"image/\")) {\r\n          const f = it.getAsFile?.();\r\n          if (f) {\r\n            e.preventDefault(); // 텍스트가 어딘가에 붙는 것 방지\r\n            resetSelections();\r\n            setFile(f);\r\n            setMode(\"include\"); // 버튼 UX와 동일: 모드 초기화\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      showToast(\"클립보드에 이미지가 없습니다. 먼저 화면을 캡처하세요.\", \"warning\");\r\n    };\r\n    window.addEventListener(\"paste\", onPaste, { capture: true });\r\n    return () => window.removeEventListener(\"paste\", onPaste, { capture: true });\r\n  }, [open, resetSelections]);\r\n  // 전역 붙여넣기\r\n\r\n  // OCR 실행\r\n  const runManual = () => {\r\n    if (!file) {\r\n      showToast(\"먼저 스크린샷을 선택하거나 붙여넣기(Ctrl+V) 해 주세요.\", \"warning\");\r\n      return;\r\n    }\r\n    if (!rectRel) {\r\n      showToast(\"이미지 위에서 드래그로 포함 영역을 지정해 주세요.\", \"info\");\r\n      return;\r\n    }\r\n    const rect = rectRelToNatural(rectRel);\r\n    if (!rect) {\r\n      showToast(\"좌표 변환에 실패했습니다.\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const excludes = convertExcludesToNatural(excludesRel);\r\n\r\n    setBusy(true);\r\n    setProgress({ label: \"스캔중...\", pct: 0, indeterminate: true });\r\n    setMode(\"include\"); // 스캔 버튼 클릭 후 드래그 모드를 기본값으로 초기화\r\n\r\n    file.arrayBuffer().then((buf) => {\r\n      worker.postMessage(\r\n        {\r\n          type: \"scan\",\r\n          payload: {\r\n            buf,\r\n            mime: file.type || \"image/png\",\r\n            lang: \"kor+eng\",\r\n            rect,\r\n            excludes,\r\n          },\r\n        },\r\n        [buf]\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return createPortal(\r\n    <div className=\"fixed inset-0 z-[99999] bg-black/40 backdrop-blur-[1px] flex items-center justify-center p-4\">\r\n      {/* 모달 컨테이너 */}\r\n      <div className=\"w-auto rounded-2xl bg-white border shadow-lg overflow-hidden flex flex-col max-h-[98vh] min-w-[720px]\">\r\n        {/* 헤더 */}\r\n        <div className=\"flex items-center justify-between px-4 py-3 border-b flex-none\">\r\n          <div className=\"font-semibold\">이미지에서 젬 목록 스캔</div>\r\n          <button\r\n            className=\"h-8 w-8 inline-flex items-center justify-center rounded-lg hover:bg-gray-100\"\r\n            onClick={onClose}\r\n            aria-label=\"닫기\"\r\n          >\r\n            <X size={18} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* 바디 래퍼 */}\r\n        <div className=\"flex flex-col min-h-0\">\r\n          {/* 툴바(고정) */}\r\n          <div className=\"px-4 py-3 border-b flex-none\">\r\n            <div className=\"flex flex-wrap items-center gap-2\">\r\n              <button\r\n                className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n                onClick={pickFile}\r\n                disabled={busy}\r\n              >\r\n                <ImageUp size={18} />\r\n                <span>{file ? \"다른 이미지 선택\" : \"스크린샷 선택\"}</span>\r\n              </button>\r\n              \r\n                <span className=\"text-xs text-gray-600\">또는</span>\r\n              <button\r\n                className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n                onClick={pasteFromClipboard}\r\n                disabled={busy}\r\n                title=\"Ctrl+V 로도 붙여넣기 가능\"\r\n              >\r\n                <ClipboardPaste size={18} />\r\n                <span>클립보드 붙여넣기</span>\r\n              </button>\r\n              <div className=\"flex items-center gap-2 ml-2\">\r\n                <span className=\"text-xs text-gray-600\">드래그 모드</span>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setMode(\"include\")}\r\n                  disabled={busy}\r\n                  className={`h-10 px-3 rounded-xl border inline-flex items-center gap-2 ${mode === \"include\" ? \"bg-indigo-50 border-indigo-300\" : \"bg-white\"}`}\r\n                  title=\"젬 리스트 영역 지정\"\r\n                >\r\n                  <BoxSelect size={16} />\r\n                  <span>젬 리스트 영역</span>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setMode(\"exclude\")}\r\n                  disabled={busy}\r\n                  className={`h-10 px-3 rounded-xl border inline-flex items-center gap-2 ${mode === \"exclude\" ? \"bg-rose-50 border-rose-300\" : \"bg-white\"}`}\r\n                  title=\"제외 영역 지정\"\r\n                >\r\n                  <Eraser size={16} />\r\n                  <span>제외 영역</span>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={resetSelections}\r\n                  disabled={busy || (!rectRel && excludesRel.length === 0)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n                  title=\"포함/제외 영역 모두 초기화\"\r\n                >\r\n                  <Trash2 size={16} />\r\n                  <span>선택 영역 초기화</span>\r\n                </button>\r\n                <button\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n                  onClick={runManual}\r\n                  disabled={!file || !rectRel || busy}\r\n                  title=\"선택 영역 스캔\"\r\n                >\r\n                  <ScanLine size={18} />\r\n                  <span>선택 영역 스캔</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 파일 input */}\r\n            <input\r\n              ref={inputRef}\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              className=\"hidden\"\r\n              onChange={(e) => {\r\n                const f = e.target.files?.[0] || null;\r\n                setFile(f);\r\n                if (f) setMode(\"include\"); // ⬅️ 선택 시 드래그 모드 초기화\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* 내용 스크롤 영역 */}\r\n          <div className=\"p-4 space-y-3 overflow-auto flex-1\">\r\n            {imgURL ? (\r\n              <div className=\"relative border overflow-hidden bg-gray-50\">\r\n                <div\r\n                  ref={wrapRef}\r\n                  className=\"relative inline-block\"\r\n                  onMouseDown={onMouseDown}\r\n                  onMouseMove={onMouseMove}\r\n                  onMouseUp={onMouseUp}\r\n                  onDragStart={(e) => e.preventDefault()}\r\n                  style={{ cursor: \"crosshair\" }}\r\n                >\r\n                  <img\r\n                    ref={imgRef}\r\n                    src={imgURL}\r\n                    alt=\"preview\"\r\n                    className=\"block max-h-[80vh] w-auto select-none\"\r\n                    onLoad={onImgLoad}\r\n                    draggable={false}\r\n                  />\r\n\r\n                  {/* 포함 ROI 표시 */}\r\n                  {rectRel && (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: rectRel.x,\r\n                        top: rectRel.y,\r\n                        width: rectRel.w,\r\n                        height: rectRel.h,\r\n                        border: \"1px solid #6366f1\",\r\n                        background: \"rgba(99,102,241,0.18)\",\r\n                        pointerEvents: \"none\",\r\n                        zIndex: 5,\r\n                      }}\r\n                    />\r\n                  )}\r\n\r\n                  {/* 제외 영역들 */}\r\n                  {excludesRel.map((r) => (\r\n                    <div\r\n                      key={r.id}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: r.x,\r\n                        top: r.y,\r\n                        width: r.w,\r\n                        height: r.h,\r\n                        border: \"1px dashed #ef4444\",\r\n                        background: \"rgba(239,68,68,0.18)\",\r\n                        pointerEvents: \"none\",\r\n                        zIndex: 6,\r\n                      }}\r\n                    >\r\n                      <div style={{ position: \"absolute\", right: -12, top: -12, pointerEvents: \"auto\" }}>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            removeExclude(r.id);\r\n                          }}\r\n                          className=\"h-6 w-6 rounded-full bg-white border shadow flex items-center justify-center\"\r\n                          title=\"이 제외영역 삭제\"\r\n                        >\r\n                          <MinusCircle size={16} className=\"text-rose-600\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* 제외 영역 드래그 임시 미리보기 */}\r\n                  {tempExcludeRel && (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: tempExcludeRel.x,\r\n                        top: tempExcludeRel.y,\r\n                        width: tempExcludeRel.w,\r\n                        height: tempExcludeRel.h,\r\n                        border: \"1px dashed rgba(239,68,68,0.8)\",\r\n                        background: \"rgba(239,68,68,0.12)\",\r\n                        pointerEvents: \"none\",\r\n                        zIndex: 6,\r\n                      }}\r\n                    />\r\n                  )}\r\n\r\n                  {/* 진행중 오버레이 */}\r\n                  {busy && (\r\n                    <div className=\"absolute inset-0 z-10 bg-black/30 backdrop-blur-[1px] flex items-center justify-center\">\r\n                      <div className=\"w-[320px] rounded-xl bg-white/95 border shadow p-3\">\r\n                        <div className=\"text-xs font-medium text-gray-800 mb-1\">\r\n                          {progress.label || \"스캔중…\"}\r\n                        </div>\r\n                        <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n                          {progress.indeterminate ? (\r\n                            <div className=\"absolute inset-0\">\r\n                              <div className=\"h-full w-1/3 animate-[marquee_1.1s_linear_infinite] bg-[#a399f2] rounded-full\" />\r\n                            </div>\r\n                          ) : (\r\n                            <div\r\n                              className=\"h-full bg-[#a399f2] transition-[width] duration-150\"\r\n                              style={{ width: `${progress.pct ?? 0}%` }}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <style>{`@keyframes marquee { 0%{transform:translateX(-100%)} 100%{transform:translateX(300%)} }`}</style>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-sm text-center\">\r\n                <div className=\"mb-4\">\r\n                  <p>\r\n                    <span className=\"text-rose-600 font-medium\">1920×1080 이상 2560 x 1440 이하 해상도 </span>로 스크린샷을 촬영하는 것을 권장합니다.\r\n                  </p>\r\n                  <p className=\"text-[11px]\">\r\n                    예시 이미지는 설명을 위해 <strong>아크그리드 창만 크롭</strong>했지만, 실제 작업에서는 <strong>전체 화면 스크린샷</strong>을 사용해도 무방합니다.\r\n                  </p>\r\n                  <ul className=\"text-xs\">\r\n                    <li>\r\n                      아래 <strong className=\"text-rose-600\">예시 이미지</strong>를 참고해 <strong className=\"text-rose-600\">동일한 방식</strong>으로 가이드를 그려주세요.\r\n                    </li>\r\n                    <li>\r\n                      <strong className=\"text-rose-600\">정확도 향상</strong>을 위해, 작업 전 <strong className=\"text-rose-600\">모든 젬을 장착 해제</strong>해 주세요.\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <figure>\r\n                  <img\r\n                    src=\"https://i.ibb.co/Qjk1QkCF/example.jpg\"\r\n                    alt=\"예시: 젬 리스트 영역만 드래그 지정하고, 의지력·포인트 아이콘은 제외한 스크린샷 가이드\"\r\n                  />\r\n                  <figcaption>\r\n                    <ol className=\"mt-4 text-xs\">\r\n                      <li>\r\n                        스크린샷을 드래그해 <strong>젬 리스트 영역</strong>만 지정하세요. (\r\n                        <strong>젬 아이콘 제외</strong>, <strong>의지력·포인트 숫자 시작 지점</strong>부터)\r\n                      </li>\r\n                      <li>\r\n                        <strong>제외 영역</strong>으로 <strong>의지력·포인트 아이콘</strong>을 빼주세요.\r\n                      </li>\r\n                    </ol>\r\n                  </figcaption>\r\n                </figure>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n}\r\n","// src/lib/optimizerCore.js\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean, supply?: number }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\n// 기본값(미선택 시 사용)\r\nexport const CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\n// 등급별 “선택 가능한 공급 의지력” 목록\r\nexport const CORE_SUPPLY_OPTIONS = {\r\n  HERO: [7, 9],\r\n  LEGEND: [11, 12],\r\n  RELIC: [15],\r\n  ANCIENT: [17],\r\n};\r\nexport const CORE_POINT_CAP = { HERO: 10, LEGEND: 14, RELIC: 20, ANCIENT: 20 };\r\nexport const CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nexport const CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nexport const GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nexport const OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nexport const OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nexport const ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\n\r\n/** 딜러 프리셋(가중치; 배율) */\r\nexport const DEALER_WEIGHTS = {\r\n  boss: 1,\r\n  add: 1,\r\n  atk: 1,\r\n  brand: 0,\r\n  allyDmg: 0,\r\n  allyAtk: 0,\r\n};\r\n/** 기본 가중치는 = 딜러 프리셋 */\r\nexport const DEFAULT_WEIGHTS = { ...DEALER_WEIGHTS };\r\n\r\n/** 딜러: 옵션 레벨 → 퍼센트 커브 */\r\nexport const DEALER_LEVEL_CURVES = {\r\n  // key 는 OPTIONS 의 실제 키와 일치해야 합니다.\r\n  boss: [0, 0.078, 0.156, 0.244, 0.313, 0.391], // 보스 피해\r\n  add:  [0, 0.060, 0.119, 0.187, 0.239, 0.299], // 추가 피해\r\n  atk:  [0, 0.029, 0.067, 0.105, 0.134, 0.172], // 공격력\r\n};\r\n\r\n/** 서포터: 옵션 레벨 → 유효율(커브) */\r\nexport const SUPPORT_LEVEL_CURVES = {\r\n  // 낙인력\r\n  brand:   [0, 0.167, 0.334, 0.501, 0.668, 0.835],\r\n  // 아군 공격 강화\r\n  allyAtk: [0, 0.130, 0.260, 0.390, 0.520, 0.650],\r\n  // 아군 피해 강화\r\n  allyDmg: [0, 0.052, 0.104, 0.156, 0.208, 0.260],\r\n};\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nexport function roleAllowsKey(role, key) {\r\n  const allow = ROLE_KEYS?.[role];\r\n  if (!allow) return true;                               // 미정의면 모두 허용\r\n  if (Array.isArray(allow)) return allow.includes(key);  // 배열\r\n  if (allow && typeof allow.has === 'function') return allow.has(key); // Set\r\n  if (allow && typeof allow === 'object') return !!allow[key]; // { atk:true } 객체\r\n  return true;\r\n}\r\n\r\nexport function sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\n\r\nexport function levelValueByRole(role, key, lvl) {\r\n  const L = Math.max(0, Math.min(5, Number(lvl) || 0));\r\n\r\n  // 딜러: 사전 정의된 퍼센트 커브\r\n  if (role === 'dealer' && DEALER_LEVEL_CURVES[key]) {\r\n    return DEALER_LEVEL_CURVES[key][L] || 0;\r\n  }\r\n\r\n  // 서포터: 사전 정의된 유효율 커브\r\n  if (role === 'support' && SUPPORT_LEVEL_CURVES[key]) {\r\n    return SUPPORT_LEVEL_CURVES[key][L] || 0;\r\n  }\r\n\r\n  // 그 외: 선형(레벨 숫자 그대로)\r\n  return L;\r\n}\r\n\r\nexport function scoreGemForRole(gem, role, weights) {\r\n  const w = sanitizeWeights(weights || {});\r\n  let sum = 0;\r\n\r\n  const add = (key, lvl) => {\r\n    if (!key || !lvl) return;\r\n    if (role && !roleAllowsKey(role, key)) return;\r\n\r\n    const basePct = levelValueByRole(role, key, lvl); // 레벨→퍼센트(커브/선형)\r\n    const scale   = w[key] ?? 0;                      // 가중치(배율)\r\n    sum += basePct * scale;\r\n  };\r\n\r\n  add(gem.o1k, gem.o1v);\r\n  add(gem.o2k, gem.o2v);\r\n\r\n  // 퍼센트 값으로 반환 (상위 UI에서 toFixed(4) + '%' 처리)\r\n  return sum;\r\n}\r\n\r\nexport function* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1;\r\n    while (p >= 0 && idx[p] === n - k + p) p--;\r\n    if (p < 0) break;\r\n    idx[p]++;\r\n    for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\n\r\nexport function thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\n\r\nexport function scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000)\r\n    + (totalPoint * 10_000)\r\n    + ((5_000 - totalWill) * 10)\r\n    + roleSum\r\n    - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nexport function enumerateCoreCombos(\r\n  pool, grade, role, weights, minThreshold, enforceMin, onStep, supplyOverride\r\n) {\r\n  const supply = (supplyOverride ?? CORE_SUPPLY[grade]);\r\n  const pointCap = (CORE_POINT_CAP?.[grade] ?? Infinity);\r\n  const W = sanitizeWeights(weights);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) {\r\n      all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 });\r\n      continue;\r\n    }\r\n    for (const combo of combinations(pool, k)) {\r\n      onStep && onStep(1);\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      // ✅ 등급별 최대 포인트 초과 조합은 제외 (예: 전설은 14P 초과 금지)\r\n      if (totalPoint > pointCap) continue;\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n\r\n  all.sort((a, b) => b.score - a.score);\r\n\r\n  // UI 정책에 맞춘 필터링\r\n  let filtered;\r\n\r\n  if (enforceMin) {\r\n    // '이상 탐색' 모드 (체크박스 ON)\r\n    const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n    const effMin = minThreshold ?? minOfGrade; // 목표가 없으면 등급 최소치\r\n    filtered = all.filter(ci =>\r\n      ci.totalPoint >= effMin && ci.thr.length > 0 && ci.list.length > 0\r\n    );\r\n  } else {\r\n    // '정확히 일치' 모드 (체크박스 OFF, 기본)\r\n    if (minThreshold != null) {\r\n      filtered = all.filter(ci =>\r\n        ci.totalPoint === minThreshold && ci.list.length > 0\r\n      );\r\n    } else {\r\n      // 목표 없음: 달성 구간 있는 케이스만\r\n      filtered = all.filter(ci => ci.thr.length > 0 && ci.list.length > 0);\r\n    }\r\n  }\r\n\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n\r\n  return filtered;\r\n}\r\n","/**\r\n * LoACoreOptimizer.jsx\r\n *\r\n * 재구성(리팩터링된 파일 배치 & 계층 주석) 버전.\r\n * - 실행 로직/동작 동일 유지 (함수/값, 상태, JSX 구조, 훅 호출 순서에 의존하는 부분 불변).\r\n * - 기존 주석은 모두 제거했고, 가독성을 위한 섹션/행동 중심의 주석을 새로 정리하여 추가함.\r\n * - \"재그룹/재배치\"는 선언의 물리적 위치만 정렬(의존성 방향상 안전한 순서)했을 뿐, 코드 의미를 바꾸지 않음.\r\n *\r\n * 섹션 구성\r\n *  A. 외부/내부 모듈 임포트\r\n *  B. 도메인/뷰 공통 상수 및 매핑\r\n *  C. 직업-코어 프리셋/효과 유틸\r\n *  D. 공용 유틸(로컬스토리지, UID, 외부 클릭 등)\r\n *  E. DnD 포털용 Draggable 래퍼\r\n *  F. UI 프리미티브(드롭다운, 토스트, 숫자입력)\r\n *  G. 프리셋 설명 툴팁(CoreEffectInfo)\r\n *  H. 메인 컴포넌트(LoACoreOptimizer) + QuickAddPad(내부)\r\n */\r\n\r\nimport React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { flushSync } from \"react-dom\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, ChevronUp, ChevronDown, Info, Download, Upload, Image } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport { useOptimizer } from '../hooks/useOptimizer';\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport ScanFromImageModal from \"./ScanFromImageModal.jsx\";\r\nimport './LoACoreOptimizer.css';\r\n\r\nimport {\r\n  CORE_SUPPLY,\r\n  CORE_SUPPLY_OPTIONS,\r\n  CORE_THRESHOLDS,\r\n  CORE_LABEL,\r\n  GRADES,\r\n  OPTION_LABELS,\r\n  OPTIONS,\r\n  DEFAULT_WEIGHTS,\r\n  DEALER_WEIGHTS,\r\n  ROLE_KEYS,\r\n  sanitizeWeights,\r\n  scoreGemForRole,\r\n  levelValueByRole,\r\n} from '../lib/optimizerCore.js';\r\nimport ARC_CORES from \"../data/arc_cores_select.json\";\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * B. 도메인/뷰 공통 상수 및 매핑\r\n *    - 화면 공통 라벨/세트, 로컬스토리지 키, 직업/코어 그룹 매핑 등\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n\r\nconst CATEGORY_LABEL = { order: \"질서\", chaos: \"혼돈\" };\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\";\r\n\r\nconst JOBS = ARC_CORES?.jobs ?? [];\r\nconst CORE_NAME_BY_GROUP = { \"해\": \"해 코어\", \"달\": \"달 코어\", \"별\": \"별 코어\" };\r\nconst GROUP_BY_CORE_NAME = { \"해 코어\": \"해\", \"달 코어\": \"달\", \"별 코어\": \"별\" };\r\n\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\n\r\nconst TARGET_MAX_BY_GRADE = {\r\n  HERO: 10,\r\n  LEGEND: 14,\r\n  RELIC: 20,\r\n  ANCIENT: 20,\r\n};\r\n\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * C. 직업-코어 프리셋/효과 유틸\r\n *    - 직업별 허용 코어, 프리셋 목록, 효과 정규화/조회\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction getAllowedCoreNameSet(job) {\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const groups = new Set(entries.map(e => e[\"그룹\"]));\r\n  const names = new Set(\r\n    Array.from(groups).map(g => CORE_NAME_BY_GROUP[g]).filter(Boolean)\r\n  );\r\n  return names;\r\n}\r\n\r\nfunction getPresetItems(job, groupKey) {\r\n  if (!job || !groupKey) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  return entries\r\n    .filter(e => e[\"그룹\"] === groupKey)\r\n    .map(e => ({ value: e[\"코어\"], label: e[\"코어\"] }));\r\n}\r\n\r\nfunction normalizeEffects(raw) {\r\n  if (!raw) return [];\r\n  let arr = [];\r\n\r\n  if (Array.isArray(raw)) {\r\n    arr = raw.flatMap((item) => {\r\n      if (!item) return [];\r\n      if (typeof item === \"string\") {\r\n        const m = item.match(/(\\d+)\\s*P?/i);\r\n        const p = m ? Number(m[1]) : null;\r\n        return p ? [{ point: p, text: item.replace(/^.*?:\\s*/, \"\").trim() || item.trim() }] : [];\r\n      }\r\n      if (typeof item === \"object\") {\r\n        let p = item.point ?? item.P ?? item.포인트 ?? null;\r\n        if (typeof p === \"string\") p = parseInt(p.replace(/\\D/g, \"\"), 10);\r\n        const t = item.text ?? item.desc ?? item.효과 ?? item.value ?? \"\";\r\n        return Number.isFinite(p) ? [{ point: Number(p), text: String(t) }] : [];\r\n      }\r\n      return [];\r\n    });\r\n  } else if (typeof raw === \"object\") {\r\n    arr = Object.entries(raw).map(([k, v]) => {\r\n      const p = parseInt(String(k).replace(/\\D/g, \"\"), 10);\r\n      return { point: p, text: String(v) };\r\n    });\r\n  } else if (typeof raw === \"string\") {\r\n    arr = raw.split(/\\r?\\n/).flatMap((line) => {\r\n      const m = line.match(/(\\d+)\\s*P?/i);\r\n      const p = m ? Number(m[1]) : null;\r\n      return p ? [{ point: p, text: line.replace(/^.*?:\\s*/, \"\").trim() || line.trim() }] : [];\r\n    });\r\n  }\r\n\r\n  return arr\r\n    .filter((x) => Number.isFinite(x.point) && x.text)\r\n    .sort((a, b) => a.point - b.point);\r\n}\r\n\r\nfunction getEffectsForPreset(job, groupKey, preset) {\r\n  if (!job || !groupKey || !preset) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const row = entries.find((e) => e[\"그룹\"] === groupKey && e[\"코어\"] === preset);\r\n  return normalizeEffects(row?.[\"효과\"]);\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * D. 공용 유틸\r\n *    - UID 생성, 역할별 가중치 마스킹, 로컬스토리지 I/O, 다음 코어명 탐색, 외부클릭\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\n\r\n// 딜러: 0.123%  /  서포터: 0.123  (둘 다 소수 3자리)\r\nfunction fmtByRole(role, v) {\r\n  const n = Number(v);\r\n  if (!Number.isFinite(n)) return String(v);\r\n  return role === 'dealer' ? `${n.toFixed(3)}%` : n.toFixed(3);\r\n}\r\n\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => { next[k] = 0; });\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => { next[k] = 1; });\r\n  return next;\r\n}\r\n\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    [refs]\r\n  );\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * E. Portal-aware Draggable 래퍼\r\n *    - 드래그 시 body 포털로 이동시켜 클리핑/레이어 문제 방지\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\n\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * F. UI 프리미티브\r\n *    1) Dropdown: 키보드 접근성/포털 메뉴/ARIA 적용\r\n *    2) ToastStack + useToasts: 간단 토스트 큐\r\n *    3) NumberInput: 숫자 입력 공통(클램프/포맷/휠 방지)\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction Dropdown({ value, items, onChange, placeholder, className, bordered = true }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [focusedIndex, setFocusedIndex] = useState(-1);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const itemRefs = useRef([]);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  const listboxId = useRef(`dd-list-${Math.random().toString(36).slice(2)}`).current;\r\n\r\n  const initFocusIndex = useCallback(() => {\r\n    const sel = items.findIndex(i => i.value === value && !i.disabled);\r\n    if (sel >= 0) return sel;\r\n    const firstEnabled = items.findIndex(i => !i.disabled);\r\n    return firstEnabled >= 0 ? firstEnabled : -1;\r\n  }, [items, value]);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick(v => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick(v => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    setFocusedIndex(initFocusIndex());\r\n    const t = requestAnimationFrame(() => {\r\n      const el = itemRefs.current[initFocusIndex()];\r\n      (el ?? menuRef.current)?.focus?.();\r\n    });\r\n    return () => cancelAnimationFrame(t);\r\n  }, [open, initFocusIndex]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const getNextEnabled = (start, dir) => {\r\n    const n = items.length;\r\n    if (n === 0) return -1;\r\n    let i = start;\r\n    for (let step = 0; step < n; step++) {\r\n      i = (i + dir + n) % n;\r\n      if (!items[i].disabled) return i;\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  const onButtonKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const willOpen = !open;\r\n      if (willOpen) {\r\n        setOpen(true);\r\n      } else {\r\n        const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n        const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n        if (next >= 0) setFocusedIndex(next);\r\n      }\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      setOpen(v => !v);\r\n    }\r\n  };\r\n\r\n  const onMenuKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n      const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n      if (next >= 0) setFocusedIndex(next);\r\n    } else if (e.key === \"Home\") {\r\n      e.preventDefault();\r\n      const first = items.findIndex(i => !i.disabled);\r\n      if (first >= 0) setFocusedIndex(first);\r\n    } else if (e.key === \"End\") {\r\n      e.preventDefault();\r\n      let last = -1;\r\n      for (let i = items.length - 1; i >= 0; i--) {\r\n        if (!items[i].disabled) { last = i; break; }\r\n      }\r\n      if (last >= 0) setFocusedIndex(last);\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      const it = items[focusedIndex];\r\n      if (it && !it.disabled) {\r\n        onChange(it.value);\r\n        setOpen(false);\r\n        requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n      requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n    } else if (e.key === \"Tab\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const onItemMouseEnter = (i) => setFocusedIndex(i);\r\n\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        role=\"listbox\"\r\n        id={listboxId}\r\n        tabIndex={-1}\r\n        aria-activedescendant={focusedIndex >= 0 ? `${listboxId}-opt-${focusedIndex}` : undefined}\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n        onKeyDown={onMenuKeyDown}\r\n      >\r\n        {items.map((it, i) => {\r\n          const isSelected = it.value === value;\r\n          const isActive = i === focusedIndex;\r\n          return (\r\n            <li key={String(it.value)}>\r\n              <button\r\n                ref={(el) => (itemRefs.current[i] = el)}\r\n                id={`${listboxId}-opt-${i}`}\r\n                type=\"button\"\r\n                role=\"option\"\r\n                aria-selected={isSelected}\r\n                onMouseEnter={() => onItemMouseEnter(i)}\r\n                onClick={() => {\r\n                  if (it.disabled) return;\r\n                  onChange(it.value);\r\n                  setOpen(false);\r\n                  requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n                }}\r\n                aria-disabled={it.disabled ? true : undefined}\r\n                className={`w-full text-left px-3 py-2 text-sm\r\n                  ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"}\r\n                  ${isSelected ? \"bg-gray-100\" : \"\"}\r\n                  ${isActive ? \"outline-none ring-2 ring-[#a399f2]/40\" : \"\"}\r\n                `}\r\n              >\r\n                <span className=\"block truncate\">{it.label}</span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={open}\r\n        aria-controls={open ? listboxId : undefined}\r\n        onKeyDown={onButtonKeyDown}\r\n        onClick={() => setOpen(v => !v)}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, type = \"info\") => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg, type }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 4000);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  // 전역 토스트 이벤트 수신 (어디서든 showToast 호출 가능)\r\n  useEffect(() => {\r\n    const onEvt = (e) => {\r\n      const { msg, type } = e.detail || {};\r\n      if (!msg) return;\r\n      push(String(msg), type || \"info\");\r\n    };\r\n    window.addEventListener(\"app:toast\", onEvt);\r\n    return () => window.removeEventListener(\"app:toast\", onEvt);\r\n  }, []);\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const clsByType = (type) => {\r\n    switch (type) {\r\n      case \"success\": return { wrap: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\", btn: \"text-emerald-900/80 hover:text-emerald-900\" };\r\n      case \"warning\": return { wrap: \"bg-amber-50/95 border-amber-200 text-amber-900\", btn: \"text-amber-900/80 hover:text-amber-900\" };\r\n      case \"error\":   return { wrap: \"bg-rose-50/95 border-rose-200 text-rose-900\",   btn: \"text-rose-900/80 hover:text-rose-900\" };\r\n      default:        return { wrap: \"bg-indigo-50/95 border-indigo-200 text-indigo-900\", btn: \"text-indigo-900/80 hover:text-indigo-900\" };\r\n    }\r\n  };\r\n  return createPortal(\r\n    <div\r\n      className=\"fixed inset-0 z-[2147483647] flex items-center justify-center pointer-events-none px-4\"\r\n      aria-live=\"polite\"\r\n      role=\"status\"\r\n>\r\n      <AnimatePresence>\r\n        {toasts.map(t => {\r\n          const v = clsByType(t.type);\r\n          return (\r\n            <motion.div\r\n              key={t.id}\r\n              initial={{ opacity: 0, scale: 0.98 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              exit={{ opacity: 0, scale: 0.98 }}\r\n              transition={{ type: 'spring', stiffness: 380, damping: 28 }}\r\n              className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${v.wrap}`}\r\n            >\r\n              <div className=\"text-sm flex-1\">{t.msg}</div>\r\n              <button\r\n                className={`text-sm font-medium self-center ${v.btn}`}\r\n                onClick={() => onClose(t.id)}\r\n                aria-label=\"닫기\"\r\n              >\r\n                닫기\r\n              </button>\r\n            </motion.div>\r\n          );\r\n        })}\r\n      </AnimatePresence>\r\n    </div>,\r\n    document.body\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value, onChange, min, max, step = 1, allowFloat = false, zeroOnBlur = true, className = \"\", inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num));\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * G. 프리셋 효과 툴팁\r\n *    - 선택한 직업/그룹/프리셋 기준으로 등급 제한 내 효과를 미리보기\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction CoreEffectInfo({ job, groupKey, preset, grade, category, coreName, supply }) {\r\n  const [open, setOpen] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  const effects = getEffectsForPreset(job, groupKey, preset);\r\n  const maxP = TARGET_MAX_BY_GRADE[grade] ?? 999;\r\n  const list = effects.filter((e) => e.point <= maxP);\r\n\r\n  const coreShort =\r\n    GROUP_BY_CORE_NAME[coreName] ??\r\n    coreName.replace(/\\s*코어$/, \"\");\r\n\r\n  const LABEL_CLS = \"text-[12px] text-gray-500 mb-1 text-indigo-400\";\r\n\r\n  const isAncient =\r\n    (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") || String(grade).toLowerCase() === \"ancient\";\r\n\r\n  const gradeColorCls =\r\n    String(grade).toUpperCase() === \"HERO\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"영웅\") ? \"text-fuchsia-500\" :\r\n      String(grade).toUpperCase() === \"LEGEND\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"전설\") ? \"text-amber-500\" :\r\n        String(grade).toUpperCase() === \"RELIC\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"유물\") ? \"text-orange-700\" :\r\n          String(grade).toUpperCase() === \"ANCIENT\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") ? \"text-[#d3bd8b]\" :\r\n            \"text-gray-800\";\r\n\r\n  const pickSlashValueByGrade = (text) => {\r\n    const pickRight = isAncient;\r\n\r\n    let out = text.replace(\r\n      /(\\d+(?:\\.\\d+)?)%\\s*\\/\\s*(\\d+(?:\\.\\d+)?)%/g,\r\n      (_, a, b) => (pickRight ? b : a) + \"%\"\r\n    );\r\n\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(%)/g,\r\n      (_, a, b, pct) => (pickRight ? b : a) + pct\r\n    );\r\n\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(?!\\s*[%\\d])/g,\r\n      (_, a, b) => (pickRight ? b : a)\r\n    );\r\n\r\n    return out;\r\n  };\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      className=\"relative inline-flex items-center align-top ml-1 cursor-pointer\"\r\n      onMouseEnter={() => setOpen(true)}\r\n      onMouseLeave={() => setOpen(false)}\r\n      onFocus={() => setOpen(true)}\r\n      onBlur={() => setOpen(false)}\r\n    >\r\n      <Info size={16} aria-hidden=\"true\" color=\"#a399f2\" />\r\n\r\n      <AnimatePresence>\r\n        {open && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -4 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -4 }}\r\n            transition={{ duration: 0.12 }}\r\n            className=\"absolute z-[999999] mt-2 left-1/2 -translate-x-1/2 w-[400px] rounded-xl border bg-white shadow-lg p-3 text-xs\"\r\n            role=\"tooltip\"\r\n          >\r\n            <div className=\"text-[13px] font-semibold mb-2\">\r\n              <div>{CATEGORY_LABEL[category]}의 {coreName} : {preset}</div>\r\n              <div className={`text-[12px] font-medium ${gradeColorCls}`}>{CORE_LABEL[grade]} 아크 그리드 코어</div>\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 타입</div>\r\n              <div className=\"text-[12px] font-medium\">\r\n                <span>{CATEGORY_LABEL[category]}</span>\r\n                <span className=\"mx-1\">–</span>\r\n                <span>{coreShort}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 공급 의지력</div>\r\n              <div className=\"text-[12px] font-medium\">{String(supply)} 포인트</div>\r\n            </div>\r\n\r\n            <div className={LABEL_CLS}>코어 옵션</div>\r\n            {list.length === 0 ? (\r\n              <div className=\"text-gray-500\">옵션 정보가 없습니다.</div>\r\n            ) : (\r\n              <ul className=\"mt-1 space-y-1\">\r\n                {list.map((e) => {\r\n                  const text = e.point === 17 ? pickSlashValueByGrade(e.text) : e.text;\r\n                  return (\r\n                    <li\r\n                      key={e.point}\r\n                      className=\"grid grid-cols-[32px_1fr] gap-x-1 items-start min-w-0\"\r\n                    >\r\n                      <span className=\"w-[32px] shrink-0 text-amber-500 font-semibold\">\r\n                        [{e.point}P]\r\n                      </span>\r\n                      <span className=\"text-gray-800 break-words min-w-0\">\r\n                        {text}\r\n                      </span>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </span>\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * H. 메인 컴포넌트\r\n *    - 상태/로직/뷰 그대로 유지\r\n *    - 내부에 QuickAddPad 폼 컴포넌트 포함\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n\r\n  const [category, setCategory] = useState(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n\r\n  const [role, setRole] = useState(() => loadFromStorage()?.role ?? \"dealer\");\r\n  const [weights, setWeights] = useState(() => {\r\n    const saved = loadFromStorage();\r\n    const w = saved?.weights;\r\n    if (w && typeof w === \"object\") {\r\n      const vals = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"].map(k => Number(w[k]));\r\n      const allOnes = vals.every(v => v === 1);\r\n      // 과거 기본값(전부 1)만 저장돼 있고 역할 정보가 없거나 딜러로 추정되면 → 딜러 프리셋으로 이행\r\n      if (allOnes && (!saved?.role || saved.role === \"dealer\")) {\r\n        return { ...DEALER_WEIGHTS };\r\n      }\r\n      return sanitizeWeights(w);\r\n    }\r\n    // 저장된 게 없으면 딜러 프리셋으로 시작\r\n    return { ...DEALER_WEIGHTS };\r\n  });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  const [quickAddMode, setQuickAddMode] = useState(false);\r\n  const [scanOpen, setScanOpen] = useState(false);\r\n  const [dataVersion, setDataVersion] = useState(0);\r\n\r\n  const [stale, setStale] = useState(false);\r\n  const didMountRef = useRef(false);\r\n\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n\r\n  const { isComputing, progress, results, calculate, hasCalculated } = useOptimizer(cores, gems, role, weights);\r\n\r\n  const [selectedJob, setSelectedJob] = useState(() => (loadFromStorage()?.selectedJob ?? \"\"));\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const buildSnapshot = useCallback(() => ({\r\n    app: \"LoA-CoreOptimizer\",\r\n    version: 2,\r\n    exportedAt: new Date().toISOString(),\r\n    category,\r\n    coresByCat,\r\n    gemsByCat,\r\n    role,\r\n    weights: sanitizeWeights(weights),\r\n    selectedJob,\r\n  }), [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  const handleExportJson = useCallback(() => {\r\n    try {\r\n      const data = buildSnapshot();\r\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: \"application/json\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const d = new Date();\r\n      const stamp = `${d.getFullYear()}${String(d.getMonth() + 1).padStart(2, \"0\")}${String(d.getDate()).padStart(2, \"0\")}${String(d.getHours()).padStart(2, \"0\")}${String(d.getMinutes()).padStart(2, \"0\")}`;\r\n\r\n      // 직업명이 있을 때만 파일명에 추가 (불가 문자는 제거)\r\n      const jobPart =\r\n        selectedJob && selectedJob.trim()\r\n          ? `_${selectedJob.trim().replace(/[\\\\/:*?\"<>|]+/g, \"\")}`\r\n          : \"\";\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `아크그리드${jobPart}_${stamp}.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n      push(\"JSON 파일로 내보냈습니다.\", \"success\");\r\n    } catch (e) {\r\n      console.error(e);\r\n      push(\"내보내기 중 오류가 발생했어요.\", \"error\");\r\n    }\r\n  }, [buildSnapshot, push, selectedJob]);\r\n\r\n  const handleImportClick = useCallback(() => {\r\n    fileInputRef.current?.click();\r\n  }, []);\r\n\r\n  const handleImportFile = useCallback((e) => {\r\n    const file = e.target.files?.[0];\r\n    e.target.value = \"\";\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      try {\r\n        const json = JSON.parse(String(reader.result));\r\n        if (!json || typeof json !== \"object\") throw new Error(\"invalid\");\r\n        if (!json.coresByCat || !json.gemsByCat) throw new Error(\"missing fields\");\r\n        flushSync(() => {\r\n          setCoresByCat(json.coresByCat);\r\n          setGemsByCat(json.gemsByCat);\r\n          setCategory(json.category === \"chaos\" ? \"chaos\" : \"order\");\r\n          setRole(json.role === \"dealer\" || json.role === \"support\" ? json.role : null);\r\n          setWeights(() => {\r\n            const r = json.role === \"support\" ? \"support\" : \"dealer\";\r\n            return r === \"dealer\" ? { ...DEALER_WEIGHTS } : maskWeightsForRole(DEFAULT_WEIGHTS, \"support\");\r\n          });\r\n          setSelectedJob(typeof json.selectedJob === \"string\" ? json.selectedJob : \"\");\r\n          setHighlightCoreId(null);\r\n          setHighlightGemId(null);\r\n          setQuickAddMode(false);\r\n          setStale(true);\r\n        });\r\n        setDataVersion(v => v + 1);\r\n        push(\"JSON 데이터를 불러왔습니다.\", \"success\");\r\n      } catch (err) {\r\n        console.error(err);\r\n        push(\"가져오기 실패: JSON 형식이 올바르지 않아요.\", \"error\");\r\n      }\r\n    };\r\n    reader.onerror = () => push(\"가져오기 실패: 파일을 읽을 수 없어요.\", \"error\");\r\n    reader.readAsText(file);\r\n  }, [push, setCoresByCat, setGemsByCat, setCategory, setRole, setWeights, setSelectedJob]);\r\n\r\n  useEffect(() => {\r\n    if (results && results.length > 0) {\r\n      setStale(false);\r\n    }\r\n  }, [results]);\r\n\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  // 1) setGems를 useCallback으로 감싸서 참조를 안정화\r\n  const setGems = useCallback((updater) => {\r\n    setGemsByCat((prev) => {\r\n      const base = prev[category] ?? []; // 안전하게 기본값\r\n      const next =\r\n        typeof updater === \"function\" ? updater(base) : updater;\r\n      setStale(true); // 여기서만 호출하면 handleScanned 말미의 중복 호출은 제거 가능\r\n      return { ...prev, [category]: next };\r\n    });\r\n  }, [setGemsByCat, category, setStale]);\r\n\r\n  // 2) mapScannedGemToItem도 안정화(선택이지만 권장)\r\n  const mapScannedGemToItem = useCallback((g) => ({\r\n    id: uid(),\r\n    will: Number.isFinite(g?.will) ? g.will : null,\r\n    point: Number.isFinite(g?.point) ? g.point : null,\r\n    o1k: g?.opt1?.label ?? \"atk\",\r\n    o1v: Number.isFinite(g?.opt1?.level) ? g.opt1.level : 1,\r\n    o2k: g?.opt2?.label ?? \"add\",\r\n    o2v: Number.isFinite(g?.opt2?.level) ? g.opt2.level : 1,\r\n  }), []);\r\n\r\n  // 3) handleScanned deps에 안정화된 것들을 넣기\r\n  const handleScanned = useCallback((payload) => {\r\n    setScanOpen(false);\r\n    console.log(\"[ScanFromImageModal:onScanned]\", payload);\r\n\r\n    const skipped = Array.isArray(payload?.skippedGems) ? payload.skippedGems : [];\r\n    const scanned = Array.isArray(payload?.gems) ? payload.gems : [];\r\n\r\n    // 추가할 아이템 변환\r\n    const items = scanned.map(mapScannedGemToItem);\r\n\r\n    // 상태 반영\r\n    if (items.length > 0) {\r\n      setGems((prev) => [...prev, ...items]);\r\n      const lastId = items[items.length - 1]?.id;\r\n      if (lastId) setHighlightGemId(lastId);\r\n    }\r\n\r\n    // ✅ 단일 토스트 구성\r\n    // ✅ 단일 토스트 구성\r\n    let msg = \"\";\r\n    let type = \"info\";\r\n    if (items.length > 0) {\r\n      if (skipped.length > 0) {\r\n        msg = `오인식 된 ${skipped.join(\", \")}번을 제외한 ${items.length}개의 젬을 목록에 추가했습니다.`;\r\n        type = \"success\";\r\n      } else {\r\n        msg = `${items.length}개의 젬을 목록에 추가했습니다.`;\r\n        type = \"success\";\r\n      }\r\n    } else {\r\n      // 전부 스킵된 경우\r\n      if (skipped.length > 0) {\r\n        msg = `오인식으로 제외되어 추가된 젬이 없습니다. (제외: ${skipped.join(\", \")}번)`;\r\n        type = \"warning\";\r\n      } else {\r\n        msg = \"스캔 결과가 비어 있어요.\";\r\n        type = \"info\";\r\n      }\r\n    }\r\n\r\n    push(msg, type);\r\n  }, [push, setScanOpen, setHighlightGemId, setGems, mapScannedGemToItem]);\r\n\r\n  // 정렬 상태: 기본은 의지력 내림, 포인트 오름\r\nconst [sortOrder, setSortOrder] = useState({ will: \"desc\", point: \"asc\" });\r\nconst isNum = (v) => Number.isFinite(v);\r\n\r\n// 현재 sortOrder에 따라 젬 정렬 적용 (안정 정렬)\r\nconst applyGemSort = useCallback(() => {\r\n  setGems((prev) => {\r\n    const withIdx = prev.map((g, i) => ({ g, i }));\r\n    withIdx.sort((A, B) => {\r\n      const awv = isNum(A.g.will), bwv = isNum(B.g.will);\r\n      if (awv !== bwv) return bwv - awv; // 값 있는 게 먼저\r\n      if (awv && A.g.will !== B.g.will) {\r\n        return sortOrder.will === \"desc\" ? B.g.will - A.g.will : A.g.will - B.g.will;\r\n      }\r\n      const apv = isNum(A.g.point), bpv = isNum(B.g.point);\r\n      if (apv !== bpv) return bpv - apv; // 값 있는 게 먼저\r\n      if (apv && A.g.point !== B.g.point) {\r\n        return sortOrder.point === \"asc\" ? A.g.point - B.g.point : B.g.point - A.g.point;\r\n      }\r\n      return A.i - B.i; // 안정 정렬(원래 순서 유지)\r\n    });\r\n    return withIdx.map(({ g }) => g);\r\n  });\r\n}, [setGems, sortOrder.will, sortOrder.point]);\r\n\r\n// (옵션) 드롭다운이 바뀔 때마다 자동 재정렬하고 싶으면 추가\r\nuseEffect(() => { applyGemSort(); }, [applyGemSort]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) { didMountRef.current = true; return; }\r\n    setStale(true);\r\n  }, [role, weights, category]);\r\n\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (category !== \"order\" || !selectedJob) return;\r\n\r\n    setCoresByCat((prevByCat) => {\r\n      const list = prevByCat[category] ?? [];\r\n      let changed = false;\r\n\r\n      const next = list.map((c) => {\r\n        const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n        const items = getPresetItems(selectedJob, groupKey);\r\n        const isValid = c.preset && items.some((i) => i.value === c.preset);\r\n        const nextPreset = isValid ? c.preset : (items[0]?.value ?? undefined);\r\n\r\n        if (nextPreset !== c.preset) {\r\n          changed = true;\r\n          return { ...c, preset: nextPreset };\r\n        }\r\n        return c;\r\n      });\r\n\r\n      if (!changed) return prevByCat;\r\n      setStale(true);\r\n      return { ...prevByCat, [category]: next };\r\n    });\r\n  }, [category, selectedJob, cores, setCoresByCat, setStale]);\r\n\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: null, o2k: \"add\", o2v: null }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\", \"warning\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\", \"info\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n\r\n    const initialPreset =\r\n      category === \"order\" && selectedJob\r\n        ? getPresetItems(selectedJob, GROUP_BY_CORE_NAME[nextName])[0]?.value\r\n        : undefined;\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false, preset: initialPreset },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs;\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n  // eslint-disable-next-line\r\n  const [dragging, setDragging] = useState(false);\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px] font-normal\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  const resolveSupply = (core) => {\r\n    const def = CORE_SUPPLY?.[core.grade];\r\n    return (core?.supply ?? def);\r\n  };\r\n\r\n  useEffect(() => {\r\n    saveToStorage({ category, coresByCat, gemsByCat, role, weights, selectedJob });\r\n  }, [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  function QuickAddPad({ onAdd, focusOnMount = false }) {\r\n    const [o1k, setO1k] = useState(\"atk\");\r\n    const [o2k, setO2k] = useState(\"add\");\r\n    const [o1v, setO1v] = useState(1);\r\n    const [o2v, setO2v] = useState(1);\r\n    const [will, setWill] = useState(1);\r\n    const [point, setPoint] = useState(1);\r\n\r\n    const firstRef = useRef(null);\r\n    const focusAfterSubmitRef = useRef(false);\r\n    const WILL_INPUT_ID = \"quick-pad-will-input\";\r\n\r\n    useEffect(() => {\r\n      if (!focusOnMount) return;\r\n      requestAnimationFrame(() => {\r\n        firstRef.current?.focus?.();\r\n        firstRef.current?.select?.();\r\n      });\r\n    }, [focusOnMount]);\r\n\r\n    const focusWill = () => {\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          if (firstRef.current) {\r\n            try { firstRef.current.focus(); firstRef.current.select?.(); return; } catch { }\r\n          }\r\n          const el = document.getElementById(WILL_INPUT_ID);\r\n          if (el) { el.focus(); el.select?.(); }\r\n        });\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e?.preventDefault?.();\r\n      const id = uid();\r\n      onAdd({\r\n        id,\r\n        will: Number.isFinite(will) ? will : 0,\r\n        point: Number.isFinite(point) ? point : 0,\r\n        o1k,\r\n        o1v: Number.isFinite(o1v) ? o1v : 0,\r\n        o2k,\r\n        o2v: Number.isFinite(o2v) ? o2v : 0,\r\n      });\r\n\r\n      if (focusAfterSubmitRef.current) {\r\n        focusWill();\r\n        focusAfterSubmitRef.current = false;\r\n      }\r\n    };\r\n\r\n    const onKeyDownSubmit = (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        focusAfterSubmitRef.current = true;\r\n        handleSubmit(e);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white\">\r\n          <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\" title=\"빠른 추가\">\r\n            <Plus size={18} />\r\n          </div>\r\n\r\n          <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>필요 의지력</label>\r\n              <NumberInput\r\n                value={will}\r\n                onChange={setWill}\r\n                min={3}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{\r\n                  id: WILL_INPUT_ID,\r\n                  title: \"의지력\",\r\n                  placeholder: \"의지력\",\r\n                  onKeyDown: onKeyDownSubmit,\r\n                  ref: firstRef,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>(질서/혼돈)포인트</label>\r\n              <NumberInput\r\n                value={point}\r\n                onChange={setPoint}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{ title: \"포인트\", placeholder: \"포인트\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 1</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o1k}\r\n                onChange={(v) => setO1k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o1v}\r\n                onChange={setO1v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 2</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o2k}\r\n                onChange={(v) => setO2k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o2v}\r\n                onChange={setO2v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n            <button\r\n              type=\"submit\"\r\n              onClick={() => { (focusAfterSubmitRef.current = true); }}\r\n              className=\"h-10 w-full lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n              title=\"Enter로도 추가 가능\"\r\n            >\r\n              <Plus size={16} />\r\n              <span className=\"inline\"> 젬 추가</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"relative flex items-center my-4\">\r\n          <div className=\"flex-grow border-t\"></div>\r\n          <span className=\"mx-3 text-sm text-gray-600\">\r\n            아래에서 추가한 젬들을 확인하세요.\r\n          </span>\r\n          <div className=\"flex-grow border-t\"></div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n        @keyframes loa-marquee { 0%{ transform: translateX(-100%);} 100%{ transform: translateX(300%);} }\r\n        .animate-loa-marquee{ animation: loa-marquee 1.2s cubic-bezier(.4,0,.2,1) infinite; }\r\n      `}</style>\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div key={dataVersion} className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            <div className=\"flex items-center gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleExportJson}\r\n                className=\"h-10 px-3 rounded-xl inline-flex items-center gap-2 bg-white hover:bg-white/90\"\r\n                title=\"현재 입력값을 JSON으로 저장\"\r\n              >\r\n                <Download size={16} />\r\n                <span className=\"hidden md:inline text-sm\">저장하기</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleImportClick}\r\n                className=\"h-10 px-3 rounded-xl inline-flex items-center gap-2 bg-white hover:bg-white/90\"\r\n                title=\"JSON에서 불러오기\"\r\n              >\r\n                <Upload size={16} />\r\n                <span className=\"hidden md:inline text-sm\">불러오기</span>\r\n              </button>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\"application/json\"\r\n                className=\"hidden\"\r\n                onChange={handleImportFile}\r\n              />\r\n              <div className=\"h-6 w-px bg-white/50 mx-1 hidden sm:block\" aria-hidden />\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6 !mt-2`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              {category === \"order\" && (\r\n                <Dropdown\r\n                  className=\"w-32\"\r\n                  value={selectedJob}\r\n                  onChange={(val) => {\r\n                    setSelectedJob(val);\r\n                    setCores(prev => prev.map(c => {\r\n                      const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                      const items = getPresetItems(val, groupKey);\r\n                      const ok = c.preset && items.some(i => i.value === c.preset);\r\n                      return ok ? c : { ...c, preset: (items[0]?.value ?? undefined) };\r\n                    }));\r\n                  }}\r\n                  items={[{ value: \"\", label: \"선택 안함\" }, ...JOBS.map(j => ({ value: j, label: j }))]}\r\n                  placeholder=\"직업 선택\"\r\n                />\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = resolveSupply(c);\r\n                      const supplyOptions = CORE_SUPPLY_OPTIONS?.[c.grade] ?? [CORE_SUPPLY[c.grade]];\r\n                      const gradeMax = TARGET_MAX_BY_GRADE[c.grade];\r\n                      const thresholds = (CORE_THRESHOLDS[c.grade] ?? []).filter(v => v <= gradeMax);\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        thresholds.map(v => ({ value: String(v), label: `${v}P` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      let coreNameItems = CORE_NAME_ITEMS.map(it => ({ ...it }));\r\n\r\n                      if (category === \"order\" && selectedJob) {\r\n                        const allowed = getAllowedCoreNameSet(selectedJob);\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value) || !allowed.has(it.value)\r\n                        }));\r\n                      } else {\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value)\r\n                        }));\r\n                      }\r\n\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown\r\n                                  className=\"w-full lg:w-24\"\r\n                                  value={c.grade}\r\n                                  onChange={(val) => {\r\n                                    const g = (val);\r\n                                    const maxAllowed = TARGET_MAX_BY_GRADE[g];\r\n                                    const nextMin =\r\n                                      (c.minThreshold != null && c.minThreshold > maxAllowed)\r\n                                        ? maxAllowed\r\n                                        : c.minThreshold;\r\n                                    // 공급 의지력 재설정(선택지에 맞춰 보정)\r\n                                    const opts = CORE_SUPPLY_OPTIONS?.[g] ?? [CORE_SUPPLY[g]];\r\n                                    const nextSupply =\r\n                                      (c.supply != null && opts.includes(c.supply)) ? c.supply : opts[0];\r\n                                    updateCore(c.id, { grade: g, minThreshold: nextMin, supply: nextSupply });\r\n                                  }}\r\n                                  items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))}\r\n                                  placeholder=\"코어 등급\"\r\n                                />\r\n                              </div>\r\n                              {category === \"order\" && selectedJob && (\r\n                                (() => {\r\n                                  const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                                  const presetItems = getPresetItems(selectedJob, groupKey);\r\n                                  const resolvedPreset =\r\n                                    c.preset && presetItems.some(i => i.value === c.preset)\r\n                                      ? c.preset\r\n                                      : (presetItems[0]?.value ?? \"\");\r\n                                  return (\r\n                                    <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                      <label className={labelCls}>\r\n                                        직업 코어 선택\r\n                                        <CoreEffectInfo\r\n                                          job={selectedJob}\r\n                                          groupKey={groupKey}\r\n                                          preset={resolvedPreset}\r\n                                          grade={c.grade}\r\n                                          category={category}\r\n                                          coreName={c.name}\r\n                                          supply={resolveSupply(c)}\r\n                                        />\r\n                                      </label>\r\n                                      <Dropdown\r\n                                        className=\"w-full\"\r\n                                        value={resolvedPreset}\r\n                                        onChange={(val) => updateCore(c.id, { preset: val })}\r\n                                        items={presetItems}\r\n                                        placeholder=\"직업 코어 선택\"\r\n                                      />\r\n                                    </div>\r\n                                  );\r\n                                })()\r\n                              )}\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                {['HERO', 'LEGEND'].includes(String(c.grade)) ? (\r\n                                  <Dropdown\r\n                                    className=\"w-full lg:w-16\"\r\n                                    value={String(supply)}\r\n                                    onChange={(val) => {\r\n                                      const num = Number(val);\r\n                                      if (Number.isFinite(num)) updateCore(c.id, { supply: num });\r\n                                    }}\r\n                                    items={supplyOptions.map(v => ({ value: String(v), label: `${v}` }))}\r\n                                    placeholder=\"공급 선택\"\r\n                                  />\r\n                                ) : (\r\n                                  <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center lg:w-16\">\r\n                                    <span className=\"text-primary font-semibold\">{supply}</span>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 포인트</label>\r\n                                <Dropdown className=\"w-full lg:w-32\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val) }); else updateCore(c.id, { minThreshold: undefined }); }} items={targetItems} placeholder=\"목표 포인트 선택\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">선택한 포인트 이상으로 탐색</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">체크 해제 시, 목표 포인트와 <br className=\"hidden lg:block\" /><b className=\"text-primary\">정확히 일치하는 조합만 계산</b>합니다.</p>\r\n                              </div>\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div\r\n            className={`flex items-center gap-2 lg:gap-3 ${quickAddMode ? '' : 'mb-3'}`}\r\n          >\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-1\">\r\n              <span className=\"text-xs text-gray-600\">빠르게 추가</span>\r\n              <button\r\n                type=\"button\"\r\n                role=\"switch\"\r\n                aria-checked={quickAddMode}\r\n                onClick={() => setQuickAddMode(v => !v)}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition ${quickAddMode ? \"bg-[#a399f2]\" : \"bg-gray-300\"\r\n                  }`}\r\n                aria-label=\"빠르게 추가 모드\"\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-5 transform rounded-full bg-white shadow transition ${quickAddMode ? \"translate-x-5\" : \"translate-x-1\"\r\n                    }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              {!quickAddMode && (\r\n                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              )}\r\n              <button\r\n                className=\"hidden lg:inline-flex h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border  items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n                onClick={() => setScanOpen(true)}\r\n                aria-label=\"이미지에서 스캔 (Beta)\"\r\n              >\r\n                <Image size={16} />\r\n                <span className=\"hidden lg:inline\"> 이미지에서 스캔 (Beta)</span>\r\n              </button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          {quickAddMode && (\r\n            <p className=\"text-[11px] text-gray-500 mb-3\">\r\n              Tab 키로 입력 칸을 이동할 수 있고, Enter 키로 빠르게 추가할 수 있습니다.\r\n            </p>\r\n          )}\r\n          {quickAddMode && (\r\n            <div className=\"mb-3\">\r\n              <QuickAddPad\r\n                focusOnMount\r\n                onAdd={(gem) => {\r\n                  setGems(v => [gem, ...v]);\r\n                  setHighlightGemId(gem.id);\r\n                  setStale(true);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"flex gap-2 ml-auto whitespace-nowrap mb-3\">\r\n                        {/* 정렬 컨트롤: 의지력/포인트 오름·내림 토글 */}\r\n              <Dropdown\r\n                className=\"w-32\"\r\n                value={sortOrder.will}\r\n                onChange={(val) => setSortOrder((s) => ({ ...s, will: val }))}\r\n                items={[\r\n                  { value: \"desc\", label: \"의지력 ↓\" },\r\n                  { value: \"asc\",  label: \"의지력 ↑\" },\r\n                ]}\r\n                placeholder=\"의지력 정렬\"\r\n              />\r\n              <Dropdown\r\n                className=\"w-32\"\r\n                value={sortOrder.point}\r\n                onChange={(val) => setSortOrder((s) => ({ ...s, point: val }))}\r\n                items={[\r\n                  { value: \"asc\",  label: \"포인트 ↑\" },\r\n                  { value: \"desc\", label: \"포인트 ↓\" },\r\n                ]}\r\n                placeholder=\"포인트 정렬\"\r\n              />\r\n              <button\r\n                className=\"h-10 w-auto px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n                onClick={applyGemSort}\r\n                title=\"재정렬 (의지력 우선 → 포인트)\"\r\n                aria-label=\"재정렬\"\r\n              >\r\n              <span className=\"text-sm\">재정렬</span>\r\n            </button>\r\n            </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={3}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: (val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: (val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효 옵션 가중치</h2>\r\n\r\n            {/* 포지션 선택은 그대로 유지 */}\r\n            <div className={`flex items-center gap-4 text-sm`}>\r\n              <span className=\"text-xs text-gray-500 hidden sm:block\">포지션 선택</span>\r\n              <label className=\"inline-flex items-center gap-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  checked={role === \"dealer\"}\r\n                  onChange={() => {\r\n                    setRole(\"dealer\");\r\n                    setWeights({ ...DEALER_WEIGHTS });\r\n                  }}\r\n                  className=\"accent-primary\"\r\n                />\r\n                딜러\r\n              </label>\r\n              <label className=\"inline-flex items-center gap-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  checked={role === \"support\"}\r\n                  onChange={() => {\r\n                    setRole(\"support\");\r\n                    setWeights((w) => maskWeightsForRole(DEFAULT_WEIGHTS, \"support\"));\r\n                  }}\r\n                  className=\"accent-primary\"\r\n                />\r\n                서포터\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <p className=\"text-[12px] text-gray-600 mt-2\">\r\n            가중치는 역할 프리셋으로 고정됩니다.\r\n          </p>\r\n\r\n          {/* 옵션별 L1~L5 퍼센트 표 (반응형) */}\r\n          {(() => {\r\n            const levels = [1, 2, 3, 4, 5];\r\n            const allowSet =\r\n              role && ROLE_KEYS?.[role] && typeof ROLE_KEYS[role].has === \"function\"\r\n                ? ROLE_KEYS[role]\r\n                : null;\r\n\r\n            // 현재 역할에 해당하는 옵션만 노출 (역할 미선택이면 전체)\r\n            const showKeys = OPTIONS.filter((k) => !allowSet || allowSet.has(k));\r\n\r\n            const rows = showKeys.map((k) => {\r\n              const values = levels.map((L) => levelValueByRole(role, k, L));\r\n              const isCurve = role === \"dealer\"; // 딜러는 커브, 서포터는 선형\r\n              return { k, values, isCurve };\r\n            });\r\n\r\n            return (\r\n              <div className=\"mt-3\">\r\n                {/* 데스크톱/태블릿: 표 형태 */}\r\n                <div className=\"hidden sm:block overflow-x-auto\">\r\n                  <table className=\"min-w-full text-sm\">\r\n                    <colgroup>\r\n                      <col width=\"18%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                    </colgroup>\r\n                    <thead>\r\n                      <tr className=\"text-left text-gray-500\">\r\n                        <th className=\"py-2\">옵션</th>\r\n                        <th className=\"py-2\">Lv. 1</th>\r\n                        <th className=\"py-2\">Lv. 2</th>\r\n                        <th className=\"py-2\">Lv. 3</th>\r\n                        <th className=\"py-2\">Lv. 4</th>\r\n                        <th className=\"py-2\">Lv. 5</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {rows.map(({ k, values, isCurve }) => (\r\n                        <tr key={k} className=\"border-t\">\r\n                          <td className=\"py-2\">\r\n                            <span className=\"font-medium\">{OPTION_LABELS[k]}</span>\r\n                          </td>\r\n                          {values.map((v, i) => (\r\n                            <td key={i} className=\"py-2 tabular-nums\">\r\n                              {fmtByRole(role, v)}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                {/* 모바일: 카드 + 칩 형태 */}\r\n                <div className=\"sm:hidden space-y-2\">\r\n                  {rows.map(({ k, values, isCurve }) => (\r\n                    <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"text-sm font-medium\">{OPTION_LABELS[k]}</div>\r\n                        <span\r\n                          className={`text-[11px] ${isCurve ? \"text-primary\" : \"text-gray-400\"\r\n                            }`}\r\n                        >\r\n                          {isCurve ? \"커브\" : \"선형\"}\r\n                        </span>\r\n                      </div>\r\n\r\n                      {/* L1~L5 그리드: 세로 스크롤 없이 한눈에 */}\r\n                      <div className=\"mt-2 grid grid-cols-2 gap-2 text-[12px]\">\r\n                        {values.map((v, i) => (\r\n                          <div\r\n                            key={i}\r\n                            className=\"flex items-center justify-between px-2 py-1.5 rounded-lg bg-gray-50 border\"\r\n                          >\r\n                            <span className=\"text-gray-500\">Lv. {i + 1}</span>\r\n                            <span className=\"tabular-nums font-medium\">\r\n                              {fmtByRole(role, v)}\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            );\r\n          })()}\r\n\r\n        </section>\r\n\r\n\r\n\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-2\">\r\n          {stale && !isComputing && hasCalculated && (\r\n            <span className=\"inline-block text-[11px] px-3 py-1.5 rounded-lg bg-red-100 text-red-800 border border-red-200 text-center lg:text-left\">\r\n              입력값이 변경되었습니다. <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center gap-2 lg:ml-auto w-full lg:w-auto\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={calculate}\r\n              disabled={isComputing}\r\n              className=\"h-10 w-full lg:w-[120px] px-0 lg:px-3 rounded-xl ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n            >\r\n              {isComputing ? \"계산 중…\" : \"계산하기\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div className=\"flex items-center gap-2 justify-between\">\r\n            <h2 className={sectionTitle}>\r\n            결과\r\n            </h2>\r\n            \r\n            {(() => {\r\n              const hasAny = Array.isArray(results) && results.some(r => r && r.list && r.list.length > 0);\r\n              if (!hasAny) return null;\r\n              const totalRoleSum = results.reduce((acc, r) => acc + (r?.roleSum || 0), 0);\r\n              return (\r\n                <div className=\"flex flex-wrap gap-2 items-center\">\r\n                  <div className={chip}>\r\n                    전체 {role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"유효 옵션 합 (젬) \" : \"유효 옵션 합 (젬) \"}{\" \"}\r\n                    <span className=\"font-semibold text-primary\">\r\n                      {totalRoleSum.toFixed(3)}{role === 'dealer' ? '%' : ''}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          {!isComputing && stale && hasCalculated && (\r\n            <p className=\"text-xs text-red-700 mt-1\">입력값이 변경되었습니다. 우측 상단의 <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.</p>\r\n          )}\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = resolveSupply(c);\r\n              const pick = results?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n              const presetFallback = (category === \"order\" && selectedJob)\r\n                ? getPresetItems(selectedJob, groupKey)[0]?.value\r\n                : undefined;\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name}\r\n                      {category === \"order\" && selectedJob && (c.preset || presetFallback) && (\r\n                        <>:&nbsp;{c.preset ?? presetFallback}</>\r\n                      )}&nbsp;\r\n                      <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"유효 옵션 합 \" : \"유효 옵션 합 \"}\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(3))}{role === 'dealer' ? \"%\" : \"\"}</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 포인트를 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <colgroup>\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"13%\"} />\r\n                          </colgroup>\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"유효 옵션 합 \" : \"유효 옵션 합 \"}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.wwill ?? g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(3))}{role === 'dealer' ? \"%\" : \"\"}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"} {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(3))}%</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n\r\n      <ScanFromImageModal\r\n        open={scanOpen}\r\n        onClose={() => setScanOpen(false)}\r\n        onScanned={handleScanned}\r\n      />\r\n\r\n      {isComputing && (\r\n        <div className=\"fixed inset-0 z-[99999] bg-black/35 backdrop-blur-[1px] flex items-center justify-center px-6\">\r\n          <div className=\"w-full max-w-md rounded-2xl bg-white/95 border shadow p-4\">\r\n            <div className=\"text-sm font-medium text-gray-800 mb-2\">{progress.label}</div>\r\n\r\n            <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n              {progress.indeterminate ? (\r\n                <div className=\"absolute inset-0\">\r\n                  <div className=\"h-full w-1/3 bg-[#a399f2] animate-loa-marquee rounded-full\" />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"h-full bg-[#a399f2] transition-[width] duration-100\"\r\n                  style={{ width: `${progress.pct}%` }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mt-2 text-right text-xs text-gray-600\">\r\n              {progress.indeterminate\r\n                ? (progress.pulse != null ? Number(progress.pulse).toLocaleString() : \"\")\r\n                : `${progress.pct}%`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/hooks/useOptimizer.js\r\nimport { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { flushSync } from 'react-dom';\r\n\r\nexport function useOptimizer(cores, gems, role, weights) {\r\n  const [calcVersion, setCalcVersion] = useState(0);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [computing, setComputing] = useState(false);\r\n  const [progress, setProgress] = useState({\r\n    pct: 0,\r\n    label: \"준비 중…\",\r\n    indeterminate: true,\r\n    phase: undefined,\r\n    coreIndex: null,\r\n    coreCount: null,\r\n    coreDone: null,\r\n    coreTotal: null,\r\n    rate: null,\r\n    elapsedMs: null,\r\n    etaMs: null,\r\n    pulse: 0,\r\n  });\r\n  const [priorityPicks, setPriorityPicks] = useState([]);\r\n  const workerRef = useRef(null);\r\n\r\n  // ✅ 새로 추가: 마지막으로 \"계산하기\"를 눌렀을 때의 입력값 스냅샷\r\n  const paramsRef = useRef({ cores, gems, role, weights });\r\n\r\n  useEffect(() => {\r\n    workerRef.current = new Worker(new URL('../workers/optimizer.worker.js', import.meta.url), { type: 'module' });\r\n    try {\r\n      workerRef.current?.postMessage({ type: \"kickoff\" });\r\n    } catch { }\r\n    return () => {\r\n      workerRef.current?.terminate();\r\n      workerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // ✅ 변경점: 의존성 배열을 calcVersion 하나만 사용\r\n  useEffect(() => {\r\n    if (calcVersion === 0) return;\r\n    let cancelled = false;\r\n\r\n    setTimeout(() => {\r\n      if (cancelled) return;\r\n      flushSync(() => {\r\n        setComputing(true);\r\n        setProgress({\r\n          pct: 0,\r\n          label: \"최적의 젬 조합을 찾고 있습니다…\",\r\n          indeterminate: false,\r\n          phase: 'gen',\r\n          coreIndex: null,\r\n          coreCount: paramsRef.current.cores?.length || null, // ← 스냅샷 사용\r\n          coreDone: null,\r\n          coreTotal: null,\r\n          rate: null,\r\n          elapsedMs: null,\r\n          etaMs: null,\r\n          pulse: 0,\r\n        });\r\n      });\r\n    }, 0);\r\n\r\n    (async () => {\r\n      try {\r\n        await new Promise(resolve => requestAnimationFrame(resolve));\r\n        const worker = workerRef.current;\r\n        if (!worker) throw new Error(\"Worker not initialized\");\r\n\r\n        const onMessage = (e) => {\r\n          if (cancelled) return;\r\n          const msg = e.data || {};\r\n          if (msg?.type === \"error\" || msg?.error) {\r\n            console.error(e.data?.error || msg?.error);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 0, label: \"에러\", indeterminate: true }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n          if (msg.type === \"progress\") {\r\n            const { done, total, indeterminate = false, phase, coreIndex, coreCount, coreDone, coreTotal, rate, elapsedMs, etaMs, pulse } = msg;\r\n            if (indeterminate || !total || total <= 0 || done == null) {\r\n              setProgress((p) => ({ \r\n                ...p, pct: 0, indeterminate: true, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: pulse ?? (p.pulse ?? 0)\r\n              }));\r\n            } else {\r\n              const pct = Math.max(0, Math.min(100, Math.floor((done / Math.max(1, total)) * 100)));\r\n              setProgress((p) => ({ \r\n                ...p, pct, indeterminate: false, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: undefined\r\n              }));\r\n            }\r\n            return;\r\n          }\r\n          if (msg.type === \"result\") {\r\n            const { picks } = msg;\r\n            setPriorityPicks(picks || []);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 100, label: \"완료\", indeterminate: false, pulse: undefined }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n        };\r\n\r\n        worker.addEventListener('message', onMessage);\r\n\r\n        // ✅ 스냅샷을 꺼내서 사용\r\n        const { cores: c, gems: g, role: r, weights: w } = paramsRef.current;\r\n        const perCoreLimit =\r\n        g.length <= 18 ? 1200 :\r\n        g.length <= 24 ? 1000 :\r\n        g.length <= 30 ?  900 :\r\n        g.length <= 40 ?  800 :\r\n        g.length <= 50 ?  700 :\r\n        g.length <= 60 ?  600 : 500;\r\n\r\n        worker.postMessage({ type: \"run\", cores: c, gems: g, role: r, weights: w, perCoreLimit });\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          console.error(err);\r\n          setComputing(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calcVersion]); // ← 오직 버튼 클릭으로 증가한 calcVersion에만 반응\r\n\r\n  // ✅ 변경점: 계산 버튼을 눌렀을 때 현재 입력값을 스냅샷으로 저장한 뒤 calcVersion 증가\r\n  const calculate = useCallback(() => {\r\n    paramsRef.current = { cores, gems, role, weights }; // 최신값 스냅샷\r\n    setCalcVersion(v => v + 1);\r\n    setHasCalculated(true);\r\n  }, [cores, gems, role, weights]);\r\n\r\n  return {\r\n    isComputing: computing,\r\n    progress,\r\n    results: priorityPicks,\r\n    calculate, // ← 이 함수가 “계산하기” 버튼 onClick에 연결되면 됩니다.\r\n    hasCalculated,\r\n  };\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =========================================================================\r\n * 1) 전역 동작 플래그\r\n *    - 시뮬레이션 분산 감소, 희귀사건 스케일업 등 런타임 전역 옵션\r\n * ========================================================================= */\r\nconst USE_ANTITHETIC = true;\r\nconst AUTO_SCALE_RARE = true;\r\nconst OFFICIAL_RNG = true;\r\n\r\n/* =========================================================================\r\n * 2) 상수/테이블\r\n *    - 등급 경계, 젬 타입별 유효 효과 풀, 희귀도별 시도/리롤, 수치 범위, 비용\r\n * ========================================================================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\n\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\n\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\n\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\n\r\n/* =========================================================================\r\n * 3) 결정적 난수 및 보조 수학 유틸\r\n *    - 해시 기반 시드, xorshift 변종 RNG, 경계 체크/클램프, CI 계산 등\r\n * ========================================================================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\n\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\n\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n);\r\n}\r\n\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001;\r\n  if (n >= 100000) return 0.0002;\r\n  if (n >= 50000) return 0.0003;\r\n  if (n >= 10000) return 0.0005;\r\n  if (n >= 5000) return 0.0007;\r\n  return 0.001;\r\n};\r\n\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n\r\n/* =========================================================================\r\n * 4) 표시/형식 유틸\r\n *    - 확률/숫자 출력, 부담 배지, 성공률 추정\r\n * ========================================================================= */\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";\r\n  if (x >= 1) return \"100.00000%\";\r\n  return (x * 100).toFixed(5) + \"%\";\r\n}\r\n\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity;\r\n  return expectedGold / p;\r\n}\r\n\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\n\r\n/* =========================================================================\r\n * 5) 효과/등급 판정 로직\r\n *    - 유효 효과 풀, 총점/등급, 목표 충족 판정, 거리(부족분) 계산\r\n * ========================================================================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\n\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\n\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\n\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\n\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n\r\n/* =========================================================================\r\n * 6) 슬롯(선택지) 구성/적용 로직\r\n *    - 선택지 가중치 테이블 구성, 표현/해석, 실제 반영\r\n * ========================================================================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\n\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n\r\n  return items;\r\n}\r\n\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\n\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\n\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n\r\n/* =========================================================================\r\n * 7) 시뮬레이션 코어\r\n *    - 몬테카를로 기반 확률/기대치 추정, 저분산 페어, 희귀사건 가드\r\n * ========================================================================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    useAntithetic = true,\r\n    autoScaleRare = true,\r\n    rareTargetSuccesses = 100,\r\n    rareMaxTrials = 200000,\r\n    rareTiers = [200000],\r\n  } = opts;\r\n\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n\r\n  let localMaxTrials = maxTrials;\r\n  let forceRare = false;\r\n\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n\r\n  while (n < localMaxTrials) {\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      if (n >= localMaxTrials) break;\r\n\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;\r\n      continue;\r\n    }\r\n\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n\r\n    if (rareGuardActive) {\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue;\r\n    }\r\n\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n\r\n/* =========================================================================\r\n * 8) 등급 표시용 스타일/정렬 보조\r\n *    - 확률 0% 제거, 내림차순 정렬, 동률 판정\r\n * ========================================================================= */\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",\r\n};\r\n\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n\r\n/* =========================================================================\r\n * 9) 공통 UI 유틸/컴포넌트\r\n *    - 클릭외부감지 훅, 드롭다운, 토스트 스택, 숫자 입력, Select 래퍼\r\n * ========================================================================= */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\nfunction Dropdown({\r\n  value,\r\n  items,\r\n  onChange,\r\n  placeholder,\r\n  className,\r\n  disabled,\r\n  bordered = true\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  set,\r\n  onChange,\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n\r\n/* =========================================================================\r\n * 10) 보조 헬퍼\r\n *     - 라벨 중복 여부, 등 기타 메인에서 참조하는 작은 유틸\r\n * ========================================================================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n\r\n/* =========================================================================\r\n * 11) 메인 컴포넌트 (GemSimulator)\r\n *     - 상태 정의, 파생값, 이펙트, 액션 핸들러, 렌더 스켈레톤만 유지\r\n *     - 요청 사항: 최종 UI 구현 마크업은 비워둠 (원본 로직 유지)\r\n * ========================================================================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n\r\n  const curValid = cur.aName !== cur.bName;\r\n\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n\r\n  const migratedRef = useRef(false);\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n\r\n  const [changeMode, setChangeMode] = useState(null);\r\n  const [changePick, setChangePick] = useState(\"\");\r\n\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]);\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n\r\n  const addLog = useCallback((entry) => {\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n\r\n  const simRef = useRef(null);\r\n  const [logsMax, setLogsMax] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct2 = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct2(nowProb)} → 다른 항목 보기 기대 ${pct2(rerollProb)} (▲${pct2(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct2(nowProb)}가 다른 항목 보기 기대 ${pct2(rerollProb)}보다 유리 (▼${pct2(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct2(nowProb)} vs 다른 항목 보기 ${pct2(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode: pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return;\r\n    }\r\n\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory();\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n\r\n  function manualReset() {\r\n    setLogs([]);\r\n    setHistory({ past: [], future: [] });\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory();\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1,\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n\r\n  const dupWarnShown = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);\r\n      setHistory({ past: [], future: [] });\r\n    }\r\n  }, [allLocked]);\r\n\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base;\r\n  }, [gemKey, pos, abModePrimary]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      {/* 전역 CSS 변수와 유틸리티 클래스 주입: 주요 색상 및 accent-color 지정 */}\r\n      <style>{`\r\n    :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n    .text-primary{ color:#a399f2; }\r\n    .accent-primary{ accent-color:#a399f2; }\r\n  `}</style>\r\n\r\n      {/* 중앙 컨테이너: 최대 폭 제한 및 수직 간격 */}\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더 섹션: 제목과 시뮬레이션 반복 횟수 선택 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            {/* 페이지 타이틀: 그라디언트 배경 위에서 가독성 위한 화이트 텍스트/드롭섀도 */}\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n\r\n            {/* 우측 컨트롤: 시뮬레이션 횟수 드롭다운 */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                {/* 시뮬레이션 반복 수 선택 Dropdown (SIM_OPTIONS 기반) */}\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 기본 설정 카드 (젬 타입/등급/기본 시도/리롤 안내) */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 카드 타이틀 */}\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (잠금 상태 제어) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 입력 행: 젬 타입/등급/기본 시도·리롤 표시 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 선택: GEM_TYPES 키 목록을 드롭다운으로 제공 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 등급 선택: 고급/희귀/영웅 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 현재 등급 기준 기본 시도/리롤 수 정보 표시 (읽기 전용) */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 현재 옵션 입력 카드 (현재 젬의 상태 입력/잠금) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (현재 값 고정 여부) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 현재 옵션 입력 행: 효율/포인트/효과 A/B 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 포인트 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 선택 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 선택 (A와 중복 불가) */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 목표 옵션 입력 카드 (목표 충족 방식/효과/레벨) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n\r\n            {/* 우측: 저장/편집 토글 (잠금 시 계산 활성) */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 목표 충족 방식 라디오: 상관 없음일 때 비활성화 */}\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n\r\n          {/* 목표 조건 입력 행: 효율/포인트/추가 효과/효과명 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 목표 의지력 효율 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 포인트 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 추가 효과 역할군: 상관 없음/공격형/지원형 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 효과명/레벨: 역할군이 상관 없음이면 비활성화 */}\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 효과 A 선택 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 A 레벨 하한 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 선택: BOTH 모드에서만 활성 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 레벨 하한: BOTH 모드일 때만 활성 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 2열 레이아웃: 좌측 시뮬, 우측 작업 내역 */}\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 좌측(2칸): 가공 시뮬레이션 패널 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 헤더: 타이틀 및 초기화 버튼 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 사용 안내: 모든 설정 잠금 이후 액션 가능 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n\r\n            {/* 본문: 현재 상태 카드 + 선택지 카드 */}\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 현재 젬 상태/리소스 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n\r\n                {/* 핵심 스탯(효율/포인트/효과 A/B) 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  {/* 효율 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n\r\n                  {/* 포인트 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n\r\n                  {/* 효과 A: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 효과 B: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 리소스 칩: 남은 가공/리롤/비용 증감률/누적 골드 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 이번 차수 선택지 + 액션 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n\r\n                {/* 4개 슬롯: 라벨 선택 + 적용 버튼 */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {/* 현재 슬롯 라벨 변경 드롭다운 */}\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        {/* 적용 버튼: 모든 설정 잠금 및 중복 미발생 등 조건 충족 시 활성 */}\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 버튼 및 추천 문구 */}\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 EV 근거 설명 (가능 시 노출) */}\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 우측(1칸): 작업 내역 패널 (Undo/Redo 포함) */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              {/* Undo/Redo 버튼: 단축키 안내 포함 */}\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 로그 비어있음/목록 렌더링 */}\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n\r\n        {/* 결과 출력 섹션: 스켈레톤/실데이터 2상태 렌더링 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            {/* 우측 표시: 실제 사용된 Monte Carlo 횟수 및 95% CI 폭 */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 계산 중 또는 데이터 미존재 시: 스켈레톤 UI */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 스켈레톤 칩 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 스켈레톤 카드 2장 */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 실데이터 표시: 1회차 선택지 목록 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 목표 달성 확률 및 등급 확률 카드 2열 */}\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 카드: STOP_ON_SUCCESS vs RUN_TO_END */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* 좌측: STOP_ON_SUCCESS 결과 */}\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n\r\n                      {/* 우측: RUN_TO_END 결과 */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n\r\n                  {/* 등급 확률 카드: 전설/유물/고대 각각의 달성 확률 및 순서 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n\r\n                    {/* 각 등급 확률 막대 및 수치 표시 (0%도 노출) */}\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* 100% 확정 배지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n\r\n                    {/* 등급 확률 순서 요약: 0% 제외, 동률 표기 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun);\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n\r\n      {/* 전역 토스트 스택: 중앙 오버레이로 알림 표시 */}\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n\r\n      {/* 광고 영역: Kakao Adfit 삽입 */}\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","// src/CoreOnly.jsx\r\n\r\nimport React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { showToast } from \"./lib/toastBus\"; // 전역 토스트 버스\r\nimport localPatchNotes from \"./data/patch.json\"; // ← /src/data/patch.json 고정\r\n\r\n\r\nconst RAW_NOTES = Array.isArray(localPatchNotes)\r\n  ? localPatchNotes\r\n  : Array.isArray(localPatchNotes?.notes)\r\n    ? localPatchNotes.notes\r\n    : [];\r\n\r\n/**\r\n * PatchNotesModal이 기대하는 스키마로 변환:\r\n * - 우선 title/sections 스키마를 그대로 사용\r\n * - 아니라면 ver/date/items(구스키마)를 sections 한 개짜리로 매핑\r\n * - date 기준 내림차순 정렬(YYYY-MM-DD 형식 가정)\r\n */\r\nconst PATCH_NOTES = RAW_NOTES\r\n  .map((n) => {\r\n    // 새 스키마(title/sections)면 그대로\r\n    if (n && (n.title || n.sections)) {\r\n      return {\r\n        title: n.title ?? \"\",\r\n        date: n.date ?? \"\",\r\n        sections: Array.isArray(n.sections)\r\n          ? n.sections.map((s) => ({\r\n            heading: s.heading ?? \"\",\r\n            bullets: Array.isArray(s.bullets) ? s.bullets : [],\r\n          }))\r\n          : [],\r\n      };\r\n    }\r\n\r\n    // 구 스키마(ver/date/items) → 새 스키마로 변환\r\n    const title =\r\n      (n?.title && String(n.title)) ||\r\n      (n?.ver ? `+) ${n.ver} update!` : \"Update\");\r\n    const items = Array.isArray(n?.items) ? n.items : [];\r\n    return {\r\n      title,\r\n      date: n?.date || \"\",\r\n      sections: [\r\n        {\r\n          heading: \"\", // 필요하면 '변경 사항' 같은 기본 제목을 줄 수도 있음\r\n          bullets: items,\r\n        },\r\n      ],\r\n    };\r\n  })\r\n  // 최신 항목이 위로 (date 내림차순)\r\n  .sort((a, b) => String(b.date).localeCompare(String(a.date)));\r\n\r\nconst LS_PATCH_SEEN = \"LoA-PatchNotes-seen\"; // 최신 시그니처 저장 키\r\n\r\nconst patchSigOf = (n) => (n ? `${n.title || \"\"}|${n.date || \"\"}` : \"\");\r\n\r\n// 날짜가 1일(24h) 이내인지\r\nfunction isWithin1Day(dateStr) {\r\n  const d = new Date(dateStr);\r\n  if (Number.isNaN(d.getTime())) return false;\r\n  return (Date.now() - d.getTime()) <= 24 * 60 * 60 * 1000;\r\n}\r\n\r\n// (선택) JSON이 최신순이 아닐 수 있으니 정렬 보장\r\nfunction sortNotesDescByDate(arr) {\r\n  return [...arr].sort((a, b) => {\r\n    const da = new Date(a?.date || 0).getTime();\r\n    const db = new Date(b?.date || 0).getTime();\r\n    return db - da; // 최신 우선\r\n  });\r\n}\r\n\r\nfunction useScrollPast(threshold = window.innerHeight) {\r\n  const [past, setPast] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    let t = threshold;\r\n    const onResize = () => {\r\n      // threshold가 함수/음수 방지: 뷰포트 기반일 때만 갱신\r\n      if (threshold === window.innerHeight) t = window.innerHeight;\r\n    };\r\n    const onScroll = () => setPast(window.scrollY >= t);\r\n\r\n    onResize();\r\n    onScroll();\r\n    window.addEventListener(\"resize\", onResize);\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [threshold]);\r\n\r\n  return past;\r\n}\r\n\r\n/** 안전 토스트 호출 */\r\nfunction safeToast(msg, type = \"info\") {\r\n  try {\r\n    const s = typeof msg === \"string\" ? msg : JSON.stringify(msg);\r\n    showToast(s, type);\r\n  } catch {\r\n    showToast(String(msg), type);\r\n  }\r\n}\r\n\r\n/** 문의 모달 (alert → toast) */\r\nfunction InquiryModal({ open, onClose }) {\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [body, setBody] = React.useState(\"\");\r\n  const [files, setFiles] = React.useState([]);\r\n  const [sending, setSending] = React.useState(false);\r\n\r\n  // 환경설정: Vite env → meta → window 순\r\n  const endpoint =\r\n    (import.meta && import.meta.env && import.meta.env.VITE_DISCORD_PROXY) ||\r\n    (typeof document !== \"undefined\" &&\r\n      document.querySelector('meta[name=\"arcgrid-proxy\"]')?.getAttribute(\"content\")) ||\r\n    (typeof window !== \"undefined\" && window.__ARCGRID_PROXY__) ||\r\n    \"\";\r\n\r\n  const apiKey =\r\n    (import.meta && import.meta.env && import.meta.env.VITE_DISCORD_API_KEY) ||\r\n    (typeof document !== \"undefined\" &&\r\n      document.querySelector('meta[name=\"arcgrid-api-key\"]')?.getAttribute(\"content\")) ||\r\n    (typeof window !== \"undefined\" && window.__ARCGRID_API_KEY__) ||\r\n    \"\";\r\n\r\n  const MAX_FILES = 4;\r\n  const PER_FILE = 4 * 1024 * 1024; // 4MB\r\n  const TOTAL = 16 * 1024 * 1024; // 16MB\r\n  const OK_TYPES = [\"image/png\", \"image/jpeg\", \"image/webp\", \"image/gif\"];\r\n\r\n  React.useEffect(() => {\r\n    if (!open) return;\r\n    const onKey = (e) => { if (e.key === \"Escape\") onClose?.(); };\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => window.removeEventListener(\"keydown\", onKey);\r\n  }, [open, onClose]);\r\n\r\n  const handleFiles = (e) => {\r\n    const picked = Array.from(e?.target?.files || []);\r\n    if (!picked.length) return;\r\n\r\n    let next = [...files];\r\n    for (const f of picked) {\r\n      if (!OK_TYPES.includes(f.type)) {\r\n        safeToast(\"이미지 파일만 첨부할 수 있어요. (png, jpg, webp, gif)\", \"warning\");\r\n        continue;\r\n      }\r\n      if (f.size > PER_FILE) {\r\n        safeToast(`파일 ${f.name}이(가) 4MB를 초과합니다.`, \"warning\");\r\n        continue;\r\n      }\r\n      if (next.length >= MAX_FILES) {\r\n        safeToast(`이미지는 최대 ${MAX_FILES}장까지 첨부할 수 있어요.`, \"warning\");\r\n        break;\r\n      }\r\n      next.push(f);\r\n    }\r\n\r\n    const totalSize = next.reduce((s, f) => s + f.size, 0);\r\n    if (totalSize > TOTAL) {\r\n      safeToast(`이미지 총 용량은 최대 ${(TOTAL / 1024 / 1024) | 0}MB까지 가능합니다.`, \"warning\");\r\n      return;\r\n    }\r\n\r\n    setFiles(next);\r\n    if (e && e.target) e.target.value = \"\"; // 같은 파일 다시 선택 가능\r\n  };\r\n\r\n  const removeFileAt = (idx) => setFiles((arr) => arr.filter((_, i) => i !== idx));\r\n\r\n  const handleSubmit = async (e) => {\r\n    e?.preventDefault?.();\r\n    if (sending) return;\r\n    if (!title.trim() || !body.trim()) {\r\n      safeToast(\"제목과 내용을 모두 입력하세요.\", \"warning\");\r\n      return;\r\n    }\r\n    if (!endpoint) {\r\n      safeToast(\"전송 경로가 설정되지 않았습니다.\", \"error\");\r\n      return;\r\n    }\r\n    try {\r\n      setSending(true);\r\n\r\n      const fd = new FormData();\r\n      const nonce = (crypto && crypto.randomUUID && crypto.randomUUID()) || `${Date.now()}-${Math.random()}`;\r\n      fd.append(\"title\", title.trim().slice(0, 80));\r\n      fd.append(\"content\", body.trim().slice(0, 4000));\r\n      fd.append(\"nonce\", nonce);\r\n      files.forEach((f) => fd.append(\"files[]\", f, f.name));\r\n\r\n      const url = `${endpoint}${apiKey ? `?key=${encodeURIComponent(apiKey)}` : \"\"}`;\r\n      const res = await fetch(url, { method: \"POST\", body: fd });\r\n      const data = await res.json().catch(() => ({}));\r\n      if (data && data.ok) {\r\n        safeToast(\"문의가 전송되었습니다. 감사합니다!\", \"success\");\r\n        setTitle(\"\"); setBody(\"\"); setFiles([]);\r\n        onClose?.();\r\n      } else {\r\n        safeToast(\"전송 실패: 잠시 후 다시 시도해 주세요.\", \"error\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      safeToast(\"전송 중 오류가 발생했습니다.\", \"error\");\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  // 항상 렌더하되, 열릴 때만 보이도록 처리 (깜빡임/지연 없음)\r\n  return (\r\n    <div\r\n      id=\"inquiry-modal\"\r\n      className=\"fixed inset-0 z-[100] flex items-center justify-center px-4 transition-opacity duration-150\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-hidden={open ? \"false\" : \"true\"}\r\n      onClick={onClose}\r\n      style={{\r\n        // 숨김 상태: 보이지 않고, 포인터 막고, 레이아웃 영향 최소화\r\n        opacity: open ? 1 : 0,\r\n        visibility: open ? \"visible\" : \"hidden\",\r\n        pointerEvents: open ? \"auto\" : \"none\",\r\n        // 배경 반투명은 여기서 처리 (open에 관계없이 프리렌더)\r\n        backgroundColor: \"rgba(0,0,0,0.40)\",\r\n        backdropFilter: \"blur(1px)\"\r\n      }}\r\n    >\r\n      <div\r\n        className=\"w-full max-w-lg rounded-2xl bg-white shadow-xl p-4 sm:p-5\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-base sm:text-lg font-semibold\">문의하기</h3>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"rounded-lg p-1 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-[#a399f2]/40\"\r\n            aria-label=\"닫기\"\r\n          >\r\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\"><path d=\"M6 6l12 12M6 18L18 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" /></svg>\r\n          </button>\r\n        </div>\r\n\r\n        <p className=\"mt-1 text-xs text-gray-600\">\r\n          제목/내용과 함께 이미지를 <b>최대 4장</b>까지 첨부할 수 있어요. (파일당 4MB, 총 16MB)\r\n        </p>\r\n\r\n        <form onSubmit={handleSubmit} className=\"mt-3 space-y-3\">\r\n          <div>\r\n            <label className=\"block text-xs text-gray-500 mb-1\">제목</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              maxLength={80}\r\n              placeholder=\"예) 아크그리드 계산 관련 문의\"\r\n              className=\"block mb-1 h-10 w-full px-3 rounded-xl border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n            />\r\n            <div className=\"text-[11px] text-gray-400 text-right\">{title.length}/80</div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-xs text-gray-500 mb-1\">내용</label>\r\n            <textarea\r\n              value={body}\r\n              onChange={(e) => setBody(e.target.value)}\r\n              rows={6}\r\n              maxLength={4000}\r\n              placeholder=\"문의 내용을 적어주세요. (재현 방법, 스크린샷 링크 등)\"\r\n              className=\"block mb-1 w-full px-3 py-2 rounded-xl border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n            />\r\n            <div className=\"text-[11px] text-gray-400 text-right\">{body.length}/4000</div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-xs text-gray-500 mb-1\">\r\n              이미지 첨부 (선택, 최대 4장)\r\n            </label>\r\n\r\n            <div\r\n              className={[\r\n                \"rounded-2xl border-2 border-dashed\",\r\n                \"border-gray-300 bg-gray-50/60 hover:bg-gray-50 transition\",\r\n                \"p-4 text-center\"\r\n              ].join(\" \")}\r\n              onDragOver={(e) => { e.preventDefault(); }}\r\n              onDrop={(e) => {\r\n                e.preventDefault();\r\n                const dropped = Array.from(e.dataTransfer?.files || []);\r\n                if (!dropped.length) return;\r\n                const fakeEvent = { target: { files: dropped } };\r\n                handleFiles(fakeEvent);\r\n              }}\r\n            >\r\n              <input\r\n                id=\"inq-files\"\r\n                type=\"file\"\r\n                accept={[\"image/png\", \"image/jpeg\", \"image/webp\", \"image/gif\"].join(\",\")}\r\n                multiple\r\n                onChange={handleFiles}\r\n                disabled={sending}\r\n                className=\"sr-only\"\r\n              />\r\n\r\n              <div className=\"flex flex-col items-center justify-center gap-2\">\r\n                <div className=\"text-[13px] text-gray-600\">\r\n                  파일을 이곳에 <b>끌어다 놓기</b> 또는\r\n                  <label\r\n                    htmlFor=\"inq-files\"\r\n                    className={[\r\n                      \"inline-flex items-center justify-center gap-2\",\r\n                      \"px-3 h-8 ml-1 rounded-xl shadow-sm cursor-pointer\",\r\n                      \"border inline-flex items-center justify-center bg-white hover:bg-gray-50\"\r\n                    ].join(\" \")}\r\n                    title=\"이미지 선택\"\r\n                  >\r\n                    이미지 선택\r\n                  </label>\r\n                </div>\r\n                <div className=\"text-[11px] text-gray-500\">\r\n                  허용: png, jpg, webp, gif · 파일당 4MB · 총 16MB\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 미리보기 */}\r\n            {files.length > 0 && (\r\n              <div className=\"mt-2 grid grid-cols-3 sm:grid-cols-4 gap-2\">\r\n                {files.map((f, idx) => {\r\n                  const url = URL.createObjectURL(f);\r\n                  return (\r\n                    <div key={idx} className=\"relative\">\r\n                      <img\r\n                        src={url}\r\n                        alt={f.name}\r\n                        className=\"h-24 w-full object-cover rounded-lg border\"\r\n                        onLoad={() => URL.revokeObjectURL(url)}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeFileAt(idx)}\r\n                        className=\"absolute -top-2 -right-2 bg-white border rounded-full w-6 h-6 text-xs font-bold\"\r\n                        title=\"제거\"\r\n                        aria-label=\"첨부 제거\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"pt-1 flex items-center gap-2 justify-end\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"h-10 px-3 rounded-xl border inline-flex items-center justify-center bg-white hover:bg-gray-50\"\r\n            >\r\n              취소\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={sending}\r\n              className={[\r\n                \"h-10 px-3 rounded-xl inline-flex items-center justify-center gap-2\",\r\n                \"text-white\",\r\n                \"hover:brightness-95 active:brightness-90\",\r\n                \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/50\",\r\n                sending ? \"opacity-70 cursor-not-allowed\" : \"\"\r\n              ].join(\" \")}\r\n              style={{ backgroundColor: \"#a399f2\" }}\r\n            >\r\n              {sending ? \"전송 중…\" : \"전송하기\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// 보조 함수: **bold** 처리\r\nfunction emphasize(text) {\r\n  const parts = String(text).split(/(\\*\\*[^*]+\\*\\*)/g);\r\n  return parts.map((p, i) =>\r\n    p.startsWith(\"**\") && p.endsWith(\"**\")\r\n      ? <strong key={i}>{p.slice(2, -2)}</strong>\r\n      : <React.Fragment key={i}>{p}</React.Fragment>\r\n  );\r\n}\r\n\r\n// 보조 함수: bullet 안 줄바꿈(\\n)과 단락(\\n\\n) 처리\r\nfunction renderBullet(text) {\r\n  const paras = String(text).split(/\\n{2,}/); // \\n\\n 기준 단락\r\n  return paras.map((p, pi) => {\r\n    const lines = p.split(/\\n/);\r\n    return (\r\n      <p key={pi} className={pi ? \"mt-1.5\" : \"\"}>\r\n        {lines.map((ln, li) => (\r\n          <React.Fragment key={li}>\r\n            {emphasize(ln)}\r\n            {li < lines.length - 1 ? <br /> : null}\r\n          </React.Fragment>\r\n        ))}\r\n      </p>\r\n    );\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────────────────\r\n// 부드러운 접힘/펼침(닫힘 애니메이션 포함) - 개선판\r\n// ─────────────────────────────────────────────────────────────\r\nfunction Slide({ open, children, duration = 220 }) {\r\n  const ref = React.useRef(null);\r\n  const mounted = React.useRef(false);\r\n  const endHandlerRef = React.useRef(null);\r\n\r\n  React.useLayoutEffect(() => {\r\n    const el = ref.current;\r\n    if (!el) return;\r\n\r\n    // 이전 transitionend 리스너 제거\r\n    if (endHandlerRef.current) {\r\n      el.removeEventListener(\"transitionend\", endHandlerRef.current);\r\n      endHandlerRef.current = null;\r\n    }\r\n\r\n    el.style.overflow = \"hidden\";\r\n    el.style.willChange = \"max-height\";\r\n    el.style.transition = `max-height ${duration}ms ease`;\r\n\r\n    const setMax = (v) => { el.style.maxHeight = v; };\r\n\r\n    // 첫 마운트: 상태에 맞춰 바로 세팅(깜빡임 없음)\r\n    if (!mounted.current) {\r\n      setMax(open ? \"none\" : \"0px\");\r\n      mounted.current = true;\r\n      return;\r\n    }\r\n\r\n    const measure = () => el.scrollHeight + \"px\";\r\n\r\n    if (open) {\r\n      // 열기: 0 → px → (end) none\r\n      // 시작점 강제 커밋 후 높이로 전환 (동시 토글에도 안전)\r\n      setMax(\"0px\");\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          setMax(measure());\r\n          const onEnd = () => {\r\n            setMax(\"none\"); // 열림 유지 중 내용 높이 변화 대응\r\n            el.removeEventListener(\"transitionend\", onEnd);\r\n            endHandlerRef.current = null;\r\n          };\r\n          el.addEventListener(\"transitionend\", onEnd);\r\n          endHandlerRef.current = onEnd;\r\n        });\r\n      });\r\n    } else {\r\n      // 닫기: none/px → px → 0 (동시 토글에서도 스무스하게)\r\n      // none이면 현재 높이로 고정해서 시작\r\n      const curMax = getComputedStyle(el).maxHeight;\r\n      if (curMax === \"none\") setMax(measure());\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          setMax(\"0px\");\r\n        });\r\n      });\r\n    }\r\n  }, [open, children, duration]);\r\n\r\n  return (\r\n    <div ref={ref} aria-hidden={!open}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// ─────────────────────────────────────────────────────────────\r\n// 패치 노트 모달 (리스트/아코디언, 하나만 열림, 최신 항목 기본 오픈)\r\n// ─────────────────────────────────────────────────────────────\r\nfunction PatchNotesModal({ open, onClose, notes }) {\r\n  // 모달 열릴 때 0번(최신) 오픈\r\n  const [openIdx, setOpenIdx] = React.useState(0);\r\n  React.useEffect(() => {\r\n    if (open) setOpenIdx(0);\r\n  }, [open]);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) return;\r\n    const onKey = (e) => { if (e.key === \"Escape\") onClose?.(); };\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => window.removeEventListener(\"keydown\", onKey);\r\n  }, [open, onClose]);\r\n\r\n  const toggle = (idx) => {\r\n    setOpenIdx((cur) => (cur === idx ? -1 : idx));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 z-[100] flex items-center justify-center px-4 transition-opacity duration-150\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-hidden={open ? \"false\" : \"true\"}\r\n      onClick={onClose}\r\n      style={{\r\n        opacity: open ? 1 : 0,\r\n        visibility: open ? \"visible\" : \"hidden\",\r\n        pointerEvents: open ? \"auto\" : \"none\",\r\n        backgroundColor: \"rgba(0,0,0,0.40)\",\r\n        backdropFilter: \"blur(1px)\"\r\n      }}\r\n    >\r\n      <div\r\n        className=\"w-full max-w-2xl rounded-2xl bg-white shadow-xl p-5\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold\">패치 노트</h3>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"rounded-lg p-1 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-[#a399f2]/40\"\r\n            aria-label=\"닫기\"\r\n          >\r\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M6 6l12 12M6 18L18 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"mt-3 max-h-[70vh] overflow-auto pr-1\">\r\n          {(notes ?? []).length === 0 ? (\r\n            <div className=\"text-sm text-gray-600\">표시할 내용이 없습니다.</div>\r\n          ) : (\r\n            <ul className=\"divide-y\">\r\n              {(notes ?? []).map((n, idx) => {\r\n                const isOpen = openIdx === idx;\r\n                return (\r\n                  <li key={idx} className=\"py-2\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => toggle(idx)}\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\" || e.key === \" \") {\r\n                          e.preventDefault();\r\n                          toggle(idx);\r\n                        }\r\n                      }}\r\n                      aria-expanded={isOpen}\r\n                      className={`w-full grid grid-cols-[1fr_auto_auto] items-center gap-3 text-left rounded-lg px-2 py-2\r\n                        hover:bg-gray-50\r\n                        border border-2 ${isOpen ? \"border-[#a399f2]/30 bg-gray-50\" : \"border-transparent\"}`}\r\n                    >\r\n                      {/* 좌측: 제목 */}\r\n                      <span className=\"min-w-0 truncate font-medium\">\r\n                        {n.title || \"Update\"}\r\n                      </span>\r\n                      {/* 중앙: 날짜 */}\r\n                      <span className=\"text-[11px] text-gray-500\">\r\n                        {n.date || \"\"}\r\n                      </span>\r\n                      {/* 우측: 화살표 */}\r\n                      <span aria-hidden className=\"flex items-center\">\r\n                        <ChevronDown\r\n                          size={16}\r\n                          className={`transition-transform text-gray-500 ${isOpen ? \"rotate-180\" : \"\"}`}\r\n                        />\r\n                      </span>\r\n                    </button>\r\n\r\n                    <Slide open={isOpen}>\r\n                      <div className=\"px-2 pt-2 pb-3\">\r\n                        {(n.sections ?? []).map((sec, si) => (\r\n                          <div key={si} className=\"mb-3 last:mb-0\">\r\n                            {sec.heading ? <div className=\"font-semibold mb-1\">{sec.heading}</div> : null}\r\n                            <ul className=\"list-disc pl-5 space-y-1 text-[15px] leading-7\">\r\n                              {(sec.bullets ?? []).map((b, bi) => (\r\n                                <li key={bi}>{renderBullet(b)}</li>\r\n                              ))}\r\n                            </ul>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </Slide>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n/** TOP 전용 FAB */\r\nfunction TopFab() {\r\n  const show = useScrollPast(300); // 혹은 600, 1.25*window.innerHeight 등\r\n  return (\r\n    <div className=\"fixed right-4 bottom-4 sm:right-6 sm:bottom-6\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          show ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n/** 페이지 루트 */\r\nexport default function CoreOnly() {\r\n  const [inqOpen, setInqOpen] = React.useState(false);\r\n  const [patchOpen, setPatchOpen] = React.useState(false);\r\n\r\n  // 정렬 보장(최신이 0번)\r\n  const notesSorted = React.useMemo(() => sortNotesDescByDate(PATCH_NOTES), []);\r\n  const latest = notesSorted[0];\r\n\r\n  // 처음 진입 시 NEW 여부 계산 (최신이 1일 이내 & 이전에 본 적 없음)\r\n  const [hasNew, setHasNew] = React.useState(() => {\r\n    if (!latest) return false;\r\n    if (!isWithin1Day(latest.date)) return false;\r\n    const seen = localStorage.getItem(LS_PATCH_SEEN);\r\n    return seen !== patchSigOf(latest);\r\n  });\r\n\r\n  const openPatch = React.useCallback(() => {\r\n    setPatchOpen(true);\r\n    // 열면 본 것으로 처리 -> NEW 제거 + 저장\r\n    if (latest) {\r\n      localStorage.setItem(LS_PATCH_SEEN, patchSigOf(latest));\r\n      setHasNew(false);\r\n    }\r\n  }, [latest]);\r\n\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n<header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n  <div className=\"mx-auto max-w-6xl px-3 sm:px-6 py-2 sm:py-3\">\r\n    <nav aria-label=\"Core pages\">\r\n      <ul\r\n        className={[\r\n          \"mx-auto w-full rounded-xl\",\r\n          // 기본: 가운데 정렬된 가로 탭\r\n          \"flex flex-wrap justify-center gap-1\",\r\n          // 모바일(≤480px): 2x2 그리드 전환 + 여백 축소\r\n          \"max-[480px]:grid max-[480px]:grid-cols-2 max-[480px]:gap-1.5\",\r\n        ].join(\" \")}\r\n      >\r\n        <li>\r\n          <NavLink\r\n            to=\"/gem\"\r\n            className={({ isActive }) =>\r\n              [\r\n                // 모바일 여백 축소: px-2.5 / h-9, 데스크톱은 기존 크기\r\n                \"px-1.5 h-7 inline-flex items-center justify-center text-sm font-medium rounded-lg transition\",\r\n                \"sm:px-4 sm:h-auto sm:py-2\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\"\r\n                  : \"text-gray-700 hover:bg-gray-50\",\r\n                // 모바일 셀 가득 채우기\r\n                \"max-[480px]:w-full\",\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 가공 헬퍼\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            to=\"/optimizer\"\r\n            className={({ isActive }) =>\r\n              [\r\n                \"px-1.5 h-7 inline-flex items-center justify-center text-sm font-medium rounded-lg transition\",\r\n                \"sm:px-4 sm:h-auto sm:py-2\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\"\r\n                  : \"text-gray-700 hover:bg-gray-50\",\r\n                \"max-[480px]:w-full\",\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 장착 헬퍼\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          {/* 라우팅 이동 없이 모달만 열기 */}\r\n          <NavLink\r\n            to=\"/patch\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              openPatch();\r\n            }}\r\n            className={() =>\r\n              [\r\n                \"px-1.5 h-7 inline-flex items-center justify-center text-sm font-medium rounded-lg transition\",\r\n                \"sm:px-4 sm:h-auto sm:py-2\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                \"text-gray-700 hover:bg-gray-50\",\r\n                \"max-[480px]:w-full\",\r\n              ].join(\" \")\r\n            }\r\n            aria-haspopup=\"dialog\"\r\n            aria-expanded={patchOpen}\r\n          >\r\n            <span className=\"inline-flex items-center gap-1\">\r\n              <span>패치 노트</span>\r\n              {hasNew && (\r\n                <span\r\n                  className=\"inline-flex items-center rounded-full bg-[#a399f2] text-white\r\n                  text-[9px] font-semibold leading-none px-[6px] py-1 motion-safe:animate-[pulse_1.6s_ease-in-out_infinite]\"\r\n                >\r\n                  NEW\r\n                </span>\r\n              )}\r\n            </span>\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          {/* 라우팅 이동 없이 '문의하기' 모달 열기 */}\r\n          <NavLink\r\n            to=\"/inquiry\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              setInqOpen(true);\r\n            }}\r\n            className={() =>\r\n              [\r\n                \"px-1.5 h-7 inline-flex items-center justify-center text-sm font-medium rounded-lg transition\",\r\n                \"sm:px-4 sm:h-auto sm:py-2\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                \"text-gray-700 hover:bg-gray-50\",\r\n                \"max-[480px]:w-full\",\r\n              ].join(\" \")\r\n            }\r\n            aria-haspopup=\"dialog\"\r\n            aria-expanded={false}\r\n            aria-controls=\"inquiry-modal\"\r\n          >\r\n            <span className=\"inline-flex items-center gap-1\">\r\n              <span>문의하기</span>\r\n            </span>\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</header>\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            <Route index element={<Navigate to=\"/optimizer\" replace />} />\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n            <Route path=\"*\" element={<Navigate to=\"/optimizer\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n\r\n      <TopFab />\r\n      <InquiryModal open={inqOpen} onClose={() => setInqOpen(false)} />\r\n      <PatchNotesModal open={patchOpen} onClose={() => setPatchOpen(false)} notes={notesSorted} />\r\n    </HashRouter>\r\n  );\r\n}\r\n"],"names":["adRef","useRef","useEffect","ins","document","createElement","className","style","display","setAttribute","script","type","async","src","current","innerHTML","appendChild","_jsx","ref","showToast","msg","arguments","length","undefined","window","dispatchEvent","CustomEvent","detail","LABEL2KEY","parseNoShift","rawRight","norm","s","String","replace","split","map","v","trim","filter","Boolean","L","R","LABELS","parseRight","text","raw","t","clean","labelKey","lab","includes","level","NaN","nums","match","parseInt","rows","N","Math","max","i","_L$i","_R$i","leftStr","right","push","will","rawLeft","ScanFromImageModal","_ref","_progress$pct","open","onClose","onScanned","busy","setBusy","useState","progress","setProgress","label","pct","indeterminate","file","setFile","imgURL","setImgURL","imgNatural","setImgNatural","w","h","rectRel","setRectRel","excludesRel","setExcludesRel","tempExcludeRel","setTempExcludeRel","drag","setDrag","mode","setMode","wrapRef","imgRef","inputRef","worker","useMemo","Worker","URL","onMessage","ev","payload","data","console","groupCollapsed","log","joinedWords","groupEnd","parsed","forEach","p","_p$labelKey","Number","isFinite","gems","skipped","list","toNum","n","toKey","_LABEL2KEY$lab","clampLv","lv","min","gemIdx","a","b","point","o1k","o2k","opt1","opt2","_raw","leftA","rightA","leftB","rightB","pairParsedToGems","g","warn","join","skippedGems","_payload$message","error","message","addEventListener","removeEventListener","url","createObjectURL","revokeObjectURL","resetSelections","React","pasteFromClipboard","_navigator$clipboard","navigator","clipboard","read","items","item","types","startsWith","blob","getType","File","Date","now","err","getRelPoint","e","_wrapRef$current","r","getBoundingClientRect","x","y","clientX","left","clientY","top","width","height","rectRelToNatural","rel","_wrapRef$current2","sx","sy","round","onPaste","dt","clipboardData","it","_it$type","_it$getAsFile","f","getAsFile","call","preventDefault","capture","createPortal","children","_jsxs","onClick","X","size","pickFile","_inputRef$current","click","disabled","ImageUp","title","ClipboardPaste","BoxSelect","Eraser","Trash2","runManual","rect","excludes","arrayBuffer","then","buf","postMessage","mime","lang","ScanLine","accept","onChange","_e$target$files","target","files","onMouseDown","button","start","x0","y0","x1","y1","onMouseMove","cur","abs","onMouseUp","prev","id","random","toString","slice","onDragStart","cursor","alt","onLoad","img","currentTarget","naturalWidth","naturalHeight","draggable","position","border","background","pointerEvents","zIndex","stopPropagation","MinusCircle","body","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_SUPPLY_OPTIONS","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEALER_WEIGHTS","DEFAULT_WEIGHTS","DEALER_LEVEL_CURVES","SUPPORT_LEVEL_CURVES","sanitizeWeights","base","Object","keys","k","num","levelValueByRole","role","key","lvl","scoreGemForRole","gem","weights","sum","_w$key","allow","Array","isArray","has","roleAllowsKey","basePct","scale","o1v","o2v","CORE_NAME_ITEMS","value","CATEGORY_LABEL","order","chaos","LS_KEY","JOBS","_ARC_CORES$jobs","ARC_CORES","CORE_NAME_BY_GROUP","GROUP_BY_CORE_NAME","CORE_ORDER","TARGET_MAX_BY_GRADE","getPresetItems","job","groupKey","_ARC_CORES$data$job2","_ARC_CORES$data2","getEffectsForPreset","preset","_ARC_CORES$data$job3","_ARC_CORES$data3","row","find","arr","flatMap","m","_ref2","_item$point","_ref3","_ref4","_ref5","_item$text","P","포인트","desc","효과","entries","_ref6","line","sort","normalizeEffects","uid","fmtByRole","toFixed","maskWeightsForRole","next","loadFromStorage","localStorage","getItem","JSON","parse","dragPortal","PortalAwareDraggable","_ref7","draggableId","index","Draggable","provided","snapshot","rendered","isDragging","Dropdown","_ref8","placeholder","bordered","setOpen","focusedIndex","setFocusedIndex","btnRef","menuRef","itemRefs","menuPos","forceTick","listboxId","initFocusIndex","useCallback","sel","findIndex","firstEnabled","refs","handler","refsArray","handlerRef","listener","_handlerRef$current","some","contains","useOnClickOutside","useLayoutEffect","bottom","onScroll","_btnRef$current","passive","requestAnimationFrame","_ref9","_ref9$focus","el","focus","cancelAnimationFrame","selected","getNextEnabled","dir","step","menu","AnimatePresence","motion","ul","tabIndex","initial","opacity","animate","exit","transition","duration","onKeyDown","first","last","_btnRef$current2","_btnRef$current2$quer","_btnRef$current2$quer2","querySelector","_btnRef$current3","_btnRef$current3$quer","_btnRef$current3$quer2","isSelected","isActive","onMouseEnter","onItemMouseEnter","_btnRef$current4","_btnRef$current4$quer","_btnRef$current4$quer2","ChevronUp","ChevronDown","ToastStack","_ref0","toasts","wrap","btn","clsByType","div","stiffness","damping","NumberInput","_ref1","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","clamp","inputMode","onBlur","onWheel","blur","CoreEffectInfo","_ref10","_TARGET_MAX_BY_GRADE$","_GROUP_BY_CORE_NAME$c","_CORE_LABEL$grade","_CORE_LABEL$grade2","_CORE_LABEL$grade3","_CORE_LABEL$grade4","_CORE_LABEL$grade5","grade","category","coreName","supply","effects","maxP","coreShort","LABEL_CLS","isAncient","toLowerCase","gradeColorCls","toUpperCase","onMouseLeave","onFocus","Info","color","pickRight","out","_","pickSlashValueByGrade","LoACoreOptimizer","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","_loadFromStorage$role","_loadFromStorage2","setWeights","saved","every","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","remove","setToasts","setTimeout","onEvt","useToasts","quickAddMode","setQuickAddMode","scanOpen","setScanOpen","dataVersion","setDataVersion","stale","setStale","didMountRef","cores","isComputing","results","calculate","hasCalculated","calcVersion","setCalcVersion","setHasCalculated","computing","setComputing","phase","coreIndex","coreCount","coreDone","coreTotal","rate","elapsedMs","etaMs","pulse","priorityPicks","setPriorityPicks","workerRef","paramsRef","_workerRef$current","_workerRef$current2","terminate","cancelled","flushSync","_paramsRef$current$co","Promise","resolve","Error","_e$data","done","total","_p$pulse","floor","picks","c","perCoreLimit","useOptimizer","selectedJob","setSelectedJob","_loadFromStorage$sele","_loadFromStorage3","fileInputRef","buildSnapshot","app","version","exportedAt","toISOString","handleExportJson","Blob","stringify","d","stamp","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","jobPart","href","download","handleImportClick","_fileInputRef$current","handleImportFile","reader","FileReader","onload","json","result","onerror","readAsText","setCores","updater","setGems","_prev$category","mapScannedGemToItem","_g$opt1$label","_g$opt","_g$opt2","_g$opt2$label","_g$opt3","_g$opt4","handleScanned","_items","lastId","sortOrder","setSortOrder","isNum","applyGemSort","withIdx","A","B","awv","bwv","apv","bpv","_ref11","prevByCat","_prevByCat$category","changed","_items$0$value","_items$","name","nextPreset","updateGem","patch","updateCore","cs","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","idx","displayIndexGem","resolveSupply","core","_core$supply","def","QuickAddPad","_ref12","onAdd","focusOnMount","setO1k","setO2k","setO1v","setO2v","setWill","setPoint","firstRef","focusAfterSubmitRef","WILL_INPUT_ID","_firstRef$current","_firstRef$current$foc","_firstRef$current2","_firstRef$current2$se","select","handleSubmit","_e$preventDefault","_firstRef$current$sel","_firstRef$current3","getElementById","_el$select","onKeyDownSubmit","shiftKey","onSubmit","Plus","setItem","saveToStorage","backgroundImage","backgroundAttachment","Download","Upload","val","_items$0$value2","_items$2","j","addCore","_getPresetItems$","nextName","existingNames","nextAvailableCoreName","minThreshold","enforceMin","DragDropContext","evt","Event","onDragEnd","destination","from","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","_CORE_SUPPLY_OPTIONS$","_CORE_THRESHOLDS$c$gr","supplyOptions","gradeMax","thresholds","targetItems","concat","takenNames","coreNameItems","allowed","_ARC_CORES$data$job","_ARC_CORES$data","groups","getAllowedCoreNameSet","prov","_c$minThreshold","draggableProps","dragHandleProps","_CORE_SUPPLY_OPTIONS$2","maxAllowed","nextMin","opts","nextSupply","_presetItems$0$value","_presetItems$","presetItems","resolvedPreset","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","addGem","Image","removeGem","levels","allowSet","values","isCurve","_ref13","_ref14","totalRoleSum","reduce","acc","roleSum","_getPresetItems$2","_c$preset","pick","hasResult","minOfGrade","presetFallback","_Fragment","totalWill","totalPoint","maxThr","thr","_ref15","_g$wwill","_g$point","gi","disp","wwill","KakaoAdfit","toLocaleString","USE_ANTITHETIC","AUTO_SCALE_RARE","OFFICIAL_RNG","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","SIM_OPTIONS","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","lo","hi","zeroSuccessUpperBound","alpha","pow","epsilonByTrials","batchByTrials","fmtProbSmart","fmtProb","fmtNum","goldPerSuccess","expectedGold","Infinity","burdenBadge","tone","estimateRate","successes","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","score","meetsTargetByMode","abMode","tgtNames","pool","isAny","nm","TA","aName","TB","bName","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","gold","rrs","unlocked","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","ci","low","high","halfWidth","localMaxTrials","forceRare","tiers","hardCap","nextTier","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","toneBtn","success","info","warning","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","pad","getSeconds","addLog","entry","time","undo","newPast","redo","restFuture","onKey","ctrlKey","metaKey","diffStats","after","parts","pushIf","old","bCand","allOptionLabels","defaultLabels","want","_allOptionLabels$curs","_allOptionLabels$curs2","manLabels","setManLabels","_allOptionLabels$i","used","replacement","l","resultStop","setResultStop","resultRun","setResultRun","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","pct2","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","RotateCcw","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","gps","badge","delay","grades","grad","comps","eps","diff","rankGradeOrder","PATCH_NOTES","localPatchNotes","notes","_n$title","_n$date","sections","date","_s$heading","heading","bullets","ver","localeCompare","LS_PATCH_SEEN","patchSigOf","safeToast","InquiryModal","_document$querySelect","_document$querySelect2","setTitle","setBody","setFiles","sending","setSending","endpoint","getAttribute","__ARCGRID_PROXY__","apiKey","__ARCGRID_API_KEY__","TOTAL","OK_TYPES","handleFiles","_e$target","picked","visibility","backgroundColor","backdropFilter","viewBox","stroke","strokeWidth","strokeLinecap","fd","FormData","nonce","crypto","randomUUID","append","encodeURIComponent","fetch","method","catch","ok","maxLength","onDragOver","onDrop","_e$dataTransfer","dropped","dataTransfer","multiple","removeFileAt","emphasize","endsWith","Slide","mounted","endHandlerRef","overflow","willChange","setMax","measure","scrollHeight","onEnd","getComputedStyle","PatchNotesModal","openIdx","setOpenIdx","toggle","_n$sections","isOpen","sec","si","_sec$bullets","bi","pi","lines","ln","li","TopFab","show","threshold","innerHeight","setPast","onResize","scrollY","useScrollPast","scrollTo","behavior","CoreOnly","inqOpen","setInqOpen","patchOpen","setPatchOpen","notesSorted","sortNotesDescByDate","da","getTime","latest","hasNew","setHasNew","dateStr","isNaN","isWithin1Day","openPatch","HashRouter","basename","NavLink","to","Routes","Route","element","Navigate","path"],"sourceRoot":""}