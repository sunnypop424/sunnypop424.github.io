{"version":3,"file":"static/js/299.8a9955dc.chunk.js","mappings":"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","sources":["components/LoACoreOptimizer.jsx","components/GemSimulator.jsx","CoreOnly.jsx","components/KakaoAdfit.jsx"],"sourcesContent":["// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useMemo, useState, useRef, useLayoutEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n/* =============================== 상수 정의 =============================== */\r\nconst CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nconst CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nconst CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nconst GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nconst OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nconst OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nconst ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\nconst DEFAULT_WEIGHTS = { atk: 1, add: 1, boss: 1, brand: 1, allyDmg: 1, allyAtk: 1 };\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n// 카테고리: 질서 / 혼돈\r\nconst CATEGORY_LABEL = {\r\n  order: \"질서\",\r\n  chaos: \"혼돈\",\r\n};\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\"; // 로컬스토리지 키\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\nfunction sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nfunction scoreGemForRole(g, role, w) {\r\n  if (role == null) return 0; // 역할 미선택이면 유효옵션 점수는 0으로(정렬에 영향 최소화)\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? g.o1v * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? g.o2v * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nfunction* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1; while (p >= 0 && idx[p] === n - k + p) p--; if (p < 0) break; idx[p]++; for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\nfunction thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nfunction scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000) + (totalPoint * 10_000) + ((5_000 - totalWill) * 10) + roleSum - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nfunction enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin) {\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n  const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n  const effMin = minThreshold ?? minOfGrade;\r\n  const effEnforce = enforceMin || minThreshold == null;\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) { all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }); continue; }\r\n    for (const combo of combinations(pool, k)) {\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n  all.sort((a, b) => b.score - a.score);\r\n  let filtered;\r\n  if (effEnforce) {\r\n    filtered = all.filter(ci => {\r\n      const maxThr = Math.max(0, ...ci.thr);\r\n      return ci.list.length > 0 && maxThr >= (effMin ?? 0);\r\n    });\r\n  } else {\r\n    filtered = all.filter(ci => ci.list.length > 0 && ci.thr.length > 0);\r\n  }\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n  return filtered;\r\n}\r\n/* ===== 전역 최적 배치: thr 합 최대(1순위) + 강제는 하한(≥min) + 우선순위 사전식 ===== */\r\nfunction optimizeRoundRobinTargets(cores, pool, role, weights, perCoreLimit = 300) {\r\n  const W = sanitizeWeights(weights);\r\n  const thresholdsOf = (grade) => CORE_THRESHOLDS[grade];\r\n  const minOf = (grade) => Math.min(...thresholdsOf(grade));\r\n  const thrMax = (ci) => (ci?.thr?.length ? Math.max(...ci.thr) : 0);\r\n\r\n  const emptyPick = { list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 };\r\n\r\n  // 표시 우선순위(위→아래)\r\n  const order = cores.map((_, i) => i);\r\n  const enforcedIdx = cores.map((c, i) => (c.enforceMin ? i : -1)).filter(i => i !== -1);\r\n\r\n  const candidatesFor = (core, gemPool) => {\r\n    const arr = enumerateCoreCombos(gemPool, core.grade, role, W, undefined, false)\r\n      .filter(ci => ci.list.length > 0 && ci.thr.length > 0);\r\n    arr.sort((a, b) => {\r\n      const ta = thrMax(a), tb = thrMax(b);\r\n      if (ta !== tb) return tb - ta;\r\n      if (a.totalPoint !== b.totalPoint) return b.totalPoint - a.totalPoint;\r\n      if (a.totalWill !== b.totalWill) return a.totalWill - b.totalWill;\r\n      return b.roleSum - a.roleSum;\r\n    });\r\n    return arr.slice(0, Math.max(perCoreLimit, 10000));\r\n  };\r\n\r\n  const allCandidates = order.map(i => candidatesFor(cores[i], pool));\r\n\r\n  function betterThan(A, B) {\r\n    if (!B) return true;\r\n    if (A.sumThr !== B.sumThr) return A.sumThr > B.sumThr;\r\n    for (let i = 0; i < A.thrVec.length; i++) {\r\n      if (A.thrVec[i] !== B.thrVec[i]) return A.thrVec[i] > B.thrVec[i];\r\n    }\r\n    if (A.sumPoint !== B.sumPoint) return A.sumPoint > B.sumPoint;\r\n    for (let i = 0; i < A.ptVec.length; i++) {\r\n      if (A.ptVec[i] !== B.ptVec[i]) return A.ptVec[i] > B.ptVec[i];\r\n    }\r\n    if (A.sumWill !== B.sumWill) return A.sumWill < B.sumWill;\r\n    if (A.roleSum !== B.roleSum) return A.roleSum > B.roleSum;\r\n    return false;\r\n  }\r\n\r\n  // ---- 공통 백트래킹: 주어진 enforceSet에 대해 최적해 탐색 ----\r\n  function trySolve(enforceSet, blockedSet = new Set()) {\r\n    let best = null;\r\n    const used = new Set();\r\n\r\n    function backtrack(pos, picksAcc, sumThrAcc, sumPointAcc, sumWillAcc, roleSumAcc, thrVec, ptVec) {\r\n      if (pos === order.length) {\r\n        // 강제 코어 하한 검사\r\n        for (const idx of enforceSet) {\r\n          const effMin = (cores[idx].minThreshold ?? minOf(cores[idx].grade));\r\n          const t = thrMax(picksAcc[idx]);\r\n          if (t < effMin) return;\r\n        }\r\n        const cand = {\r\n          picks: picksAcc.map(x => x),\r\n          sumThr: sumThrAcc,\r\n          sumPoint: sumPointAcc,\r\n          sumWill: sumWillAcc,\r\n          roleSum: roleSumAcc,\r\n          thrVec: thrVec.slice(),\r\n          ptVec: ptVec.slice(),\r\n        };\r\n        if (betterThan(cand, best)) best = cand;\r\n        return;\r\n      }\r\n\r\n      const coreIdx = order[pos];\r\n      const isEnf = enforceSet.has(coreIdx);\r\n      const effMin = isEnf ? (cores[coreIdx].minThreshold ?? minOf(cores[coreIdx].grade)) : -Infinity;\r\n\r\n      // (신규) 차단 코어는 무조건 빈 선택만 허용\r\n      if (blockedSet.has(coreIdx)) {\r\n        backtrack(\r\n          pos + 1,\r\n          picksAcc,\r\n          sumThrAcc,\r\n          sumPointAcc,\r\n          sumWillAcc,\r\n          roleSumAcc,\r\n          thrVec,\r\n          ptVec\r\n        );\r\n        return;\r\n      }\r\n\r\n      const candList = allCandidates[pos];\r\n\r\n      // 후보 시도\r\n      for (const pick of candList) {\r\n        const t = thrMax(pick);\r\n        if (isEnf && t < effMin) continue;\r\n\r\n        // 젬 충돌\r\n        let clash = false;\r\n        for (const g of pick.list) { if (used.has(g.id)) { clash = true; break; } }\r\n        if (clash) continue;\r\n\r\n        pick.list.forEach(g => used.add(g.id));\r\n        const prev = picksAcc[coreIdx];\r\n        picksAcc[coreIdx] = pick;\r\n\r\n        thrVec[pos] = t;\r\n        ptVec[pos]  = pick.totalPoint;\r\n\r\n        backtrack(\r\n          pos + 1,\r\n          picksAcc,\r\n          sumThrAcc   + t,\r\n          sumPointAcc + pick.totalPoint,\r\n          sumWillAcc  + pick.totalWill,\r\n          roleSumAcc  + pick.roleSum,\r\n          thrVec,\r\n          ptVec\r\n        );\r\n\r\n        // 롤백\r\n        pick.list.forEach(g => used.delete(g.id));\r\n        picksAcc[coreIdx] = prev;\r\n        thrVec[pos] = 0;\r\n        ptVec[pos]  = 0;\r\n      }\r\n\r\n      // 비강제는 빈 선택 허용\r\n      if (!isEnf) {\r\n        backtrack(\r\n          pos + 1,\r\n          picksAcc,\r\n          sumThrAcc,\r\n          sumPointAcc,\r\n          sumWillAcc,\r\n          roleSumAcc,\r\n          thrVec,\r\n          ptVec\r\n        );\r\n      }\r\n    }\r\n\r\n    backtrack(\r\n      0,\r\n      cores.map(() => emptyPick),\r\n      0, 0, 0, 0,\r\n      Array(order.length).fill(0),\r\n      Array(order.length).fill(0)\r\n    );\r\n\r\n    return best; // null(실패) 또는 최적해\r\n  }\r\n\r\n  // 1) 원래 로직(강제 전부 지킴) 우선 시도\r\n  const enforcedSetFull = new Set(enforcedIdx);\r\n  const bestFull = trySolve(enforcedSetFull);\r\n  if (bestFull) {\r\n    return { picks: bestFull.picks };\r\n  }\r\n\r\n  \r\n  // 1.5) (신규) 전역해가 없으면: 우선순위 최하 코어를 \"없는 코어\"로 간주하고 재시도\r\n  //      - 최하 코어는 화면상 맨 아래: order[order.length - 1]\r\n  //      - 이 코어는 blocked 처리(항상 empty), 강제 조건도 무시\r\n  if (order.length > 0) {\r\n    const lowestIdx = order[order.length - 1];\r\n    const enforcedMinusLowest = new Set([...enforcedSetFull].filter(i => i !== lowestIdx));\r\n    const bestDropLowest = trySolve(enforcedMinusLowest, new Set([lowestIdx]));\r\n    if (bestDropLowest) {\r\n      // 결과는 최하 코어만 emptyPick로 남고, 위 코어들은 전역 결과 반영\r\n      const finalPicks = bestDropLowest.picks.map((p, i) => (i === lowestIdx ? emptyPick : (p || emptyPick)));\r\n      return { picks: finalPicks };\r\n    }\r\n  }\r\n\r\n  // 2) 실패한 경우에만: \"개별적으로도 하한 달성이 불가능한 강제 코어\" 판별\r\n  //    (젬 충돌은 고려하지 않고 코어 단독 관점에서 후보가 1개라도 있는지 확인)\r\n  const infeasibleEnforced = new Set();\r\n  for (const idx of enforcedIdx) {\r\n    const effMin = (cores[idx].minThreshold ?? minOf(cores[idx].grade));\r\n    const pos = order.indexOf(idx);\r\n    const hasFeasible = (allCandidates[pos] || []).some(ci => thrMax(ci) >= effMin);\r\n    if (!hasFeasible) infeasibleEnforced.add(idx);\r\n  }\r\n\r\n  // 3) 가능한 강제만 유지하고 다시 최적화\r\n  const enforcedSetReduced = new Set(enforcedIdx.filter(i => !infeasibleEnforced.has(i)));\r\n  const bestReduced = trySolve(enforcedSetReduced);\r\n\r\n  if (bestReduced) {\r\n    // 4) 최종 출력에서 \"실제로 불가능했던 강제 코어\"만 결과없음 처리\r\n    const finalPicks = bestReduced.picks.map((p, i) => (infeasibleEnforced.has(i) ? emptyPick : (p || emptyPick)));\r\n    return { picks: finalPicks };\r\n  }\r\n\r\n  // 5) 그래도 전역 해를 못 찾은 극단적 경우: 전부 empty로 반환(안전망)\r\n  return { picks: cores.map(() => emptyPick) };\r\n}\r\n\r\n\r\n\r\n// 역할 선택 시 반대 역할 키 가중치를 0으로 마스킹\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  // 반대 역할 키들은 0\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => {\r\n    next[k] = 0;\r\n  });\r\n  // 선택한 역할 키들은 1\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => {\r\n    next[k] = 1;\r\n  });\r\n  return next;\r\n}\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        // 자식이 function이면 provided/snapshot을 넘겨 \"자식이 직접\" props를 붙이게 함\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    // refs가 동일 ref 객체를 재사용하므로 이 deps로 충분\r\n    [refs]\r\n  );\r\n  // 최신 handler를 참조하도록 ref로 보관\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    // click 시점(캡처링)으로: 내부 onClick 먼저 실행되도록\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ value, items, onChange, placeholder, className }) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);   // 포지션 리렌더 트리거(값은 사용 안 함)\r\n  // 전역 close-all-dropdowns 이벤트 받으면 닫기\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n  // 버튼/메뉴 외부 클릭 시 닫기 (둘 다 제외)\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n  // 열릴 때 버튼 위치 측정 → 고정 포지션으로 포탈 렌더\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = {\r\n      top: rect.bottom + 4,\r\n      left: rect.left,\r\n      width: rect.width,\r\n    };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = {\r\n        top: r.bottom + 4,\r\n        left: r.left,\r\n        width: r.width,\r\n      };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n  const selected = items.find((i) => i.value === value);\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: menuPos.current.top,\r\n          left: menuPos.current.left,\r\n          width: menuPos.current.width,\r\n          zIndex: 9999, // 최상단\r\n        }}\r\n        className=\"rounded-xl border bg-white shadow-lg overflow-auto max-h-60\"\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (it.disabled) return;         // 비활성 항목 클릭 무시\r\n                onChange(it.value);\r\n                setOpen(false);\r\n              }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"\r\n                } ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setOpen((v) => !v)}\r\n        className=\"min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl border px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n      >\r\n        <span className=\"truncate text-sm\">\r\n          {selected ? selected.label : placeholder || \"선택\"}\r\n        </span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value,\r\n  onChange,          // (number|null)=>void\r\n  min,\r\n  max,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true, // blur 시 빈값을 0(or min)으로 보정할지\r\n  className = \"\",\r\n  inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  // 휠로 값 바뀌는 사고 방지(선택)\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"                     // ← 스핀/키보드 ↑↓ 유지\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}                     // ← \"\" 허용 (빈 입력 유지)\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);             // 입력 중 빈값은 null로 보존\r\n          return;\r\n        }\r\n        // number 타입은 브라우저가 숫자형 문자열만 넣어줌(예: \"1\", \"1.2\", \"1e2\")\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num)); // 입력 중에도 숫자 전달(필요하면 null로 바꿔도 됨)\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);          // blur 시에만 확정/보정\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n  // 3-1) 현재 카테고리\r\n  const [category, setCategory] = useState/** @type {Category} */(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  // 3-2) 카테고리별 코어/젬 상태\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n  // (기존) 기타 상태 그대로\r\n  const [role, setRole] = useState/** @type {Role|null} */(null);\r\n  const [weights, setWeights] = useState({ ...DEFAULT_WEIGHTS });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  // 현재 카테고리의 코어/젬만 뽑아쓰기\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n  // 현재 카테고리에 대해서만 set 하는 헬퍼\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const setGems = (updater) => {\r\n    setGemsByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n  const { picks: priorityPicks } = useMemo(\r\n    () => optimizeRoundRobinTargets(cores, gems, role, weights),\r\n    [cores, gems, role, weights]\r\n  );\r\n  const resetWeights = () => setWeights({ ...DEFAULT_WEIGHTS });\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: 0, o2k: \"add\", o2v: 0 }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name)); // 현재 카테고리만\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs; // 변경 취소\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n  // DnD: 코어 순서가 곧 우선순위(위쪽이 더 높음)\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    // 드래그 시작하면 모든 드롭다운 닫기 이벤트 발송\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n  // UI tokens (모바일 최적화 포함)\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  // 인덱스 표기: 코어(위→1), 젬(아래→1)\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n  // ===== Self-tests (non-blocking) =====\r\n  useEffect(() => {\r\n    function runSelfTests() {\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id: \"t1\", will: 1, point: 1, o1k: \"atk\", o1v: 2, o2k: \"brand\", o2v: 3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id: \"t2\", will: 0, point: 10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n  useEffect(() => {\r\n    saveToStorage({\r\n      category,\r\n      coresByCat,\r\n      gemsByCat,\r\n      // 선택적으로 사용자 편의를 위해 가중치/역할도 함께 저장 가능\r\n      role,\r\n      weights,\r\n    });\r\n  }, [category, coresByCat, gemsByCat, role, weights]);\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 프라이머리 컬러 토큰 & 유틸 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n      `}</style>\r\n      {/* 모든 버튼 커서 포인터 */}\r\n      <style>{`button{cursor:pointer}`}</style>\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 타이틀 + 포지션(우측) */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            {/* 카테고리 선택 (먼저 선택) */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0\">\r\n              {/** 질서/혼돈 토글 */}\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 코어 입력 (DnD 우선순위) */}\r\n        <section className={`${card} p-4 lg:p-6 !mt-2 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        CORE_THRESHOLDS[c.grade].map(v => ({ value: String(v), label: `${v}P 이상` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      const coreNameItems = CORE_NAME_ITEMS.map(it => ({\r\n                        ...it,\r\n                        disabled: takenNames.has(it.value)\r\n                      }));\r\n                      const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              {/* Index badge - 모바일 좌측 정렬, 데스크톱 중앙 정렬 */}\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.grade} onChange={(val) => updateCore(c.id, { grade: /** @type {CoreGrade} */(val) })} items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))} placeholder=\"코어 등급\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 구간</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val), enforceMin: true }); else updateCore(c.id, { minThreshold: undefined, enforceMin: false }); }} items={targetItems} placeholder=\"구간\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">목표 구간 강제</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">선택 안 함이면 내부적으로 <br className=\"hidden lg:block\" />최소 구간 <b className=\"text-primary\">{minOfGrade}P</b>을 기본 목표로 적용합니다.</p>\r\n                              </div>\r\n                              {/* 모바일: 순서 버튼 + 삭제 버튼 묶음 */}\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3 mb-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                {/* 필요 의지력 + 포인트 */}\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* 옵션 1 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* 옵션 2 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16} /><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm`}>\r\n            <span className=\"text-xs text-gray-500\">포지션 선택</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"dealer\"}\r\n                onChange={() => {\r\n                  setRole(\"dealer\");\r\n                  setWeights((w) => maskWeightsForRole(w, \"dealer\"));\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              딜러\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"support\"}\r\n                onChange={() => {\r\n                  setRole(\"support\");\r\n                  setWeights((w) => maskWeightsForRole(w, \"support\"));\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              서포터\r\n            </label>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k]}\r\n                    onChange={(v) => setWeights((w) => ({ ...w, [k]: (v) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = priorityPicks?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name} <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>유효 옵션 합(\r\n                          <span className=\"font-semibold\">\r\n                            {role === 'dealer' ? \"딜러\" : role === 'support' ? \"서폿\" : \"역할 미선택\"}\r\n                          </span>\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 구간을 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">유효합</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">유효합 {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(2))}</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\nconst USE_ANTITHETIC = true;   // 저분산 고정 ON\r\nconst AUTO_SCALE_RARE = true;  // 자동 스케일업 고정 ON\r\n/* =========================\r\n   결정적 RNG 유틸리티 (원본 유지)\r\n   ========================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n// === 확률 경계 헬퍼 ===\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n/* =========================\r\n   등급/젬타입/상수 (원본 유지)\r\n   ========================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n// 고정 TRIALS 대신 opts로 제어 (기본값은 적당히 큼)\r\n// maxTrials: 최대 시뮬 회수, epsilon: 95% CI 반폭(절대값), batch: 배치 크기\r\n// note: successProb는 베르누이 평균이라 표준오차를 정확히 계산 가능\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n// % 포맷: 원래 값 그대로, 소수점 5자리 고정\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";           // 완전 0%면 0\r\n  if (x >= 1) return \"100.00000%\";                          // 전부 성공이면 100.00000%\r\n  return (x * 100).toFixed(5) + \"%\";                        // 그 외는 5자리 고정\r\n}\r\n// 레거시 호환\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n// 기대비용: 성공 1회 얻기 위해 드는 평균 골드 (확률이 낮을수록 ↑)\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity; // 성공확률 0%면 무한대 취급\r\n  return expectedGold / p;\r\n}\r\n// 퍼센트 유틸: width 계산용\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n// 시각적 뱃지(난이도): 확률이 낮을수록 \"골드부담 ↑\"\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n// 확률 추정기: mle(기본), laplace, jeffreys\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  // ✅ 경계 스냅: 전부 성공이면 1(=100%)로 고정\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":   // Beta(1,1) 사전 → (s+1)/(n+2)\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":  // Beta(0.5,0.5) 사전 → (s+0.5)/(n+1)\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\nconst OFFICIAL_RNG = true;\r\n/* ===== 시뮬레이션 횟수 옵션/헬퍼 ===== */\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n// 0 successes일 때의 95% 상한 (Clopper–Pearson 근사)\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n); // ~= 3/n\r\n}\r\n// 반복 수에 따른 수렴 기준(95% CI 반폭)과 배치 크기\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001; // ±0.01%p\r\n  if (n >= 100000) return 0.0002; // ±0.02%p\r\n  if (n >= 50000) return 0.0003; // ±0.03%p\r\n  if (n >= 10000) return 0.0005; // ±0.05%p\r\n  if (n >= 5000) return 0.0007; // ±0.07%p\r\n  return 0.001;                   // ±0.10%p\r\n};\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n/* =========================\r\n   효과명/포지션/스코어/목표 (원본 유지)\r\n   ========================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  // 이름 기반 목표: 유효풀(공격형/서폿) 내에서만 선택 가능하므로 UI가 보장하지만,\r\n  // 안전하게 한 번 더 보정\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n  if (abMode === \"ANY_ONE\") {\r\n    // 한 개 목표만 의미: (A 라인 or B 라인)가 \"목표 이름 A\" + 레벨≥t.aLvl\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    // BOTH: 두 개 목표 모두 충족 (순서 상관없이 A/B에 배치되기만 하면 됨)\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  // 기본(의지력 효율/포인트) 부족분\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    // A라인을 TA로 맞추기 vs B라인을 TA로 맞추기\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    // (A→TA + B→TB) vs (A→TB + B→TA) 중 더 싼 배치\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n/* =========================\r\n   가중치/라벨/슬롯/적용 (원본 유지)\r\n   ========================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\"); // 역할군 풀을 쓰려면 pos, 전체풀 쓰려면 \"상관 없음\"\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n  return items;\r\n}\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n/* =========================\r\n   시뮬레이션 (원본 유지)\r\n   ========================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n// ✅ 저분산(안티테틱) + 희귀사건 자동 스케일업(rare-guard) 버전\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    // ⬇️ 신규 옵션\r\n    useAntithetic = true,          // 저분산(권장): 안티테틱 페어 사용\r\n    autoScaleRare = true,          // 희귀사건 가드\r\n    rareTargetSuccesses = 100,      // 희귀사건 시 확보할 성공 표본 수 목표\r\n    rareMaxTrials = 200000,            // (구버전 호환용)\r\n    rareTiers = [200000], // ← 순차 확장 티어\r\n  } = opts;\r\n  // 의도 동일 (그대로)\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n  // ▶︎ 한 회 시뮬레이션 (특정 난수 발생기 rand를 주입)\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n  // 집계 변수\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n  // 동적으로 늘어날 수 있는 상한\r\n  let localMaxTrials = maxTrials;\r\n  // 추가: 희귀 강제 모드(0% 판독 시 일반 종료조건을 무시)\r\n  let forceRare = false;\r\n  // 희귀 티어 헬퍼\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    // 32-bit 안전 시드 셔플\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n  while (n < localMaxTrials) {\r\n    // 한 번에 돌릴 \"스텝\" 수 (안티테틱 켰으면 실제 trial 수는 최대 2배)\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      // 남은 예산 확인\r\n      if (n >= localMaxTrials) break;\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n      // 기본 경로\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n      // 안티테틱 페어 (같은 시드로 1-u 사용)\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n    // 0%면 즉시 희귀 강제 모드로 전환하고 상한을 '다음 티어'로 점프\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      // 최초엔 최소 티어까지, 이미 티어면 다음 티어로\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;   // ← 일반 조기 종료를 잠시 비활성화\r\n      continue;\r\n    }\r\n    // 희귀사건 가드: 성공 표본 부족하면 상한을 키워 더 돌린다(점진 확장)\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n    if (rareGuardActive) {\r\n      // 티어 기반 점프: 20만 → 50만 → 100만 (더 이상 티어 없으면 현 상한 유지)\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue; // 더 돌린다\r\n    }\r\n    // 일반 수렴 조건\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  // UI용: 원시 성공 회수(정수)\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n// ===== 등급별 그라디언트 색상 (start를 적당히 어둡게 조정) =====\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",  // 전설: 진한 오렌지브라운 → 골드브라운\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",  // 유물: 다크 오렌지레드 → 토마토브라운\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",  // 고대: 중간 골드브라운 → 레몬쉬폰\r\n};\r\n// 등급 확률 정렬 + 부등호(>=) 체인 생성용\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  // 0%는 표시 대상에서 제거\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n/* ===============================\r\n   공통 UI(LoACore 스타일): Dropdown + Toast + NumberInput\r\n   =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ \r\n  value, \r\n  items, \r\n  onChange, \r\n  placeholder, \r\n  className, \r\n  disabled, \r\n  bordered = true // 기본값: border 있음\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => { \r\n      window.removeEventListener(\"scroll\", onScroll); \r\n      window.removeEventListener(\"resize\", onScroll); \r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value,\r\n  set,                 // (old) (number)=>void\r\n  onChange,            // (new) (number|null)=>void\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n  // wheel 값 변동 방지(의도치 않은 증가/감소)\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  // 구버전/신버전 핸들러 분기\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        // 입력 중 빈 문자열 허용\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          // 구버전(set)은 입력 중 null을 전달하지 않음 (기존 동작 유지)\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          // 새 API: 입력 중에도 값 알림(클램프는 blur 시 확정)\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          // 구 API: 즉시 클램프 + 업데이트 (기존 동작과 동일)\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          // 구 API: null을 허용하지 않으므로 보정값(또는 min/0) 전달\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n/* ===============================\r\n   원래 Select API를 유지하면서 내부는 Dropdown 사용\r\n   =============================== */\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n/* =========================\r\n   중복 라벨 검출 (원본 유지)\r\n   ========================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n/* =========================\r\n   메인 컴포넌트\r\n   ========================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],   // 유효풀에서 시작\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n  // 시작 상태가 포지션 풀과 안 맞아도 계산은 진행 (이름 변경으로 충족 가능)\r\n  const curValid = cur.aName !== cur.bName;\r\n  // 시뮬레이션 반복 수 (Monte Carlo maxTrials)\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n  const migratedRef = useRef(false); // StrictMode 중복 실행 방지(개발모드)\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n  const [changeMode, setChangeMode] = useState(null); // { who: 'A'|'B', options: string[] }\r\n  const [changePick, setChangePick] = useState(\"\");\r\n  // ==== Undo/Redo 히스토리 ====\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n  // manual, changeMode, changePick 을 하나의 스냅샷으로 관리\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      // 용량 제한\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n  // ==== 작업 내역(Log) ====\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]); // 최신이 위로 오게 저장\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n  const addLog = useCallback((entry) => {\r\n    // entry: { type, title, detail?, meta? }\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      // 상태 복원\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      // 상태 복원\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n  // ⌨️ 단축키: Ctrl/Cmd+Z = Undo, Ctrl/Cmd+Shift+Z = Redo\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n  // 상태 비교해서 읽기 쉬운 diff 문자열 만들어주기\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n  // 포지션/젬타입 바뀔 때 목표 이름을 유효풀로 보정\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n  // 높이 동기화 refs & 상태\r\n  const simRef = useRef(null);       // 왼쪽(가공 시뮬레이션) 카드\r\n  const [logsMax, setLogsMax] = useState(null); // 오른쪽 카드 max-height(px)\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n    // 왼쪽 카드 높이에 영향을 주는 값들이 갱신되면 다시 계산\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n  /* 다른 항목 보기 EV (원본 유지) */\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        // 라벨별로도 결정성을 주고 싶다면 seed 변형해서 rand 쓰기 가능\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct(nowProb)} → 다른 항목 보기 기대 ${pct(rerollProb)} (▲${pct(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct(nowProb)}가 다른 항목 보기 기대 ${pct(rerollProb)}보다 유리 (▼${pct(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct(nowProb)} vs 다른 항목 보기 ${pct(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n  // BOTH로 전환 시, 목표 이름에 '상관없음'이 포함되어 있으면 유효한 이름으로 자동 보정\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n  /* 확률 계산 트리거 */\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    // 이전 예약 취소\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    // clean up: 이 이펙트가 갱신/언마운트되면 예약 취소 + 로딩 정리\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n  /* 사용자 액션: 토스트로 안내 */\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n    // 🔁 부여 효과 변경은 '선택 모드'로 전환하여 왼쪽에서 사용자가 직접 고르게 함\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return; // ✅ 여기서 종료 (아직 시도/골드 소모하지 않음)\r\n    }\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory(); // 변경 전 스냅샷 저장\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n  function manualReset() {\r\n    setLogs([]);   // 작업 내역 삭제\r\n    setHistory({ past: [], future: [] }); // 히스토리도 같이 초기화하면 깔끔\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory(); // 변경 전 스냅샷 저장\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1, // 이번 차수 소비\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n  /* ====== UI 토큰 ====== */\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n  const dupWarnShown = useRef(false);\r\n  // allLocked이 false로 변하면 logs 초기화\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);   // 작업 내역 삭제\r\n      setHistory({ past: [], future: [] }); // 히스토리도 같이 초기화하면 깔끔\r\n    }\r\n  }, [allLocked]);\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base; // BOTH면 '상관없음' 제외\r\n  }, [gemKey, pos, abModePrimary]);\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n      `}</style>\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 1) 기본 설정 */}\r\n        {/* 1) 기본 설정 */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n            {/* 타이틀 우측: 저장/편집 버튼 (LoACoreOptimizer 스타일) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* 코어 카드와 동일한 레이아웃/간격/높이 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n              {/* 등급 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n              {/* 가공/다른 항목 보기 */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 2) 현재 옵션 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* 2) 현재 옵션 설정 — 입력 블록 교체(간격/폭 기본설정 카드와 동일) */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 포인트 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 효과 A */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n              {/* A 레벨 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 효과 B */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n              {/* B 레벨 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 3) 목표 옵션 설정 — 입력 블록 교체(간격/폭 LoACore와 동일) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n            {/* ⬇️ 헤더 우측: '목표 충족 방식'을 저장/편집 버튼 왼쪽에 배치 */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {/* 저장/편집 토글 버튼 (그대로) */}\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n          {/* LoACore 코어행과 동일한 한 줄 카드 레이아웃 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 ≥ */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n              {/* 포인트 ≥ */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n              {/* 추가 효과 — 모바일에서 col-span-2 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 이름 A */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n                    {/* A 레벨 ≥ */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n                    {/* 목표 이름 B (BOTH일 때만 활성) */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n                    {/* B 레벨 ≥ */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 4) 가공 시뮬레이션 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 타이틀 + 우측 액션 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* 🔹 안내문 추가 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 왼쪽: 상태/리소스(가독성 업) */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n                {/* 작은 스탯 카드 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* 리소스 칩 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* 오른쪽: 선택지 + 액션 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* 6) 작업 내역 */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n        {/* 5) 결과 출력 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* ▷ 스켈레톤 전체 덮개: 계산 중/미준비 상태면 전체를 스켈레톤으로 */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 칩 스켈레톤 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 카드 스켈레톤 (2장) */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* ▷ 실제 결과 UI: 스켈레톤이 아닐 때 한 번에 노출 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      {/* STOP_ON_SUCCESS */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                      {/* RUN_TO_END */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n                  {/* 등급 확률 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      // ✅ 0%도 포함해서 모두 보여준다\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* ✅ 100%면 확정 배지 유지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) /* 0%면 막대폭 0% */ }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                    {/* 확률 순서 표시: 0%만 제외, 100%는 (확정) 표기 유지 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun); // ← 이 함수 안에서 0% 필터 유지\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp } from \"lucide-react\";\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll(); // 초기 상태 반영\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\nfunction TopFab() {\r\n  const visible = useNearBottom(520); // 아래 끝 520px 근처에서 등장\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)]\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          visible ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default function CoreOnly() {\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n<header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n  <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n    <nav aria-label=\"Core pages\">\r\n      <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n        <li>\r\n          <NavLink\r\n            to=\"/gem\"\r\n            className={({ isActive }) =>\r\n              [\r\n                \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\" // 은은한 브랜드 틴트\r\n                  : \"text-gray-700 hover:bg-gray-50\"\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 가공 헬퍼\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/optimizer\"\r\n            className={({ isActive }) =>\r\n              [\r\n                \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\"\r\n                  : \"text-gray-700 hover:bg-gray-50\"\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 장착 헬퍼\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</header>\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n            {/* 기본 경로 보정: /core → /core/optimizer */}\r\n            <Route path=\"*\" element={<Navigate to=\"/gem\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n      <TopFab /> \r\n    </HashRouter>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;"],"names":["CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","CORE_NAME_ITEMS","value","label","CATEGORY_LABEL","order","chaos","LS_KEY","CORE_ORDER","uid","Math","random","toString","slice","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_w$g$o1k","_w$g$o2k","has","o1k","o1v","o2k","o2v","combinations","arr","n","length","idx","Array","from","_","i","map","p","j","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","optimizeRoundRobinTargets","cores","pool","perCoreLimit","arguments","undefined","W","minOf","min","thresholdsOf","thrMax","ci","_ci$thr","max","emptyPick","list","enforcedIdx","c","enforceMin","candidatesFor","core","gemPool","minThreshold","supply","minOfGrade","effMin","effEnforce","all","maxPick","push","filtered","sort","a","b","maxThr","enumerateCoreCombos","ta","tb","allCandidates","trySolve","enforceSet","blockedSet","best","used","backtrack","pos","picksAcc","sumThrAcc","sumPointAcc","sumWillAcc","roleSumAcc","thrVec","ptVec","_cores$coreIdx$minThr","_cores$idx$minThresho","cand","picks","x","sumThr","sumPoint","sumWill","A","B","betterThan","coreIdx","isEnf","Infinity","candList","pick","clash","id","prev","delete","fill","enforcedSetFull","bestFull","lowestIdx","bestDropLowest","infeasibleEnforced","_cores$idx$minThresho2","indexOf","some","bestReduced","maskWeightsForRole","next","loadFromStorage","localStorage","getItem","JSON","parse","e","console","warn","dragPortal","document","body","PortalAwareDraggable","_ref","draggableId","index","children","_jsx","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","className","open","setOpen","useState","btnRef","useRef","menuRef","menuPos","top","left","width","forceTick","useEffect","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","isArray","handlerRef","current","listener","_handlerRef$current","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","selected","find","menu","AnimatePresence","motion","ul","ref","initial","opacity","y","animate","exit","transition","duration","style","position","zIndex","it","type","onClick","disabled","String","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref3","toasts","onClose","div","scale","stiffness","damping","msg","NumberInput","_ref4","step","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","clamp","inputMode","onBlur","onWheel","currentTarget","blur","LoACoreOptimizer","title","category","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","remove","setToasts","setTimeout","useToasts","gems","setCores","updater","setGems","priorityPicks","useMemo","updateGem","patch","updateCore","cs","name","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","displayIndexGem","total","_w$brand","assert","gem","includes","cA","cB","log","runSelfTests","data","setItem","stringify","saveToStorage","backgroundImage","backgroundAttachment","addCore","nextName","existingNames","nextAvailableCoreName","Plus","DragDropContext","onDragStart","requestAnimationFrame","evt","Event","dispatchEvent","onDragEnd","result","destination","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","targetItems","concat","takenNames","coreNameItems","prov","_c$minThreshold","draggableProps","dragHandleProps","val","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","removeGem","resetWeights","RotateCcw","hasResult","toFixed","_Fragment","_g$will2","_g$point2","gi","findIndex","disp","KakaoAdfit","USE_ANTITHETIC","AUTO_SCALE_RARE","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","lo","hi","fmtProbSmart","fmtProb","fmtNum","toLocaleString","goldPerSuccess","expectedGold","pct","round","burdenBadge","tone","estimateRate","successes","OFFICIAL_RNG","SIM_OPTIONS","zeroSuccessUpperBound","alpha","pow","epsilonByTrials","batchByTrials","allowedEffectNames","gemKey","totalScore","eff","pts","aLvl","bLvl","gradeOf","meetsTargetByMode","abMode","tgtNames","isAny","nm","TA","aName","TB","bName","match","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","parseInt","replace","trim","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","floor","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","start","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","sum","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","gold","rrs","unlocked","rate","first","temp","res","namesList","before","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","low","high","halfWidth","localMaxTrials","forceRare","tiers","hardCap","nextTier","cur","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","bordered","toneBtn","success","info","warning","error","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","Boolean","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","m","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","useCallback","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","d","Date","pad","padStart","getHours","getMinutes","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","key","toLowerCase","preventDefault","shiftKey","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","out","cursor","_allOptionLabels$curs","_ref5","_allOptionLabels$curs2","manLabels","setManLabels","_ref6","_allOptionLabels$i","replacement","l","resultStop","setResultStop","resultRun","setResultRun","isComputing","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","gps","badge","delay","grades","grad","comps","eps","diff","abs","rankGradeOrder","TopFab","visible","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","scrollTo","behavior","CoreOnly","HashRouter","basename","NavLink","to","isActive","Routes","Route","path","element","Navigate","adRef","ins","createElement","display","setAttribute","script","async","src","innerHTML","appendChild"],"sourceRoot":""}