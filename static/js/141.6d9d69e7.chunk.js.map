{"version":3,"file":"static/js/141.6d9d69e7.chunk.js","mappings":"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","sources":["workers/gemScanner.worker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["/* eslint-disable no-restricted-globals */\r\nimport Tesseract from \"tesseract.js\";\r\n\r\n/* ───────────────── helpers ───────────────── */\r\n\r\nconst send = (type, payload) => {\r\n  if (type === \"error\" && payload instanceof Error) {\r\n    postMessage({\r\n      type,\r\n      payload: {\r\n        code: payload.code || \"UNKNOWN\",\r\n        message: payload.message,\r\n        stack: payload.stack,\r\n      },\r\n    });\r\n  } else {\r\n    postMessage({ type, payload });\r\n  }\r\n};\r\n\r\nasync function blobFromBitmap(bitmap) {\r\n  const canvas = new OffscreenCanvas(bitmap.width, bitmap.height);\r\n  const ctx = canvas.getContext(\"2d\", { alpha: false });\r\n  ctx.imageSmoothingEnabled = false;\r\n  ctx.drawImage(bitmap, 0, 0);\r\n  return await canvas.convertToBlob({ type: \"image/png\", quality: 0.95 });\r\n}\r\n\r\nasync function cropBitmap(bitmap, sx, sy, sw, sh) {\r\n  const W = Math.max(1, Math.round(sw));\r\n  const H = Math.max(1, Math.round(sh));\r\n  const canvas = new OffscreenCanvas(W, H);\r\n  const ctx = canvas.getContext(\"2d\", { alpha: false });\r\n  ctx.imageSmoothingEnabled = false;\r\n  ctx.drawImage(bitmap, sx, sy, sw, sh, 0, 0, W, H);\r\n  const blob = await canvas.convertToBlob({ type: \"image/png\", quality: 0.95 });\r\n  const url = URL.createObjectURL(blob);\r\n  return { blob, url, W, H, canvas, ctx };\r\n}\r\n\r\nasync function cropToObject(srcBlobOrBitmap, rect) {\r\n  const srcBitmap =\r\n    srcBlobOrBitmap instanceof ImageBitmap\r\n      ? srcBlobOrBitmap\r\n      : await createImageBitmap(srcBlobOrBitmap);\r\n  const { x, y, w, h } = rect;\r\n  return await cropBitmap(srcBitmap, x, y, w, h);\r\n}\r\n\r\n/* ─────────── preprocess (×2 업스케일 + soft bin + optional Levels) ─────────── */\r\nasync function preprocessToBitmap(\r\n  bitmap,\r\n  {\r\n    invert = true,\r\n    boostWhiteByS = false, // ← 왼쪽(흰 글자)에서만 켜기\r\n    // HSV기반(이전과 동일하게 유지하고 싶다면 사용, S=0만 쓰려면 호출쪽에서 satThresh=0으로)\r\n    satThresh = 0.18,      // 채도 임계 (0~1)\r\n    vThresh = 0.80,        // 밝기 임계 (0~1)\r\n\r\n    softness = 50,\r\n    up = 2,\r\n\r\n    // ✅ 추가: Photoshop Levels 옵션\r\n    // 예) { inBlack: 50, gamma: 0.75, inWhite: 220, outBlack: 0, outWhite: 255 }\r\n    levels = null,\r\n    // ✅ 추가: 배경색 눌러주기 옵션\r\n    // 숫자(흰색/저채도·고밝기)를 건드리지 않으면서,\r\n    // 배경과 ‘색이 비슷한’ 픽셀을 업프론트에서 검정(0)으로 밀어버린 뒤,\r\n    // 나중에 invert=true면 배경이 최대한 하얗게 됩니다.\r\n    bgSuppress = {\r\n      enabled: false,\r\n      // 자동 샘플링(ROI 전체에서 배경 후보 픽셀만 평균)\r\n      // 숫자 후보(저채도·고밝기)는 샘플에서 제외\r\n      satMin: 0.12,   // 배경 샘플링에 포함할 최소 채도\r\n      vMax: 0.92,     // 배경 샘플링에 포함할 최대 명도\r\n      dist: 38,       // 배경색과의 RGB 거리 임계(0~441) – ↑이면 배경으로 간주 폭이 넓어짐\r\n      smooth: 0,      // >0이면 부드럽게 밀어주기(0=하드 클램핑)\r\n      sampleRect: null // {x,y,w,h} 지정 시 그 영역만으로 배경색 추정\r\n    },\r\n  } = {}\r\n) {\r\n  const W = bitmap.width, H = bitmap.height;\r\n  const canvas = new OffscreenCanvas(W * up, H * up);\r\n  const ctx = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n  ctx.imageSmoothingEnabled = false;\r\n  ctx.drawImage(bitmap, 0, 0, W, H, 0, 0, canvas.width, canvas.height);\r\n\r\n  // (A0) ✅ Levels(포토샵) 적용: 업스케일 직후 RGB 단계에서 선적용\r\n  if (levels && Number.isFinite(levels.inBlack) && Number.isFinite(levels.inWhite) && Number.isFinite(levels.gamma)) {\r\n    const inB = Math.max(0, Math.min(255, levels.inBlack | 0));\r\n    const inW = Math.max(0, Math.min(255, levels.inWhite | 0));\r\n    const g   = Math.max(0.01, levels.gamma);\r\n    const outB = Number.isFinite(levels.outBlack) ? Math.max(0, Math.min(255, levels.outBlack | 0)) : 0;\r\n    const outW = Number.isFinite(levels.outWhite) ? Math.max(0, Math.min(255, levels.outWhite | 0)) : 255;\r\n    const rng  = Math.max(1, inW - inB);\r\n\r\n    const srcLv = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    const sd = srcLv.data;\r\n    for (let i = 0; i < sd.length; i += 4) {\r\n      for (let k = 0; k < 3; k++) {\r\n        const c = sd[i + k];\r\n        let x = (c - inB) / rng;\r\n        x = Math.max(0, Math.min(1, x));\r\n        x = Math.pow(x, 1 / g);\r\n        sd[i + k] = (outB + x * (outW - outB)) | 0;\r\n      }\r\n      sd[i + 3] = 255;\r\n    }\r\n    ctx.putImageData(srcLv, 0, 0);\r\n  }\r\n\r\n  // (A1) ✅ 배경색 자동 추정 & 배경 눌러주기 (RGB 단계에서 선적용)\r\n  if (bgSuppress?.enabled) {\r\n    const src = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    const sd = src.data;\r\n\r\n    // RGB→HSV (0~1)\r\n    const rgb2hsv = (r, g, b) => {\r\n      const rn = r / 255, gn = g / 255, bn = b / 255;\r\n      const max = Math.max(rn, gn, bn), min = Math.min(rn, gn, bn);\r\n      const diff = max - min;\r\n      let h = 0;\r\n      if (diff !== 0) {\r\n        if (max === rn) h = ((gn - bn) / diff) % 6;\r\n        else if (max === gn) h = (bn - rn) / diff + 2;\r\n        else h = (rn - gn) / diff + 4;\r\n        h /= 6; if (h < 0) h += 1;\r\n      }\r\n      const s = max === 0 ? 0 : diff / max;\r\n      const v = max;\r\n      return [h, s, v];\r\n    };\r\n\r\n    // 1) 배경색 샘플링 (자동/영역)\r\n    const rx = bgSuppress.sampleRect?.x ?? 0;\r\n    const ry = bgSuppress.sampleRect?.y ?? 0;\r\n    const rw = bgSuppress.sampleRect?.w ?? canvas.width;\r\n    const rh = bgSuppress.sampleRect?.h ?? canvas.height;\r\n    let sumR = 0, sumG = 0, sumB = 0, cnt = 0;\r\n    const sMin = Math.max(0, Math.min(1, bgSuppress.satMin ?? 0.12));\r\n    const vMax = Math.max(0, Math.min(1, bgSuppress.vMax ?? 0.92));\r\n\r\n    for (let y = ry; y < ry + rh; y += 2) {           // 2픽셀 스텝으로 다운샘플링\r\n      for (let x = rx; x < rx + rw; x += 2) {\r\n        const i = (y * canvas.width + x) * 4;\r\n        const r = sd[i], g = sd[i + 1], b = sd[i + 2];\r\n        const [, s, v] = rgb2hsv(r, g, b);\r\n        // 숫자(흰색) 후보는 제외하고 배경만 모음\r\n        if (s >= sMin && v <= vMax) {\r\n          sumR += r; sumG += g; sumB += b; cnt++;\r\n        }\r\n      }\r\n    }\r\n    const bgR = cnt ? (sumR / cnt) : 0;\r\n    const bgG = cnt ? (sumG / cnt) : 0;\r\n    const bgB = cnt ? (sumB / cnt) : 0;\r\n\r\n    // 2) 배경과 가까운 픽셀을 검정으로 눌러주기\r\n    const distThr = Math.max(0, Math.min(441, bgSuppress.dist ?? 38)); // √(255^2*3)=441\r\n    const smooth = Math.max(0, bgSuppress.smooth ?? 0);\r\n\r\n    // 약간 그린 가중을 주는 거리(배경이 갈색·황색 계열일 때 경계가 잘 섭니다)\r\n    const dist = (r, g, b) => {\r\n      const dr = r - bgR, dg = g - bgG, db = b - bgB;\r\n      return Math.sqrt((dr * 0.9) ** 2 + (dg * 1.1) ** 2 + (db * 1.0) ** 2);\r\n    };\r\n\r\n    for (let i = 0; i < sd.length; i += 4) {\r\n      const r = sd[i], g = sd[i + 1], b = sd[i + 2];\r\n      const d = dist(r, g, b);\r\n      if (smooth <= 0) {\r\n        if (d <= distThr) { sd[i] = sd[i + 1] = sd[i + 2] = 0; } // 하드 클램핑\r\n      } else {\r\n        // 부드럽게 눌러주기: d<=thr면 0, thr~thr+smooth 사이는 선형 보간\r\n        const t = d <= distThr ? 0\r\n                : d >= distThr + smooth ? 1\r\n                : (d - distThr) / smooth;\r\n        const k = 1 - t; // 배경에 가까울수록 더 검정으로\r\n        if (k > 0) {\r\n          sd[i]   = Math.round(r * (1 - k));\r\n          sd[i+1] = Math.round(g * (1 - k));\r\n          sd[i+2] = Math.round(b * (1 - k));\r\n        }\r\n      }\r\n      sd[i + 3] = 255;\r\n    }\r\n    ctx.putImageData(src, 0, 0);\r\n  }\r\n\r\n  // ── (A) 흰 글자 마스크를 원본 RGB(또는 Levels 후) 기준으로 선계산(옵션)\r\n  let whiteMask = null;\r\n  if (boostWhiteByS) {\r\n    const src = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    const sd = src.data;\r\n    whiteMask = new Uint8Array(canvas.width * canvas.height);\r\n\r\n    // RGB→HSV (0~1)\r\n    const rgb2hsv = (r, g, b) => {\r\n      const rn = r / 255, gn = g / 255, bn = b / 255;\r\n      const max = Math.max(rn, gn, bn), min = Math.min(rn, gn, bn);\r\n      const diff = max - min;\r\n      let h = 0;\r\n      if (diff !== 0) {\r\n        if (max === rn) h = ((gn - bn) / diff) % 6;\r\n        else if (max === gn) h = (bn - rn) / diff + 2;\r\n        else h = (rn - gn) / diff + 4;\r\n        h /= 6; if (h < 0) h += 1;\r\n      }\r\n      const s = max === 0 ? 0 : diff / max;\r\n      const v = max;\r\n      return [h, s, v];\r\n    };\r\n\r\n    for (let i = 0, px = 0; i < sd.length; i += 4, px++) {\r\n      const r = sd[i], g = sd[i + 1], b = sd[i + 2];\r\n      const [, s, v] = rgb2hsv(r, g, b);\r\n      // 저채도(흰) + 고밝기만 표시\r\n      whiteMask[px] = (s <= satThresh && v >= vThresh) ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  // ── (B) 그레이 + (옵션) 반전\r\n  const img = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n  const d = img.data;\r\n  for (let i = 0; i < d.length; i += 4) {\r\n    const gr = 0.299 * d[i] + 0.587 * d[i + 1] + 0.114 * d[i + 2];\r\n    d[i] = d[i + 1] = d[i + 2] = gr;\r\n  }\r\n  if (invert) {\r\n    for (let i = 0; i < d.length; i += 4) {\r\n      d[i] = d[i + 1] = d[i + 2] = 255 - d[i];\r\n    }\r\n  }\r\n\r\n  // ── (C) Otsu (soft)\r\n  const hist = new Array(256).fill(0);\r\n  for (let i = 0; i < d.length; i += 4) hist[d[i] | 0]++;\r\n  const total = canvas.width * canvas.height;\r\n  let sum = 0; for (let t = 0; t < 256; t++) sum += t * hist[t];\r\n  let sumB = 0, wB = 0, varMax = 0, thr = 127;\r\n  for (let t = 0; t < 256; t++) {\r\n    wB += hist[t]; if (!wB) continue;\r\n    const wF = total - wB; if (!wF) break;\r\n    sumB += t * hist[t];\r\n    const mB = sumB / wB, mF = (sum - sumB) / wF;\r\n    const between = wB * wF * (mB - mF) ** 2;\r\n    if (between > varMax) { varMax = between; thr = t; }\r\n  }\r\n\r\n  for (let i = 0; i < d.length; i += 4) {\r\n    const diff = d[i] - thr;\r\n    const v =\r\n      Math.abs(diff) >= softness\r\n        ? (diff > 0 ? 255 : 0)\r\n        : Math.round(((diff + softness) / (2 * softness)) * 255);\r\n    d[i] = d[i + 1] = d[i + 2] = v;\r\n    d[i + 3] = 255;\r\n  }\r\n\r\n  // ── (D) 저채도(흰 글자)만 더 선명하게 밀어주기 (옵션)\r\n  if (boostWhiteByS && whiteMask) {\r\n    const boostTo = invert ? 0 : 255; // 반전했으면 검정으로 고정\r\n    for (let px = 0, i = 0; px < whiteMask.length; px++, i += 4) {\r\n      if (whiteMask[px]) {\r\n        d[i] = d[i + 1] = d[i + 2] = boostTo;\r\n        d[i + 3] = 255;\r\n      }\r\n    }\r\n  }\r\n\r\n  ctx.putImageData(img, 0, 0);\r\n\r\n  const binBlob = await canvas.convertToBlob({ type: \"image/png\", quality: 1 });\r\n  return await createImageBitmap(binBlob);\r\n}\r\n\r\n\r\n\r\n/* ─────────── OCR(words) ─────────── */\r\nasync function ocrWords(url, lang, label, onProgress, { psm = 7, whitelist = \"\" } = {}) {\r\n  const opts = {\r\n    tessedit_pageseg_mode: psm,\r\n    preserve_interword_spaces: \"1\",\r\n    logger: (m) => {\r\n      if (m.status === \"recognizing text\" && typeof m.progress === \"number\") {\r\n        onProgress?.(`${label}…`, false, Math.round(m.progress * 100));\r\n      }\r\n    },\r\n  };\r\n  if (whitelist) opts.tessedit_char_whitelist = whitelist;\r\n\r\n  const { data } = await Tesseract.recognize(url, lang, opts);\r\n\r\n  const words = [];\r\n  const pushWord = (w) => {\r\n    if (!w?.text || !w?.bbox) return;\r\n    const text = String(w.text).trim();\r\n    if (!text) return;\r\n    const bbox = {\r\n      x: w.bbox?.x0 ?? 0,\r\n      y: w.bbox?.y0 ?? 0,\r\n      w: (w.bbox?.x1 ?? 0) - (w.bbox?.x0 ?? 0),\r\n      h: (w.bbox?.y1 ?? 0) - (w.bbox?.y0 ?? 0),\r\n    };\r\n    const conf = w.confidence ?? w.conf ?? null;\r\n    words.push({ text, bbox, conf });\r\n  };\r\n\r\n  if (Array.isArray(data?.words)) {\r\n    for (const w of data.words) pushWord(w);\r\n  }\r\n\r\n  return {\r\n    words,\r\n    rawText: data?.text || \"\",\r\n  };\r\n}\r\n\r\n/* ─────────── merge utils ─────────── */\r\nfunction shiftX(arr, dx) {\r\n  return (arr || []).map((w) => ({\r\n    text: w.text,\r\n    bbox: { x: w.bbox.x + dx, y: w.bbox.y, w: w.bbox.w, h: w.bbox.h },\r\n    conf: w.conf,\r\n  }));\r\n}\r\n\r\nfunction iou(a, b) {\r\n  const ax2 = a.x + a.w,\r\n    ay2 = a.y + a.h;\r\n  const bx2 = b.x + b.w,\r\n    by2 = b.y + b.h;\r\n  const x1 = Math.max(a.x, b.x),\r\n    y1 = Math.max(a.y, b.y);\r\n  const x2 = Math.min(ax2, bx2),\r\n    y2 = Math.min(ay2, by2);\r\n  const iw = Math.max(0, x2 - x1),\r\n    ih = Math.max(0, y2 - y1);\r\n  const inter = iw * ih;\r\n  const ua = a.w * a.h + b.w * b.h - inter;\r\n  return ua > 0 ? inter / ua : 0;\r\n}\r\n\r\nfunction dedupeWords(words, { iouThresh = 0.6 } = {}) {\r\n  const out = [];\r\n  for (const w of words || []) {\r\n    if (!out.find((o) => o.text === w.text && iou(o.bbox, w.bbox) >= iouThresh)) {\r\n      out.push(w);\r\n    }\r\n  }\r\n  return out;\r\n}\r\n\r\n/* ─────────── 제외영역 마스킹 ─────────── */\r\nasync function maskExcludesOnRoi(roiCanvas, excludes = []) {\r\n  if (!excludes?.length) return;\r\n  const ctx = roiCanvas.getContext(\"2d\", { alpha: false });\r\n  ctx.save();\r\n  ctx.fillStyle = \"#000\";\r\n  excludes.forEach((r) => {\r\n    if (!r) return;\r\n    const x = Math.max(0, Math.round(r.x));\r\n    const y = Math.max(0, Math.round(r.y));\r\n    const w = Math.max(1, Math.round(r.w));\r\n    const h = Math.max(1, Math.round(r.h));\r\n    ctx.fillRect(x, y, w, h);\r\n  });\r\n  ctx.restore();\r\n}\r\n\r\n/* ─────────── 좌/우 경계 계산: 제외영역 기반 ─────────── */\r\nfunction computeBandsFromExcludes(W, H, excludes = []) {\r\n  const valid = (excludes || []).filter((r) => r && r.w > 2 && r.h > 2);\r\n  if (!valid.length) return null;\r\n\r\n  const minX = Math.max(0, Math.min(...valid.map((r) => r.x)));\r\n  const maxX = Math.min(W - 1, Math.max(...valid.map((r) => r.x + r.w)));\r\n\r\n  // 오른쪽 밴드 시작은 아이콘 우측 + 소량 패딩\r\n  const pad = Math.round(Math.max(4, Math.min(24, W * 0.01)));\r\n  const rightX = Math.min(W - 1, Math.max(minX + 1, maxX + pad));\r\n\r\n  // 왼쪽 폭은 minX까지, 최소 폭 보장\r\n  const leftW = Math.max(20, Math.min(rightX - 1, minX));\r\n  const rightW = Math.max(10, W - rightX);\r\n\r\n  // gapX는 디버깅용\r\n  return { leftW, rightX, rightW, gapX: rightX - leftW };\r\n}\r\n\r\n/* ─────────── 좌/우 밴드 OCR (각 1회) ─────────── */\r\nasync function ocrByBands(roiCanvas, lang, progress, excludes = []) {\r\n  const W = roiCanvas.width, H = roiCanvas.height;\r\n  const roiBitmap = await createImageBitmap(\r\n    await roiCanvas.convertToBlob({ type: \"image/png\", quality: 0.95 })\r\n  );\r\n\r\n  // 1) 제외영역 기반 경계 시도 → 실패 시 비율 기반 폴백\r\n  let bands = computeBandsFromExcludes(W, H, excludes);\r\n  if (!bands) {\r\n    const leftW = Math.max(20, Math.round(W * 0.22));\r\n    const gapX  = Math.round(W * 0.06);\r\n    const rightX = Math.min(W - 1, leftW + gapX);\r\n    const rightW = Math.max(10, W - rightX);\r\n    bands = { leftW, rightX, rightW, gapX, _fallback: true };\r\n  }\r\n\r\n  const { leftW, rightX, rightW } = bands;\r\n\r\n  const { blob: leftBlob }  = await cropBitmap(roiBitmap, 0,      0, leftW,  H);\r\n  const { blob: rightBlob } = await cropBitmap(roiBitmap, rightX, 0, rightW, H);\r\n\r\n  const leftPre = await preprocessToBitmap(await createImageBitmap(leftBlob), {\r\n    invert: true,\r\n    boostWhiteByS: true,\r\n    satThresh: 0,        // 채도=0만 잡고 싶으면 0\r\n    vThresh: 1,\r\n    softness: 80,\r\n    levels: { inBlack: 30, gamma: 0.75, inWhite: 220, outBlack: 0, outWhite: 255 },\r\n    // ✅ 배경 눌러주기: 숫자를 제외한 갈색/황갈 배경을 0으로 다운클램프\r\n    bgSuppress: {\r\n      enabled: true,\r\n      satMin: 0.12,\r\n      vMax: 1,       // 더 어두운 쪽까지 배경으로 간주\r\n      dist: 200,         // 배경 판정 범위 확대\r\n      smooth: 0,        // 하드 클램핑(가장 쨍하게 분리)\r\n    }\r\n  });\r\n  // const lefttPre = await preprocessToBitmap(await createImageBitmap(rightBlob), { invert: true });\r\n  const rightPre = await preprocessToBitmap(await createImageBitmap(rightBlob), { invert: true });\r\n\r\n  const WL_NUM   = \"0123456789\"; // 0 포함\r\n  const WL_LABEL = \"0123456789.Lv공격력추가피해보스피해아군공격강화아군피해강화낙인력\";\r\n\r\n  const lUrl = URL.createObjectURL(await blobFromBitmap(leftPre));\r\n  const rUrl = URL.createObjectURL(await blobFromBitmap(rightPre));\r\n\r\n  let leftWords = [], rightWords = [], leftRaw = \"\", rightRaw = \"\";\r\n  try {\r\n    const l = await ocrWords(lUrl, lang, \"왼쪽(숫자)\", progress, { psm: 7, whitelist: WL_NUM });\r\n    leftWords = l.words || []; leftRaw = l.rawText || \"\";\r\n\r\n    // 오른쪽은 'kor'만\r\n    const r = await ocrWords(rUrl, \"kor\", \"오른쪽(라벨/Lv)\", progress, { psm: 7, whitelist: WL_LABEL });\r\n    rightWords = r.words || []; rightRaw = r.rawText || \"\";\r\n  } finally {\r\n    URL.revokeObjectURL(lUrl);\r\n    URL.revokeObjectURL(rUrl);\r\n  }\r\n\r\n  const words = dedupeWords([\r\n    ...leftWords,\r\n    ...shiftX(dedupeWords(rightWords), rightX),\r\n  ]);\r\n\r\n  // 미리보기 PNG 버퍼\r\n  const leftPreBuf  = await (await blobFromBitmap(leftPre)).arrayBuffer();\r\n  const rightPreBuf = await (await blobFromBitmap(rightPre)).arrayBuffer();\r\n\r\n  return {\r\n    words,\r\n    leftRaw,\r\n    rightRaw,\r\n    debug: { bands: { W, H, ...bands } }, // 경계/폴백 여부 확인\r\n    previews: {\r\n      leftPrePng: leftPreBuf,\r\n      rightPrePng: rightPreBuf,\r\n      leftSize:  { w: leftPre.width,  h: leftPre.height },\r\n      rightSize: { w: rightPre.width, h: rightPre.height },\r\n    },\r\n  };\r\n}\r\n\r\n/* ─────────── entrypoint ─────────── */\r\nself.onmessage = async (e) => {\r\n  const { type, payload } = e.data || {};\r\n  if (type !== \"scan\") return;\r\n\r\n  const { buf, mime = \"image/png\", lang = \"kor+eng\", rect, excludes = [] } =\r\n    payload || {};\r\n\r\n  if (!buf) return send(\"error\", { code: \"NO_IMAGE\", message: \"no image buffer\" });\r\n  if (\r\n    !rect ||\r\n    !Number.isFinite(rect.x) ||\r\n    !Number.isFinite(rect.y) ||\r\n    !Number.isFinite(rect.w) ||\r\n    !Number.isFinite(rect.h)\r\n  ) {\r\n    return send(\"error\", { code: \"NO_ROI\", message: \"manual ROI(rect) is required\" });\r\n  }\r\n\r\n  let bitmap;\r\n  try {\r\n    bitmap = await createImageBitmap(new Blob([buf], { type: mime }));\r\n  } catch (err) {\r\n    return send(\"error\", {\r\n      code: \"DECODE_FAIL\",\r\n      message: \"이미지를 디코드할 수 없습니다.\",\r\n      detail: String(err),\r\n    });\r\n  }\r\n\r\n  try {\r\n    const W = bitmap.width, H = bitmap.height;\r\n    const safe = {\r\n      x: Math.max(0, Math.min(W - 1, Math.round(rect.x))),\r\n      y: Math.max(0, Math.min(H - 1, Math.round(rect.y))),\r\n      w: Math.max(1, Math.min(W, Math.round(rect.w))),\r\n      h: Math.max(1, Math.min(H, Math.round(rect.h))),\r\n    };\r\n\r\n    // 원본 전체를 캔버스로 만들어 ROI 추출\r\n    const srcBlob = await (async () => {\r\n      const cnv = new OffscreenCanvas(W, H);\r\n      const c = cnv.getContext(\"2d\", { alpha: false });\r\n      c.drawImage(bitmap, 0, 0);\r\n      return await cnv.convertToBlob({ type: \"image/png\", quality: 0.95 });\r\n    })();\r\n\r\n    const roi = await cropToObject(srcBlob, safe);\r\n\r\n    // ROI 좌표계로 변환된 제외영역\r\n    const excludesRoi = (excludes || []).map((r) => ({\r\n      x: r.x - safe.x,\r\n      y: r.y - safe.y,\r\n      w: r.w,\r\n      h: r.h,\r\n    }));\r\n\r\n    // ROI 캔버스에 제외영역 마스킹 적용 (텍스트 제거)\r\n    await maskExcludesOnRoi(roi.canvas, excludesRoi);\r\n\r\n    const progress = (label, ind, pct) =>\r\n      send(\"progress\", { label, indeterminate: !!ind, pct: pct ?? 0 });\r\n\r\n    // 제외영역을 밴드 분할 근거로 전달\r\n    const band = await ocrByBands(roi.canvas, lang, progress, excludesRoi);\r\n\r\n    // ROI(마스킹 적용) 캔버스 PNG 버퍼\r\n    const roiPreBlob = await roi.canvas.convertToBlob({ type: \"image/png\", quality: 0.95 });\r\n    const roiPreBuf = await roiPreBlob.arrayBuffer();\r\n\r\n    // 원본 ROI(blob) 버퍼\r\n    const roiArrayBuf = await roi.blob.arrayBuffer();\r\n\r\n    const transferList = [\r\n      roiArrayBuf,\r\n      roiPreBuf,\r\n      band?.previews?.leftPrePng,\r\n      band?.previews?.rightPrePng,\r\n    ].filter(Boolean);\r\n\r\n    postMessage(\r\n      {\r\n        type: \"done\",\r\n        payload: {\r\n          ok: true,\r\n          anchor: null,\r\n          panel: { ...safe, by: \"manual\" },\r\n          imageSize: { w: roi.W, h: roi.H },\r\n          words: band.words,\r\n          joinedWords: (band.words || []).map((w) => w.text).join(\" \"),\r\n          rawLeft: band.leftRaw,\r\n          rawRight: band.rightRaw,\r\n          roiPng: roiArrayBuf,   // 원본 ROI(bitmap→blob→buf)\r\n          roiPrePng: roiPreBuf,  // 마스킹 적용된 ROI 캔버스 덤프\r\n          roiMime: \"image/png\",\r\n          debug: band.debug,     // bands 경계/폴백 여부 포함\r\n          previews: band.previews, // 좌/우 전처리 이미지 버퍼\r\n        },\r\n      },\r\n      transferList\r\n    );\r\n  } catch (err) {\r\n    send(\"error\", {\r\n      code: err?.code || \"UNKNOWN\",\r\n      message: err?.message || String(err),\r\n      stack: err?.stack,\r\n    });\r\n  } finally {\r\n    try {\r\n      bitmap.close?.();\r\n    } catch {}\r\n  }\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [257], () => (__webpack_require__(4141)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"59e4d394\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t141: 1,\n\t522: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkpeon_calculator\"] = self[\"webpackChunkpeon_calculator\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(257).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["send","type","payload","Error","postMessage","code","message","stack","async","blobFromBitmap","bitmap","canvas","OffscreenCanvas","width","height","ctx","getContext","alpha","imageSmoothingEnabled","drawImage","convertToBlob","quality","cropBitmap","sx","sy","sw","sh","W","Math","max","round","H","blob","url","URL","createObjectURL","preprocessToBitmap","invert","boostWhiteByS","satThresh","vThresh","softness","up","levels","bgSuppress","enabled","satMin","vMax","dist","smooth","sampleRect","arguments","length","undefined","willReadFrequently","Number","isFinite","inBlack","inWhite","gamma","inB","min","inW","g","outB","outBlack","outW","outWhite","rng","srcLv","getImageData","sd","data","i","k","x","pow","putImageData","_bgSuppress$sampleRec","_bgSuppress$sampleRec2","_bgSuppress$sampleRec3","_bgSuppress$sampleRec4","_bgSuppress$sampleRec5","_bgSuppress$sampleRec6","_bgSuppress$sampleRec7","_bgSuppress$sampleRec8","_bgSuppress$satMin","_bgSuppress$vMax","_bgSuppress$dist","_bgSuppress$smooth","src","rgb2hsv","r","b","rn","gn","bn","diff","h","rx","ry","y","rw","w","rh","sumR","sumG","sumB","cnt","sMin","s","v","bgR","bgG","bgB","distThr","dr","dg","db","sqrt","d","whiteMask","Uint8Array","px","img","gr","hist","Array","fill","total","sum","t","wB","varMax","thr","wF","between","abs","boostTo","binBlob","createImageBitmap","ocrWords","lang","label","onProgress","psm","whitelist","opts","tessedit_pageseg_mode","preserve_interword_spaces","logger","m","status","progress","tessedit_char_whitelist","Tesseract","words","pushWord","_w$bbox$x","_w$bbox","_w$bbox$y","_w$bbox2","_w$bbox$x2","_w$bbox3","_w$bbox$x3","_w$bbox4","_w$bbox$y2","_w$bbox5","_w$bbox$y3","_w$bbox6","_ref","_w$confidence","text","bbox","String","trim","x0","y0","x1","y1","conf","confidence","push","isArray","rawText","iou","a","ax2","ay2","bx2","by2","x2","y2","inter","ua","dedupeWords","iouThresh","out","find","o","ocrByBands","roiCanvas","excludes","roiBitmap","bands","valid","filter","minX","map","maxX","pad","rightX","leftW","rightW","gapX","computeBandsFromExcludes","_fallback","leftBlob","rightBlob","leftPre","rightPre","lUrl","rUrl","leftWords","rightWords","leftRaw","rightRaw","l","revokeObjectURL","arr","dx","leftPreBuf","arrayBuffer","rightPreBuf","debug","previews","leftPrePng","rightPrePng","leftSize","rightSize","self","onmessage","e","buf","mime","rect","Blob","err","detail","_band$previews","_band$previews2","safe","srcBlob","cnv","roi","srcBlobOrBitmap","srcBitmap","ImageBitmap","cropToObject","excludesRoi","save","fillStyle","forEach","fillRect","restore","maskExcludesOnRoi","ind","pct","indeterminate","band","roiPreBlob","roiPreBuf","roiArrayBuf","transferList","Boolean","ok","anchor","panel","by","imageSize","joinedWords","join","rawLeft","rawRight","roiPng","roiPrePng","roiMime","_bitmap$close","_bitmap","close","call","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","n","getter","__esModule","definition","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}