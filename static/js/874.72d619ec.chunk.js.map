{"version":3,"file":"static/js/874.72d619ec.chunk.js","mappings":"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","sources":["components/KakaoAdfit.jsx","lib/optimizerCore.js","components/LoACoreOptimizer.jsx","hooks/useOptimizer.js","components/GemSimulator.jsx","CoreOnly.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;","// src/lib/optimizerCore.js\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nexport const CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nexport const CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nexport const CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nexport const GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nexport const OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nexport const OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nexport const ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\n\r\n/** 딜러 프리셋(가중치; 배율) */\r\nexport const DEALER_WEIGHTS = {\r\n  boss: 1,\r\n  add: 1,\r\n  atk: 1,\r\n  brand: 0,\r\n  allyDmg: 0,\r\n  allyAtk: 0,\r\n};\r\n/** 기본 가중치는 = 딜러 프리셋 */\r\nexport const DEFAULT_WEIGHTS = { ...DEALER_WEIGHTS };\r\n\r\n/** 딜러: 옵션 레벨 → 퍼센트 커브 */\r\nexport const DEALER_LEVEL_CURVES = {\r\n  // key 는 OPTIONS 의 실제 키와 일치해야 합니다.\r\n  boss: [0, 0.078, 0.156, 0.244, 0.313, 0.391], // 보스 피해\r\n  add:  [0, 0.060, 0.119, 0.187, 0.239, 0.299], // 추가 피해\r\n  atk:  [0, 0.029, 0.067, 0.105, 0.134, 0.172], // 공격력\r\n};\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nexport function roleAllowsKey(role, key) {\r\n  const allow = ROLE_KEYS?.[role];\r\n  if (!allow) return true;                               // 미정의면 모두 허용\r\n  if (Array.isArray(allow)) return allow.includes(key);  // 배열\r\n  if (allow && typeof allow.has === 'function') return allow.has(key); // Set\r\n  if (allow && typeof allow === 'object') return !!allow[key]; // { atk:true } 객체\r\n  return true;\r\n}\r\n\r\nexport function sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\n\r\nexport function levelValueByRole(role, key, lvl) {\r\n  const L = Math.max(0, Math.min(5, Number(lvl) || 0));\r\n  if (role === 'dealer' && DEALER_LEVEL_CURVES[key]) {\r\n    return DEALER_LEVEL_CURVES[key][L] || 0;\r\n  }\r\n  // 서포터(및 그 외): 선형 — 레벨 숫자 자체를 퍼센트로 사용\r\n  return L;\r\n}\r\n\r\nexport function scoreGemForRole(gem, role, weights) {\r\n  const w = sanitizeWeights(weights || {});\r\n  let sum = 0;\r\n\r\n  const add = (key, lvl) => {\r\n    if (!key || !lvl) return;\r\n    if (role && !roleAllowsKey(role, key)) return;\r\n\r\n    const basePct = levelValueByRole(role, key, lvl); // 레벨→퍼센트(커브/선형)\r\n    const scale   = w[key] ?? 0;                      // 가중치(배율)\r\n    sum += basePct * scale;\r\n  };\r\n\r\n  add(gem.o1k, gem.o1v);\r\n  add(gem.o2k, gem.o2v);\r\n\r\n  // 퍼센트 값으로 반환 (상위 UI에서 toFixed(4) + '%' 처리)\r\n  return sum;\r\n}\r\n\r\nexport function* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1;\r\n    while (p >= 0 && idx[p] === n - k + p) p--;\r\n    if (p < 0) break;\r\n    idx[p]++;\r\n    for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\n\r\nexport function thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\n\r\nexport function scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000)\r\n    + (totalPoint * 10_000)\r\n    + ((5_000 - totalWill) * 10)\r\n    + roleSum\r\n    - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nexport function enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin, onStep) {\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) {\r\n      all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 });\r\n      continue;\r\n    }\r\n    for (const combo of combinations(pool, k)) {\r\n      onStep && onStep(1);\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n\r\n  all.sort((a, b) => b.score - a.score);\r\n\r\n  // UI 정책에 맞춘 필터링\r\n  let filtered;\r\n\r\n  if (enforceMin) {\r\n    // '이상 탐색' 모드 (체크박스 ON)\r\n    const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n    const effMin = minThreshold ?? minOfGrade; // 목표가 없으면 등급 최소치\r\n    filtered = all.filter(ci =>\r\n      ci.totalPoint >= effMin && ci.thr.length > 0 && ci.list.length > 0\r\n    );\r\n  } else {\r\n    // '정확히 일치' 모드 (체크박스 OFF, 기본)\r\n    if (minThreshold != null) {\r\n      filtered = all.filter(ci =>\r\n        ci.totalPoint === minThreshold && ci.list.length > 0\r\n      );\r\n    } else {\r\n      // 목표 없음: 달성 구간 있는 케이스만\r\n      filtered = all.filter(ci => ci.thr.length > 0 && ci.list.length > 0);\r\n    }\r\n  }\r\n\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n\r\n  return filtered;\r\n}\r\n","/**\r\n * LoACoreOptimizer.jsx\r\n *\r\n * 재구성(리팩터링된 파일 배치 & 계층 주석) 버전.\r\n * - 실행 로직/동작 동일 유지 (함수/값, 상태, JSX 구조, 훅 호출 순서에 의존하는 부분 불변).\r\n * - 기존 주석은 모두 제거했고, 가독성을 위한 섹션/행동 중심의 주석을 새로 정리하여 추가함.\r\n * - \"재그룹/재배치\"는 선언의 물리적 위치만 정렬(의존성 방향상 안전한 순서)했을 뿐, 코드 의미를 바꾸지 않음.\r\n *\r\n * 섹션 구성\r\n *  A. 외부/내부 모듈 임포트\r\n *  B. 도메인/뷰 공통 상수 및 매핑\r\n *  C. 직업-코어 프리셋/효과 유틸\r\n *  D. 공용 유틸(로컬스토리지, UID, 외부 클릭 등)\r\n *  E. DnD 포털용 Draggable 래퍼\r\n *  F. UI 프리미티브(드롭다운, 토스트, 숫자입력)\r\n *  G. 프리셋 설명 툴팁(CoreEffectInfo)\r\n *  H. 메인 컴포넌트(LoACoreOptimizer) + QuickAddPad(내부)\r\n */\r\n\r\nimport React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { flushSync } from \"react-dom\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, ChevronUp, ChevronDown, Info, Download, Upload } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport { useOptimizer } from '../hooks/useOptimizer';\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\nimport {\r\n  CORE_SUPPLY,\r\n  CORE_THRESHOLDS,\r\n  CORE_LABEL,\r\n  GRADES,\r\n  OPTION_LABELS,\r\n  OPTIONS,\r\n  DEFAULT_WEIGHTS,\r\n  DEALER_WEIGHTS,\r\n  ROLE_KEYS,\r\n  sanitizeWeights,\r\n  scoreGemForRole,\r\n  levelValueByRole,\r\n} from '../lib/optimizerCore.js';\r\nimport ARC_CORES from \"../data/arc_cores_select.json\";\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * B. 도메인/뷰 공통 상수 및 매핑\r\n *    - 화면 공통 라벨/세트, 로컬스토리지 키, 직업/코어 그룹 매핑 등\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n\r\nconst CATEGORY_LABEL = { order: \"질서\", chaos: \"혼돈\" };\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\";\r\n\r\nconst JOBS = ARC_CORES?.jobs ?? [];\r\nconst CORE_NAME_BY_GROUP = { \"해\": \"해 코어\", \"달\": \"달 코어\", \"별\": \"별 코어\" };\r\nconst GROUP_BY_CORE_NAME = { \"해 코어\": \"해\", \"달 코어\": \"달\", \"별 코어\": \"별\" };\r\n\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\n\r\nconst TARGET_MAX_BY_GRADE = {\r\n  HERO: 10,\r\n  LEGEND: 14,\r\n  RELIC: 19,\r\n  ANCIENT: 20,\r\n};\r\n\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * C. 직업-코어 프리셋/효과 유틸\r\n *    - 직업별 허용 코어, 프리셋 목록, 효과 정규화/조회\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction getAllowedCoreNameSet(job) {\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const groups = new Set(entries.map(e => e[\"그룹\"]));\r\n  const names = new Set(\r\n    Array.from(groups).map(g => CORE_NAME_BY_GROUP[g]).filter(Boolean)\r\n  );\r\n  return names;\r\n}\r\n\r\nfunction getPresetItems(job, groupKey) {\r\n  if (!job || !groupKey) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  return entries\r\n    .filter(e => e[\"그룹\"] === groupKey)\r\n    .map(e => ({ value: e[\"코어\"], label: e[\"코어\"] }));\r\n}\r\n\r\nfunction normalizeEffects(raw) {\r\n  if (!raw) return [];\r\n  let arr = [];\r\n\r\n  if (Array.isArray(raw)) {\r\n    arr = raw.flatMap((item) => {\r\n      if (!item) return [];\r\n      if (typeof item === \"string\") {\r\n        const m = item.match(/(\\d+)\\s*P?/i);\r\n        const p = m ? Number(m[1]) : null;\r\n        return p ? [{ point: p, text: item.replace(/^.*?:\\s*/, \"\").trim() || item.trim() }] : [];\r\n      }\r\n      if (typeof item === \"object\") {\r\n        let p = item.point ?? item.P ?? item.포인트 ?? null;\r\n        if (typeof p === \"string\") p = parseInt(p.replace(/\\D/g, \"\"), 10);\r\n        const t = item.text ?? item.desc ?? item.효과 ?? item.value ?? \"\";\r\n        return Number.isFinite(p) ? [{ point: Number(p), text: String(t) }] : [];\r\n      }\r\n      return [];\r\n    });\r\n  } else if (typeof raw === \"object\") {\r\n    arr = Object.entries(raw).map(([k, v]) => {\r\n      const p = parseInt(String(k).replace(/\\D/g, \"\"), 10);\r\n      return { point: p, text: String(v) };\r\n    });\r\n  } else if (typeof raw === \"string\") {\r\n    arr = raw.split(/\\r?\\n/).flatMap((line) => {\r\n      const m = line.match(/(\\d+)\\s*P?/i);\r\n      const p = m ? Number(m[1]) : null;\r\n      return p ? [{ point: p, text: line.replace(/^.*?:\\s*/, \"\").trim() || line.trim() }] : [];\r\n    });\r\n  }\r\n\r\n  return arr\r\n    .filter((x) => Number.isFinite(x.point) && x.text)\r\n    .sort((a, b) => a.point - b.point);\r\n}\r\n\r\nfunction getEffectsForPreset(job, groupKey, preset) {\r\n  if (!job || !groupKey || !preset) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const row = entries.find((e) => e[\"그룹\"] === groupKey && e[\"코어\"] === preset);\r\n  return normalizeEffects(row?.[\"효과\"]);\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * D. 공용 유틸\r\n *    - UID 생성, 역할별 가중치 마스킹, 로컬스토리지 I/O, 다음 코어명 탐색, 외부클릭\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\n\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => { next[k] = 0; });\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => { next[k] = 1; });\r\n  return next;\r\n}\r\n\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    [refs]\r\n  );\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * E. Portal-aware Draggable 래퍼\r\n *    - 드래그 시 body 포털로 이동시켜 클리핑/레이어 문제 방지\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\n\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * F. UI 프리미티브\r\n *    1) Dropdown: 키보드 접근성/포털 메뉴/ARIA 적용\r\n *    2) ToastStack + useToasts: 간단 토스트 큐\r\n *    3) NumberInput: 숫자 입력 공통(클램프/포맷/휠 방지)\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction Dropdown({ value, items, onChange, placeholder, className, bordered = true }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [focusedIndex, setFocusedIndex] = useState(-1);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const itemRefs = useRef([]);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  const listboxId = useRef(`dd-list-${Math.random().toString(36).slice(2)}`).current;\r\n\r\n  const initFocusIndex = useCallback(() => {\r\n    const sel = items.findIndex(i => i.value === value && !i.disabled);\r\n    if (sel >= 0) return sel;\r\n    const firstEnabled = items.findIndex(i => !i.disabled);\r\n    return firstEnabled >= 0 ? firstEnabled : -1;\r\n  }, [items, value]);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick(v => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick(v => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    setFocusedIndex(initFocusIndex());\r\n    const t = requestAnimationFrame(() => {\r\n      const el = itemRefs.current[initFocusIndex()];\r\n      (el ?? menuRef.current)?.focus?.();\r\n    });\r\n    return () => cancelAnimationFrame(t);\r\n  }, [open, initFocusIndex]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const getNextEnabled = (start, dir) => {\r\n    const n = items.length;\r\n    if (n === 0) return -1;\r\n    let i = start;\r\n    for (let step = 0; step < n; step++) {\r\n      i = (i + dir + n) % n;\r\n      if (!items[i].disabled) return i;\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  const onButtonKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const willOpen = !open;\r\n      if (willOpen) {\r\n        setOpen(true);\r\n      } else {\r\n        const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n        const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n        if (next >= 0) setFocusedIndex(next);\r\n      }\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      setOpen(v => !v);\r\n    }\r\n  };\r\n\r\n  const onMenuKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n      const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n      if (next >= 0) setFocusedIndex(next);\r\n    } else if (e.key === \"Home\") {\r\n      e.preventDefault();\r\n      const first = items.findIndex(i => !i.disabled);\r\n      if (first >= 0) setFocusedIndex(first);\r\n    } else if (e.key === \"End\") {\r\n      e.preventDefault();\r\n      let last = -1;\r\n      for (let i = items.length - 1; i >= 0; i--) {\r\n        if (!items[i].disabled) { last = i; break; }\r\n      }\r\n      if (last >= 0) setFocusedIndex(last);\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      const it = items[focusedIndex];\r\n      if (it && !it.disabled) {\r\n        onChange(it.value);\r\n        setOpen(false);\r\n        requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n      requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n    } else if (e.key === \"Tab\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const onItemMouseEnter = (i) => setFocusedIndex(i);\r\n\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        role=\"listbox\"\r\n        id={listboxId}\r\n        tabIndex={-1}\r\n        aria-activedescendant={focusedIndex >= 0 ? `${listboxId}-opt-${focusedIndex}` : undefined}\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n        onKeyDown={onMenuKeyDown}\r\n      >\r\n        {items.map((it, i) => {\r\n          const isSelected = it.value === value;\r\n          const isActive = i === focusedIndex;\r\n          return (\r\n            <li key={String(it.value)}>\r\n              <button\r\n                ref={(el) => (itemRefs.current[i] = el)}\r\n                id={`${listboxId}-opt-${i}`}\r\n                type=\"button\"\r\n                role=\"option\"\r\n                aria-selected={isSelected}\r\n                onMouseEnter={() => onItemMouseEnter(i)}\r\n                onClick={() => {\r\n                  if (it.disabled) return;\r\n                  onChange(it.value);\r\n                  setOpen(false);\r\n                  requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n                }}\r\n                aria-disabled={it.disabled ? true : undefined}\r\n                className={`w-full text-left px-3 py-2 text-sm\r\n                  ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"}\r\n                  ${isSelected ? \"bg-gray-100\" : \"\"}\r\n                  ${isActive ? \"outline-none ring-2 ring-[#a399f2]/40\" : \"\"}\r\n                `}\r\n              >\r\n                <span className=\"block truncate\">{it.label}</span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={open}\r\n        aria-controls={open ? listboxId : undefined}\r\n        onKeyDown={onButtonKeyDown}\r\n        onClick={() => setOpen(v => !v)}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value, onChange, min, max, step = 1, allowFloat = false, zeroOnBlur = true, className = \"\", inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num));\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * G. 프리셋 효과 툴팁\r\n *    - 선택한 직업/그룹/프리셋 기준으로 등급 제한 내 효과를 미리보기\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction CoreEffectInfo({ job, groupKey, preset, grade, category, coreName, supply }) {\r\n  const [open, setOpen] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  const effects = getEffectsForPreset(job, groupKey, preset);\r\n  const maxP = TARGET_MAX_BY_GRADE[grade] ?? 999;\r\n  const list = effects.filter((e) => e.point <= maxP);\r\n\r\n  const coreShort =\r\n    GROUP_BY_CORE_NAME[coreName] ??\r\n    coreName.replace(/\\s*코어$/, \"\");\r\n\r\n  const LABEL_CLS = \"text-[12px] text-gray-500 mb-1 text-indigo-400\";\r\n\r\n  const isAncient =\r\n    (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") || String(grade).toLowerCase() === \"ancient\";\r\n\r\n  const gradeColorCls =\r\n    String(grade).toUpperCase() === \"HERO\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"영웅\") ? \"text-fuchsia-500\" :\r\n      String(grade).toUpperCase() === \"LEGEND\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"전설\") ? \"text-amber-500\" :\r\n        String(grade).toUpperCase() === \"RELIC\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"유물\") ? \"text-orange-700\" :\r\n          String(grade).toUpperCase() === \"ANCIENT\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") ? \"text-[#d3bd8b]\" :\r\n            \"text-gray-800\";\r\n\r\n  const pickSlashValueByGrade = (text) => {\r\n    const pickRight = isAncient;\r\n\r\n    let out = text.replace(\r\n      /(\\d+(?:\\.\\d+)?)%\\s*\\/\\s*(\\d+(?:\\.\\d+)?)%/g,\r\n      (_, a, b) => (pickRight ? b : a) + \"%\"\r\n    );\r\n\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(%)/g,\r\n      (_, a, b, pct) => (pickRight ? b : a) + pct\r\n    );\r\n\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(?!\\s*[%\\d])/g,\r\n      (_, a, b) => (pickRight ? b : a)\r\n    );\r\n\r\n    return out;\r\n  };\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      className=\"relative inline-flex items-center align-top ml-1 cursor-pointer\"\r\n      onMouseEnter={() => setOpen(true)}\r\n      onMouseLeave={() => setOpen(false)}\r\n      onFocus={() => setOpen(true)}\r\n      onBlur={() => setOpen(false)}\r\n    >\r\n      <Info size={16} aria-hidden=\"true\" color=\"#a399f2\" />\r\n\r\n      <AnimatePresence>\r\n        {open && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -4 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -4 }}\r\n            transition={{ duration: 0.12 }}\r\n            className=\"absolute z-[999999] mt-2 left-1/2 -translate-x-1/2 w-[400px] rounded-xl border bg-white shadow-lg p-3 text-xs\"\r\n            role=\"tooltip\"\r\n          >\r\n            <div className=\"text-[13px] font-semibold mb-2\">\r\n              <div>{CATEGORY_LABEL[category]}의 {coreName} : {preset}</div>\r\n              <div className={`text-[12px] font-medium ${gradeColorCls}`}>{CORE_LABEL[grade]} 아크 그리드 코어</div>\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 타입</div>\r\n              <div className=\"text-[12px] font-medium\">\r\n                <span>{CATEGORY_LABEL[category]}</span>\r\n                <span className=\"mx-1\">–</span>\r\n                <span>{coreShort}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 공급 의지력</div>\r\n              <div className=\"text-[12px] font-medium\">{String(supply)} 포인트</div>\r\n            </div>\r\n\r\n            <div className={LABEL_CLS}>코어 옵션</div>\r\n            {list.length === 0 ? (\r\n              <div className=\"text-gray-500\">옵션 정보가 없습니다.</div>\r\n            ) : (\r\n              <ul className=\"mt-1 space-y-1\">\r\n                {list.map((e) => {\r\n                  const text = e.point === 17 ? pickSlashValueByGrade(e.text) : e.text;\r\n                  return (\r\n                    <li\r\n                      key={e.point}\r\n                      className=\"grid grid-cols-[32px_1fr] gap-x-1 items-start min-w-0\"\r\n                    >\r\n                      <span className=\"w-[32px] shrink-0 text-amber-500 font-semibold\">\r\n                        [{e.point}P]\r\n                      </span>\r\n                      <span className=\"text-gray-800 break-words min-w-0\">\r\n                        {text}\r\n                      </span>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </span>\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * H. 메인 컴포넌트\r\n *    - 상태/로직/뷰 그대로 유지\r\n *    - 내부에 QuickAddPad 폼 컴포넌트 포함\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n\r\n  const [category, setCategory] = useState(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n\r\n  const [role, setRole] = useState(() => loadFromStorage()?.role ?? \"dealer\");\r\n  const [weights, setWeights] = useState(() => {\r\n    const saved = loadFromStorage();\r\n    const w = saved?.weights;\r\n    if (w && typeof w === \"object\") {\r\n      const vals = [\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\"].map(k => Number(w[k]));\r\n      const allOnes = vals.every(v => v === 1);\r\n      // 과거 기본값(전부 1)만 저장돼 있고 역할 정보가 없거나 딜러로 추정되면 → 딜러 프리셋으로 이행\r\n      if (allOnes && (!saved?.role || saved.role === \"dealer\")) {\r\n        return { ...DEALER_WEIGHTS };\r\n      }\r\n      return sanitizeWeights(w);\r\n    }\r\n    // 저장된 게 없으면 딜러 프리셋으로 시작\r\n    return { ...DEALER_WEIGHTS };\r\n  });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  const [quickAddMode, setQuickAddMode] = useState(false);\r\n  const [dataVersion, setDataVersion] = useState(0);\r\n\r\n  const [stale, setStale] = useState(false);\r\n  const didMountRef = useRef(false);\r\n\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n\r\n  const { isComputing, progress, results, calculate, hasCalculated } = useOptimizer(cores, gems, role, weights);\r\n\r\n  const [selectedJob, setSelectedJob] = useState(() => (loadFromStorage()?.selectedJob ?? \"\"));\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const buildSnapshot = useCallback(() => ({\r\n    app: \"LoA-CoreOptimizer\",\r\n    version: 2,\r\n    exportedAt: new Date().toISOString(),\r\n    category,\r\n    coresByCat,\r\n    gemsByCat,\r\n    role,\r\n    weights: sanitizeWeights(weights),\r\n    selectedJob,\r\n  }), [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  const handleExportJson = useCallback(() => {\r\n    try {\r\n      const data = buildSnapshot();\r\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: \"application/json\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const d = new Date();\r\n      const stamp = `${d.getFullYear()}${String(d.getMonth() + 1).padStart(2, \"0\")}${String(d.getDate()).padStart(2, \"0\")}${String(d.getHours()).padStart(2, \"0\")}${String(d.getMinutes()).padStart(2, \"0\")}`;\r\n\r\n      // 직업명이 있을 때만 파일명에 추가 (불가 문자는 제거)\r\n      const jobPart =\r\n        selectedJob && selectedJob.trim()\r\n          ? `_${selectedJob.trim().replace(/[\\\\/:*?\"<>|]+/g, \"\")}`\r\n          : \"\";\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `아크그리드${jobPart}_${stamp}.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n      push(\"JSON 파일로 내보냈습니다.\");\r\n    } catch (e) {\r\n      console.error(e);\r\n      push(\"내보내기 중 오류가 발생했어요.\");\r\n    }\r\n  }, [buildSnapshot, push, selectedJob]);\r\n\r\n  const handleImportClick = useCallback(() => {\r\n    fileInputRef.current?.click();\r\n  }, []);\r\n\r\n  const handleImportFile = useCallback((e) => {\r\n    const file = e.target.files?.[0];\r\n    e.target.value = \"\";\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      try {\r\n        const json = JSON.parse(String(reader.result));\r\n        if (!json || typeof json !== \"object\") throw new Error(\"invalid\");\r\n        if (!json.coresByCat || !json.gemsByCat) throw new Error(\"missing fields\");\r\n        flushSync(() => {\r\n          setCoresByCat(json.coresByCat);\r\n          setGemsByCat(json.gemsByCat);\r\n          setCategory(json.category === \"chaos\" ? \"chaos\" : \"order\");\r\n          setRole(json.role === \"dealer\" || json.role === \"support\" ? json.role : null);\r\n          setWeights(() => {\r\n            const r = json.role === \"support\" ? \"support\" : \"dealer\";\r\n            return r === \"dealer\" ? { ...DEALER_WEIGHTS } : maskWeightsForRole(DEFAULT_WEIGHTS, \"support\");\r\n          });\r\n          setSelectedJob(typeof json.selectedJob === \"string\" ? json.selectedJob : \"\");\r\n          setHighlightCoreId(null);\r\n          setHighlightGemId(null);\r\n          setQuickAddMode(false);\r\n          setStale(true);\r\n        });\r\n        setDataVersion(v => v + 1);\r\n        push(\"JSON 데이터를 불러왔습니다.\");\r\n      } catch (err) {\r\n        console.error(err);\r\n        push(\"가져오기 실패: JSON 형식이 올바르지 않아요.\");\r\n      }\r\n    };\r\n    reader.onerror = () => push(\"가져오기 실패: 파일을 읽을 수 없어요.\");\r\n    reader.readAsText(file);\r\n  }, [push, setCoresByCat, setGemsByCat, setCategory, setRole, setWeights, setSelectedJob]);\r\n\r\n  useEffect(() => {\r\n    if (results && results.length > 0) {\r\n      setStale(false);\r\n    }\r\n  }, [results]);\r\n\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const setGems = (updater) => {\r\n    setGemsByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) { didMountRef.current = true; return; }\r\n    setStale(true);\r\n  }, [role, weights, category]);\r\n\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (category !== \"order\" || !selectedJob) return;\r\n\r\n    setCoresByCat((prevByCat) => {\r\n      const list = prevByCat[category] ?? [];\r\n      let changed = false;\r\n\r\n      const next = list.map((c) => {\r\n        const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n        const items = getPresetItems(selectedJob, groupKey);\r\n        const isValid = c.preset && items.some((i) => i.value === c.preset);\r\n        const nextPreset = isValid ? c.preset : (items[0]?.value ?? undefined);\r\n\r\n        if (nextPreset !== c.preset) {\r\n          changed = true;\r\n          return { ...c, preset: nextPreset };\r\n        }\r\n        return c;\r\n      });\r\n\r\n      if (!changed) return prevByCat;\r\n      setStale(true);\r\n      return { ...prevByCat, [category]: next };\r\n    });\r\n  }, [category, selectedJob, cores, setCoresByCat, setStale]);\r\n\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: null, o2k: \"add\", o2v: null }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n\r\n    const initialPreset =\r\n      category === \"order\" && selectedJob\r\n        ? getPresetItems(selectedJob, GROUP_BY_CORE_NAME[nextName])[0]?.value\r\n        : undefined;\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false, preset: initialPreset },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs;\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n  // eslint-disable-next-line\r\n  const [dragging, setDragging] = useState(false);\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  useEffect(() => {\r\n    saveToStorage({ category, coresByCat, gemsByCat, role, weights, selectedJob });\r\n  }, [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  function QuickAddPad({ onAdd, focusOnMount = false }) {\r\n    const [o1k, setO1k] = useState(\"atk\");\r\n    const [o2k, setO2k] = useState(\"add\");\r\n    const [o1v, setO1v] = useState(1);\r\n    const [o2v, setO2v] = useState(1);\r\n    const [will, setWill] = useState(1);\r\n    const [point, setPoint] = useState(1);\r\n\r\n    const firstRef = useRef(null);\r\n    const focusAfterSubmitRef = useRef(false);\r\n    const WILL_INPUT_ID = \"quick-pad-will-input\";\r\n\r\n    useEffect(() => {\r\n      if (!focusOnMount) return;\r\n      requestAnimationFrame(() => {\r\n        firstRef.current?.focus?.();\r\n        firstRef.current?.select?.();\r\n      });\r\n    }, [focusOnMount]);\r\n\r\n    const focusWill = () => {\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          if (firstRef.current) {\r\n            try { firstRef.current.focus(); firstRef.current.select?.(); return; } catch { }\r\n          }\r\n          const el = document.getElementById(WILL_INPUT_ID);\r\n          if (el) { el.focus(); el.select?.(); }\r\n        });\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e?.preventDefault?.();\r\n      const id = uid();\r\n      onAdd({\r\n        id,\r\n        will: Number.isFinite(will) ? will : 0,\r\n        point: Number.isFinite(point) ? point : 0,\r\n        o1k,\r\n        o1v: Number.isFinite(o1v) ? o1v : 0,\r\n        o2k,\r\n        o2v: Number.isFinite(o2v) ? o2v : 0,\r\n      });\r\n\r\n      if (focusAfterSubmitRef.current) {\r\n        focusWill();\r\n        focusAfterSubmitRef.current = false;\r\n      }\r\n    };\r\n\r\n    const onKeyDownSubmit = (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        focusAfterSubmitRef.current = true;\r\n        handleSubmit(e);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white\">\r\n          <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\" title=\"빠른 추가\">\r\n            <Plus size={18} />\r\n          </div>\r\n\r\n          <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>필요 의지력</label>\r\n              <NumberInput\r\n                value={will}\r\n                onChange={setWill}\r\n                min={3}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{\r\n                  id: WILL_INPUT_ID,\r\n                  title: \"의지력\",\r\n                  placeholder: \"의지력\",\r\n                  onKeyDown: onKeyDownSubmit,\r\n                  ref: firstRef,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>(질서/혼돈)포인트</label>\r\n              <NumberInput\r\n                value={point}\r\n                onChange={setPoint}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{ title: \"포인트\", placeholder: \"포인트\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 1</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o1k}\r\n                onChange={(v) => setO1k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o1v}\r\n                onChange={setO1v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 2</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o2k}\r\n                onChange={(v) => setO2k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o2v}\r\n                onChange={setO2v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n            <button\r\n              type=\"submit\"\r\n              onClick={() => { (focusAfterSubmitRef.current = true); }}\r\n              className=\"h-10 w-full lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n              title=\"Enter로도 추가 가능\"\r\n            >\r\n              <Plus size={16} />\r\n              <span className=\"inline\"> 젬 추가</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"relative flex items-center my-4\">\r\n          <div className=\"flex-grow border-t\"></div>\r\n          <span className=\"mx-3 text-sm text-gray-600\">\r\n            아래에서 추가한 젬들을 확인하세요.\r\n          </span>\r\n          <div className=\"flex-grow border-t\"></div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n        @keyframes loa-marquee { 0%{ transform: translateX(-100%);} 100%{ transform: translateX(300%);} }\r\n        .animate-loa-marquee{ animation: loa-marquee 1.2s cubic-bezier(.4,0,.2,1) infinite; }\r\n      `}</style>\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div key={dataVersion} className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            <div className=\"flex items-center gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleExportJson}\r\n                className=\"h-10 px-3 rounded-xl inline-flex items-center gap-2 bg-white hover:bg-white/90\"\r\n                title=\"현재 입력값을 JSON으로 저장\"\r\n              >\r\n                <Download size={16} />\r\n                <span className=\"hidden md:inline text-sm\">저장하기</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleImportClick}\r\n                className=\"h-10 px-3 rounded-xl inline-flex items-center gap-2 bg-white hover:bg-white/90\"\r\n                title=\"JSON에서 불러오기\"\r\n              >\r\n                <Upload size={16} />\r\n                <span className=\"hidden md:inline text-sm\">불러오기</span>\r\n              </button>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\"application/json\"\r\n                className=\"hidden\"\r\n                onChange={handleImportFile}\r\n              />\r\n              <div className=\"h-6 w-px bg-white/50 mx-1 hidden sm:block\" aria-hidden />\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6 !mt-2`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              {category === \"order\" && (\r\n                <Dropdown\r\n                  className=\"w-32\"\r\n                  value={selectedJob}\r\n                  onChange={(val) => {\r\n                    setSelectedJob(val);\r\n                    setCores(prev => prev.map(c => {\r\n                      const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                      const items = getPresetItems(val, groupKey);\r\n                      const ok = c.preset && items.some(i => i.value === c.preset);\r\n                      return ok ? c : { ...c, preset: (items[0]?.value ?? undefined) };\r\n                    }));\r\n                  }}\r\n                  items={[{ value: \"\", label: \"선택 안함\" }, ...JOBS.map(j => ({ value: j, label: j }))]}\r\n                  placeholder=\"직업 선택\"\r\n                />\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const gradeMax = TARGET_MAX_BY_GRADE[c.grade];\r\n                      const thresholds = (CORE_THRESHOLDS[c.grade] ?? []).filter(v => v <= gradeMax);\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        thresholds.map(v => ({ value: String(v), label: `${v}P` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      let coreNameItems = CORE_NAME_ITEMS.map(it => ({ ...it }));\r\n\r\n                      if (category === \"order\" && selectedJob) {\r\n                        const allowed = getAllowedCoreNameSet(selectedJob);\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value) || !allowed.has(it.value)\r\n                        }));\r\n                      } else {\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value)\r\n                        }));\r\n                      }\r\n\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown\r\n                                  className=\"w-full lg:w-24\"\r\n                                  value={c.grade}\r\n                                  onChange={(val) => {\r\n                                    const g = (val);\r\n                                    const maxAllowed = TARGET_MAX_BY_GRADE[g];\r\n                                    const nextMin =\r\n                                      (c.minThreshold != null && c.minThreshold > maxAllowed)\r\n                                        ? maxAllowed\r\n                                        : c.minThreshold;\r\n                                    updateCore(c.id, { grade: g, minThreshold: nextMin });\r\n                                  }}\r\n                                  items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))}\r\n                                  placeholder=\"코어 등급\"\r\n                                />\r\n                              </div>\r\n                              {category === \"order\" && selectedJob && (\r\n                                (() => {\r\n                                  const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                                  const presetItems = getPresetItems(selectedJob, groupKey);\r\n                                  const resolvedPreset =\r\n                                    c.preset && presetItems.some(i => i.value === c.preset)\r\n                                      ? c.preset\r\n                                      : (presetItems[0]?.value ?? \"\");\r\n                                  return (\r\n                                    <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                      <label className={labelCls}>\r\n                                        직업 코어 선택\r\n                                        <CoreEffectInfo\r\n                                          job={selectedJob}\r\n                                          groupKey={groupKey}\r\n                                          preset={resolvedPreset}\r\n                                          grade={c.grade}\r\n                                          category={category}\r\n                                          coreName={c.name}\r\n                                          supply={CORE_SUPPLY[c.grade]}\r\n                                        />\r\n                                      </label>\r\n                                      <Dropdown\r\n                                        className=\"w-full\"\r\n                                        value={resolvedPreset}\r\n                                        onChange={(val) => updateCore(c.id, { preset: val })}\r\n                                        items={presetItems}\r\n                                        placeholder=\"직업 코어 선택\"\r\n                                      />\r\n                                    </div>\r\n                                  );\r\n                                })()\r\n                              )}\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 포인트</label>\r\n                                <Dropdown className=\"w-full lg:w-32\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val) }); else updateCore(c.id, { minThreshold: undefined }); }} items={targetItems} placeholder=\"목표 포인트 선택\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">선택한 포인트 이상으로 탐색</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">체크 해제 시, 목표 포인트와 <br className=\"hidden lg:block\" /><b className=\"text-primary\">정확히 일치하는 조합만 계산</b>합니다.</p>\r\n                              </div>\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div\r\n            className={`flex items-center gap-2 lg:gap-3 ${quickAddMode ? '' : 'mb-3'}`}\r\n          >\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-1\">\r\n              <span className=\"text-xs text-gray-600\">빠르게 추가</span>\r\n              <button\r\n                type=\"button\"\r\n                role=\"switch\"\r\n                aria-checked={quickAddMode}\r\n                onClick={() => setQuickAddMode(v => !v)}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition ${quickAddMode ? \"bg-[#a399f2]\" : \"bg-gray-300\"\r\n                  }`}\r\n                aria-label=\"빠르게 추가 모드\"\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-5 transform rounded-full bg-white shadow transition ${quickAddMode ? \"translate-x-5\" : \"translate-x-1\"\r\n                    }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              {!quickAddMode && (\r\n                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          {quickAddMode && (\r\n            <p className=\"text-[11px] text-gray-500 mb-3\">\r\n              Tab 키로 입력 칸을 이동할 수 있고, Enter 키로 빠르게 추가할 수 있습니다.\r\n            </p>\r\n          )}\r\n          {quickAddMode && (\r\n            <div className=\"mb-3\">\r\n              <QuickAddPad\r\n                focusOnMount\r\n                onAdd={(gem) => {\r\n                  setGems(v => [gem, ...v]);\r\n                  setHighlightGemId(gem.id);\r\n                  setStale(true);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={3}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: (val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: (val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n<section className={`${card} p-4 lg:p-6`}>\r\n  <div className=\"flex items-center gap-2 lg:gap-3\">\r\n    <h2 className={sectionTitle}>유효 옵션 가중치</h2>\r\n\r\n  {/* 포지션 선택은 그대로 유지 */}\r\n  <div className={`flex items-center gap-4 text-sm`}>\r\n    <span className=\"text-xs text-gray-500 hidden sm:block\">포지션 선택</span>\r\n    <label className=\"inline-flex items-center gap-2\">\r\n      <input\r\n        type=\"radio\"\r\n        name=\"role\"\r\n        checked={role === \"dealer\"}\r\n        onChange={() => {\r\n          setRole(\"dealer\");\r\n          setWeights({ ...DEALER_WEIGHTS });\r\n        }}\r\n        className=\"accent-primary\"\r\n      />\r\n      딜러\r\n    </label>\r\n    <label className=\"inline-flex items-center gap-2\">\r\n      <input\r\n        type=\"radio\"\r\n        name=\"role\"\r\n        checked={role === \"support\"}\r\n        onChange={() => {\r\n          setRole(\"support\");\r\n          setWeights((w) => maskWeightsForRole(DEFAULT_WEIGHTS, \"support\"));\r\n        }}\r\n        className=\"accent-primary\"\r\n      />\r\n      서포터\r\n    </label>\r\n  </div>\r\n  </div>\r\n\r\n\r\n<p className=\"text-[12px] text-gray-600 mt-2\">\r\n  가중치는 역할 프리셋으로 고정됩니다. 아래는 <b>옵션 레벨 → 퍼센트 매핑</b>입니다.\r\n  {role === \"support\" && (\r\n    <>\r\n      <br />\r\n      <span className=\"text-[12px] text-rose-700\">\r\n        서포터의 현재 유효 옵션 가중치는 정확한 값을 몰라 <b>임시로 1</b>로 넣어두었습니다.\r\n      </span>\r\n      <br />\r\n      <span className=\"text-[12px] text-rose-700\">\r\n        정확한 수치를 아시는 분은 <b>연락 부탁드립니다.</b>\r\n      </span>\r\n    </>\r\n  )}\r\n  {role === \"dealer\" && (\r\n    <>\r\n      <br />\r\n      <span className=\"text-[12px] text-indigo-700\">\r\n        딜러의 현재 유효 옵션 가중치는{\" \"}\r\n        <a\r\n          href=\"https://youtu.be/1EHrPm50_Ig?si=K31gdkMqVI0S4CLv&t=1002\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"underline\"\r\n        >\r\n          포피셜 유튜브 영상\r\n        </a>\r\n        을 참고했습니다. <span className=\"text-gray-500\">(약 16:42 지점)</span>\r\n      </span>\r\n    </>\r\n  )}\r\n</p>\r\n\r\n{/* 옵션별 L1~L5 퍼센트 표 (반응형) */}\r\n{(() => {\r\n  const levels = [1, 2, 3, 4, 5];\r\n  const allowSet =\r\n    role && ROLE_KEYS?.[role] && typeof ROLE_KEYS[role].has === \"function\"\r\n      ? ROLE_KEYS[role]\r\n      : null;\r\n\r\n  // 현재 역할에 해당하는 옵션만 노출 (역할 미선택이면 전체)\r\n  const showKeys = OPTIONS.filter((k) => !allowSet || allowSet.has(k));\r\n\r\n  const rows = showKeys.map((k) => {\r\n    const values = levels.map((L) => levelValueByRole(role, k, L));\r\n    const isCurve = role === \"dealer\"; // 딜러는 커브, 서포터는 선형\r\n    return { k, values, isCurve };\r\n  });\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {/* 데스크톱/태블릿: 표 형태 */}\r\n      <div className=\"hidden sm:block overflow-x-auto\">\r\n        <table className=\"min-w-full text-sm\">\r\n          <colgroup>\r\n            <col width=\"18%\" />\r\n            <col width=\"16%\" />\r\n            <col width=\"16%\" />\r\n            <col width=\"16%\" />\r\n            <col width=\"16%\" />\r\n            <col width=\"16%\" />\r\n          </colgroup>\r\n          <thead>\r\n            <tr className=\"text-left text-gray-500\">\r\n              <th className=\"py-2\">옵션</th>\r\n              <th className=\"py-2\">Lv. 1</th>\r\n              <th className=\"py-2\">Lv. 2</th>\r\n              <th className=\"py-2\">Lv. 3</th>\r\n              <th className=\"py-2\">Lv. 4</th>\r\n              <th className=\"py-2\">Lv. 5</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map(({ k, values, isCurve }) => (\r\n              <tr key={k} className=\"border-t\">\r\n                <td className=\"py-2\">\r\n                  <span className=\"font-medium\">{OPTION_LABELS[k]}</span>\r\n                  <span\r\n                    className={`ml-2 text-[11px] ${\r\n                      isCurve ? \"text-primary\" : \"text-gray-400\"\r\n                    }`}\r\n                  >\r\n                    {isCurve ? \"커브\" : \"선형\"}\r\n                  </span>\r\n                </td>\r\n                {values.map((v, i) => (\r\n                  <td key={i} className=\"py-2 tabular-nums\">\r\n                    {Number(v).toFixed(3)}%\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* 모바일: 카드 + 칩 형태 */}\r\n      <div className=\"sm:hidden space-y-2\">\r\n        {rows.map(({ k, values, isCurve }) => (\r\n          <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-sm font-medium\">{OPTION_LABELS[k]}</div>\r\n              <span\r\n                className={`text-[11px] ${\r\n                  isCurve ? \"text-primary\" : \"text-gray-400\"\r\n                }`}\r\n              >\r\n                {isCurve ? \"커브\" : \"선형\"}\r\n              </span>\r\n            </div>\r\n\r\n            {/* L1~L5 그리드: 세로 스크롤 없이 한눈에 */}\r\n            <div className=\"mt-2 grid grid-cols-2 gap-2 text-[12px]\">\r\n              {values.map((v, i) => (\r\n                <div\r\n                  key={i}\r\n                  className=\"flex items-center justify-between px-2 py-1.5 rounded-lg bg-gray-50 border\"\r\n                >\r\n                  <span className=\"text-gray-500\">Lv. {i + 1}</span>\r\n                  <span className=\"tabular-nums font-medium\">\r\n                    {Number(v).toFixed(3)}%\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n})()}\r\n\r\n</section>\r\n\r\n\r\n\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-2\">\r\n          {stale && !isComputing && hasCalculated && (\r\n            <span className=\"inline-block text-[11px] px-3 py-1.5 rounded-lg bg-red-100 text-red-800 border border-red-200 text-center lg:text-left\">\r\n              입력값이 변경되었습니다. <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center gap-2 lg:ml-auto w-full lg:w-auto\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={calculate}\r\n              disabled={isComputing}\r\n              className=\"h-10 w-full lg:w-[120px] px-0 lg:px-3 rounded-xl ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n            >\r\n              {isComputing ? \"계산 중…\" : \"계산하기\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          {!isComputing && stale && hasCalculated && (\r\n            <p className=\"text-xs text-red-700 mt-1\">입력값이 변경되었습니다. 우측 상단의 <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.</p>\r\n          )}\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = results?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n              const presetFallback = (category === \"order\" && selectedJob)\r\n                ? getPresetItems(selectedJob, groupKey)[0]?.value\r\n                : undefined;\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name}\r\n                      {category === \"order\" && selectedJob && (c.preset || presetFallback) && (\r\n                        <>:&nbsp;{c.preset ?? presetFallback}</>\r\n                      )}&nbsp;\r\n                      <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(3))}%</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 포인트를 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <colgroup>\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"13%\"} />\r\n                          </colgroup>\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.wwill ?? g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(3))}%</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"} {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(3))}%</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n\r\n      {isComputing && (\r\n        <div className=\"fixed inset-0 z-[99999] bg-black/35 backdrop-blur-[1px] flex items-center justify-center px-6\">\r\n          <div className=\"w-full max-w-md rounded-2xl bg-white/95 border shadow p-4\">\r\n            <div className=\"text-sm font-medium text-gray-800 mb-2\">{progress.label}</div>\r\n\r\n            <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n              {progress.indeterminate ? (\r\n                <div className=\"absolute inset-0\">\r\n                  <div className=\"h-full w-1/3 bg-[#a399f2] animate-loa-marquee rounded-full\" />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"h-full bg-[#a399f2] transition-[width] duration-100\"\r\n                  style={{ width: `${progress.pct}%` }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mt-2 text-right text-xs text-gray-600\">\r\n              {progress.indeterminate\r\n                ? (progress.pulse != null ? Number(progress.pulse).toLocaleString() : \"\")\r\n                : `${progress.pct}%`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/hooks/useOptimizer.js\r\nimport { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { flushSync } from 'react-dom';\r\n\r\nexport function useOptimizer(cores, gems, role, weights) {\r\n  const [calcVersion, setCalcVersion] = useState(0);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [computing, setComputing] = useState(false);\r\n  const [progress, setProgress] = useState({\r\n    pct: 0,\r\n    label: \"준비 중…\",\r\n    indeterminate: true,\r\n    phase: undefined,\r\n    coreIndex: null,\r\n    coreCount: null,\r\n    coreDone: null,\r\n    coreTotal: null,\r\n    rate: null,\r\n    elapsedMs: null,\r\n    etaMs: null,\r\n    pulse: 0,\r\n  });\r\n  const [priorityPicks, setPriorityPicks] = useState([]);\r\n  const workerRef = useRef(null);\r\n\r\n  // ✅ 새로 추가: 마지막으로 \"계산하기\"를 눌렀을 때의 입력값 스냅샷\r\n  const paramsRef = useRef({ cores, gems, role, weights });\r\n\r\n  useEffect(() => {\r\n    workerRef.current = new Worker(new URL('../workers/optimizer.worker.js', import.meta.url), { type: 'module' });\r\n    try {\r\n      workerRef.current?.postMessage({ type: \"kickoff\" });\r\n    } catch { }\r\n    return () => {\r\n      workerRef.current?.terminate();\r\n      workerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // ✅ 변경점: 의존성 배열을 calcVersion 하나만 사용\r\n  useEffect(() => {\r\n    if (calcVersion === 0) return;\r\n    let cancelled = false;\r\n\r\n    setTimeout(() => {\r\n      if (cancelled) return;\r\n      flushSync(() => {\r\n        setComputing(true);\r\n        setProgress({\r\n          pct: 0,\r\n          label: \"최적의 젬 조합을 찾고 있습니다…\",\r\n          indeterminate: false,\r\n          phase: 'gen',\r\n          coreIndex: null,\r\n          coreCount: paramsRef.current.cores?.length || null, // ← 스냅샷 사용\r\n          coreDone: null,\r\n          coreTotal: null,\r\n          rate: null,\r\n          elapsedMs: null,\r\n          etaMs: null,\r\n          pulse: 0,\r\n        });\r\n      });\r\n    }, 0);\r\n\r\n    (async () => {\r\n      try {\r\n        await new Promise(resolve => requestAnimationFrame(resolve));\r\n        const worker = workerRef.current;\r\n        if (!worker) throw new Error(\"Worker not initialized\");\r\n\r\n        const onMessage = (e) => {\r\n          if (cancelled) return;\r\n          const msg = e.data || {};\r\n          if (msg?.type === \"error\" || msg?.error) {\r\n            console.error(e.data?.error || msg?.error);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 0, label: \"에러\", indeterminate: true }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n          if (msg.type === \"progress\") {\r\n            const { done, total, indeterminate = false, phase, coreIndex, coreCount, coreDone, coreTotal, rate, elapsedMs, etaMs, pulse } = msg;\r\n            if (indeterminate || !total || total <= 0 || done == null) {\r\n              setProgress((p) => ({ \r\n                ...p, pct: 0, indeterminate: true, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: pulse ?? (p.pulse ?? 0)\r\n              }));\r\n            } else {\r\n              const pct = Math.max(0, Math.min(100, Math.floor((done / Math.max(1, total)) * 100)));\r\n              setProgress((p) => ({ \r\n                ...p, pct, indeterminate: false, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: undefined\r\n              }));\r\n            }\r\n            return;\r\n          }\r\n          if (msg.type === \"result\") {\r\n            const { picks } = msg;\r\n            setPriorityPicks(picks || []);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 100, label: \"완료\", indeterminate: false, pulse: undefined }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n        };\r\n\r\n        worker.addEventListener('message', onMessage);\r\n\r\n        // ✅ 스냅샷을 꺼내서 사용\r\n        const { cores: c, gems: g, role: r, weights: w } = paramsRef.current;\r\n        const perCoreLimit = g.length > 60 ? 800 : g.length > 45 ? 1200 : g.length > 30 ? 1600 : 2000;\r\n\r\n        worker.postMessage({ type: \"run\", cores: c, gems: g, role: r, weights: w, perCoreLimit });\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          console.error(err);\r\n          setComputing(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calcVersion]); // ← 오직 버튼 클릭으로 증가한 calcVersion에만 반응\r\n\r\n  // ✅ 변경점: 계산 버튼을 눌렀을 때 현재 입력값을 스냅샷으로 저장한 뒤 calcVersion 증가\r\n  const calculate = useCallback(() => {\r\n    paramsRef.current = { cores, gems, role, weights }; // 최신값 스냅샷\r\n    setCalcVersion(v => v + 1);\r\n    setHasCalculated(true);\r\n  }, [cores, gems, role, weights]);\r\n\r\n  return {\r\n    isComputing: computing,\r\n    progress,\r\n    results: priorityPicks,\r\n    calculate, // ← 이 함수가 “계산하기” 버튼 onClick에 연결되면 됩니다.\r\n    hasCalculated,\r\n  };\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =========================================================================\r\n * 1) 전역 동작 플래그\r\n *    - 시뮬레이션 분산 감소, 희귀사건 스케일업 등 런타임 전역 옵션\r\n * ========================================================================= */\r\nconst USE_ANTITHETIC = true;\r\nconst AUTO_SCALE_RARE = true;\r\nconst OFFICIAL_RNG = true;\r\n\r\n/* =========================================================================\r\n * 2) 상수/테이블\r\n *    - 등급 경계, 젬 타입별 유효 효과 풀, 희귀도별 시도/리롤, 수치 범위, 비용\r\n * ========================================================================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\n\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\n\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\n\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\n\r\n/* =========================================================================\r\n * 3) 결정적 난수 및 보조 수학 유틸\r\n *    - 해시 기반 시드, xorshift 변종 RNG, 경계 체크/클램프, CI 계산 등\r\n * ========================================================================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\n\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\n\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n);\r\n}\r\n\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001;\r\n  if (n >= 100000) return 0.0002;\r\n  if (n >= 50000) return 0.0003;\r\n  if (n >= 10000) return 0.0005;\r\n  if (n >= 5000) return 0.0007;\r\n  return 0.001;\r\n};\r\n\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n\r\n/* =========================================================================\r\n * 4) 표시/형식 유틸\r\n *    - 확률/숫자 출력, 부담 배지, 성공률 추정\r\n * ========================================================================= */\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";\r\n  if (x >= 1) return \"100.00000%\";\r\n  return (x * 100).toFixed(5) + \"%\";\r\n}\r\n\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity;\r\n  return expectedGold / p;\r\n}\r\n\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\n\r\n/* =========================================================================\r\n * 5) 효과/등급 판정 로직\r\n *    - 유효 효과 풀, 총점/등급, 목표 충족 판정, 거리(부족분) 계산\r\n * ========================================================================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\n\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\n\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\n\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\n\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n\r\n/* =========================================================================\r\n * 6) 슬롯(선택지) 구성/적용 로직\r\n *    - 선택지 가중치 테이블 구성, 표현/해석, 실제 반영\r\n * ========================================================================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\n\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n\r\n  return items;\r\n}\r\n\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\n\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\n\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n\r\n/* =========================================================================\r\n * 7) 시뮬레이션 코어\r\n *    - 몬테카를로 기반 확률/기대치 추정, 저분산 페어, 희귀사건 가드\r\n * ========================================================================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    useAntithetic = true,\r\n    autoScaleRare = true,\r\n    rareTargetSuccesses = 100,\r\n    rareMaxTrials = 200000,\r\n    rareTiers = [200000],\r\n  } = opts;\r\n\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n\r\n  let localMaxTrials = maxTrials;\r\n  let forceRare = false;\r\n\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n\r\n  while (n < localMaxTrials) {\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      if (n >= localMaxTrials) break;\r\n\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;\r\n      continue;\r\n    }\r\n\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n\r\n    if (rareGuardActive) {\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue;\r\n    }\r\n\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n\r\n/* =========================================================================\r\n * 8) 등급 표시용 스타일/정렬 보조\r\n *    - 확률 0% 제거, 내림차순 정렬, 동률 판정\r\n * ========================================================================= */\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",\r\n};\r\n\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n\r\n/* =========================================================================\r\n * 9) 공통 UI 유틸/컴포넌트\r\n *    - 클릭외부감지 훅, 드롭다운, 토스트 스택, 숫자 입력, Select 래퍼\r\n * ========================================================================= */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\nfunction Dropdown({\r\n  value,\r\n  items,\r\n  onChange,\r\n  placeholder,\r\n  className,\r\n  disabled,\r\n  bordered = true\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  set,\r\n  onChange,\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n\r\n/* =========================================================================\r\n * 10) 보조 헬퍼\r\n *     - 라벨 중복 여부, 등 기타 메인에서 참조하는 작은 유틸\r\n * ========================================================================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n\r\n/* =========================================================================\r\n * 11) 메인 컴포넌트 (GemSimulator)\r\n *     - 상태 정의, 파생값, 이펙트, 액션 핸들러, 렌더 스켈레톤만 유지\r\n *     - 요청 사항: 최종 UI 구현 마크업은 비워둠 (원본 로직 유지)\r\n * ========================================================================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n\r\n  const curValid = cur.aName !== cur.bName;\r\n\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n\r\n  const migratedRef = useRef(false);\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n\r\n  const [changeMode, setChangeMode] = useState(null);\r\n  const [changePick, setChangePick] = useState(\"\");\r\n\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]);\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n\r\n  const addLog = useCallback((entry) => {\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n\r\n  const simRef = useRef(null);\r\n  const [logsMax, setLogsMax] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct2 = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct2(nowProb)} → 다른 항목 보기 기대 ${pct2(rerollProb)} (▲${pct2(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct2(nowProb)}가 다른 항목 보기 기대 ${pct2(rerollProb)}보다 유리 (▼${pct2(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct2(nowProb)} vs 다른 항목 보기 ${pct2(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode: pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return;\r\n    }\r\n\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory();\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n\r\n  function manualReset() {\r\n    setLogs([]);\r\n    setHistory({ past: [], future: [] });\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory();\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1,\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n\r\n  const dupWarnShown = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);\r\n      setHistory({ past: [], future: [] });\r\n    }\r\n  }, [allLocked]);\r\n\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base;\r\n  }, [gemKey, pos, abModePrimary]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      {/* 전역 CSS 변수와 유틸리티 클래스 주입: 주요 색상 및 accent-color 지정 */}\r\n      <style>{`\r\n    :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n    .text-primary{ color:#a399f2; }\r\n    .accent-primary{ accent-color:#a399f2; }\r\n  `}</style>\r\n\r\n      {/* 중앙 컨테이너: 최대 폭 제한 및 수직 간격 */}\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더 섹션: 제목과 시뮬레이션 반복 횟수 선택 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            {/* 페이지 타이틀: 그라디언트 배경 위에서 가독성 위한 화이트 텍스트/드롭섀도 */}\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n\r\n            {/* 우측 컨트롤: 시뮬레이션 횟수 드롭다운 */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                {/* 시뮬레이션 반복 수 선택 Dropdown (SIM_OPTIONS 기반) */}\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 기본 설정 카드 (젬 타입/등급/기본 시도/리롤 안내) */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 카드 타이틀 */}\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (잠금 상태 제어) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 입력 행: 젬 타입/등급/기본 시도·리롤 표시 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 선택: GEM_TYPES 키 목록을 드롭다운으로 제공 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 등급 선택: 고급/희귀/영웅 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 현재 등급 기준 기본 시도/리롤 수 정보 표시 (읽기 전용) */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 현재 옵션 입력 카드 (현재 젬의 상태 입력/잠금) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (현재 값 고정 여부) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 현재 옵션 입력 행: 효율/포인트/효과 A/B 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 포인트 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 선택 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 선택 (A와 중복 불가) */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 목표 옵션 입력 카드 (목표 충족 방식/효과/레벨) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n\r\n            {/* 우측: 저장/편집 토글 (잠금 시 계산 활성) */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 목표 충족 방식 라디오: 상관 없음일 때 비활성화 */}\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n\r\n          {/* 목표 조건 입력 행: 효율/포인트/추가 효과/효과명 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 목표 의지력 효율 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 포인트 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 추가 효과 역할군: 상관 없음/공격형/지원형 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 효과명/레벨: 역할군이 상관 없음이면 비활성화 */}\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 효과 A 선택 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 A 레벨 하한 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 선택: BOTH 모드에서만 활성 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 레벨 하한: BOTH 모드일 때만 활성 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 2열 레이아웃: 좌측 시뮬, 우측 작업 내역 */}\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 좌측(2칸): 가공 시뮬레이션 패널 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 헤더: 타이틀 및 초기화 버튼 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 사용 안내: 모든 설정 잠금 이후 액션 가능 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n\r\n            {/* 본문: 현재 상태 카드 + 선택지 카드 */}\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 현재 젬 상태/리소스 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n\r\n                {/* 핵심 스탯(효율/포인트/효과 A/B) 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  {/* 효율 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n\r\n                  {/* 포인트 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n\r\n                  {/* 효과 A: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 효과 B: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 리소스 칩: 남은 가공/리롤/비용 증감률/누적 골드 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 이번 차수 선택지 + 액션 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n\r\n                {/* 4개 슬롯: 라벨 선택 + 적용 버튼 */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {/* 현재 슬롯 라벨 변경 드롭다운 */}\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        {/* 적용 버튼: 모든 설정 잠금 및 중복 미발생 등 조건 충족 시 활성 */}\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 버튼 및 추천 문구 */}\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 EV 근거 설명 (가능 시 노출) */}\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 우측(1칸): 작업 내역 패널 (Undo/Redo 포함) */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              {/* Undo/Redo 버튼: 단축키 안내 포함 */}\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 로그 비어있음/목록 렌더링 */}\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n\r\n        {/* 결과 출력 섹션: 스켈레톤/실데이터 2상태 렌더링 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            {/* 우측 표시: 실제 사용된 Monte Carlo 횟수 및 95% CI 폭 */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 계산 중 또는 데이터 미존재 시: 스켈레톤 UI */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 스켈레톤 칩 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 스켈레톤 카드 2장 */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 실데이터 표시: 1회차 선택지 목록 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 목표 달성 확률 및 등급 확률 카드 2열 */}\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 카드: STOP_ON_SUCCESS vs RUN_TO_END */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* 좌측: STOP_ON_SUCCESS 결과 */}\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n\r\n                      {/* 우측: RUN_TO_END 결과 */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n\r\n                  {/* 등급 확률 카드: 전설/유물/고대 각각의 달성 확률 및 순서 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n\r\n                    {/* 각 등급 확률 막대 및 수치 표시 (0%도 노출) */}\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* 100% 확정 배지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n\r\n                    {/* 등급 확률 순서 요약: 0% 제외, 동률 표기 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun);\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n\r\n      {/* 전역 토스트 스택: 중앙 오버레이로 알림 표시 */}\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n\r\n      {/* 광고 영역: Kakao Adfit 삽입 */}\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp, MessageCircle } from \"lucide-react\";\r\n\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll();\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\n\r\n/** 문의 모달 */\r\nfunction InquiryModal({ open, onClose }) {\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [body, setBody] = React.useState(\"\");\r\n  const [files, setFiles] = React.useState([]);          // File[] (여러 장)\r\n  const [sending, setSending] = React.useState(false);\r\n\r\n  \r\n\r\n  const endpoint =\r\n    import.meta.env?.VITE_DISCORD_PROXY ||\r\n    (typeof document !== \"undefined\" &&\r\n      document.querySelector('meta[name=\"arcgrid-proxy\"]')?.content) ||\r\n    (typeof window !== \"undefined\" && window.__ARCGRID_PROXY__) ||\r\n    \"\";\r\n  const apiKey =\r\n    import.meta.env?.VITE_DISCORD_API_KEY ||\r\n    (typeof document !== \"undefined\" &&\r\n      document.querySelector('meta[name=\"arcgrid-api-key\"]')?.content) ||\r\n    (typeof window !== \"undefined\" && window.__ARCGRID_API_KEY__) ||\r\n    \"\";\r\n\r\n    // InquiryModal 내부에 임시로\r\n    console.log(\"endpoint =\", endpoint);\r\n    console.log(\"apiKey   =\", apiKey);\r\n\r\n  const MAX_FILES = 4;\r\n  const PER_FILE = 4 * 1024 * 1024;  // 4MB\r\n  const TOTAL = 16 * 1024 * 1024; // 16MB\r\n  const OK_TYPES = [\"image/png\", \"image/jpeg\", \"image/webp\", \"image/gif\"];\r\n\r\n  React.useEffect(() => {\r\n    if (!open) return;\r\n    const onKey = (e) => { if (e.key === \"Escape\") onClose?.(); };\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => window.removeEventListener(\"keydown\", onKey);\r\n  }, [open, onClose]);\r\n\r\n  const handleFiles = (e) => {\r\n    const picked = Array.from(e.target.files || []);\r\n    if (!picked.length) return;\r\n\r\n    let next = [...files];\r\n    for (const f of picked) {\r\n      if (!OK_TYPES.includes(f.type)) {\r\n        alert(\"이미지 파일만 첨부할 수 있어요. (png, jpg, webp, gif)\");\r\n        continue;\r\n      }\r\n      if (f.size > PER_FILE) {\r\n        alert(`파일 ${f.name}이(가) 5MB를 초과합니다.`);\r\n        continue;\r\n      }\r\n      if (next.length >= MAX_FILES) {\r\n        alert(`이미지는 최대 ${MAX_FILES}장까지 첨부할 수 있어요.`);\r\n        break;\r\n      }\r\n      next.push(f);\r\n    }\r\n\r\n    const totalSize = next.reduce((s, f) => s + f.size, 0);\r\n    if (totalSize > TOTAL) {\r\n      alert(`이미지 총 용량은 최대 ${(TOTAL / 1024 / 1024) | 0}MB까지 가능합니다.`);\r\n      return;\r\n    }\r\n\r\n    setFiles(next);\r\n    e.target.value = \"\"; // 같은 파일 다시 선택 가능하도록 초기화\r\n  };\r\n\r\n  const removeFileAt = (idx) => {\r\n    setFiles((arr) => arr.filter((_, i) => i !== idx));\r\n  };\r\n\r\n  const fileToBase64 = async (f) => {\r\n    const buf = await f.arrayBuffer();\r\n    let binary = \"\";\r\n    const bytes = new Uint8Array(buf);\r\n    const chunk = 0x8000;\r\n    for (let i = 0; i < bytes.length; i += chunk) {\r\n      binary += String.fromCharCode.apply(null, bytes.subarray(i, i + chunk));\r\n    }\r\n    return btoa(binary); // base64\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e?.preventDefault?.();\r\n    if (sending) return; // 더블클릭 방지 (프레임 경합)\r\n    if (!title.trim() || !body.trim()) {\r\n      alert(\"제목과 내용을 모두 입력하세요.\");\r\n      return;\r\n    }\r\n    if (!endpoint) {\r\n      alert(\"전송 경로가 설정되지 않았습니다. (VITE_DISCORD_PROXY)\");\r\n      return;\r\n    }\r\n    try {\r\n      setSending(true);\r\n\r\n      // File[] -> [{ name, type, data(base64) }, ...]\r\n      const images = [];\r\n      for (const f of files) {\r\n        const data = await fileToBase64(f);\r\n        images.push({ name: f.name, type: f.type, data });\r\n      }\r\n\r\n      const fd = new FormData();\r\n      const nonce = (crypto?.randomUUID && crypto.randomUUID()) || `${Date.now()}-${Math.random()}`;\r\n      fd.append(\"title\", title.trim().slice(0, 80));\r\n      fd.append(\"content\", body.trim().slice(0, 4000));\r\n      fd.append(\"nonce\", nonce); // ← 워커 디둡용 토큰\r\n      files.forEach((f) => fd.append(\"files[]\", f, f.name));\r\n     \r\n      const url = `${endpoint}${apiKey ? `?key=${encodeURIComponent(apiKey)}` : \"\"}`;\r\n      const res = await fetch(url, { method: \"POST\", body: fd }); // Content-Type 수동 지정 X\r\n      const data = await res.json().catch(() => ({}));\r\n      if (data?.ok) {\r\n        alert(\"문의가 전송되었습니다. 감사합니다!\");\r\n        setTitle(\"\"); setBody(\"\"); setFiles([]);\r\n        onClose?.();\r\n      } else {\r\n        alert(\"전송 실패: 잠시 후 다시 시도해 주세요.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"전송 중 오류가 발생했습니다.\");\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 z-[100] bg-black/40 backdrop-blur-[1px] flex items-center justify-center px-4\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      onClick={onClose}\r\n    >\r\n      <div\r\n        className=\"w-full max-w-lg rounded-2xl bg-white border shadow-xl p-4 sm:p-5\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-base sm:text-lg font-semibold\">문의하기</h3>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"rounded-lg p-1 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-[#a399f2]/40\"\r\n            aria-label=\"닫기\"\r\n          >\r\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\"><path d=\"M6 6l12 12M6 18L18 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" /></svg>\r\n          </button>\r\n        </div>\r\n\r\n        <p className=\"mt-1 text-xs text-gray-600\">\r\n          제목/내용과 함께 이미지를 <b>최대 {MAX_FILES}장</b>까지 첨부할 수 있어요. (파일당 4MB, 총 16MB)\r\n        </p>\r\n\r\n        <form onSubmit={handleSubmit} className=\"mt-3 space-y-3\">\r\n          <div>\r\n            <label className=\"block text-xs text-gray-500 mb-1\">제목</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              maxLength={80}\r\n              placeholder=\"예) 아크그리드 계산 관련 문의\"\r\n              className=\"block mb-1 h-10 w-full px-3 rounded-xl border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n            />\r\n            <div className=\"text-[11px] text-gray-400 text-right\">{title.length}/80</div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-xs text-gray-500 mb-1\">내용</label>\r\n            <textarea\r\n              value={body}\r\n              onChange={(e) => setBody(e.target.value)}\r\n              rows={6}\r\n              maxLength={4000}\r\n              placeholder=\"문의 내용을 적어주세요. (재현 방법, 스크린샷 링크 등)\"\r\n              className=\"block mb-1 w-full px-3 py-2 rounded-xl border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n            />\r\n            <div className=\"text-[11px] text-gray-400 text-right\">{body.length}/4000</div>\r\n          </div>\r\n\r\n          <div>\r\n            {/* 이미지 첨부 (선택, 최대 {MAX_FILES}장) */}\r\n            <label className=\"block text-xs text-gray-500 mb-1\">\r\n              이미지 첨부 (선택, 최대 {MAX_FILES}장)\r\n            </label>\r\n\r\n            {/* 드래그&드롭 + 버튼 업로더 */}\r\n            <div\r\n              className={[\r\n                \"rounded-2xl border-2 border-dashed\",\r\n                \"border-gray-300 bg-gray-50/60 hover:bg-gray-50 transition\",\r\n                \"p-4 text-center\"\r\n              ].join(\" \")}\r\n              onDragOver={(e) => { e.preventDefault(); }}\r\n              onDrop={(e) => {\r\n                e.preventDefault();\r\n                const dropped = Array.from(e.dataTransfer?.files || []);\r\n                if (!dropped.length) return;\r\n                // 기존 handleFiles를 재활용: input change와 동일하게 처리하려면 아래 ingest 로직을 사용,\r\n                // 아니면 handleFiles를 수정해도 됩니다.\r\n                const fakeEvent = { target: { files: dropped } };\r\n                handleFiles(fakeEvent);\r\n              }}\r\n            >\r\n              {/* 숨겨진 파일 인풋 */}\r\n              <input\r\n                id=\"inq-files\"\r\n                type=\"file\"\r\n                accept={OK_TYPES.join(\",\")}\r\n                multiple\r\n                onChange={handleFiles}\r\n                disabled={sending}\r\n                className=\"sr-only\"\r\n              />\r\n\r\n              <div className=\"flex flex-col items-center justify-center gap-2\">\r\n                <div className=\"text-[13px] text-gray-600\">\r\n                  파일을 이곳에 <b>끌어다 놓기</b> 또는\r\n                  <label\r\n                    htmlFor=\"inq-files\"\r\n                    className={[\r\n                      \"inline-flex items-center justify-center gap-2\",\r\n                      \"px-3 h-8 ml-1 rounded-xl shadow-sm cursor-pointer\",\r\n                      \"border inline-flex items-center justify-center bg-white hover:bg-gray-50\"\r\n                    ].join(\" \")}\r\n                    title=\"이미지 선택\"\r\n                  >\r\n                    이미지 선택\r\n                  </label>\r\n                </div>\r\n                <div className=\"text-[11px] text-gray-500\">\r\n                  허용: png, jpg, webp, gif등 · 파일당 4MB · 총 16MB\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 미리보기 그리드 (기존 그대로 사용) */}\r\n            {files.length > 0 && (\r\n              <div className=\"mt-2 grid grid-cols-3 sm:grid-cols-4 gap-2\">\r\n                {files.map((f, idx) => {\r\n                  const url = URL.createObjectURL(f);\r\n                  return (\r\n                    <div key={idx} className=\"relative\">\r\n                      <img\r\n                        src={url}\r\n                        alt={f.name}\r\n                        className=\"h-24 w-full object-cover rounded-lg border\"\r\n                        onLoad={() => URL.revokeObjectURL(url)}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeFileAt(idx)}\r\n                        className=\"absolute -top-2 -right-2 bg-white border rounded-full w-6 h-6 text-xs font-bold\"\r\n                        title=\"제거\"\r\n                        aria-label=\"첨부 제거\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n            <div className=\"pt-1 flex items-center gap-2 justify-end\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"h-10 px-3 rounded-xl border inline-flex items-center justify-center bg-white hover:bg-gray-50\"\r\n              >\r\n                취소\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={sending}\r\n                className={[\r\n                  \"h-10 px-3 rounded-xl inline-flex items-center justify-center gap-2\",\r\n                  \"text-white\",\r\n                  \"hover:brightness-95 active:brightness-90\",\r\n                  \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/50\",\r\n                  sending ? \"opacity-70 cursor-not-allowed\" : \"\"\r\n                ].join(\" \")}\r\n                style={{ backgroundColor: \"#a399f2\" }}\r\n              >\r\n                {sending ? \"전송 중…\" : \"전송하기\"}\r\n              </button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n/** FAB 스택: 문의 + TOP */\r\nfunction FabStack({ onOpenInquiry }) {\r\n  const nearBottom = useNearBottom(520);\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)] flex flex-col gap-2\">\r\n      {/* 문의하기 FAB: 항상 노출 */}\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"문의하기\"\r\n        onClick={onOpenInquiry}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          nearBottom ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <MessageCircle size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">문의</span>\r\n      </button>\r\n\r\n      {/* TOP FAB: 하단 근처일 때 노출 */}\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          nearBottom ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CoreOnly() {\r\n  const [inqOpen, setInqOpen] = React.useState(false);\r\n\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n        <header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n          <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n            <nav aria-label=\"Core pages\">\r\n              <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/gem\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 가공 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/optimizer\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 장착 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            {/* 기본 경로 보정: /#/core → /#/core/optimizer */}\r\n            <Route index element={<Navigate to=\"/optimizer\" replace />} />\r\n\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n\r\n            {/* 나머지 경로도 optimizer로 보정 */}\r\n            <Route path=\"*\" element={<Navigate to=\"/optimizer\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n\r\n      {/* FAB 스택 & 모달 */}\r\n      <FabStack onOpenInquiry={() => setInqOpen(true)} />\r\n      <InquiryModal open={inqOpen} onClose={() => setInqOpen(false)} />\r\n    </HashRouter>\r\n  );\r\n}\r\n"],"names":["adRef","useRef","useEffect","ins","document","createElement","className","style","display","setAttribute","script","type","async","src","current","innerHTML","appendChild","_jsx","ref","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEALER_WEIGHTS","DEFAULT_WEIGHTS","DEALER_LEVEL_CURVES","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","levelValueByRole","role","key","lvl","L","Math","max","min","scoreGemForRole","gem","weights","sum","_w$key","allow","Array","isArray","includes","has","roleAllowsKey","basePct","scale","o1k","o1v","o2k","o2v","CORE_NAME_ITEMS","value","label","CATEGORY_LABEL","order","chaos","LS_KEY","JOBS","_ARC_CORES$jobs","ARC_CORES","CORE_NAME_BY_GROUP","GROUP_BY_CORE_NAME","CORE_ORDER","TARGET_MAX_BY_GRADE","getPresetItems","job","groupKey","_ARC_CORES$data$job2","_ARC_CORES$data2","filter","e","map","getEffectsForPreset","preset","_ARC_CORES$data$job3","_ARC_CORES$data3","row","find","arr","flatMap","item","m","match","p","point","text","replace","trim","_ref","_ref2","_item$point","_ref3","_ref4","_ref5","_item$text","P","포인트","parseInt","t","desc","효과","String","entries","_ref6","v","split","line","x","sort","a","b","normalizeEffects","uid","random","toString","slice","maskWeightsForRole","prev","next","loadFromStorage","localStorage","getItem","JSON","parse","console","warn","dragPortal","body","PortalAwareDraggable","_ref7","draggableId","index","children","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref8","items","onChange","placeholder","bordered","open","setOpen","useState","focusedIndex","setFocusedIndex","btnRef","menuRef","itemRefs","menuPos","top","left","width","forceTick","listboxId","initFocusIndex","useCallback","sel","findIndex","i","disabled","firstEnabled","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","handlerRef","listener","_handlerRef$current","some","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","onScroll","_btnRef$current","passive","requestAnimationFrame","_ref9","_ref9$focus","el","focus","cancelAnimationFrame","selected","getNextEnabled","start","dir","n","length","step","menu","AnimatePresence","motion","ul","id","tabIndex","undefined","initial","opacity","y","animate","exit","transition","duration","position","zIndex","onKeyDown","preventDefault","first","last","it","_btnRef$current2","_btnRef$current2$quer","_btnRef$current2$quer2","querySelector","_btnRef$current3","_btnRef$current3$quer","_btnRef$current3$quer2","isSelected","isActive","onMouseEnter","onItemMouseEnter","onClick","_btnRef$current4","_btnRef$current4$quer","_btnRef$current4$quer2","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref0","toasts","onClose","div","stiffness","damping","msg","NumberInput","_ref1","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","s","trunc","clamp","inputMode","onBlur","onWheel","currentTarget","blur","CoreEffectInfo","_ref10","_TARGET_MAX_BY_GRADE$","_GROUP_BY_CORE_NAME$c","_CORE_LABEL$grade","_CORE_LABEL$grade2","_CORE_LABEL$grade3","_CORE_LABEL$grade4","_CORE_LABEL$grade5","grade","category","coreName","supply","effects","maxP","list","coreShort","LABEL_CLS","isAncient","toLowerCase","gradeColorCls","toUpperCase","onMouseLeave","onFocus","Info","color","pickRight","out","_","pct","pickSlashValueByGrade","LoACoreOptimizer","title","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","_loadFromStorage$role","_loadFromStorage2","setWeights","saved","every","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","push","remove","setToasts","setTimeout","useToasts","quickAddMode","setQuickAddMode","dataVersion","setDataVersion","stale","setStale","didMountRef","cores","gems","isComputing","progress","results","calculate","hasCalculated","calcVersion","setCalcVersion","setHasCalculated","computing","setComputing","setProgress","indeterminate","phase","coreIndex","coreCount","coreDone","coreTotal","rate","elapsedMs","etaMs","pulse","priorityPicks","setPriorityPicks","workerRef","paramsRef","Worker","URL","_workerRef$current","postMessage","_workerRef$current2","terminate","cancelled","flushSync","_paramsRef$current$co","Promise","resolve","worker","Error","onMessage","data","_e$data","error","done","total","_p$pulse","floor","picks","c","g","perCoreLimit","err","useOptimizer","selectedJob","setSelectedJob","_loadFromStorage$sele","_loadFromStorage3","fileInputRef","buildSnapshot","app","version","exportedAt","Date","toISOString","handleExportJson","blob","Blob","stringify","url","createObjectURL","d","stamp","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","jobPart","href","download","click","revokeObjectURL","handleImportClick","_fileInputRef$current","handleImportFile","_e$target$files","file","files","reader","FileReader","onload","json","result","onerror","readAsText","setCores","updater","setGems","prevByCat","_prevByCat$category","changed","_items$0$value","_items$","name","nextPreset","updateGem","patch","updateCore","cs","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","idx","displayIndexGem","QuickAddPad","_ref11","onAdd","focusOnMount","setO1k","setO2k","setO1v","setO2v","will","setWill","setPoint","firstRef","focusAfterSubmitRef","WILL_INPUT_ID","_firstRef$current","_firstRef$current$foc","_firstRef$current2","_firstRef$current2$se","select","handleSubmit","_e$preventDefault","_firstRef$current$sel","_firstRef$current3","getElementById","_el$select","onKeyDownSubmit","shiftKey","onSubmit","Plus","setItem","saveToStorage","backgroundImage","backgroundAttachment","Download","Upload","accept","val","_items$0$value2","_items$2","j","addCore","_getPresetItems$","nextName","existingNames","nextAvailableCoreName","minThreshold","enforceMin","DragDropContext","onDragStart","evt","Event","dispatchEvent","onDragEnd","destination","from","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","_CORE_THRESHOLDS$c$gr","gradeMax","thresholds","targetItems","concat","takenNames","coreNameItems","allowed","_ARC_CORES$data$job","_ARC_CORES$data","groups","Boolean","getAllowedCoreNameSet","prov","_c$minThreshold","draggableProps","dragHandleProps","maxAllowed","nextMin","_presetItems$0$value","_presetItems$","presetItems","resolvedPreset","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","removeGem","_Fragment","rel","levels","allowSet","rows","values","isCurve","_ref12","toFixed","_ref13","_getPresetItems$2","_c$preset","pick","hasResult","minOfGrade","presetFallback","totalWill","totalPoint","maxThr","thr","roleSum","_ref14","_g$wwill","_g$point","gi","disp","wwill","KakaoAdfit","toLocaleString","USE_ANTITHETIC","AUTO_SCALE_RARE","OFFICIAL_RNG","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","SIM_OPTIONS","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","lo","hi","zeroSuccessUpperBound","alpha","arguments","pow","epsilonByTrials","batchByTrials","fmtProbSmart","fmtProb","fmtNum","goldPerSuccess","expectedGold","Infinity","round","burdenBadge","tone","estimateRate","successes","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","score","meetsTargetByMode","abMode","tgtNames","pool","isAny","nm","TA","aName","TB","bName","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","reduce","gold","rrs","unlocked","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","ci","low","high","halfWidth","localMaxTrials","forceRare","tiers","hardCap","nextTier","cur","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","useMemo","toneBtn","success","info","warning","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","pad","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","cursor","_allOptionLabels$curs","_allOptionLabels$curs2","manLabels","setManLabels","_allOptionLabels$i","used","replacement","l","resultStop","setResultStop","resultRun","setResultRun","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","pct2","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","RotateCcw","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","gps","badge","delay","grades","grad","comps","eps","diff","abs","rankGradeOrder","InquiryModal","_document$querySelect","_document$querySelect2","setTitle","setBody","setFiles","sending","setSending","endpoint","content","__ARCGRID_PROXY__","apiKey","__ARCGRID_API_KEY__","log","TOTAL","OK_TYPES","handleFiles","picked","f","alert","fileToBase64","buf","arrayBuffer","binary","bytes","Uint8Array","fromCharCode","apply","subarray","btoa","stopPropagation","height","viewBox","stroke","strokeWidth","strokeLinecap","_crypto","images","fd","FormData","nonce","crypto","randomUUID","now","append","encodeURIComponent","fetch","method","catch","ok","maxLength","onDragOver","onDrop","_e$dataTransfer","dropped","dataTransfer","multiple","alt","onLoad","removeFileAt","backgroundColor","FabStack","onOpenInquiry","nearBottom","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","MessageCircle","scrollTo","behavior","CoreOnly","inqOpen","setInqOpen","HashRouter","basename","NavLink","to","Routes","Route","element","Navigate","path"],"sourceRoot":""}