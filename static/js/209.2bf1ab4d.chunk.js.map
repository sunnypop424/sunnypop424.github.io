{"version":3,"file":"static/js/209.2bf1ab4d.chunk.js","mappings":"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","sources":["components/LoACoreOptimizer.jsx","CoreOnly.jsx","components/KakaoAdfit.jsx"],"sourcesContent":["// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useMemo, useState, useRef, useLayoutEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nconst CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nconst CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nconst CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nconst GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\n\r\nconst OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nconst OPTIONS = [\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\"];\r\n\r\nconst ROLE_KEYS = {\r\n  dealer: new Set([\"atk\",\"add\",\"boss\"]),\r\n  support: new Set([\"brand\",\"allyDmg\",\"allyAtk\"]),\r\n};\r\nconst DEFAULT_WEIGHTS = { atk:1, add:1, boss:1, brand:1, allyDmg:1, allyAtk:1 };\r\n\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\n\r\nconst CORE_ORDER = [\"해 코어\",\"달 코어\",\"별 코어\"];\r\nfunction nextAvailableCoreName(existingNames){\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null; // 모두 사용됨\r\n}\r\n\r\nconst uid = () => Math.random().toString(36).slice(2,9);\r\n\r\nfunction sanitizeWeights(w){\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if(!w) return base;\r\n  Object.keys(base).forEach((k)=>{\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nfunction scoreGemForRole(g, role, w){\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? g.o1v * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? g.o2v * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nfunction* combinations(arr, k){\r\n  const n = arr.length; if(k>n) return;\r\n  const idx = Array.from({length:k}, (_,i)=>i);\r\n  while(true){\r\n    yield idx.map(i=>arr[i]);\r\n    let p=k-1; while(p>=0 && idx[p]===n-k+p) p--; if(p<0) break; idx[p]++; for(let j=p+1;j<k;j++) idx[j]=idx[j-1]+1;\r\n  }\r\n}\r\nfunction thresholdsHit(grade, totalPoint){\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nfunction scoreCombo(combo, grade, role, weights){\r\n  const totalWill = combo.reduce((s,g)=>s+((g.will ?? 0)),0);\r\n  const totalPoint = combo.reduce((s,g)=>s+((g.point ?? 0)),0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s,g)=>s+scoreGemForRole(g, role, weights),0);\r\n  const score = (thr.length*10_000_000) + (totalPoint*10_000) + ((5_000 - totalWill)*10) + roleSum - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nfunction enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin){\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n  const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n  const effMin = minThreshold ?? minOfGrade;\r\n  const effEnforce = enforceMin || minThreshold == null;\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n  for(let k=0;k<=maxPick;k++){\r\n    if(k===0){ all.push({ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }); continue; }\r\n    for(const combo of combinations(pool, k)){\r\n      const totalWill = combo.reduce((s,g)=>s+(g.will||0),0);\r\n      if(totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list:combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n  all.sort((a,b)=>b.score-a.score);\r\n\r\n  let filtered;\r\n  if(effEnforce){\r\n    filtered = all.filter(ci => {\r\n      const maxThr = Math.max(0, ...ci.thr);\r\n      return ci.list.length>0 && maxThr >= (effMin ?? 0);\r\n    });\r\n  }else{\r\n    filtered = all.filter(ci => ci.list.length>0 && ci.thr.length>0);\r\n  }\r\n  if(filtered.length===0){\r\n    return [{ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }];\r\n  }\r\n  return filtered.slice(0,200);\r\n}\r\n\r\n/* 우선순위 기반 최적화(그리디): ★현재 배열 순서★(위→아래)가 우선순위 */\r\nfunction optimizeByPriority(cores, pool, role, weights){\r\n  const W = sanitizeWeights(weights);\r\n  const order = cores.map((c,i)=>({ i, pr:i })).sort((a,b)=>a.pr-b.pr);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const picks = Array.from({length: cores.length}, ()=>({ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }));\r\n\r\n  let remaining = pool.slice();\r\n  for(const { i } of order){\r\n    const c = cores[i];\r\n    const cand = enumerateCoreCombos(remaining, c.grade, role, W, c.minThreshold, c.enforceMin);\r\n    const choice = cand.find(ci=>ci.list.length>0) || cand[0] || { list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 };\r\n    picks[i] = choice;\r\n    const chosenIds = new Set(choice.list.map(g=>g.id));\r\n    remaining = remaining.filter(g=>!chosenIds.has(g.id));\r\n  }\r\n  return { picks };\r\n}\r\n\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\n\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        // 자식이 function이면 provided/snapshot을 넘겨 \"자식이 직접\" props를 붙이게 함\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\n function useOnClickOutside(refs, handler){\r\n   const refsArray = React.useMemo(\r\n     () => (Array.isArray(refs) ? refs : [refs]),\r\n     // refs가 동일 ref 객체를 재사용하므로 이 deps로 충분\r\n     [refs]\r\n   );\r\n   // 최신 handler를 참조하도록 ref로 보관\r\n   const handlerRef = React.useRef(handler);\r\n   React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n\r\n   React.useEffect(() => {\r\n     const listener = (e) => {\r\n       if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n       handlerRef.current?.(e);\r\n     };\r\n     // click 시점(캡처링)으로: 내부 onClick 먼저 실행되도록\r\n     document.addEventListener('click', listener, true);\r\n     return ()=> document.removeEventListener('click', listener, true);\r\n   }, [refsArray]);\r\n }\r\nfunction Dropdown({ value, items, onChange, placeholder, className }) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);   // 포지션 리렌더 트리거(값은 사용 안 함)\r\n\r\n  // 전역 close-all-dropdowns 이벤트 받으면 닫기\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  // 버튼/메뉴 외부 클릭 시 닫기 (둘 다 제외)\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  // 열릴 때 버튼 위치 측정 → 고정 포지션으로 포탈 렌더\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = {\r\n      top: rect.bottom + 4,\r\n      left: rect.left,\r\n      width: rect.width,\r\n    };\r\n    forceTick((v) => v + 1);\r\n\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = {\r\n        top: r.bottom + 4,\r\n        left: r.left,\r\n        width: r.width,\r\n      };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: menuPos.current.top,\r\n          left: menuPos.current.left,\r\n          width: menuPos.current.width,\r\n          zIndex: 9999, // 최상단\r\n        }}\r\n        className=\"rounded-xl border bg-white shadow-lg overflow-auto max-h-60\"\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (it.disabled) return;         // 비활성 항목 클릭 무시\r\n                onChange(it.value);\r\n                setOpen(false);\r\n              }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${\r\n                it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"\r\n              } ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setOpen((v) => !v)}\r\n        className=\"min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl border px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n      >\r\n        <span className=\"truncate text-sm\">\r\n          {selected ? selected.label : placeholder || \"선택\"}\r\n        </span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16}/> : <ChevronDown size={16}/>}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts(){\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t=>[...t, { id, msg }]);\r\n    setTimeout(()=> setToasts(t=> t.filter(x=>x.id!==id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t=> t.filter(x=> x.id!==id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }){\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t=> (\r\n          <motion.div key={t.id} initial={{opacity:0, scale:0.98}} animate={{opacity:1, scale:1}} exit={{opacity:0, scale:0.98}} transition={{type:'spring', stiffness:380, damping:28}} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={()=>onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  onChange,          // (number|null)=>void\r\n  min,\r\n  max,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true, // blur 시 빈값을 0(or min)으로 보정할지\r\n  className = \"\",\r\n  inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n\r\n  // 휠로 값 바뀌는 사고 방지(선택)\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"                     // ← 스핀/키보드 ↑↓ 유지\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}                     // ← \"\" 허용 (빈 입력 유지)\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);             // 입력 중 빈값은 null로 보존\r\n          return;\r\n        }\r\n        // number 타입은 브라우저가 숫자형 문자열만 넣어줌(예: \"1\", \"1.2\", \"1e2\")\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num)); // 입력 중에도 숫자 전달(필요하면 null로 바꿔도 됨)\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);          // blur 시에만 확정/보정\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer(){\r\n\r\n  useEffect(() => {\r\n    document.title = \"아크그리드 젬 장착 도우미\";\r\n  }, []);\r\n\r\n  const [role, setRole] = useState(\"dealer\");\r\n  const [weights, setWeights] = useState({...DEFAULT_WEIGHTS});\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);   // 최근 추가 코어 ID\r\n  const [highlightGemId, setHighlightGemId] = useState(null); \r\n  const [cores, setCores] = useState([]);\r\n  const [gems, setGems] = useState([]);\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  \r\nconst moveCoreUp = (index) => setCores(prev => {\r\n  if (index <= 0) return prev;\r\n  const next = [...prev];\r\n  [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n  return next;\r\n});\r\n\r\nconst moveCoreDown = (index) => setCores(prev => {\r\n  if (index >= prev.length - 1) return prev;\r\n  const next = [...prev];\r\n  [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n  return next;\r\n});\r\n\r\n\r\n  const { picks: priorityPicks } = useMemo(()=> optimizeByPriority(cores, gems, role, weights), [cores, gems, role, weights]);\r\n\r\n  const resetWeights = ()=> setWeights({...DEFAULT_WEIGHTS});\r\n  const addGem = ()=> {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k:\"atk\", o1v:0, o2k:\"add\", o2v:0 }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n\r\n  const removeGem = (id)=> {\r\n    setGems(v=> v.filter(g=> g.id!==id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n\r\n  const addCore = ()=> setCores(cs=>{\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c=>c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id)=> {\r\n    setCores(cs=> cs.length<=0 ? cs : cs.filter(c=> c.id!==id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch)=> setCores(cs=>{\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs; // 변경 취소\r\n      }\r\n    }\r\n    return cs.map(c=> c.id===id? {...c, ...patch}: c);\r\n  });\r\n\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  // DnD: 코어 순서가 곧 우선순위(위쪽이 더 높음)\r\nconst onDragStart = () => {\r\n  requestAnimationFrame(() => setDragging(true));\r\n  // 드래그 시작하면 모든 드롭다운 닫기 이벤트 발송\r\n  const evt = new Event('close-all-dropdowns');\r\n  window.dispatchEvent(evt);\r\n};\r\n const onDragEnd = (result) => {\r\n   requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // UI tokens (모바일 최적화 포함)\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n\r\n  // 인덱스 표기: 코어(위→1), 젬(아래→1)\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  // ===== Self-tests (non-blocking) =====\r\n  useEffect(() => {\r\n    function runSelfTests(){\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id:\"t1\", will:1, point:1, o1k:\"atk\", o1v:2, o2k:\"brand\", o2v:3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id:\"t2\", will:0, point:10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 프라이머리 컬러 토큰 & 유틸 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n      `}</style>\r\n\r\n      {/* 모든 버튼 커서 포인터 */}\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 타이틀 + 포지션(우측) */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">로아 아크그리드 젬 장착 도우미</h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button onClick={()=>setRole('dealer')} className={`min-w-[80px] h-10 inline-flex items-center justify-center gap-1 px-3 rounded-xl w-full lg:w-auto ${role==='dealer'? 'bg-white':'bg-white opacity-50'}`}>\r\n                딜러\r\n              </button>\r\n              <button onClick={()=>setRole('support')} className={`min-w-[80px] h-10 inline-flex items-center justify-center gap-1 px-3 rounded-xl w-full lg:w-auto ${role==='support'? 'bg-white':'bg-white opacity-50'}`}>\r\n                서포터\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 코어 입력 (DnD 우선순위) */}\r\n        <section className={`${card} p-4 lg:p-6 !mt-2 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16}/><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided)=> (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx)=> {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        CORE_THRESHOLDS[c.grade].map(v => ({ value: String(v), label: `${v}P 이상` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x=>x.id!==c.id).map(x=>x.name));\r\n                      const coreNameItems = CORE_NAME_ITEMS.map(it => ({\r\n                        ...it,\r\n                        disabled: takenNames.has(it.value)\r\n                      }));\r\n                      const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov)=> (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id===highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              {/* Index badge - 모바일 좌측 정렬, 데스크톱 중앙 정렬 */}\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val)=>updateCore(c.id,{name: val})} items={coreNameItems} placeholder=\"코어명\"/>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.grade} onChange={(val)=>updateCore(c.id,{grade: /** @type {CoreGrade} */(val)})} items={GRADES.map(g=>({value:g, label: CORE_LABEL[g]}))} placeholder=\"코어 등급\"/>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 구간</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={String(c.minThreshold ?? '')} onChange={(val)=>{ if(val) updateCore(c.id,{minThreshold:Number(val), enforceMin:true}); else updateCore(c.id,{minThreshold:undefined, enforceMin:false}); }} items={targetItems} placeholder=\"구간\"/>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e)=>updateCore(c.id,{enforceMin:e.target.checked})}/>\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">목표 구간 강제</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">선택 안 함이면 내부적으로 <br className=\"hidden lg:block\"/>최소 구간 <b className=\"text-primary\">{minOfGrade}P</b>을 기본 목표로 적용합니다.</p>\r\n                              </div>\r\n\r\n                              {/* 모바일: 순서 버튼 + 삭제 버튼 묶음 */}\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={()=>moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16}/></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={()=>moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16}/></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={()=>removeCore(c.id)} disabled={cores.length<=0} aria-label=\"코어 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length===0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3 mb-3\">\r\n            <h2 className={sectionTitle}>젬 입력</h2>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16}/><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={()=>setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g,idx)=> (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id===highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n\r\n                {/* 필요 의지력 + 포인트 */}\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will }\r\n                      onChange={(v)=>updateGem(g.id,{will: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title:\"의지력\", placeholder:\"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point }\r\n                      onChange={(v)=>updateGem(g.id,{point: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title:\"포인트\", placeholder:\"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 옵션 1 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val)=>updateGem(g.id,{o1k: /** @type {OptionKey} */(val)})} items={OPTIONS.map(k=> ({ value:k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\"/>\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v }\r\n                      onChange={(v)=>updateGem(g.id,{o1v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder:\"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 옵션 2 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val)=>updateGem(g.id,{o2k: /** @type {OptionKey} */(val)})} items={OPTIONS.map(k=> ({ value:k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\"/>\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v }\r\n                      onChange={(v)=>updateGem(g.id,{o2v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder:\"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={()=>removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length===0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16}/><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k] }\r\n                    onChange={(v)=> setWeights((w)=> ({ ...w, [k]: (v ) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c,i)=> {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = priorityPicks?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length>0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name} <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>유효 옵션 합(<span className=\"font-semibold\">{role==='dealer'?\"딜러\":\"서폿\"}</span>) <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 구간을 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">유효합</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g=> {\r\n                              const gi = gems.findIndex(x=>x.id===g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}</td>\r\n                                </tr>\r\n                              );\r\n                            }) }\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x=>x.id===g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">유효합 {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(2))}</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove}/>\r\n\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\n\r\nexport default function CoreOnly() {\r\n  return <LoACoreOptimizer />;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\n\r\nexport default KakaoAdfit;"],"names":["CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","CORE_NAME_ITEMS","value","label","CORE_ORDER","uid","Math","random","toString","slice","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_w$g$o1k","_w$g$o2k","has","o1k","o1v","o2k","o2v","combinations","arr","n","length","idx","Array","from","_","i","map","p","j","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","enumerateCoreCombos","pool","minThreshold","enforceMin","supply","W","minOfGrade","min","effMin","effEnforce","all","maxPick","push","list","filtered","sort","a","b","ci","maxThr","max","dragPortal","document","body","PortalAwareDraggable","_ref","draggableId","index","children","_jsx","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","className","open","setOpen","useState","btnRef","useRef","menuRef","menuPos","top","left","width","forceTick","useEffect","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","isArray","handlerRef","current","listener","e","_handlerRef$current","some","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","selected","find","menu","AnimatePresence","motion","ul","ref","initial","opacity","y","animate","exit","transition","duration","style","position","zIndex","it","type","onClick","disabled","undefined","String","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref3","toasts","onClose","div","scale","stiffness","damping","msg","id","NumberInput","_ref4","step","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","x","clamp","inputMode","onBlur","onWheel","currentTarget","blur","LoACoreOptimizer","title","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","cores","setCores","gems","setGems","remove","setToasts","setTimeout","useToasts","picks","priorityPicks","useMemo","order","c","pr","remaining","cand","choice","chosenIds","optimizeByPriority","updateGem","patch","updateCore","cs","name","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","displayIndexGem","total","_w$brand","console","assert","gem","includes","cA","cB","log","warn","runSelfTests","backgroundImage","backgroundAttachment","addCore","nextName","existingNames","nextAvailableCoreName","Plus","DragDropContext","onDragStart","requestAnimationFrame","evt","Event","dispatchEvent","onDragEnd","result","destination","prev","next","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","targetItems","concat","takenNames","coreNameItems","prov","_c$minThreshold","draggableProps","dragHandleProps","val","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","removeGem","resetWeights","RotateCcw","pick","hasResult","toFixed","_Fragment","_g$will2","_g$point2","gi","findIndex","disp","KakaoAdfit","CoreOnly","adRef","ins","createElement","display","setAttribute","script","async","src","innerHTML","appendChild"],"sourceRoot":""}