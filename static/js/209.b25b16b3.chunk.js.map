{"version":3,"file":"static/js/209.b25b16b3.chunk.js","mappings":"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","sources":["components/LoACoreOptimizer.jsx","CoreOnly.jsx","components/KakaoAdfit.jsx"],"sourcesContent":["// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useMemo, useState, useRef, useLayoutEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nconst CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nconst CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nconst CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nconst GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\n\r\nconst OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nconst OPTIONS = [\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\"];\r\n\r\nconst ROLE_KEYS = {\r\n  dealer: new Set([\"atk\",\"add\",\"boss\"]),\r\n  support: new Set([\"brand\",\"allyDmg\",\"allyAtk\"]),\r\n};\r\nconst DEFAULT_WEIGHTS = { atk:1, add:1, boss:1, brand:1, allyDmg:1, allyAtk:1 };\r\n\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\n\r\n\r\nconst uid = () => Math.random().toString(36).slice(2,9);\r\n\r\nfunction sanitizeWeights(w){\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if(!w) return base;\r\n  Object.keys(base).forEach((k)=>{\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nfunction scoreGemForRole(g, role, w){\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? g.o1v * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? g.o2v * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nfunction* combinations(arr, k){\r\n  const n = arr.length; if(k>n) return;\r\n  const idx = Array.from({length:k}, (_,i)=>i);\r\n  while(true){\r\n    yield idx.map(i=>arr[i]);\r\n    let p=k-1; while(p>=0 && idx[p]===n-k+p) p--; if(p<0) break; idx[p]++; for(let j=p+1;j<k;j++) idx[j]=idx[j-1]+1;\r\n  }\r\n}\r\nfunction thresholdsHit(grade, totalPoint){\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nfunction scoreCombo(combo, grade, role, weights){\r\n  const totalWill = combo.reduce((s,g)=>s+((g.will ?? 0)),0);\r\n  const totalPoint = combo.reduce((s,g)=>s+((g.point ?? 0)),0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s,g)=>s+scoreGemForRole(g, role, weights),0);\r\n  const score = (thr.length*10_000_000) + (totalPoint*10_000) + ((5_000 - totalWill)*10) + roleSum - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nfunction enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin){\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n  const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n  const effMin = minThreshold ?? minOfGrade;\r\n  const effEnforce = enforceMin || minThreshold == null;\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n  for(let k=0;k<=maxPick;k++){\r\n    if(k===0){ all.push({ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }); continue; }\r\n    for(const combo of combinations(pool, k)){\r\n      const totalWill = combo.reduce((s,g)=>s+(g.will||0),0);\r\n      if(totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list:combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n  all.sort((a,b)=>b.score-a.score);\r\n\r\n  let filtered;\r\n  if(effEnforce){\r\n    filtered = all.filter(ci => {\r\n      const maxThr = Math.max(0, ...ci.thr);\r\n      return ci.list.length>0 && maxThr >= (effMin ?? 0);\r\n    });\r\n  }else{\r\n    filtered = all.filter(ci => ci.list.length>0 && ci.thr.length>0);\r\n  }\r\n  if(filtered.length===0){\r\n    return [{ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }];\r\n  }\r\n  return filtered.slice(0,200);\r\n}\r\n\r\n/* 우선순위 기반 최적화(그리디): ★현재 배열 순서★(위→아래)가 우선순위 */\r\nfunction optimizeByPriority(cores, pool, role, weights){\r\n  const W = sanitizeWeights(weights);\r\n  const order = cores.map((c,i)=>({ i, pr:i })).sort((a,b)=>a.pr-b.pr);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const picks = Array.from({length: cores.length}, ()=>({ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }));\r\n\r\n  let remaining = pool.slice();\r\n  for(const { i } of order){\r\n    const c = cores[i];\r\n    const cand = enumerateCoreCombos(remaining, c.grade, role, W, c.minThreshold, c.enforceMin);\r\n    const choice = cand.find(ci=>ci.list.length>0) || cand[0] || { list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 };\r\n    picks[i] = choice;\r\n    const chosenIds = new Set(choice.list.map(g=>g.id));\r\n    remaining = remaining.filter(g=>!chosenIds.has(g.id));\r\n  }\r\n  return { picks };\r\n}\r\n\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\n\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        // 자식이 function이면 provided/snapshot을 넘겨 \"자식이 직접\" props를 붙이게 함\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\n function useOnClickOutside(refs, handler){\r\n   const refsArray = React.useMemo(\r\n     () => (Array.isArray(refs) ? refs : [refs]),\r\n     // refs가 동일 ref 객체를 재사용하므로 이 deps로 충분\r\n     [refs]\r\n   );\r\n   // 최신 handler를 참조하도록 ref로 보관\r\n   const handlerRef = React.useRef(handler);\r\n   React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n\r\n   React.useEffect(() => {\r\n     const listener = (e) => {\r\n       if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n       handlerRef.current?.(e);\r\n     };\r\n     // click 시점(캡처링)으로: 내부 onClick 먼저 실행되도록\r\n     document.addEventListener('click', listener, true);\r\n     return ()=> document.removeEventListener('click', listener, true);\r\n   }, [refsArray]);\r\n }\r\nfunction Dropdown({ value, items, onChange, placeholder, className }) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);   // 포지션 리렌더 트리거(값은 사용 안 함)\r\n\r\n  // 전역 close-all-dropdowns 이벤트 받으면 닫기\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  // 버튼/메뉴 외부 클릭 시 닫기 (둘 다 제외)\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  // 열릴 때 버튼 위치 측정 → 고정 포지션으로 포탈 렌더\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = {\r\n      top: rect.bottom + 4,\r\n      left: rect.left,\r\n      width: rect.width,\r\n    };\r\n    forceTick((v) => v + 1);\r\n\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = {\r\n        top: r.bottom + 4,\r\n        left: r.left,\r\n        width: r.width,\r\n      };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: menuPos.current.top,\r\n          left: menuPos.current.left,\r\n          width: menuPos.current.width,\r\n          zIndex: 9999, // 최상단\r\n        }}\r\n        className=\"rounded-xl border bg-white shadow-lg overflow-auto max-h-60\"\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onChange(it.value);\r\n                setOpen(false);\r\n              }}\r\n              className={`w-full text-left px-3 py-2 text-sm hover:bg-gray-50 ${\r\n                it.value === value ? \"bg-gray-100\" : \"\"\r\n              }`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setOpen((v) => !v)}\r\n        className=\"min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl border px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n      >\r\n        <span className=\"truncate text-sm\">\r\n          {selected ? selected.label : placeholder || \"선택\"}\r\n        </span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16}/> : <ChevronDown size={16}/>}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts(){\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t=>[...t, { id, msg }]);\r\n    setTimeout(()=> setToasts(t=> t.filter(x=>x.id!==id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t=> t.filter(x=> x.id!==id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }){\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t=> (\r\n          <motion.div key={t.id} initial={{opacity:0, scale:0.98}} animate={{opacity:1, scale:1}} exit={{opacity:0, scale:0.98}} transition={{type:'spring', stiffness:380, damping:28}} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={()=>onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  onChange,          // (number|null)=>void\r\n  min,\r\n  max,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true, // blur 시 빈값을 0(or min)으로 보정할지\r\n  className = \"\",\r\n  inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n\r\n  // 휠로 값 바뀌는 사고 방지(선택)\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"                     // ← 스핀/키보드 ↑↓ 유지\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}                     // ← \"\" 허용 (빈 입력 유지)\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);             // 입력 중 빈값은 null로 보존\r\n          return;\r\n        }\r\n        // number 타입은 브라우저가 숫자형 문자열만 넣어줌(예: \"1\", \"1.2\", \"1e2\")\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num)); // 입력 중에도 숫자 전달(필요하면 null로 바꿔도 됨)\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);          // blur 시에만 확정/보정\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer(){\r\n\r\n  useEffect(() => {\r\n    document.title = \"아크그리드 젬 장착 도우미\";\r\n  }, []);\r\n\r\n  const [role, setRole] = useState(\"dealer\");\r\n  const [weights, setWeights] = useState({...DEFAULT_WEIGHTS});\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);   // 최근 추가 코어 ID\r\n  const [highlightGemId, setHighlightGemId] = useState(null); \r\n  const [cores, setCores] = useState([\r\n    { id: uid(), name: \"해 코어\", grade: \"RELIC\", minThreshold: undefined, enforceMin: false }\r\n  ]);\r\n  const [gems, setGems] = useState([\r\n    { id: uid(), will: 4, point: 5, o1k:\"atk\", o1v:3, o2k:\"add\", o2v:5 },\r\n    { id: uid(), will: 5, point: 5, o1k:\"atk\", o1v:5, o2k:\"brand\", o2v:5 },\r\n    { id: uid(), will: 5, point: 5, o1k:\"allyDmg\", o1v:5, o2k:\"brand\", o2v:5 },\r\n    { id: uid(), will: 3, point: 4, o1k:\"boss\", o1v:4, o2k:\"add\", o2v:2 },\r\n  ]);\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  \r\nconst moveCoreUp = (index) => setCores(prev => {\r\n  if (index <= 0) return prev;\r\n  const next = [...prev];\r\n  [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n  return next;\r\n});\r\n\r\nconst moveCoreDown = (index) => setCores(prev => {\r\n  if (index >= prev.length - 1) return prev;\r\n  const next = [...prev];\r\n  [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n  return next;\r\n});\r\n\r\n\r\n  const { picks: priorityPicks } = useMemo(()=> optimizeByPriority(cores, gems, role, weights), [cores, gems, role, weights]);\r\n\r\n  const resetWeights = ()=> setWeights({...DEFAULT_WEIGHTS});\r\n  const addGem = ()=> {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k:\"atk\", o1v:0, o2k:\"add\", o2v:0 }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n\r\n  const removeGem = (id)=> {\r\n    setGems(v=> v.filter(g=> g.id!==id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n\r\n  const addCore = ()=> setCores(cs=>{\r\n    if(cs.length >= 3){ push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n    return [\r\n      { id, name: \"해 코어\", grade: \"RELIC\", minThreshold: undefined, enforceMin: false },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id)=> {\r\n    setCores(cs=> cs.length<=1 ? cs : cs.filter(c=> c.id!==id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch)=> setCores(cs=> cs.map(c=> c.id===id? {...c, ...patch}: c));\r\n\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  // DnD: 코어 순서가 곧 우선순위(위쪽이 더 높음)\r\nconst onDragStart = () => {\r\n  requestAnimationFrame(() => setDragging(true));\r\n  // 드래그 시작하면 모든 드롭다운 닫기 이벤트 발송\r\n  const evt = new Event('close-all-dropdowns');\r\n  window.dispatchEvent(evt);\r\n};\r\n const onDragEnd = (result) => {\r\n   requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // UI tokens (모바일 최적화 포함)\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n\r\n  // 인덱스 표기: 코어(위→1), 젬(아래→1)\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  // ===== Self-tests (non-blocking) =====\r\n  useEffect(() => {\r\n    function runSelfTests(){\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id:\"t1\", will:1, point:1, o1k:\"atk\", o1v:2, o2k:\"brand\", o2v:3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id:\"t2\", will:0, point:10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 프라이머리 컬러 토큰 & 유틸 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n      `}</style>\r\n\r\n      {/* 모든 버튼 커서 포인터 */}\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 타이틀 + 포지션(우측) */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow\">로아 아크그리드 젬 장착 도우미</h1>\r\n            <div className=\"flex gap-2 w-full lg:w-auto\">\r\n              <button onClick={()=>setRole('dealer')} className={`min-w-[80px] h-10 inline-flex items-center justify-center gap-1 px-3 rounded-xl w-full lg:w-auto ${role==='dealer'? 'bg-white':'bg-white opacity-50'}`}>\r\n                딜러\r\n              </button>\r\n              <button onClick={()=>setRole('support')} className={`min-w-[80px] h-10 inline-flex items-center justify-center gap-1 px-3 rounded-xl w-full lg:w-auto ${role==='support'? 'bg-white':'bg-white opacity-50'}`}>\r\n                서포터\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 코어 입력 (DnD 우선순위) */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16}/><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600 mt-2\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600 mt-2\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided)=> (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx)=> {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        CORE_THRESHOLDS[c.grade].map(v => ({ value: String(v), label: `${v}P 이상` }))\r\n                      );\r\n                      const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov)=> (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id===highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              {/* Index badge - 모바일 좌측 정렬, 데스크톱 중앙 정렬 */}\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val)=>updateCore(c.id,{name: val})} items={CORE_NAME_ITEMS} placeholder=\"코어명\"/>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.grade} onChange={(val)=>updateCore(c.id,{grade: /** @type {CoreGrade} */(val)})} items={GRADES.map(g=>({value:g, label: CORE_LABEL[g]}))} placeholder=\"코어 등급\"/>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 구간</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={String(c.minThreshold ?? '')} onChange={(val)=>{ if(val) updateCore(c.id,{minThreshold:Number(val), enforceMin:true}); else updateCore(c.id,{minThreshold:undefined, enforceMin:false}); }} items={targetItems} placeholder=\"구간\"/>\r\n                              </div>\r\n\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e)=>updateCore(c.id,{enforceMin:e.target.checked})}/>\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">목표 구간 강제</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">선택 안 함이면 내부적으로 <br className=\"hidden lg:block\"/>최소 구간 <b className=\"text-primary\">{minOfGrade}P</b>을 기본 목표로 적용합니다.</p>\r\n                              </div>\r\n\r\n                              {/* 모바일: 순서 버튼 + 삭제 버튼 묶음 */}\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={()=>moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16}/></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={()=>moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16}/></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={()=>removeCore(c.id)} disabled={cores.length<=1} aria-label=\"코어 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3 mb-3\">\r\n            <h2 className={sectionTitle}>젬 입력</h2>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16}/><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={()=>setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g,idx)=> (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id===highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n\r\n                {/* 필요 의지력 + 포인트 */}\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will }\r\n                      onChange={(v)=>updateGem(g.id,{will: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title:\"의지력\", placeholder:\"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point }\r\n                      onChange={(v)=>updateGem(g.id,{point: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title:\"포인트\", placeholder:\"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 옵션 1 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val)=>updateGem(g.id,{o1k: /** @type {OptionKey} */(val)})} items={OPTIONS.map(k=> ({ value:k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\"/>\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v }\r\n                      onChange={(v)=>updateGem(g.id,{o1v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder:\"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 옵션 2 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val)=>updateGem(g.id,{o2k: /** @type {OptionKey} */(val)})} items={OPTIONS.map(k=> ({ value:k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\"/>\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v }\r\n                      onChange={(v)=>updateGem(g.id,{o2v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder:\"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={()=>removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length===0 && <div className=\"text-sm text-gray-700 p-2\">젬을 추가하세요. (코어당 최대 4개가 배정됩니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16}/><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k] }\r\n                    onChange={(v)=> setWeights((w)=> ({ ...w, [k]: (v ) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c,i)=> {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = priorityPicks?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length>0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name} <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>유효 옵션 합(<span className=\"font-semibold\">{role==='dealer'?\"딜러\":\"서폿\"}</span>) <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 구간을 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">유효합</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g=> {\r\n                              const gi = gems.findIndex(x=>x.id===g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}</td>\r\n                                </tr>\r\n                              );\r\n                            }) }\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x=>x.id===g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">유효합 {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(2))}</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove}/>\r\n\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\n\r\nexport default function CoreOnly() {\r\n  return <LoACoreOptimizer />;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\n\r\nexport default KakaoAdfit;"],"names":["CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","CORE_NAME_ITEMS","value","label","uid","Math","random","toString","slice","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_w$g$o1k","_w$g$o2k","has","o1k","o1v","o2k","o2v","combinations","arr","n","length","idx","Array","from","_","i","map","p","j","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","enumerateCoreCombos","pool","minThreshold","enforceMin","supply","W","minOfGrade","min","effMin","effEnforce","all","maxPick","push","list","filtered","sort","a","b","ci","maxThr","max","dragPortal","document","body","PortalAwareDraggable","_ref","draggableId","index","children","_jsx","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","className","open","setOpen","useState","btnRef","useRef","menuRef","menuPos","top","left","width","forceTick","useEffect","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","isArray","handlerRef","current","listener","e","_handlerRef$current","some","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","selected","find","menu","AnimatePresence","motion","ul","ref","initial","opacity","y","animate","exit","transition","duration","style","position","zIndex","it","type","onClick","String","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref3","toasts","onClose","div","scale","stiffness","damping","msg","id","NumberInput","_ref4","step","allowFloat","zeroOnBlur","inputProps","toStr","undefined","inner","setInner","normalizeOnBlur","trunc","x","clamp","inputMode","onBlur","onWheel","currentTarget","blur","LoACoreOptimizer","title","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","cores","setCores","name","gems","setGems","remove","setToasts","setTimeout","useToasts","picks","priorityPicks","useMemo","order","c","pr","remaining","cand","choice","chosenIds","optimizeByPriority","updateGem","patch","updateCore","cs","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","displayIndexGem","total","_w$brand","console","assert","gem","includes","cA","cB","log","warn","runSelfTests","backgroundImage","backgroundAttachment","addCore","Plus","DragDropContext","onDragStart","requestAnimationFrame","evt","Event","dispatchEvent","onDragEnd","result","destination","prev","next","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","targetItems","concat","prov","_c$minThreshold","draggableProps","dragHandleProps","val","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","disabled","Trash2","addGem","removeGem","resetWeights","RotateCcw","pick","hasResult","toFixed","_Fragment","_g$will2","_g$point2","gi","findIndex","disp","KakaoAdfit","CoreOnly","adRef","ins","createElement","display","setAttribute","script","async","src","innerHTML","appendChild"],"sourceRoot":""}