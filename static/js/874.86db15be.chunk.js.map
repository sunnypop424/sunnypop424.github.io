{"version":3,"file":"static/js/874.86db15be.chunk.js","mappings":"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","sources":["components/KakaoAdfit.jsx","lib/optimizerCore.js","components/LoACoreOptimizer.jsx","hooks/useOptimizer.js","components/GemSimulator.jsx","CoreOnly.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;","// src/lib/optimizerCore.js\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\nexport const CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nexport const CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nexport const CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nexport const GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nexport const OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nexport const OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nexport const ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\nexport const DEFAULT_WEIGHTS = { atk: 1, add: 1, boss: 1, brand: 1, allyDmg: 1, allyAtk: 1 };\r\n// 딜러 가중치: y ≈ slope * level (원점 통과 회귀 추정)\r\nexport const DEALER_WEIGHTS = {\r\n  boss: 0.07870909,\r\n  add: 0.06018182,\r\n  atk: 0.03407273,\r\n  brand: 0,\r\n  allyDmg: 0,\r\n  allyAtk: 0,\r\n};\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nexport function sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nexport function scoreGemForRole(g, role, w) {\r\n  if (role == null) return 0; // 역할 미선택이면 유효옵션 점수 0\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? (g.o1v ?? 0) * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? (g.o2v ?? 0) * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nexport function* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1;\r\n    while (p >= 0 && idx[p] === n - k + p) p--;\r\n    if (p < 0) break;\r\n    idx[p]++;\r\n    for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\nexport function thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nexport function scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000)\r\n    + (totalPoint * 10_000)\r\n    + ((5_000 - totalWill) * 10)\r\n    + roleSum\r\n    - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nexport function enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin, onStep) {\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) {\r\n      all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 });\r\n      continue;\r\n    }\r\n    for (const combo of combinations(pool, k)) {\r\n      onStep && onStep(1);\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n\r\n  all.sort((a, b) => b.score - a.score);\r\n\r\n  // [수정] UI 변경에 맞춰 필터링 로직 전체를 새로운 로직으로 변경합니다.\r\n  let filtered;\r\n\r\n  // '이상 탐색' 모드 (체크박스 ON)\r\n  if (enforceMin) {\r\n    const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n    const effMin = minThreshold ?? minOfGrade; // 목표 설정 없으면 등급 최소치 적용\r\n    filtered = all.filter(ci =>\r\n      ci.totalPoint >= effMin && ci.thr.length > 0 && ci.list.length > 0\r\n    );\r\n  }\r\n  // '정확히 일치' 모드 (체크박스 OFF, 기본값)\r\n  else {\r\n    // 목표 포인트가 명확히 설정된 경우\r\n    if (minThreshold != null) {\r\n      filtered = all.filter(ci =>\r\n        ci.totalPoint === minThreshold && ci.list.length > 0\r\n      );\r\n    }\r\n    // 목표 포인트 설정이 없는 경우 (가장 점수 높은 순으로)\r\n    else {\r\n      filtered = all.filter(ci => ci.thr.length > 0 && ci.list.length > 0);\r\n    }\r\n  }\r\n\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n  \r\n  return filtered;\r\n}","// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport { useOptimizer } from '../hooks/useOptimizer';\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n// 최적화 순수 로직/상수 import (UI에서 쓰는 상수/헬퍼만)\r\nimport {\r\n  CORE_SUPPLY,\r\n  CORE_THRESHOLDS,\r\n  CORE_LABEL,\r\n  GRADES,\r\n  OPTION_LABELS,\r\n  OPTIONS,\r\n  DEFAULT_WEIGHTS,\r\n  DEALER_WEIGHTS,\r\n  ROLE_KEYS,\r\n  sanitizeWeights,\r\n  scoreGemForRole,\r\n  thresholdsHit,\r\n  scoreCombo,\r\n} from '../lib/optimizerCore.js';\r\nimport ARC_CORES from \"../data/arc_cores_select.json\";\r\n\r\n/* --------------------------------------------------------------------------\r\n * [타입 설명 - 코드 동작과 무관한 개발자 참고 주석]\r\n *  - Role: \"dealer\"(딜러) | \"support\"(서폿)\r\n *  - OptionKey: 각 젬 옵션 키 (\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\")\r\n *  - CoreGrade: 코어 등급 (\"HERO\",\"LEGEND\",\"RELIC\",\"ANCIENT\")\r\n *  - Gem/CoreDef/Weights/ComboInfo: 데이터 모델\r\n * -------------------------------------------------------------------------- */\r\n\r\n/* 도메인 외 UI 전용 상수 */\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\nconst CATEGORY_LABEL = { order: \"질서\", chaos: \"혼돈\" };\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\";\r\n\r\n// ★ 직업/코어 그룹 매핑\r\nconst JOBS = ARC_CORES?.jobs ?? [];\r\nconst CORE_NAME_BY_GROUP = { \"해\": \"해 코어\", \"달\": \"달 코어\", \"별\": \"별 코어\" };\r\nconst GROUP_BY_CORE_NAME = { \"해 코어\": \"해\", \"달 코어\": \"달\", \"별 코어\": \"별\" };\r\n\r\n// 직업별로 (해/달/별) 어떤 그룹이 있는지 -> \"해 코어\"/\"달 코어\"/\"별 코어\" 셋 반환\r\nfunction getAllowedCoreNameSet(job) {\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const groups = new Set(entries.map(e => e[\"그룹\"])); // \"해\" | \"달\" | \"별\"\r\n  const names = new Set(\r\n    Array.from(groups).map(g => CORE_NAME_BY_GROUP[g]).filter(Boolean)\r\n  );\r\n  return names;\r\n}\r\n\r\n// 직업 + 그룹(해/달/별)에 해당하는 '직업 코어' 프리셋 목록\r\nfunction getPresetItems(job, groupKey /* \"해\"|\"달\"|\"별\" */) {\r\n  if (!job || !groupKey) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  return entries\r\n    .filter(e => e[\"그룹\"] === groupKey)\r\n    .map(e => ({ value: e[\"코어\"], label: e[\"코어\"] }));\r\n}\r\n\r\n\r\n/* =============================== 유틸/헬퍼 (UI) =============================== */\r\nconst CORE_ORDER = [\"해 코어\", \"달 코어\", \"별 코어\"];\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\n// 등급별 목표 포인트 최대값\r\nconst TARGET_MAX_BY_GRADE = {\r\n  HERO: 10,      // 영웅\r\n  LEGEND: 14,    // 전설\r\n  RELIC: 19,     // 유물\r\n  ANCIENT: 20,   // 고대\r\n};\r\n\r\n// 역할 선택 시 반대 역할 키 가중치를 0으로 마스킹\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => { next[k] = 0; });\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => { next[k] = 1; });\r\n  return next;\r\n}\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    [refs]\r\n  );\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ value, items, onChange, placeholder, className, bordered = true }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [focusedIndex, setFocusedIndex] = useState(-1); // 현재 키보드 포커스용\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const itemRefs = useRef([]); // li>button 각각의 ref\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  const listboxId = useRef(`dd-list-${Math.random().toString(36).slice(2)}`).current;\r\n\r\n  // 열릴 때 선택값 또는 첫 사용가능 항목으로 포커스 초기화\r\n  const initFocusIndex = useCallback(() => {\r\n    const sel = items.findIndex(i => i.value === value && !i.disabled);\r\n    if (sel >= 0) return sel;\r\n    const firstEnabled = items.findIndex(i => !i.disabled);\r\n    return firstEnabled >= 0 ? firstEnabled : -1;\r\n  }, [items, value]);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick(v => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick(v => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  // 열릴 때 키보드 포커스 타깃 준비 + 첫 렌더 다음 프레임에 실제 DOM 포커스\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    setFocusedIndex(initFocusIndex());\r\n    // 다음 프레임에 리스트박스에 포커스 이동 (버튼 포커스가 메뉴로 남는 이슈 방지)\r\n    const t = requestAnimationFrame(() => {\r\n      const el = itemRefs.current[initFocusIndex()];\r\n      (el ?? menuRef.current)?.focus?.();\r\n    });\r\n    return () => cancelAnimationFrame(t);\r\n  }, [open, initFocusIndex]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  // 유틸: 다음/이전 사용가능 인덱스\r\n  const getNextEnabled = (start, dir) => {\r\n    const n = items.length;\r\n    if (n === 0) return -1;\r\n    let i = start;\r\n    for (let step = 0; step < n; step++) {\r\n      i = (i + dir + n) % n;\r\n      if (!items[i].disabled) return i;\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  // 버튼 키다운: 열고 닫기/첫 항목 포커스\r\n  const onButtonKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const willOpen = !open;\r\n      if (willOpen) {\r\n        setOpen(true);\r\n        // 열리면 useEffect가 포커스 세팅\r\n      } else {\r\n        // 이미 열렸다면 이동\r\n        const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n        const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n        if (next >= 0) setFocusedIndex(next);\r\n      }\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      setOpen(v => !v);\r\n    }\r\n  };\r\n\r\n  // 메뉴 키다운: 항목 이동/선택/닫기\r\n  const onMenuKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n      const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n      if (next >= 0) setFocusedIndex(next);\r\n    } else if (e.key === \"Home\") {\r\n      e.preventDefault();\r\n      const first = items.findIndex(i => !i.disabled);\r\n      if (first >= 0) setFocusedIndex(first);\r\n    } else if (e.key === \"End\") {\r\n      e.preventDefault();\r\n      let last = -1;\r\n      for (let i = items.length - 1; i >= 0; i--) {\r\n        if (!items[i].disabled) { last = i; break; }\r\n      }\r\n      if (last >= 0) setFocusedIndex(last);\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      const it = items[focusedIndex];\r\n      if (it && !it.disabled) {\r\n        onChange(it.value);\r\n        setOpen(false);\r\n        // 닫히면 버튼으로 포커스 복귀\r\n        requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n      requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n    } else if (e.key === \"Tab\") {\r\n      // 탭으로 이동할 땐 자연스럽게 닫기\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  // 마우스 호버시 포커스 인덱스 업데이트(시각 일치)\r\n  const onItemMouseEnter = (i) => setFocusedIndex(i);\r\n\r\n  // 메뉴 DOM\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        role=\"listbox\"\r\n        id={listboxId}\r\n        tabIndex={-1}\r\n        aria-activedescendant={focusedIndex >= 0 ? `${listboxId}-opt-${focusedIndex}` : undefined}\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n        onKeyDown={onMenuKeyDown}\r\n      >\r\n        {items.map((it, i) => {\r\n          const isSelected = it.value === value;\r\n          const isActive = i === focusedIndex;\r\n          return (\r\n            <li key={String(it.value)}>\r\n              <button\r\n                ref={(el) => (itemRefs.current[i] = el)}\r\n                id={`${listboxId}-opt-${i}`}\r\n                type=\"button\"\r\n                role=\"option\"\r\n                aria-selected={isSelected}\r\n                onMouseEnter={() => onItemMouseEnter(i)}\r\n                onClick={() => {\r\n                  if (it.disabled) return;\r\n                  onChange(it.value);\r\n                  setOpen(false);\r\n                  requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n                }}\r\n                aria-disabled={it.disabled ? true : undefined}\r\n                className={`w-full text-left px-3 py-2 text-sm\r\n                  ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"}\r\n                  ${isSelected ? \"bg-gray-100\" : \"\"}\r\n                  ${isActive ? \"outline-none ring-2 ring-[#a399f2]/40\" : \"\"}\r\n                `}\r\n              >\r\n                <span className=\"block truncate\">{it.label}</span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={open}\r\n        aria-controls={open ? listboxId : undefined}\r\n        onKeyDown={onButtonKeyDown}\r\n        onClick={() => setOpen(v => !v)}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value, onChange, min, max, step = 1, allowFloat = false, zeroOnBlur = true, className = \"\", inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num));\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n\r\n  // 현재 카테고리\r\n  const [category, setCategory] = useState/** @type {Category} */(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  // 카테고리별 상태\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n\r\n  // 기타 상태\r\n  const [role, setRole] = useState/** @type {Role|null} */(null);\r\n  const [weights, setWeights] = useState({ ...DEFAULT_WEIGHTS });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  const [quickAddMode, setQuickAddMode] = useState(false);\r\n\r\n\r\n  const [stale, setStale] = useState(false);\r\n  const didMountRef = useRef(false);\r\n\r\n  // 현재 카테고리별 단축\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n  // ✅ [추가] 커스텀 훅을 호출하여 계산 관련 로직을 모두 위임합니다.\r\n  const { isComputing, progress, results, calculate, hasCalculated } = useOptimizer(cores, gems, role, weights);\r\n  // ★ 선택한 직업 (질서에서만 사용)\r\n  const [selectedJob, setSelectedJob] = useState(() => (loadFromStorage()?.selectedJob ?? \"\"));\r\n\r\n\r\n  // ✅ [추가] 계산 결과(results)가 바뀔 때마다 stale 상태를 false로 업데이트합니다.\r\n  useEffect(() => {\r\n    if (results && results.length > 0) {\r\n      setStale(false);\r\n    }\r\n  }, [results]);\r\n\r\n  // 현재 카테고리에 대해서만 set 하는 헬퍼\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  const setGems = (updater) => {\r\n    setGemsByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) { didMountRef.current = true; return; }\r\n    setStale(true);\r\n  }, [role, weights, category]);\r\n\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n\r\n  const resetWeights = () => setWeights({ ...DEFAULT_WEIGHTS });\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: null, o2k: \"add\", o2v: null }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs;\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // UI tokens\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n\r\n  // Self-tests (optional)\r\n  useEffect(() => {\r\n    function runSelfTests() {\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id: \"t1\", will: 1, point: 1, o1k: \"atk\", o1v: 2, o2k: \"brand\", o2v: 3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id: \"t2\", will: 0, point: 10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n  useEffect(() => {\r\n    saveToStorage({ category, coresByCat, gemsByCat, role, weights, selectedJob });\r\n  }, [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  // === 빠른 추가 패드 (LoACoreOptimizer 내부에 선언) ===\r\n  function QuickAddPad({ onAdd, focusOnMount = false }) {\r\n    const [o1k, setO1k] = useState(\"atk\");\r\n    const [o2k, setO2k] = useState(\"add\");\r\n    const [o1v, setO1v] = useState(1);\r\n    const [o2v, setO2v] = useState(1);\r\n    const [will, setWill] = useState(1);\r\n    const [point, setPoint] = useState(1);\r\n\r\n    const firstRef = useRef(null);\r\n    const focusAfterSubmitRef = useRef(false); // ✅ 포커스 복귀 조건 플래그\r\n    const WILL_INPUT_ID = \"quick-pad-will-input\";\r\n\r\n    // (옵션) 퀵패드가 켜질 때만 최초 1회 포커싱하고 싶다면 true로\r\n    useEffect(() => {\r\n      if (!focusOnMount) return;\r\n      requestAnimationFrame(() => {\r\n        firstRef.current?.focus?.();\r\n        firstRef.current?.select?.();\r\n      });\r\n    }, [focusOnMount]);\r\n\r\n    const focusWill = () => {\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          if (firstRef.current) {\r\n            try { firstRef.current.focus(); firstRef.current.select?.(); return; } catch { }\r\n          }\r\n          const el = document.getElementById(WILL_INPUT_ID);\r\n          if (el) { el.focus(); el.select?.(); }\r\n        });\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e?.preventDefault?.();\r\n      const id = uid();\r\n      onAdd({\r\n        id,\r\n        will: Number.isFinite(will) ? will : 0,\r\n        point: Number.isFinite(point) ? point : 0,\r\n        o1k,\r\n        o1v: Number.isFinite(o1v) ? o1v : 0,\r\n        o2k,\r\n        o2v: Number.isFinite(o2v) ? o2v : 0,\r\n      });\r\n\r\n      // ✅ 엔터/버튼으로 제출한 경우에만 포커스 복귀\r\n      if (focusAfterSubmitRef.current) {\r\n        focusWill();\r\n        focusAfterSubmitRef.current = false;\r\n      }\r\n    };\r\n\r\n    // 엔터로 제출할 때만 플래그 ON\r\n    const onKeyDownSubmit = (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        focusAfterSubmitRef.current = true; // ✅ 엔터 제출\r\n        handleSubmit(e);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white\">\r\n          <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\" title=\"빠른 추가\">\r\n            <Plus size={18} />\r\n          </div>\r\n\r\n          {/* 의지력 / 포인트 */}\r\n          <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>필요 의지력</label>\r\n              <NumberInput\r\n                value={will}\r\n                onChange={setWill}\r\n                min={3}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{\r\n                  id: WILL_INPUT_ID,\r\n                  title: \"의지력\",\r\n                  placeholder: \"의지력\",\r\n                  onKeyDown: onKeyDownSubmit,\r\n                  ref: firstRef,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>(질서/혼돈)포인트</label>\r\n              <NumberInput\r\n                value={point}\r\n                onChange={setPoint}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{ title: \"포인트\", placeholder: \"포인트\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 옵션 1 */}\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 1</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o1k}\r\n                onChange={(v) => setO1k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o1v}\r\n                onChange={setO1v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 옵션 2 */}\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 2</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o2k}\r\n                onChange={(v) => setO2k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o2v}\r\n                onChange={setO2v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 액션 */}\r\n          <div className=\"top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n            <button\r\n              type=\"submit\"\r\n              // ✅ 버튼 클릭으로 제출할 때만 포커스 복귀 플래그 ON\r\n              onClick={() => { (focusAfterSubmitRef.current = true); }}\r\n              className=\"h-10 w-full lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n              title=\"Enter로도 추가 가능\"\r\n            >\r\n              <Plus size={16} />\r\n              <span className=\"inline\"> 젬 추가</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Divider */}\r\n        <div className=\"relative flex items-center my-4\">\r\n          <div className=\"flex-grow border-t\"></div>\r\n          <span className=\"mx-3 text-sm text-gray-600\">\r\n            아래에서 추가한 젬들을 확인하세요.\r\n          </span>\r\n          <div className=\"flex-grow border-t\"></div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 스타일 토큰 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n        @keyframes loa-marquee { 0%{ transform: translateX(-100%);} 100%{ transform: translateX(300%);} }\r\n        .animate-loa-marquee{ animation: loa-marquee 1.2s cubic-bezier(.4,0,.2,1) infinite; }\r\n      `}</style>\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더/카테고리 토글 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 코어 입력 & 우선순위(DnD/버튼 이동) */}\r\n        <section className={`${card} p-4 lg:p-6 !mt-2 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              {/* 질서일 때만 직업 선택 노출 */}\r\n              {category === \"order\" && (\r\n                  <Dropdown\r\n                    className=\"w-32\"\r\n                    value={selectedJob}\r\n                    onChange={(val) => setSelectedJob(val)}\r\n                    items={[{ value: \"\", label: \"선택 안함\" }, ...JOBS.map(j => ({ value: j, label: j }))]}\r\n                    placeholder=\"직업 선택\"\r\n                  />\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const gradeMax = TARGET_MAX_BY_GRADE[c.grade];\r\n                      const thresholds = (CORE_THRESHOLDS[c.grade] ?? []).filter(v => v <= gradeMax);\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        thresholds.map(v => ({ value: String(v), label: `${v}P` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      let coreNameItems = CORE_NAME_ITEMS.map(it => ({ ...it }));\r\n\r\n                      if (category === \"order\" && selectedJob) {\r\n                        const allowed = getAllowedCoreNameSet(selectedJob); // \"해/달/별 코어\" 셋\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value) || !allowed.has(it.value)\r\n                        }));\r\n                      } else {\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value)\r\n                        }));\r\n                      }\r\n\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              {category === \"order\" && selectedJob && (\r\n                                (() => {\r\n                                  const groupKey = GROUP_BY_CORE_NAME[c.name]; // \"해\"|\"달\"|\"별\"\r\n                                  const presetItems = getPresetItems(selectedJob, groupKey);\r\n                                  return (\r\n                                    <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                      <label className={labelCls}>코어 선택</label>\r\n<Dropdown\r\n  className=\"w-full\"\r\n  value={c.preset ?? (presetItems[0]?.value ?? \"\")} // 빈 값 방지(선택 안 함 제거됨)\r\n  onChange={(val) => updateCore(c.id, { preset: val })}\r\n  items={presetItems}\r\n  placeholder=\"직업 코어 선택\"\r\n/>\r\n                                    </div>\r\n                                  );\r\n                                })()\r\n                              )}\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown\r\n                                  className=\"w-full lg:w-24\"\r\n                                  value={c.grade}\r\n                                  onChange={(val) => {\r\n                                    const g = /** @type {CoreGrade} */(val);\r\n                                    const maxAllowed = TARGET_MAX_BY_GRADE[g];\r\n                                    const nextMin =\r\n                                      (c.minThreshold != null && c.minThreshold > maxAllowed)\r\n                                        ? maxAllowed\r\n                                        : c.minThreshold;\r\n                                    updateCore(c.id, { grade: g, minThreshold: nextMin });\r\n                                  }}\r\n                                  items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))}\r\n                                  placeholder=\"코어 등급\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 포인트</label>\r\n                                <Dropdown className=\"w-full lg:w-32\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val) }); else updateCore(c.id, { minThreshold: undefined }); }} items={targetItems} placeholder=\"목표 포인트 선택\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">선택한 포인트 이상으로 탐색</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">체크 해제 시, 목표 포인트와<br className=\"hidden lg:block\" /><b className=\"text-primary\">정확히 일치하는 조합만 계산</b>합니다.</p>\r\n                              </div>\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div\r\n            className={`flex items-center gap-2 lg:gap-3 ${quickAddMode ? '' : 'mb-3'}`}\r\n          >\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            {/* 빠르게 추가 모드 스위치 */}\r\n            <div className=\"flex items-center gap-2 ml-1\">\r\n              <span className=\"text-xs text-gray-600\">빠르게 추가</span>\r\n              <button\r\n                type=\"button\"\r\n                role=\"switch\"\r\n                aria-checked={quickAddMode}\r\n                onClick={() => setQuickAddMode(v => !v)}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition ${quickAddMode ? \"bg-[#a399f2]\" : \"bg-gray-300\"\r\n                  }`}\r\n                aria-label=\"빠르게 추가 모드\"\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-5 transform rounded-full bg-white shadow transition ${quickAddMode ? \"translate-x-5\" : \"translate-x-1\"\r\n                    }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              {!quickAddMode && (\r\n                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          {quickAddMode && (\r\n            <p className=\"text-[11px] text-gray-500 mb-3\">\r\n              Tab 키로 입력 칸을 이동할 수 있고, Enter 키로 빠르게 추가할 수 있습니다.\r\n            </p>\r\n          )}\r\n          {/* 빠른 추가 패드 */}\r\n          {quickAddMode && (\r\n            <div className=\"mb-3\">\r\n              <QuickAddPad\r\n                autoFocus\r\n                onAdd={(gem) => {\r\n                  setGems(v => [gem, ...v]);     // 맨 위로 추가\r\n                  setHighlightGemId(gem.id);     // 하이라이트\r\n                  setStale(true);                // 재계산 유도\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={3}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: /** @type {OptionKey} */(val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16} /><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm`}>\r\n            <span className=\"text-xs text-gray-500\">포지션 선택</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"dealer\"}\r\n                onChange={() => {\r\n                  setRole(\"dealer\");\r\n                  setWeights({ ...DEALER_WEIGHTS });\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              딜러\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"role\"\r\n                checked={role === \"support\"}\r\n                onChange={() => {\r\n                  setRole(\"support\");\r\n                  setWeights((w) => maskWeightsForRole(w, \"support\"));\r\n                }}\r\n                className=\"accent-primary\"\r\n              />\r\n              서포터\r\n            </label>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k]}\r\n                    onChange={(v) => setWeights((w) => ({ ...w, [k]: (v) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0000001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 하단 계산 액션/알림 */}\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-2\">\r\n          {stale && !isComputing && hasCalculated && (\r\n            <span className=\"inline-block text-[11px] px-3 py-1.5 rounded-lg bg-red-100 text-red-800 border border-red-200 text-center lg:text-left\">\r\n              입력값이 변경되었습니다. <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center gap-2 lg:ml-auto w-full lg:w-auto\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={calculate}\r\n              disabled={isComputing}\r\n              className=\"h-10 w-full lg:w-[120px] px-0 lg:px-3 rounded-xl ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n            >\r\n              {isComputing ? \"계산 중…\" : \"계산하기\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          {!isComputing && stale && hasCalculated && (\r\n            <p className=\"text-xs text-red-700 mt-1\">입력값이 변경되었습니다. 우측 상단의 <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.</p>\r\n          )}\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = results?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                  <div className=\"text-base font-semibold\">\r\n                    {c.name}\r\n                    {/* ★ 선택한 직업 코어 표시: 질서 + 직업 선택 + 프리셋 있을 때 */}\r\n                    {category === \"order\" && selectedJob && c.preset && (\r\n                      <>\r\n                        &nbsp;:&nbsp;{c.preset}\r\n                      </>\r\n                    )}&nbsp;\r\n                    <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                  </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}%</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 포인트를 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <colgroup>\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"13%\"} />\r\n                          </colgroup>\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.wwill ?? g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"} {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}%</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n\r\n      {/* 전역 오버레이 진행바 */}\r\n      {isComputing && (\r\n        <div className=\"fixed inset-0 z-[99999] bg-black/35 backdrop-blur-[1px] flex items-center justify-center px-6\">\r\n          <div className=\"w-full max-w-md rounded-2xl bg-white/95 border shadow p-4\">\r\n            <div className=\"text-sm font-medium text-gray-800 mb-2\">{progress.label}</div>\r\n\r\n            {/* 진행바 */}\r\n            <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n              {progress.indeterminate ? (\r\n                <div className=\"absolute inset-0\">\r\n                  <div className=\"h-full w-1/3 bg-[#a399f2] animate-loa-marquee rounded-full\" />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"h-full bg-[#a399f2] transition-[width] duration-100\"\r\n                  style={{ width: `${progress.pct}%` }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {/* 퍼센트 영역: 결정형이면 % / 비결정형이면 pulse 숫자 */}\r\n            <div className=\"mt-2 text-right text-xs text-gray-600\">\r\n              {progress.indeterminate\r\n                ? (progress.pulse != null ? Number(progress.pulse).toLocaleString() : \"\")\r\n                : `${progress.pct}%`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/hooks/useOptimizer.js\r\nimport { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { flushSync } from 'react-dom';\r\n\r\nexport function useOptimizer(cores, gems, role, weights) {\r\n  const [calcVersion, setCalcVersion] = useState(0);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [computing, setComputing] = useState(false);\r\n  const [progress, setProgress] = useState({\r\n    pct: 0,\r\n    label: \"준비 중…\",\r\n    indeterminate: true,\r\n    phase: undefined,\r\n    coreIndex: null,\r\n    coreCount: null,\r\n    coreDone: null,\r\n    coreTotal: null,\r\n    rate: null,\r\n    elapsedMs: null,\r\n    etaMs: null,\r\n    pulse: 0,\r\n  });\r\n  const [priorityPicks, setPriorityPicks] = useState([]);\r\n  const workerRef = useRef(null);\r\n\r\n  // ✅ 새로 추가: 마지막으로 \"계산하기\"를 눌렀을 때의 입력값 스냅샷\r\n  const paramsRef = useRef({ cores, gems, role, weights });\r\n\r\n  useEffect(() => {\r\n    workerRef.current = new Worker(new URL('../workers/optimizer.worker.js', import.meta.url), { type: 'module' });\r\n    try {\r\n      workerRef.current?.postMessage({ type: \"kickoff\" });\r\n    } catch { }\r\n    return () => {\r\n      workerRef.current?.terminate();\r\n      workerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // ✅ 변경점: 의존성 배열을 calcVersion 하나만 사용\r\n  useEffect(() => {\r\n    if (calcVersion === 0) return;\r\n    let cancelled = false;\r\n\r\n    setTimeout(() => {\r\n      if (cancelled) return;\r\n      flushSync(() => {\r\n        setComputing(true);\r\n        setProgress({\r\n          pct: 0,\r\n          label: \"최적의 젬 조합을 찾고 있습니다…\",\r\n          indeterminate: false,\r\n          phase: 'gen',\r\n          coreIndex: null,\r\n          coreCount: paramsRef.current.cores?.length || null, // ← 스냅샷 사용\r\n          coreDone: null,\r\n          coreTotal: null,\r\n          rate: null,\r\n          elapsedMs: null,\r\n          etaMs: null,\r\n          pulse: 0,\r\n        });\r\n      });\r\n    }, 0);\r\n\r\n    (async () => {\r\n      try {\r\n        await new Promise(resolve => requestAnimationFrame(resolve));\r\n        const worker = workerRef.current;\r\n        if (!worker) throw new Error(\"Worker not initialized\");\r\n\r\n        const onMessage = (e) => {\r\n          if (cancelled) return;\r\n          const msg = e.data || {};\r\n          if (msg?.type === \"error\" || msg?.error) {\r\n            console.error(e.data?.error || msg?.error);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 0, label: \"에러\", indeterminate: true }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n          if (msg.type === \"progress\") {\r\n            const { done, total, indeterminate = false, phase, coreIndex, coreCount, coreDone, coreTotal, rate, elapsedMs, etaMs, pulse } = msg;\r\n            if (indeterminate || !total || total <= 0 || done == null) {\r\n              setProgress((p) => ({ \r\n                ...p, pct: 0, indeterminate: true, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: pulse ?? (p.pulse ?? 0)\r\n              }));\r\n            } else {\r\n              const pct = Math.max(0, Math.min(100, Math.floor((done / Math.max(1, total)) * 100)));\r\n              setProgress((p) => ({ \r\n                ...p, pct, indeterminate: false, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: undefined\r\n              }));\r\n            }\r\n            return;\r\n          }\r\n          if (msg.type === \"result\") {\r\n            const { picks } = msg;\r\n            setPriorityPicks(picks || []);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 100, label: \"완료\", indeterminate: false, pulse: undefined }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n        };\r\n\r\n        worker.addEventListener('message', onMessage);\r\n\r\n        // ✅ 스냅샷을 꺼내서 사용\r\n        const { cores: c, gems: g, role: r, weights: w } = paramsRef.current;\r\n        const perCoreLimit = g.length > 60 ? 800 : g.length > 45 ? 1200 : g.length > 30 ? 1600 : 2000;\r\n\r\n        worker.postMessage({ type: \"run\", cores: c, gems: g, role: r, weights: w, perCoreLimit });\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          console.error(err);\r\n          setComputing(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calcVersion]); // ← 오직 버튼 클릭으로 증가한 calcVersion에만 반응\r\n\r\n  // ✅ 변경점: 계산 버튼을 눌렀을 때 현재 입력값을 스냅샷으로 저장한 뒤 calcVersion 증가\r\n  const calculate = useCallback(() => {\r\n    paramsRef.current = { cores, gems, role, weights }; // 최신값 스냅샷\r\n    setCalcVersion(v => v + 1);\r\n    setHasCalculated(true);\r\n  }, [cores, gems, role, weights]);\r\n\r\n  return {\r\n    isComputing: computing,\r\n    progress,\r\n    results: priorityPicks,\r\n    calculate, // ← 이 함수가 “계산하기” 버튼 onClick에 연결되면 됩니다.\r\n    hasCalculated,\r\n  };\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =========================================================================\r\n * 1) 전역 동작 플래그\r\n *    - 시뮬레이션 분산 감소, 희귀사건 스케일업 등 런타임 전역 옵션\r\n * ========================================================================= */\r\nconst USE_ANTITHETIC = true;\r\nconst AUTO_SCALE_RARE = true;\r\nconst OFFICIAL_RNG = true;\r\n\r\n/* =========================================================================\r\n * 2) 상수/테이블\r\n *    - 등급 경계, 젬 타입별 유효 효과 풀, 희귀도별 시도/리롤, 수치 범위, 비용\r\n * ========================================================================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\n\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\n\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\n\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\n\r\n/* =========================================================================\r\n * 3) 결정적 난수 및 보조 수학 유틸\r\n *    - 해시 기반 시드, xorshift 변종 RNG, 경계 체크/클램프, CI 계산 등\r\n * ========================================================================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\n\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\n\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n);\r\n}\r\n\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001;\r\n  if (n >= 100000) return 0.0002;\r\n  if (n >= 50000) return 0.0003;\r\n  if (n >= 10000) return 0.0005;\r\n  if (n >= 5000) return 0.0007;\r\n  return 0.001;\r\n};\r\n\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n\r\n/* =========================================================================\r\n * 4) 표시/형식 유틸\r\n *    - 확률/숫자 출력, 부담 배지, 성공률 추정\r\n * ========================================================================= */\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";\r\n  if (x >= 1) return \"100.00000%\";\r\n  return (x * 100).toFixed(5) + \"%\";\r\n}\r\n\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity;\r\n  return expectedGold / p;\r\n}\r\n\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\n\r\n/* =========================================================================\r\n * 5) 효과/등급 판정 로직\r\n *    - 유효 효과 풀, 총점/등급, 목표 충족 판정, 거리(부족분) 계산\r\n * ========================================================================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\n\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\n\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\n\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\n\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n\r\n/* =========================================================================\r\n * 6) 슬롯(선택지) 구성/적용 로직\r\n *    - 선택지 가중치 테이블 구성, 표현/해석, 실제 반영\r\n * ========================================================================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\n\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n\r\n  return items;\r\n}\r\n\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\n\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\n\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n\r\n/* =========================================================================\r\n * 7) 시뮬레이션 코어\r\n *    - 몬테카를로 기반 확률/기대치 추정, 저분산 페어, 희귀사건 가드\r\n * ========================================================================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    useAntithetic = true,\r\n    autoScaleRare = true,\r\n    rareTargetSuccesses = 100,\r\n    rareMaxTrials = 200000,\r\n    rareTiers = [200000],\r\n  } = opts;\r\n\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n\r\n  let localMaxTrials = maxTrials;\r\n  let forceRare = false;\r\n\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n\r\n  while (n < localMaxTrials) {\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      if (n >= localMaxTrials) break;\r\n\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;\r\n      continue;\r\n    }\r\n\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n\r\n    if (rareGuardActive) {\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue;\r\n    }\r\n\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n\r\n/* =========================================================================\r\n * 8) 등급 표시용 스타일/정렬 보조\r\n *    - 확률 0% 제거, 내림차순 정렬, 동률 판정\r\n * ========================================================================= */\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",\r\n};\r\n\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n\r\n/* =========================================================================\r\n * 9) 공통 UI 유틸/컴포넌트\r\n *    - 클릭외부감지 훅, 드롭다운, 토스트 스택, 숫자 입력, Select 래퍼\r\n * ========================================================================= */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\nfunction Dropdown({\r\n  value,\r\n  items,\r\n  onChange,\r\n  placeholder,\r\n  className,\r\n  disabled,\r\n  bordered = true\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  set,\r\n  onChange,\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n\r\n/* =========================================================================\r\n * 10) 보조 헬퍼\r\n *     - 라벨 중복 여부, 등 기타 메인에서 참조하는 작은 유틸\r\n * ========================================================================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n\r\n/* =========================================================================\r\n * 11) 메인 컴포넌트 (GemSimulator)\r\n *     - 상태 정의, 파생값, 이펙트, 액션 핸들러, 렌더 스켈레톤만 유지\r\n *     - 요청 사항: 최종 UI 구현 마크업은 비워둠 (원본 로직 유지)\r\n * ========================================================================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n\r\n  const curValid = cur.aName !== cur.bName;\r\n\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n\r\n  const migratedRef = useRef(false);\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n\r\n  const [changeMode, setChangeMode] = useState(null);\r\n  const [changePick, setChangePick] = useState(\"\");\r\n\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]);\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n\r\n  const addLog = useCallback((entry) => {\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n\r\n  const simRef = useRef(null);\r\n  const [logsMax, setLogsMax] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct2 = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct2(nowProb)} → 다른 항목 보기 기대 ${pct2(rerollProb)} (▲${pct2(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct2(nowProb)}가 다른 항목 보기 기대 ${pct2(rerollProb)}보다 유리 (▼${pct2(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct2(nowProb)} vs 다른 항목 보기 ${pct2(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode: pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return;\r\n    }\r\n\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory();\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n\r\n  function manualReset() {\r\n    setLogs([]);\r\n    setHistory({ past: [], future: [] });\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory();\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1,\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n\r\n  const dupWarnShown = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);\r\n      setHistory({ past: [], future: [] });\r\n    }\r\n  }, [allLocked]);\r\n\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base;\r\n  }, [gemKey, pos, abModePrimary]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      {/* 전역 CSS 변수와 유틸리티 클래스 주입: 주요 색상 및 accent-color 지정 */}\r\n      <style>{`\r\n    :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n    .text-primary{ color:#a399f2; }\r\n    .accent-primary{ accent-color:#a399f2; }\r\n  `}</style>\r\n\r\n      {/* 중앙 컨테이너: 최대 폭 제한 및 수직 간격 */}\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더 섹션: 제목과 시뮬레이션 반복 횟수 선택 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            {/* 페이지 타이틀: 그라디언트 배경 위에서 가독성 위한 화이트 텍스트/드롭섀도 */}\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n\r\n            {/* 우측 컨트롤: 시뮬레이션 횟수 드롭다운 */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                {/* 시뮬레이션 반복 수 선택 Dropdown (SIM_OPTIONS 기반) */}\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 기본 설정 카드 (젬 타입/등급/기본 시도/리롤 안내) */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 카드 타이틀 */}\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (잠금 상태 제어) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 입력 행: 젬 타입/등급/기본 시도·리롤 표시 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 선택: GEM_TYPES 키 목록을 드롭다운으로 제공 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 등급 선택: 고급/희귀/영웅 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 현재 등급 기준 기본 시도/리롤 수 정보 표시 (읽기 전용) */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 현재 옵션 입력 카드 (현재 젬의 상태 입력/잠금) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (현재 값 고정 여부) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 현재 옵션 입력 행: 효율/포인트/효과 A/B 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 포인트 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 선택 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 선택 (A와 중복 불가) */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 목표 옵션 입력 카드 (목표 충족 방식/효과/레벨) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n\r\n            {/* 우측: 저장/편집 토글 (잠금 시 계산 활성) */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 목표 충족 방식 라디오: 상관 없음일 때 비활성화 */}\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n\r\n          {/* 목표 조건 입력 행: 효율/포인트/추가 효과/효과명 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 목표 의지력 효율 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 포인트 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 추가 효과 역할군: 상관 없음/공격형/지원형 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 효과명/레벨: 역할군이 상관 없음이면 비활성화 */}\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 효과 A 선택 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 A 레벨 하한 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 선택: BOTH 모드에서만 활성 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 레벨 하한: BOTH 모드일 때만 활성 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 2열 레이아웃: 좌측 시뮬, 우측 작업 내역 */}\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 좌측(2칸): 가공 시뮬레이션 패널 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 헤더: 타이틀 및 초기화 버튼 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 사용 안내: 모든 설정 잠금 이후 액션 가능 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n\r\n            {/* 본문: 현재 상태 카드 + 선택지 카드 */}\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 현재 젬 상태/리소스 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n\r\n                {/* 핵심 스탯(효율/포인트/효과 A/B) 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  {/* 효율 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n\r\n                  {/* 포인트 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n\r\n                  {/* 효과 A: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 효과 B: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 리소스 칩: 남은 가공/리롤/비용 증감률/누적 골드 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 이번 차수 선택지 + 액션 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n\r\n                {/* 4개 슬롯: 라벨 선택 + 적용 버튼 */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {/* 현재 슬롯 라벨 변경 드롭다운 */}\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        {/* 적용 버튼: 모든 설정 잠금 및 중복 미발생 등 조건 충족 시 활성 */}\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 버튼 및 추천 문구 */}\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 EV 근거 설명 (가능 시 노출) */}\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 우측(1칸): 작업 내역 패널 (Undo/Redo 포함) */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              {/* Undo/Redo 버튼: 단축키 안내 포함 */}\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 로그 비어있음/목록 렌더링 */}\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n\r\n        {/* 결과 출력 섹션: 스켈레톤/실데이터 2상태 렌더링 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            {/* 우측 표시: 실제 사용된 Monte Carlo 횟수 및 95% CI 폭 */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 계산 중 또는 데이터 미존재 시: 스켈레톤 UI */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 스켈레톤 칩 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 스켈레톤 카드 2장 */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 실데이터 표시: 1회차 선택지 목록 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 목표 달성 확률 및 등급 확률 카드 2열 */}\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 카드: STOP_ON_SUCCESS vs RUN_TO_END */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* 좌측: STOP_ON_SUCCESS 결과 */}\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n\r\n                      {/* 우측: RUN_TO_END 결과 */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n\r\n                  {/* 등급 확률 카드: 전설/유물/고대 각각의 달성 확률 및 순서 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n\r\n                    {/* 각 등급 확률 막대 및 수치 표시 (0%도 노출) */}\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* 100% 확정 배지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n\r\n                    {/* 등급 확률 순서 요약: 0% 제외, 동률 표기 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun);\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n\r\n      {/* 전역 토스트 스택: 중앙 오버레이로 알림 표시 */}\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n\r\n      {/* 광고 영역: Kakao Adfit 삽입 */}\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp } from \"lucide-react\";\r\n\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll();\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\n\r\nfunction TopFab() {\r\n  const visible = useNearBottom(520);\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)]\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          visible ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CoreOnly() {\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n        <header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n          <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n            <nav aria-label=\"Core pages\">\r\n              <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/gem\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 가공 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/optimizer\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 장착 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            {/* 기본 경로 보정: /#/core → /#/core/optimizer */}\r\n            <Route index element={<Navigate to=\"/optimizer\" replace />} />\r\n\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n\r\n            {/* 나머지 경로도 optimizer로 보정 */}\r\n            <Route path=\"*\" element={<Navigate to=\"/optimizer\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n      <TopFab />\r\n    </HashRouter>\r\n  );\r\n}\r\n"],"names":["adRef","useRef","useEffect","ins","document","createElement","className","style","display","setAttribute","script","type","async","src","current","innerHTML","appendChild","_jsx","ref","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","DEALER_WEIGHTS","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_g$o1v","_w$g$o1k","_g$o2v","_w$g$o2k","has","o1k","o1v","o2k","o2v","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","length","CORE_NAME_ITEMS","value","label","CATEGORY_LABEL","order","chaos","LS_KEY","JOBS","_ARC_CORES$jobs","ARC_CORES","CORE_NAME_BY_GROUP","GROUP_BY_CORE_NAME","CORE_ORDER","uid","Math","random","toString","slice","TARGET_MAX_BY_GRADE","loadFromStorage","localStorage","getItem","JSON","parse","e","console","warn","dragPortal","body","PortalAwareDraggable","_ref","draggableId","index","children","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","bordered","open","setOpen","useState","focusedIndex","setFocusedIndex","btnRef","menuRef","itemRefs","menuPos","top","left","width","forceTick","listboxId","initFocusIndex","useCallback","sel","findIndex","i","disabled","firstEnabled","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","Array","isArray","handlerRef","listener","_handlerRef$current","some","r","contains","target","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","requestAnimationFrame","_ref3","_ref3$focus","el","focus","cancelAnimationFrame","selected","find","getNextEnabled","start","dir","n","step","menu","AnimatePresence","motion","ul","id","tabIndex","undefined","initial","opacity","y","animate","exit","transition","duration","position","zIndex","onKeyDown","key","preventDefault","next","first","last","it","_btnRef$current2","_btnRef$current2$quer","_btnRef$current2$quer2","querySelector","_btnRef$current3","_btnRef$current3$quer","_btnRef$current3$quer2","map","isSelected","isActive","onMouseEnter","onItemMouseEnter","onClick","_btnRef$current4","_btnRef$current4$quer","_btnRef$current4$quer2","String","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref4","toasts","onClose","div","scale","stiffness","damping","msg","NumberInput","_ref5","min","max","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","x","clamp","inputMode","onBlur","onWheel","currentTarget","blur","LoACoreOptimizer","title","category","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","push","remove","setToasts","setTimeout","useToasts","quickAddMode","setQuickAddMode","stale","setStale","didMountRef","cores","gems","isComputing","progress","results","calculate","hasCalculated","calcVersion","setCalcVersion","setHasCalculated","computing","setComputing","setProgress","pct","indeterminate","phase","coreIndex","coreCount","coreDone","coreTotal","rate","elapsedMs","etaMs","pulse","priorityPicks","setPriorityPicks","workerRef","paramsRef","Worker","URL","_workerRef$current","postMessage","_workerRef$current2","terminate","cancelled","flushSync","_paramsRef$current$co","Promise","resolve","worker","Error","onMessage","data","_e$data","error","p","done","total","_p$pulse","floor","picks","c","perCoreLimit","err","useOptimizer","selectedJob","setSelectedJob","_loadFromStorage$sele","_loadFromStorage2","setCores","updater","prev","setGems","updateGem","patch","updateCore","cs","name","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","idx","displayIndexGem","QuickAddPad","_ref6","onAdd","focusOnMount","setO1k","setO2k","setO1v","setO2v","setWill","setPoint","firstRef","focusAfterSubmitRef","WILL_INPUT_ID","_firstRef$current","_firstRef$current$foc","_firstRef$current2","_firstRef$current2$se","select","handleSubmit","_e$preventDefault","_firstRef$current$sel","_firstRef$current3","getElementById","_el$select","onKeyDownSubmit","shiftKey","onSubmit","Plus","_w$brand","assert","gem","includes","cA","cB","log","runSelfTests","setItem","stringify","saveToStorage","backgroundImage","backgroundAttachment","val","j","addCore","nextName","existingNames","nextAvailableCoreName","minThreshold","enforceMin","DragDropContext","onDragStart","evt","Event","dispatchEvent","onDragEnd","result","destination","from","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","_CORE_THRESHOLDS$c$gr","supply","gradeMax","thresholds","targetItems","concat","takenNames","coreNameItems","allowed","job","_ARC_CORES$data$job","_ARC_CORES$data","entries","groups","Boolean","getAllowedCoreNameSet","prov","_c$minThreshold","draggableProps","dragHandleProps","_c$preset","_presetItems$0$value","_presetItems$","groupKey","presetItems","_ARC_CORES$data$job2","_ARC_CORES$data2","getPresetItems","preset","maxAllowed","nextMin","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","autoFocus","removeGem","resetWeights","RotateCcw","maskWeightsForRole","pick","hasResult","list","minOfGrade","_Fragment","maxThr","toFixed","_ref7","_g$wwill","gi","disp","wwill","KakaoAdfit","toLocaleString","USE_ANTITHETIC","AUTO_SCALE_RARE","OFFICIAL_RNG","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","SIM_OPTIONS","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","lo","hi","zeroSuccessUpperBound","alpha","arguments","pow","epsilonByTrials","batchByTrials","fmtProbSmart","fmtProb","fmtNum","goldPerSuccess","expectedGold","Infinity","round","burdenBadge","tone","estimateRate","successes","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","meetsTargetByMode","abMode","tgtNames","pool","isAny","nm","TA","aName","TB","bName","match","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","parseInt","replace","trim","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","sum","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","arr","a","b","gold","rrs","unlocked","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","ci","low","high","halfWidth","localMaxTrials","forceRare","tiers","sort","hardCap","nextTier","cur","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","useMemo","toneBtn","success","info","warning","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","m","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","d","Date","pad","padStart","getHours","getMinutes","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","toLowerCase","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","out","cursor","_allOptionLabels$curs","_allOptionLabels$curs2","manLabels","setManLabels","_allOptionLabels$i","used","replacement","l","resultStop","setResultStop","resultRun","setResultRun","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","pct2","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","_","gps","badge","delay","grades","grad","comps","eps","diff","abs","rankGradeOrder","TopFab","visible","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","scrollTo","behavior","CoreOnly","HashRouter","basename","NavLink","to","Routes","Route","element","Navigate","path"],"sourceRoot":""}