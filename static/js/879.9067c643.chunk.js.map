{"version":3,"file":"static/js/879.9067c643.chunk.js","mappings":"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","sources":["components/KakaoAdfit.jsx","components/ScanFromImageModal.jsx","lib/optimizerCore.js","components/LoACoreOptimizer.jsx","hooks/useOptimizer.js","components/GemSimulator.jsx","CoreOnly.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;","// src/components/ScanFromImageModal.jsx\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { X, ScanLine, Eraser, BoxSelect, Trash2, MinusCircle, ImageUp } from \"lucide-react\";\r\n// parseFromRaw는 당김 현상을 유발하므로 사용하지 않음\r\n// import parseFromRaw from \"../lib/ocrRescueFromRaw\";\r\n\r\n/* -----------------------------------------------------------\r\n *  내부 옵션 키 매핑 (한글 라벨 → 내부키)\r\n * ----------------------------------------------------------- */\r\nconst LABEL2KEY = {\r\n  \"공격력\": \"atk\",\r\n  \"추가 피해\": \"add\",\r\n  \"보스 피해\": \"boss\",\r\n  \"낙인력\": \"brand\",\r\n  \"아군 피해 강화\": \"allyDmg\",\r\n  \"아군 공격 강화\": \"allyAtk\",\r\n};\r\n\r\n/* -----------------------------------------------------------\r\n *  왼쪽/오른쪽을 \"당기지 않는\" 락스텝 파서\r\n *  - left[i]와 right[i]를 같은 인덱스로만 묶음\r\n *  - 왼쪽 숫자(Will)가 오인식이면 그대로 NaN이 되도록 두고,\r\n *    pair 단계에서 그 젬(2줄)을 스킵\r\n * ----------------------------------------------------------- */\r\nfunction parseNoShift(rawLeft = \"\", rawRight = \"\") {\r\n  const norm = (s) =>\r\n    String(s ?? \"\")\r\n      .replace(/\\r/g, \"\")\r\n      .split(\"\\n\")\r\n      .map((v) => v.trim())\r\n      .filter(Boolean);\r\n\r\n  // 왼쪽(숫자열) 라인들\r\n  const L = norm(rawLeft);\r\n\r\n  // 오른쪽(라벨+레벨) 라인들\r\n  const R = norm(rawRight);\r\n\r\n  // 허용 라벨 키워드(우선순위 순)\r\n  const LABELS = [\r\n    \"아군 공격 강화\",\r\n    \"아군 피해 강화\",\r\n    \"보스 피해\",\r\n    \"추가 피해\",\r\n    \"공격력\",\r\n    \"낙인력\",\r\n  ];\r\n\r\n  const clean = (t) =>\r\n    String(t ?? \"\")\r\n      // 한글/영문/숫자/공백/점만 남기고 나머지는 공백\r\n      .replace(/[^\\u3131-\\uD79D0-9A-Za-z.\\s]/g, \" \")\r\n      .replace(/\\s+/g, \" \")\r\n      .trim();\r\n\r\n  // ✅ 라벨 줄에서 \"가장 마지막에 나오는 숫자\"를 레벨로 사용\r\n  function parseRight(text) {\r\n    const raw = text ?? \"\";\r\n    const t = clean(raw);\r\n\r\n    let labelKey = null;\r\n    for (const lab of LABELS) {\r\n      if (t.includes(lab)) {\r\n        labelKey = lab;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let level = NaN;\r\n    const nums = t.match(/\\d+/g); // 모든 숫자 찾기\r\n    if (nums && nums.length) {\r\n      level = parseInt(nums[nums.length - 1], 10); // 마지막 숫자\r\n    }\r\n    return { labelKey, level, rawRight: raw };\r\n  }\r\n\r\n  const rows = [];\r\n  const N = Math.max(L.length, R.length);\r\n  for (let i = 0; i < N; i++) {\r\n    const leftStr = L[i] ?? \"\"; // 없으면 빈 문자열(→ NaN)\r\n    const rightStr = R[i] ?? \"\";\r\n\r\n    const right = parseRight(rightStr);\r\n    rows.push({\r\n      will: leftStr, // 숫자 변환은 나중에\r\n      labelKey: right.labelKey,\r\n      level: right.level,\r\n      rawLeft: leftStr,\r\n      rawRight: right.rawRight,\r\n    });\r\n  }\r\n\r\n  return rows;\r\n}\r\n\r\n/** 2줄(홀수/짝수)을 1개 젬으로 묶되, 오인식 시 해당 젬은 스킵\r\n *  - opt1/opt2.label은 내부키로 변환\r\n *  - 레벨은 1~5로 클램프\r\n */\r\nfunction pairParsedToGems(list = []) {\r\n  const gems = [];\r\n  const skipped = []; // 제외된 젬의 1-based 인덱스\r\n\r\n  const toNum = (v) => {\r\n    if (typeof v === \"number\" && Number.isFinite(v)) return v;\r\n    const s = String(v ?? \"\")\r\n      .trim()\r\n      // 흔한 OCR 혼동 문자 보정\r\n      .replace(/[|Il]/g, \"1\")\r\n      .replace(/[Oo]/g, \"0\")\r\n      .replace(/[sS]/g, \"5\")\r\n      .replace(/[bB]/g, \"6\");\r\n    const n = parseInt(s, 10);\r\n    return Number.isFinite(n) ? n : NaN;\r\n  };\r\n\r\n  const toKey = (lab) => (lab ? LABEL2KEY[lab] ?? null : null);\r\n  const clampLv = (lv) => {\r\n    const n = Number(lv);\r\n    return Number.isFinite(n) ? Math.max(1, Math.min(5, n)) : null;\r\n  };\r\n\r\n  for (let i = 0, gemIdx = 1; i < list.length; i += 2, gemIdx++) {\r\n    const a = list[i];       // 홀수번째(0-based): will + 옵션1\r\n    const b = list[i + 1];   // 짝수번째: will = point, 옵션2\r\n    if (!a || !b) break;\r\n\r\n    const will = toNum(a.will);\r\n    const point = toNum(b.will);\r\n\r\n    // 숫자 인식 실패 → 이 젬은 제외(땡기지 않음)\r\n    if (!Number.isFinite(will) || !Number.isFinite(point)) {\r\n      skipped.push(gemIdx);\r\n      continue;\r\n    }\r\n\r\n    const o1k = toKey(a.labelKey);\r\n    const o2k = toKey(b.labelKey);\r\n\r\n    gems.push({\r\n      will,\r\n      point,\r\n      opt1: { label: o1k, level: clampLv(a.level), raw: a.rawRight },\r\n      opt2: { label: o2k, level: clampLv(b.level), raw: b.rawRight },\r\n      _raw: {\r\n        leftA: a.rawLeft,\r\n        rightA: a.rawRight,\r\n        leftB: b.rawLeft,\r\n        rightB: b.rawRight,\r\n      },\r\n    });\r\n  }\r\n\r\n  return { gems, skipped };\r\n}\r\n\r\nexport default function ScanFromImageModal({ open, onClose, onScanned }) {\r\n  const [busy, setBusy] = useState(false);\r\n  const [progress, setProgress] = useState({ label: \"\", pct: 0, indeterminate: true });\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [imgURL, setImgURL] = useState(null);\r\n  const [imgNatural, setImgNatural] = useState({ w: 0, h: 0 });\r\n\r\n  // 포함 ROI (wrapRef 상대좌표)\r\n  const [rectRel, setRectRel] = useState(null); // {x,y,w,h}\r\n  // 제외 영역들 (wrapRef 상대좌표)\r\n  const [excludesRel, setExcludesRel] = useState([]); // [{id,x,y,w,h}]\r\n  // 제외 영역 드래그 임시 박스\r\n  const [tempExcludeRel, setTempExcludeRel] = useState(null);\r\n\r\n  // 드래그 상태\r\n  const [drag, setDrag] = useState(null); // {mode:'include'|'exclude', x0,y0,x1,y1}\r\n  const [mode, setMode] = useState(\"include\");\r\n\r\n  const wrapRef = useRef(null);\r\n  const imgRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // 워커\r\n  const worker = useMemo(() => {\r\n    try {\r\n      return new Worker(new URL(\"../workers/gemScanner.worker.js\", import.meta.url), { type: \"module\" });\r\n    } catch {\r\n      return new Worker(new URL(\"../workers/gemScanner.worker.js\", import.meta.url));\r\n    }\r\n  }, []);\r\n\r\n  // 워커 메시지\r\n  useEffect(() => {\r\n    if (!worker) return;\r\n    const onMessage = (ev) => {\r\n      const { type, payload } = ev.data || {};\r\n      if (type === \"progress\") {\r\n        setProgress(payload);\r\n      } else if (type === \"done\") {\r\n        setBusy(false);\r\n        setProgress({ label: \"\", pct: 0, indeterminate: true });\r\n\r\n        // joined(디버그)\r\n        console.groupCollapsed(\"%c[Gem OCR] ROI words (joined)\", \"color:#8b5cf6\");\r\n        console.log(payload?.joinedWords || \"(empty)\");\r\n        console.groupEnd();\r\n\r\n        // raw left/right\r\n        console.groupCollapsed(\"%c[Gem OCR] Raw (left / right)\", \"color:#0ea5e9\");\r\n        console.log(\"rawLeft:\\n\" + (payload?.rawLeft || \"(empty)\"));\r\n        console.log(\"rawRight:\\n\" + (payload?.rawRight || \"(empty)\"));\r\n        console.groupEnd();\r\n\r\n        // 당김 없는 파싱 → 고정 인덱스 매칭\r\n        const parsed = parseNoShift(payload?.rawLeft || \"\", payload?.rawRight || \"\");\r\n        console.groupCollapsed(`%c[Gem OCR] Parsed(no-shift) rows ${parsed.length}`, \"color:#10b981\");\r\n        parsed.forEach((p, i) => {\r\n          console.log(\r\n            `#${i + 1}`,\r\n            `will='${p.will}'`,\r\n            `label=${p.labelKey ?? \"(?)\"}`,\r\n            `Lv.${Number.isFinite(p.level) ? p.level : \"?\"}`\r\n          );\r\n        });\r\n        console.groupEnd();\r\n\r\n        const { gems, skipped } = pairParsedToGems(parsed);\r\n\r\n        console.groupCollapsed(`%c[Gem OCR] Gems (paired, after-skip) ${gems.length}`, \"color:#22c55e\");\r\n        gems.forEach((g, i) => {\r\n          console.log(\r\n            `Gem #${i + 1}`,\r\n            `will=${g.will}`,\r\n            `point=${g.point}`,\r\n            `opt1=${g.opt1.label}(Lv.${g.opt1.level})`,\r\n            `opt2=${g.opt2.label}(Lv.${g.opt2.level})`\r\n          );\r\n        });\r\n        console.groupEnd();\r\n\r\n        if ((skipped || []).length) {\r\n          console.warn(\"[Gem OCR] 오인식으로 제외된 젬:\", skipped.join(\", \"));\r\n        }\r\n\r\n        onScanned?.({ ...payload, parsed, gems, skippedGems: skipped });\r\n      } else if (type === \"error\") {\r\n        setBusy(false);\r\n        setProgress({ label: \"\", pct: 0, indeterminate: true });\r\n        console.error(\"[gem-scanner:error]\", payload?.message ?? payload, payload);\r\n        alert(\"이미지 스캔 중 오류가 발생했어요. 콘솔을 확인해 주세요.\");\r\n      }\r\n    };\r\n    worker.addEventListener(\"message\", onMessage);\r\n    return () => worker.removeEventListener(\"message\", onMessage);\r\n  }, [worker, onScanned]);\r\n\r\n  // 파일 선택 시 미리보기 URL\r\n  useEffect(() => {\r\n    if (!file) {\r\n      setImgURL(null);\r\n      return;\r\n    }\r\n    const url = URL.createObjectURL(file);\r\n    setImgURL(url);\r\n    return () => URL.revokeObjectURL(url);\r\n  }, [file]);\r\n\r\n  // 이미지 로드 → 원본 크기 보관 & 기존 선택 초기화\r\n  const onImgLoad = (e) => {\r\n    const img = e.currentTarget;\r\n    setImgNatural({ w: img.naturalWidth, h: img.naturalHeight });\r\n    resetSelections();\r\n  };\r\n\r\n  const pickFile = () => inputRef.current?.click();\r\n\r\n  // 전체 선택 초기화\r\n  const resetSelections = () => {\r\n    setRectRel(null);\r\n    setExcludesRel([]);\r\n    setTempExcludeRel(null);\r\n    setDrag(null);\r\n  };\r\n\r\n  // 래퍼 기준 좌표 가져오기\r\n  const getRelPoint = (e) => {\r\n    const r = wrapRef.current?.getBoundingClientRect();\r\n    if (!r) return { x: 0, y: 0 };\r\n    const x = e.clientX - r.left;\r\n    const y = e.clientY - r.top;\r\n    return {\r\n      x: Math.max(0, Math.min(x, r.width)),\r\n      y: Math.max(0, Math.min(y, r.height)),\r\n    };\r\n  };\r\n\r\n  // 래퍼 상대 → 원본 해상도 사각형\r\n  const rectRelToNatural = (rel) => {\r\n    const r = wrapRef.current?.getBoundingClientRect();\r\n    if (!r || !r.width || !r.height || !imgNatural.w || !imgNatural.h) return null;\r\n    const sx = imgNatural.w / r.width;\r\n    const sy = imgNatural.h / r.height;\r\n    return {\r\n      x: Math.max(0, Math.round(rel.x * sx)),\r\n      y: Math.max(0, Math.round(rel.y * sy)),\r\n      w: Math.max(1, Math.round(rel.w * sx)),\r\n      h: Math.max(1, Math.round(rel.h * sy)),\r\n    };\r\n  };\r\n\r\n  const convertExcludesToNatural = (arr) => (arr || []).map(rectRelToNatural).filter(Boolean);\r\n\r\n  // 모드 전환 시 임시 박스 정리\r\n  useEffect(() => {\r\n    setTempExcludeRel(null);\r\n  }, [mode]);\r\n\r\n  // 드래그 시작/이동/끝 (wrap 기준)\r\n  const onMouseDown = (e) => {\r\n    if (e.button !== 0) return;\r\n    if (!wrapRef.current) return;\r\n    const p = getRelPoint(e);\r\n    const start = { mode, x0: p.x, y0: p.y, x1: p.x, y1: p.y };\r\n    setDrag(start);\r\n    if (mode === \"include\") {\r\n      setRectRel(null);\r\n    } else {\r\n      setTempExcludeRel(null);\r\n    }\r\n  };\r\n\r\n  const onMouseMove = (e) => {\r\n    if (!drag) return;\r\n    const p = getRelPoint(e);\r\n    const cur = { ...drag, x1: p.x, y1: p.y };\r\n    setDrag(cur);\r\n    const x = Math.min(cur.x0, cur.x1);\r\n    const y = Math.min(cur.y0, cur.y1);\r\n    const w = Math.abs(cur.x1 - cur.x0);\r\n    const h = Math.abs(cur.y1 - cur.y0);\r\n    if (drag.mode === \"include\") {\r\n      setRectRel({ x, y, w, h });\r\n    } else {\r\n      setTempExcludeRel(w > 0 && h > 0 ? { x, y, w, h } : null);\r\n    }\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    if (!drag) return;\r\n    const x = Math.min(drag.x0, drag.x1);\r\n    const y = Math.min(drag.y0, drag.y1);\r\n    const w = Math.abs(drag.x1 - drag.x0);\r\n    const h = Math.abs(drag.y1 - drag.y0);\r\n\r\n    if (drag.mode === \"exclude\") {\r\n      if (w > 2 && h > 2) {\r\n        setExcludesRel((prev) => [...prev, { id: Math.random().toString(36).slice(2), x, y, w, h }]);\r\n      }\r\n      setTempExcludeRel(null);\r\n    }\r\n    setDrag(null);\r\n  };\r\n\r\n  const removeExclude = (id) => setExcludesRel((prev) => prev.filter((r) => r.id !== id));\r\n\r\n  // OCR 실행\r\n  const runManual = () => {\r\n    if (!file) {\r\n      alert(\"먼저 스크린샷을 선택해 주세요.\");\r\n      return;\r\n    }\r\n    if (!rectRel) {\r\n      alert(\"이미지 위에서 드래그로 포함 영역을 지정해 주세요.\");\r\n      return;\r\n    }\r\n    const rect = rectRelToNatural(rectRel);\r\n    if (!rect) {\r\n      alert(\"좌표 변환에 실패했습니다.\");\r\n      return;\r\n    }\r\n\r\n    const excludes = convertExcludesToNatural(excludesRel);\r\n\r\n    setBusy(true);\r\n    setProgress({ label: \"스캔중...\", pct: 0, indeterminate: true });\r\n\r\n    file.arrayBuffer().then((buf) => {\r\n      worker.postMessage(\r\n        {\r\n          type: \"scan\",\r\n          payload: {\r\n            buf,\r\n            mime: file.type || \"image/png\",\r\n            lang: \"kor+eng\", // 필요시 \"kor\"로 변경\r\n            rect,\r\n            excludes,\r\n          },\r\n        },\r\n        [buf]\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return createPortal(\r\n    <div className=\"fixed inset-0 z-[99999] bg-black/40 backdrop-blur-[1px] flex items-center justify-center p-4\">\r\n      {/* 모달 컨테이너 */}\r\n      <div className=\"w-auto rounded-2xl bg-white border shadow-lg overflow-hidden flex flex-col max-h-[98vh] min-w-[720px]\">\r\n        {/* 헤더 */}\r\n        <div className=\"flex items-center justify-between px-4 py-3 border-b flex-none\">\r\n          <div className=\"font-semibold\">이미지에서 젬 목록 스캔</div>\r\n          <button\r\n            className=\"h-8 w-8 inline-flex items-center justify-center rounded-lg hover:bg-gray-100\"\r\n            onClick={onClose}\r\n            aria-label=\"닫기\"\r\n          >\r\n            <X size={18} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* 바디 래퍼 */}\r\n        <div className=\"flex flex-col min-h-0\">\r\n          {/* 툴바(고정) */}\r\n          <div className=\"px-4 py-3 border-b flex-none\">\r\n            <div className=\"flex flex-wrap items-center gap-2\">\r\n              <button\r\n                className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n                onClick={pickFile}\r\n                disabled={busy}\r\n              >\r\n                <ImageUp size={18} />\r\n                <span>{file ? \"다른 이미지 선택\" : \"스크린샷 선택\"}</span>\r\n              </button>\r\n\r\n              <div className=\"flex items-center gap-2 ml-2\">\r\n                <span className=\"text-xs text-gray-600\">드래그 모드</span>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setMode(\"include\")}\r\n                  disabled={busy}\r\n                  className={`h-10 px-3 rounded-xl border inline-flex items-center gap-2 ${mode === \"include\" ? \"bg-indigo-50 border-indigo-300\" : \"bg-white\"\r\n                    }`}\r\n                  title=\"젬 리스트 영역 지정\"\r\n                >\r\n                  <BoxSelect size={16} />\r\n                  <span>젬 리스트 영역</span>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setMode(\"exclude\")}\r\n                  disabled={busy}\r\n                  className={`h-10 px-3 rounded-xl border inline-flex items-center gap-2 ${mode === \"exclude\" ? \"bg-rose-50 border-rose-300\" : \"bg-white\"\r\n                    }`}\r\n                  title=\"제외 영역 지정\"\r\n                >\r\n                  <Eraser size={16} />\r\n                  <span>제외 영역</span>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={resetSelections}\r\n                  disabled={busy || (!rectRel && excludesRel.length === 0)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n                  title=\"포함/제외 영역 모두 초기화\"\r\n                >\r\n                  <Trash2 size={16} />\r\n                  <span>선택 영역 초기화</span>\r\n                </button>\r\n                <button\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2\"\r\n                  onClick={runManual}\r\n                  disabled={!file || !rectRel || busy}\r\n                  title=\"선택 영역 스캔\"\r\n                >\r\n                  <ScanLine size={18} />\r\n                  <span>선택 영역 스캔</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 파일 input */}\r\n            <input\r\n              ref={inputRef}\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              className=\"hidden\"\r\n              onChange={(e) => setFile(e.target.files?.[0] || null)}\r\n            />\r\n          </div>\r\n\r\n          {/* 내용 스크롤 영역 */}\r\n          <div className=\"p-4 space-y-3 overflow-auto flex-1\">\r\n            {imgURL ? (\r\n              <div className=\"relative border overflow-hidden bg-gray-50\">\r\n                <div\r\n                  ref={wrapRef}\r\n                  className=\"relative inline-block\"\r\n                  onMouseDown={onMouseDown}\r\n                  onMouseMove={onMouseMove}\r\n                  onMouseUp={onMouseUp}\r\n                  onDragStart={(e) => e.preventDefault()}\r\n                  style={{ cursor: \"crosshair\" }}\r\n                >\r\n                  <img\r\n                    ref={imgRef}\r\n                    src={imgURL}\r\n                    alt=\"preview\"\r\n                    className=\"block max-h-[80vh] w-auto select-none\"\r\n                    onLoad={onImgLoad}\r\n                    draggable={false}\r\n                  />\r\n\r\n                  {/* 포함 ROI 표시 */}\r\n                  {rectRel && (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: rectRel.x,\r\n                        top: rectRel.y,\r\n                        width: rectRel.w,\r\n                        height: rectRel.h,\r\n                        border: \"1px solid #6366f1\",\r\n                        background: \"rgba(99,102,241,0.18)\",\r\n                        pointerEvents: \"none\",\r\n                        zIndex: 5,\r\n                      }}\r\n                    />\r\n                  )}\r\n\r\n                  {/* 제외 영역들 */}\r\n                  {excludesRel.map((r) => (\r\n                    <div\r\n                      key={r.id}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: r.x,\r\n                        top: r.y,\r\n                        width: r.w,\r\n                        height: r.h,\r\n                        border: \"1px dashed #ef4444\",\r\n                        background: \"rgba(239,68,68,0.18)\",\r\n                        pointerEvents: \"none\",\r\n                        zIndex: 6,\r\n                      }}\r\n                    >\r\n                      <div style={{ position: \"absolute\", right: -12, top: -12, pointerEvents: \"auto\" }}>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            removeExclude(r.id);\r\n                          }}\r\n                          className=\"h-6 w-6 rounded-full bg-white border shadow flex items-center justify-center\"\r\n                          title=\"이 제외영역 삭제\"\r\n                        >\r\n                          <MinusCircle size={16} className=\"text-rose-600\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* 제외 영역 드래그 임시 미리보기 */}\r\n                  {tempExcludeRel && (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: tempExcludeRel.x,\r\n                        top: tempExcludeRel.y,\r\n                        width: tempExcludeRel.w,\r\n                        height: tempExcludeRel.h,\r\n                        border: \"1px dashed rgba(239,68,68,0.8)\",\r\n                        background: \"rgba(239,68,68,0.12)\",\r\n                        pointerEvents: \"none\",\r\n                        zIndex: 6,\r\n                      }}\r\n                    />\r\n                  )}\r\n\r\n                  {/* 진행중 오버레이 */}\r\n                  {busy && (\r\n                    <div className=\"absolute inset-0 z-10 bg-black/30 backdrop-blur-[1px] flex items-center justify-center\">\r\n                      <div className=\"w-[320px] rounded-xl bg-white/95 border shadow p-3\">\r\n                        <div className=\"text-xs font-medium text-gray-800 mb-1\">\r\n                          {progress.label || \"스캔중…\"}\r\n                        </div>\r\n                        <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n                          {progress.indeterminate ? (\r\n                            <div className=\"absolute inset-0\">\r\n                              <div className=\"h-full w-1/3 animate-[marquee_1.1s_linear_infinite] bg-[#a399f2] rounded-full\" />\r\n                            </div>\r\n                          ) : (\r\n                            <div\r\n                              className=\"h-full bg-[#a399f2] transition-[width] duration-150\"\r\n                              style={{ width: `${progress.pct ?? 0}%` }}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <style>{`@keyframes marquee { 0%{transform:translateX(-100%)} 100%{transform:translateX(300%)} }`}</style>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-sm text-center\">\r\n                <div className=\"mb-4\">\r\n                  <p>\r\n                    <span className=\"text-rose-600 font-medium\">1920×1080 이상 해상도</span>로 스크린샷을 촬영하는 것을 권장합니다.\r\n                  </p>\r\n                  <p className=\"text-[11px]\">예시 이미지는 설명을 위해 <strong>아크그리드 창만 크롭</strong>했지만, 실제 작업에서는 <strong>전체 화면 스크린샷</strong>을 사용해도 무방합니다.</p>\r\n                  <ul className=\"text-xs\">\r\n                    <li>\r\n                      아래 <strong className=\"text-rose-600\">예시 이미지</strong>를 참고해 <strong className=\"text-rose-600\">동일한 방식</strong>으로 가이드를 그려주세요.\r\n                    </li>\r\n                    <li>\r\n                      <strong className=\"text-rose-600\">정확도 향상</strong>을 위해, 작업 전 <strong className=\"text-rose-600\">모든 젬을 장착 해제</strong>해 주세요.\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <figure>\r\n                  <img\r\n                    src=\"https://i.ibb.co/Qjk1QkCF/example.jpg\"\r\n                    alt=\"예시: 젬 리스트 영역만 드래그 지정하고, 의지력·포인트 아이콘은 제외한 스크린샷 가이드\"\r\n                  />\r\n                  <figcaption>\r\n                    <ol className=\"mt-4 text-xs\">\r\n                      <li>\r\n                        스크린샷을 드래그해 <strong>젬 리스트 영역</strong>만 지정하세요. (\r\n                        <strong>젬 아이콘 제외</strong>, <strong>의지력·포인트 숫자 시작 지점</strong>부터)\r\n                      </li>\r\n                      <li>\r\n                        <strong>제외 영역</strong>으로 <strong>의지력·포인트 아이콘</strong>을 빼주세요.\r\n                      </li>\r\n                    </ol>\r\n                  </figcaption>\r\n                </figure>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n}\r\n","// src/lib/optimizerCore.js\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean, supply?: number }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n\r\n/* =============================== 상수 정의 =============================== */\r\n// 기본값(미선택 시 사용)\r\nexport const CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\n// 등급별 “선택 가능한 공급 의지력” 목록\r\nexport const CORE_SUPPLY_OPTIONS = {\r\n  HERO: [7, 9],\r\n  LEGEND: [11, 12],\r\n  RELIC: [15],\r\n  ANCIENT: [17],\r\n};\r\nexport const CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nexport const CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nexport const GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nexport const OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nexport const OPTIONS = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"];\r\nexport const ROLE_KEYS = {\r\n  dealer: new Set([\"atk\", \"add\", \"boss\"]),\r\n  support: new Set([\"brand\", \"allyDmg\", \"allyAtk\"]),\r\n};\r\n\r\n/** 딜러 프리셋(가중치; 배율) */\r\nexport const DEALER_WEIGHTS = {\r\n  boss: 1,\r\n  add: 1,\r\n  atk: 1,\r\n  brand: 0,\r\n  allyDmg: 0,\r\n  allyAtk: 0,\r\n};\r\n/** 기본 가중치는 = 딜러 프리셋 */\r\nexport const DEFAULT_WEIGHTS = { ...DEALER_WEIGHTS };\r\n\r\n/** 딜러: 옵션 레벨 → 퍼센트 커브 */\r\nexport const DEALER_LEVEL_CURVES = {\r\n  // key 는 OPTIONS 의 실제 키와 일치해야 합니다.\r\n  boss: [0, 0.078, 0.156, 0.244, 0.313, 0.391], // 보스 피해\r\n  add:  [0, 0.060, 0.119, 0.187, 0.239, 0.299], // 추가 피해\r\n  atk:  [0, 0.029, 0.067, 0.105, 0.134, 0.172], // 공격력\r\n};\r\n\r\n/** 서포터: 옵션 레벨 → 유효율(커브) */\r\nexport const SUPPORT_LEVEL_CURVES = {\r\n  // 낙인력\r\n  brand:   [0, 0.167, 0.334, 0.501, 0.668, 0.835],\r\n  // 아군 공격 강화\r\n  allyAtk: [0, 0.130, 0.260, 0.390, 0.520, 0.650],\r\n  // 아군 피해 강화\r\n  allyDmg: [0, 0.052, 0.104, 0.156, 0.208, 0.260],\r\n};\r\n\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nexport function roleAllowsKey(role, key) {\r\n  const allow = ROLE_KEYS?.[role];\r\n  if (!allow) return true;                               // 미정의면 모두 허용\r\n  if (Array.isArray(allow)) return allow.includes(key);  // 배열\r\n  if (allow && typeof allow.has === 'function') return allow.has(key); // Set\r\n  if (allow && typeof allow === 'object') return !!allow[key]; // { atk:true } 객체\r\n  return true;\r\n}\r\n\r\nexport function sanitizeWeights(w) {\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if (!w) return base;\r\n  Object.keys(base).forEach((k) => {\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\n\r\nexport function levelValueByRole(role, key, lvl) {\r\n  const L = Math.max(0, Math.min(5, Number(lvl) || 0));\r\n\r\n  // 딜러: 사전 정의된 퍼센트 커브\r\n  if (role === 'dealer' && DEALER_LEVEL_CURVES[key]) {\r\n    return DEALER_LEVEL_CURVES[key][L] || 0;\r\n  }\r\n\r\n  // 서포터: 사전 정의된 유효율 커브\r\n  if (role === 'support' && SUPPORT_LEVEL_CURVES[key]) {\r\n    return SUPPORT_LEVEL_CURVES[key][L] || 0;\r\n  }\r\n\r\n  // 그 외: 선형(레벨 숫자 그대로)\r\n  return L;\r\n}\r\n\r\nexport function scoreGemForRole(gem, role, weights) {\r\n  const w = sanitizeWeights(weights || {});\r\n  let sum = 0;\r\n\r\n  const add = (key, lvl) => {\r\n    if (!key || !lvl) return;\r\n    if (role && !roleAllowsKey(role, key)) return;\r\n\r\n    const basePct = levelValueByRole(role, key, lvl); // 레벨→퍼센트(커브/선형)\r\n    const scale   = w[key] ?? 0;                      // 가중치(배율)\r\n    sum += basePct * scale;\r\n  };\r\n\r\n  add(gem.o1k, gem.o1v);\r\n  add(gem.o2k, gem.o2v);\r\n\r\n  // 퍼센트 값으로 반환 (상위 UI에서 toFixed(4) + '%' 처리)\r\n  return sum;\r\n}\r\n\r\nexport function* combinations(arr, k) {\r\n  const n = arr.length; if (k > n) return;\r\n  const idx = Array.from({ length: k }, (_, i) => i);\r\n  while (true) {\r\n    yield idx.map(i => arr[i]);\r\n    let p = k - 1;\r\n    while (p >= 0 && idx[p] === n - k + p) p--;\r\n    if (p < 0) break;\r\n    idx[p]++;\r\n    for (let j = p + 1; j < k; j++) idx[j] = idx[j - 1] + 1;\r\n  }\r\n}\r\n\r\nexport function thresholdsHit(grade, totalPoint) {\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\n\r\nexport function scoreCombo(combo, grade, role, weights) {\r\n  const totalWill = combo.reduce((s, g) => s + ((g.will ?? 0)), 0);\r\n  const totalPoint = combo.reduce((s, g) => s + ((g.point ?? 0)), 0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s, g) => s + scoreGemForRole(g, role, weights), 0);\r\n  const score = (thr.length * 10_000_000)\r\n    + (totalPoint * 10_000)\r\n    + ((5_000 - totalWill) * 10)\r\n    + roleSum\r\n    - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\n // 마지막 인자로 공급 의지력 오버라이드(선택값)를 받을 수 있게 함\r\n export function enumerateCoreCombos( pool, grade, role, weights, minThreshold, enforceMin, onStep, supplyOverride ) {\r\n  const supply = (supplyOverride ?? CORE_SUPPLY[grade]);\r\n  const W = sanitizeWeights(weights);\r\n\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n\r\n  for (let k = 0; k <= maxPick; k++) {\r\n    if (k === 0) {\r\n      all.push({ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 });\r\n      continue;\r\n    }\r\n    for (const combo of combinations(pool, k)) {\r\n      onStep && onStep(1);\r\n      const totalWill = combo.reduce((s, g) => s + (g.will || 0), 0);\r\n      if (totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list: combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n\r\n  all.sort((a, b) => b.score - a.score);\r\n\r\n  // UI 정책에 맞춘 필터링\r\n  let filtered;\r\n\r\n  if (enforceMin) {\r\n    // '이상 탐색' 모드 (체크박스 ON)\r\n    const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n    const effMin = minThreshold ?? minOfGrade; // 목표가 없으면 등급 최소치\r\n    filtered = all.filter(ci =>\r\n      ci.totalPoint >= effMin && ci.thr.length > 0 && ci.list.length > 0\r\n    );\r\n  } else {\r\n    // '정확히 일치' 모드 (체크박스 OFF, 기본)\r\n    if (minThreshold != null) {\r\n      filtered = all.filter(ci =>\r\n        ci.totalPoint === minThreshold && ci.list.length > 0\r\n      );\r\n    } else {\r\n      // 목표 없음: 달성 구간 있는 케이스만\r\n      filtered = all.filter(ci => ci.thr.length > 0 && ci.list.length > 0);\r\n    }\r\n  }\r\n\r\n  if (filtered.length === 0) {\r\n    return [{ list: [], totalWill: 0, totalPoint: 0, thr: [], roleSum: 0, score: 0 }];\r\n  }\r\n\r\n  return filtered;\r\n}\r\n\r\n/**\r\n * 여러 코어의 조합(ComboInfo[])을 한 번에 넣고\r\n * 딜러의 최종 데미지 배율(곱연산)을 계산합니다.\r\n * @param {ComboInfo[]} fullCombination\r\n * @param {Weights} weights\r\n * @returns {number}\r\n */\r\nexport function calculateDealerGlobalScore(fullCombination, weights) {\r\n  const W = sanitizeWeights(weights);\r\n  const total = { atk: 0, add: 0, boss: 0 };\r\n\r\n  for (const coreCombo of fullCombination || []) {\r\n    for (const gem of coreCombo.list || []) {\r\n      if (gem.o1k && total.hasOwnProperty(gem.o1k)) total[gem.o1k] += gem.o1v || 0;\r\n      if (gem.o2k && total.hasOwnProperty(gem.o2k)) total[gem.o2k] += gem.o2v || 0;\r\n    }\r\n  }\r\n\r\n  const atkPct  = levelValueByRole('dealer', 'atk',  total.atk);\r\n  const addPct  = levelValueByRole('dealer', 'add',  total.add);\r\n  const bossPct = levelValueByRole('dealer', 'boss', total.boss);\r\n\r\n  return (1 + atkPct * W.atk) * (1 + addPct * W.add) * (1 + bossPct * W.boss);\r\n}","/**\r\n * LoACoreOptimizer.jsx\r\n *\r\n * 재구성(리팩터링된 파일 배치 & 계층 주석) 버전.\r\n * - 실행 로직/동작 동일 유지 (함수/값, 상태, JSX 구조, 훅 호출 순서에 의존하는 부분 불변).\r\n * - 기존 주석은 모두 제거했고, 가독성을 위한 섹션/행동 중심의 주석을 새로 정리하여 추가함.\r\n * - \"재그룹/재배치\"는 선언의 물리적 위치만 정렬(의존성 방향상 안전한 순서)했을 뿐, 코드 의미를 바꾸지 않음.\r\n *\r\n * 섹션 구성\r\n *  A. 외부/내부 모듈 임포트\r\n *  B. 도메인/뷰 공통 상수 및 매핑\r\n *  C. 직업-코어 프리셋/효과 유틸\r\n *  D. 공용 유틸(로컬스토리지, UID, 외부 클릭 등)\r\n *  E. DnD 포털용 Draggable 래퍼\r\n *  F. UI 프리미티브(드롭다운, 토스트, 숫자입력)\r\n *  G. 프리셋 설명 툴팁(CoreEffectInfo)\r\n *  H. 메인 컴포넌트(LoACoreOptimizer) + QuickAddPad(내부)\r\n */\r\n\r\nimport React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from \"react\";\r\nimport { flushSync } from \"react-dom\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, ChevronUp, ChevronDown, Info, Download, Upload, Image } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport { useOptimizer } from '../hooks/useOptimizer';\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport ScanFromImageModal from \"./ScanFromImageModal.jsx\";\r\nimport './LoACoreOptimizer.css';\r\n\r\nimport {\r\n  CORE_SUPPLY,\r\n  CORE_SUPPLY_OPTIONS,\r\n  CORE_THRESHOLDS,\r\n  CORE_LABEL,\r\n  GRADES,\r\n  OPTION_LABELS,\r\n  OPTIONS,\r\n  DEFAULT_WEIGHTS,\r\n  DEALER_WEIGHTS,\r\n  ROLE_KEYS,\r\n  sanitizeWeights,\r\n  scoreGemForRole,\r\n  levelValueByRole,\r\n} from '../lib/optimizerCore.js';\r\nimport ARC_CORES from \"../data/arc_cores_select.json\";\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * B. 도메인/뷰 공통 상수 및 매핑\r\n *    - 화면 공통 라벨/세트, 로컬스토리지 키, 직업/코어 그룹 매핑 등\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n\r\nconst CATEGORY_LABEL = { order: \"질서\", chaos: \"혼돈\" };\r\nconst LS_KEY = \"LoA-CoreOptimizer-v2\";\r\n\r\nconst JOBS = ARC_CORES?.jobs ?? [];\r\nconst CORE_NAME_BY_GROUP = { \"해\": \"해 코어\", \"달\": \"달 코어\", \"별\": \"별 코어\" };\r\nconst GROUP_BY_CORE_NAME = { \"해 코어\": \"해\", \"달 코어\": \"달\", \"별 코어\": \"별\" };\r\n\r\nconst CORE_ORDER = [\"별 코어\", \"달 코어\", \"해 코어\"];\r\n\r\nconst TARGET_MAX_BY_GRADE = {\r\n  HERO: 10,\r\n  LEGEND: 14,\r\n  RELIC: 20,\r\n  ANCIENT: 20,\r\n};\r\n\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * C. 직업-코어 프리셋/효과 유틸\r\n *    - 직업별 허용 코어, 프리셋 목록, 효과 정규화/조회\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction getAllowedCoreNameSet(job) {\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const groups = new Set(entries.map(e => e[\"그룹\"]));\r\n  const names = new Set(\r\n    Array.from(groups).map(g => CORE_NAME_BY_GROUP[g]).filter(Boolean)\r\n  );\r\n  return names;\r\n}\r\n\r\nfunction getPresetItems(job, groupKey) {\r\n  if (!job || !groupKey) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  return entries\r\n    .filter(e => e[\"그룹\"] === groupKey)\r\n    .map(e => ({ value: e[\"코어\"], label: e[\"코어\"] }));\r\n}\r\n\r\nfunction normalizeEffects(raw) {\r\n  if (!raw) return [];\r\n  let arr = [];\r\n\r\n  if (Array.isArray(raw)) {\r\n    arr = raw.flatMap((item) => {\r\n      if (!item) return [];\r\n      if (typeof item === \"string\") {\r\n        const m = item.match(/(\\d+)\\s*P?/i);\r\n        const p = m ? Number(m[1]) : null;\r\n        return p ? [{ point: p, text: item.replace(/^.*?:\\s*/, \"\").trim() || item.trim() }] : [];\r\n      }\r\n      if (typeof item === \"object\") {\r\n        let p = item.point ?? item.P ?? item.포인트 ?? null;\r\n        if (typeof p === \"string\") p = parseInt(p.replace(/\\D/g, \"\"), 10);\r\n        const t = item.text ?? item.desc ?? item.효과 ?? item.value ?? \"\";\r\n        return Number.isFinite(p) ? [{ point: Number(p), text: String(t) }] : [];\r\n      }\r\n      return [];\r\n    });\r\n  } else if (typeof raw === \"object\") {\r\n    arr = Object.entries(raw).map(([k, v]) => {\r\n      const p = parseInt(String(k).replace(/\\D/g, \"\"), 10);\r\n      return { point: p, text: String(v) };\r\n    });\r\n  } else if (typeof raw === \"string\") {\r\n    arr = raw.split(/\\r?\\n/).flatMap((line) => {\r\n      const m = line.match(/(\\d+)\\s*P?/i);\r\n      const p = m ? Number(m[1]) : null;\r\n      return p ? [{ point: p, text: line.replace(/^.*?:\\s*/, \"\").trim() || line.trim() }] : [];\r\n    });\r\n  }\r\n\r\n  return arr\r\n    .filter((x) => Number.isFinite(x.point) && x.text)\r\n    .sort((a, b) => a.point - b.point);\r\n}\r\n\r\nfunction getEffectsForPreset(job, groupKey, preset) {\r\n  if (!job || !groupKey || !preset) return [];\r\n  const entries = ARC_CORES?.data?.[job] ?? [];\r\n  const row = entries.find((e) => e[\"그룹\"] === groupKey && e[\"코어\"] === preset);\r\n  return normalizeEffects(row?.[\"효과\"]);\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * D. 공용 유틸\r\n *    - UID 생성, 역할별 가중치 마스킹, 로컬스토리지 I/O, 다음 코어명 탐색, 외부클릭\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\nfunction nextAvailableCoreName(existingNames) {\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null;\r\n}\r\n\r\n// 딜러: 0.123%  /  서포터: 0.123  (둘 다 소수 3자리)\r\nfunction fmtByRole(role, v) {\r\n  const n = Number(v);\r\n  if (!Number.isFinite(n)) return String(v);\r\n  return role === 'dealer' ? `${n.toFixed(3)}%` : n.toFixed(3);\r\n}\r\n\r\nfunction maskWeightsForRole(prev, role) {\r\n  const next = { ...prev };\r\n  const zeroSet = role === \"dealer\" ? ROLE_KEYS.support : ROLE_KEYS.dealer;\r\n  zeroSet.forEach((k) => { next[k] = 0; });\r\n  const oneSet = ROLE_KEYS[role];\r\n  oneSet.forEach((k) => { next[k] = 1; });\r\n  return next;\r\n}\r\n\r\nfunction loadFromStorage() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    if (!raw) return null;\r\n    return JSON.parse(raw);\r\n  } catch (e) {\r\n    console.warn(\"loadFromStorage fail\", e);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction saveToStorage(data) {\r\n  try {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(data));\r\n  } catch (e) {\r\n    console.warn(\"saveToStorage fail\", e);\r\n  }\r\n}\r\n\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = React.useMemo(\r\n    () => (Array.isArray(refs) ? refs : [refs]),\r\n    [refs]\r\n  );\r\n  const handlerRef = React.useRef(handler);\r\n  React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  React.useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * E. Portal-aware Draggable 래퍼\r\n *    - 드래그 시 body 포털로 이동시켜 클리핑/레이어 문제 방지\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\n\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * F. UI 프리미티브\r\n *    1) Dropdown: 키보드 접근성/포털 메뉴/ARIA 적용\r\n *    2) ToastStack + useToasts: 간단 토스트 큐\r\n *    3) NumberInput: 숫자 입력 공통(클램프/포맷/휠 방지)\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction Dropdown({ value, items, onChange, placeholder, className, bordered = true }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [focusedIndex, setFocusedIndex] = useState(-1);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const itemRefs = useRef([]);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  const listboxId = useRef(`dd-list-${Math.random().toString(36).slice(2)}`).current;\r\n\r\n  const initFocusIndex = useCallback(() => {\r\n    const sel = items.findIndex(i => i.value === value && !i.disabled);\r\n    if (sel >= 0) return sel;\r\n    const firstEnabled = items.findIndex(i => !i.disabled);\r\n    return firstEnabled >= 0 ? firstEnabled : -1;\r\n  }, [items, value]);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick(v => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick(v => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    setFocusedIndex(initFocusIndex());\r\n    const t = requestAnimationFrame(() => {\r\n      const el = itemRefs.current[initFocusIndex()];\r\n      (el ?? menuRef.current)?.focus?.();\r\n    });\r\n    return () => cancelAnimationFrame(t);\r\n  }, [open, initFocusIndex]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const getNextEnabled = (start, dir) => {\r\n    const n = items.length;\r\n    if (n === 0) return -1;\r\n    let i = start;\r\n    for (let step = 0; step < n; step++) {\r\n      i = (i + dir + n) % n;\r\n      if (!items[i].disabled) return i;\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  const onButtonKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const willOpen = !open;\r\n      if (willOpen) {\r\n        setOpen(true);\r\n      } else {\r\n        const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n        const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n        if (next >= 0) setFocusedIndex(next);\r\n      }\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      setOpen(v => !v);\r\n    }\r\n  };\r\n\r\n  const onMenuKeyDown = (e) => {\r\n    if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n      e.preventDefault();\r\n      const base = focusedIndex >= 0 ? focusedIndex : initFocusIndex();\r\n      const next = e.key === \"ArrowDown\" ? getNextEnabled(base, +1) : getNextEnabled(base, -1);\r\n      if (next >= 0) setFocusedIndex(next);\r\n    } else if (e.key === \"Home\") {\r\n      e.preventDefault();\r\n      const first = items.findIndex(i => !i.disabled);\r\n      if (first >= 0) setFocusedIndex(first);\r\n    } else if (e.key === \"End\") {\r\n      e.preventDefault();\r\n      let last = -1;\r\n      for (let i = items.length - 1; i >= 0; i--) {\r\n        if (!items[i].disabled) { last = i; break; }\r\n      }\r\n      if (last >= 0) setFocusedIndex(last);\r\n    } else if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      const it = items[focusedIndex];\r\n      if (it && !it.disabled) {\r\n        onChange(it.value);\r\n        setOpen(false);\r\n        requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n      }\r\n    } else if (e.key === \"Escape\") {\r\n      e.preventDefault();\r\n      setOpen(false);\r\n      requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n    } else if (e.key === \"Tab\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const onItemMouseEnter = (i) => setFocusedIndex(i);\r\n\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        role=\"listbox\"\r\n        id={listboxId}\r\n        tabIndex={-1}\r\n        aria-activedescendant={focusedIndex >= 0 ? `${listboxId}-opt-${focusedIndex}` : undefined}\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n        onKeyDown={onMenuKeyDown}\r\n      >\r\n        {items.map((it, i) => {\r\n          const isSelected = it.value === value;\r\n          const isActive = i === focusedIndex;\r\n          return (\r\n            <li key={String(it.value)}>\r\n              <button\r\n                ref={(el) => (itemRefs.current[i] = el)}\r\n                id={`${listboxId}-opt-${i}`}\r\n                type=\"button\"\r\n                role=\"option\"\r\n                aria-selected={isSelected}\r\n                onMouseEnter={() => onItemMouseEnter(i)}\r\n                onClick={() => {\r\n                  if (it.disabled) return;\r\n                  onChange(it.value);\r\n                  setOpen(false);\r\n                  requestAnimationFrame(() => btnRef.current?.querySelector(\"button\")?.focus?.());\r\n                }}\r\n                aria-disabled={it.disabled ? true : undefined}\r\n                className={`w-full text-left px-3 py-2 text-sm\r\n                  ${it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"}\r\n                  ${isSelected ? \"bg-gray-100\" : \"\"}\r\n                  ${isActive ? \"outline-none ring-2 ring-[#a399f2]/40\" : \"\"}\r\n                `}\r\n              >\r\n                <span className=\"block truncate\">{it.label}</span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={open}\r\n        aria-controls={open ? listboxId : undefined}\r\n        onKeyDown={onButtonKeyDown}\r\n        onClick={() => setOpen(v => !v)}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t => [...t, { id, msg }]);\r\n    setTimeout(() => setToasts(t => t.filter(x => x.id !== id)), 4000);\r\n  };\r\n  const remove = (id) => setToasts(t => t.filter(x => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t => (\r\n          <motion.div key={t.id} initial={{ opacity: 0, scale: 0.98 }} animate={{ opacity: 1, scale: 1 }} exit={{ opacity: 0, scale: 0.98 }} transition={{ type: 'spring', stiffness: 380, damping: 28 }} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={() => onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value, onChange, min, max, step = 1, allowFloat = false, zeroOnBlur = true, className = \"\", inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num));\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * G. 프리셋 효과 툴팁\r\n *    - 선택한 직업/그룹/프리셋 기준으로 등급 제한 내 효과를 미리보기\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nfunction CoreEffectInfo({ job, groupKey, preset, grade, category, coreName, supply }) {\r\n  const [open, setOpen] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  const effects = getEffectsForPreset(job, groupKey, preset);\r\n  const maxP = TARGET_MAX_BY_GRADE[grade] ?? 999;\r\n  const list = effects.filter((e) => e.point <= maxP);\r\n\r\n  const coreShort =\r\n    GROUP_BY_CORE_NAME[coreName] ??\r\n    coreName.replace(/\\s*코어$/, \"\");\r\n\r\n  const LABEL_CLS = \"text-[12px] text-gray-500 mb-1 text-indigo-400\";\r\n\r\n  const isAncient =\r\n    (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") || String(grade).toLowerCase() === \"ancient\";\r\n\r\n  const gradeColorCls =\r\n    String(grade).toUpperCase() === \"HERO\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"영웅\") ? \"text-fuchsia-500\" :\r\n      String(grade).toUpperCase() === \"LEGEND\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"전설\") ? \"text-amber-500\" :\r\n        String(grade).toUpperCase() === \"RELIC\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"유물\") ? \"text-orange-700\" :\r\n          String(grade).toUpperCase() === \"ANCIENT\" || (CORE_LABEL?.[grade] ?? \"\").includes(\"고대\") ? \"text-[#d3bd8b]\" :\r\n            \"text-gray-800\";\r\n\r\n  const pickSlashValueByGrade = (text) => {\r\n    const pickRight = isAncient;\r\n\r\n    let out = text.replace(\r\n      /(\\d+(?:\\.\\d+)?)%\\s*\\/\\s*(\\d+(?:\\.\\d+)?)%/g,\r\n      (_, a, b) => (pickRight ? b : a) + \"%\"\r\n    );\r\n\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(%)/g,\r\n      (_, a, b, pct) => (pickRight ? b : a) + pct\r\n    );\r\n\r\n    out = out.replace(\r\n      /(\\d+(?:\\.\\d+)?)\\s*\\/\\s*(\\d+(?:\\.\\d+)?)(?!\\s*[%\\d])/g,\r\n      (_, a, b) => (pickRight ? b : a)\r\n    );\r\n\r\n    return out;\r\n  };\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      className=\"relative inline-flex items-center align-top ml-1 cursor-pointer\"\r\n      onMouseEnter={() => setOpen(true)}\r\n      onMouseLeave={() => setOpen(false)}\r\n      onFocus={() => setOpen(true)}\r\n      onBlur={() => setOpen(false)}\r\n    >\r\n      <Info size={16} aria-hidden=\"true\" color=\"#a399f2\" />\r\n\r\n      <AnimatePresence>\r\n        {open && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -4 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: -4 }}\r\n            transition={{ duration: 0.12 }}\r\n            className=\"absolute z-[999999] mt-2 left-1/2 -translate-x-1/2 w-[400px] rounded-xl border bg-white shadow-lg p-3 text-xs\"\r\n            role=\"tooltip\"\r\n          >\r\n            <div className=\"text-[13px] font-semibold mb-2\">\r\n              <div>{CATEGORY_LABEL[category]}의 {coreName} : {preset}</div>\r\n              <div className={`text-[12px] font-medium ${gradeColorCls}`}>{CORE_LABEL[grade]} 아크 그리드 코어</div>\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 타입</div>\r\n              <div className=\"text-[12px] font-medium\">\r\n                <span>{CATEGORY_LABEL[category]}</span>\r\n                <span className=\"mx-1\">–</span>\r\n                <span>{coreShort}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n              <div className={LABEL_CLS}>코어 공급 의지력</div>\r\n              <div className=\"text-[12px] font-medium\">{String(supply)} 포인트</div>\r\n            </div>\r\n\r\n            <div className={LABEL_CLS}>코어 옵션</div>\r\n            {list.length === 0 ? (\r\n              <div className=\"text-gray-500\">옵션 정보가 없습니다.</div>\r\n            ) : (\r\n              <ul className=\"mt-1 space-y-1\">\r\n                {list.map((e) => {\r\n                  const text = e.point === 17 ? pickSlashValueByGrade(e.text) : e.text;\r\n                  return (\r\n                    <li\r\n                      key={e.point}\r\n                      className=\"grid grid-cols-[32px_1fr] gap-x-1 items-start min-w-0\"\r\n                    >\r\n                      <span className=\"w-[32px] shrink-0 text-amber-500 font-semibold\">\r\n                        [{e.point}P]\r\n                      </span>\r\n                      <span className=\"text-gray-800 break-words min-w-0\">\r\n                        {text}\r\n                      </span>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </span>\r\n  );\r\n}\r\n\r\n/* ──────────────────────────────────────────────────────────────────────────\r\n * H. 메인 컴포넌트\r\n *    - 상태/로직/뷰 그대로 유지\r\n *    - 내부에 QuickAddPad 폼 컴포넌트 포함\r\n * ────────────────────────────────────────────────────────────────────────── */\r\n\r\nexport default function LoACoreOptimizer() {\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 장착 헬퍼\"; }, []);\r\n\r\n  const [category, setCategory] = useState(\r\n    () => (loadFromStorage()?.category ?? \"order\")\r\n  );\r\n  const [coresByCat, setCoresByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.coresByCat ?? { order: [], chaos: [] };\r\n  });\r\n  const [gemsByCat, setGemsByCat] = useState(() => {\r\n    const loaded = loadFromStorage();\r\n    return loaded?.gemsByCat ?? { order: [], chaos: [] };\r\n  });\r\n\r\n  const [role, setRole] = useState(() => loadFromStorage()?.role ?? \"dealer\");\r\n  const [weights, setWeights] = useState(() => {\r\n    const saved = loadFromStorage();\r\n    const w = saved?.weights;\r\n    if (w && typeof w === \"object\") {\r\n      const vals = [\"atk\", \"add\", \"boss\", \"brand\", \"allyDmg\", \"allyAtk\"].map(k => Number(w[k]));\r\n      const allOnes = vals.every(v => v === 1);\r\n      // 과거 기본값(전부 1)만 저장돼 있고 역할 정보가 없거나 딜러로 추정되면 → 딜러 프리셋으로 이행\r\n      if (allOnes && (!saved?.role || saved.role === \"dealer\")) {\r\n        return { ...DEALER_WEIGHTS };\r\n      }\r\n      return sanitizeWeights(w);\r\n    }\r\n    // 저장된 게 없으면 딜러 프리셋으로 시작\r\n    return { ...DEALER_WEIGHTS };\r\n  });\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);\r\n  const [highlightGemId, setHighlightGemId] = useState(null);\r\n  const { toasts, push, remove } = useToasts();\r\n  const [quickAddMode, setQuickAddMode] = useState(false);\r\n  const [scanOpen, setScanOpen] = useState(false);\r\n  const [dataVersion, setDataVersion] = useState(0);\r\n\r\n  const [stale, setStale] = useState(false);\r\n  const didMountRef = useRef(false);\r\n\r\n  const cores = coresByCat[category];\r\n  const gems = gemsByCat[category];\r\n\r\n  // 글로벌 스코어 보류\r\n  // eslint-disable-next-line\r\n  const { isComputing, progress, results, globalScore, calculate, hasCalculated } = useOptimizer(cores, gems, role, weights, category);\r\n\r\n  const [selectedJob, setSelectedJob] = useState(() => (loadFromStorage()?.selectedJob ?? \"\"));\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const buildSnapshot = useCallback(() => ({\r\n    app: \"LoA-CoreOptimizer\",\r\n    version: 2,\r\n    exportedAt: new Date().toISOString(),\r\n    category,\r\n    coresByCat,\r\n    gemsByCat,\r\n    role,\r\n    weights: sanitizeWeights(weights),\r\n    selectedJob,\r\n  }), [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  const handleExportJson = useCallback(() => {\r\n    try {\r\n      const data = buildSnapshot();\r\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: \"application/json\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const d = new Date();\r\n      const stamp = `${d.getFullYear()}${String(d.getMonth() + 1).padStart(2, \"0\")}${String(d.getDate()).padStart(2, \"0\")}${String(d.getHours()).padStart(2, \"0\")}${String(d.getMinutes()).padStart(2, \"0\")}`;\r\n\r\n      // 직업명이 있을 때만 파일명에 추가 (불가 문자는 제거)\r\n      const jobPart =\r\n        selectedJob && selectedJob.trim()\r\n          ? `_${selectedJob.trim().replace(/[\\\\/:*?\"<>|]+/g, \"\")}`\r\n          : \"\";\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `아크그리드${jobPart}_${stamp}.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n      push(\"JSON 파일로 내보냈습니다.\");\r\n    } catch (e) {\r\n      console.error(e);\r\n      push(\"내보내기 중 오류가 발생했어요.\");\r\n    }\r\n  }, [buildSnapshot, push, selectedJob]);\r\n\r\n  const handleImportClick = useCallback(() => {\r\n    fileInputRef.current?.click();\r\n  }, []);\r\n\r\n  const handleImportFile = useCallback((e) => {\r\n    const file = e.target.files?.[0];\r\n    e.target.value = \"\";\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      try {\r\n        const json = JSON.parse(String(reader.result));\r\n        if (!json || typeof json !== \"object\") throw new Error(\"invalid\");\r\n        if (!json.coresByCat || !json.gemsByCat) throw new Error(\"missing fields\");\r\n        flushSync(() => {\r\n          setCoresByCat(json.coresByCat);\r\n          setGemsByCat(json.gemsByCat);\r\n          setCategory(json.category === \"chaos\" ? \"chaos\" : \"order\");\r\n          setRole(json.role === \"dealer\" || json.role === \"support\" ? json.role : null);\r\n          setWeights(() => {\r\n            const r = json.role === \"support\" ? \"support\" : \"dealer\";\r\n            return r === \"dealer\" ? { ...DEALER_WEIGHTS } : maskWeightsForRole(DEFAULT_WEIGHTS, \"support\");\r\n          });\r\n          setSelectedJob(typeof json.selectedJob === \"string\" ? json.selectedJob : \"\");\r\n          setHighlightCoreId(null);\r\n          setHighlightGemId(null);\r\n          setQuickAddMode(false);\r\n          setStale(true);\r\n        });\r\n        setDataVersion(v => v + 1);\r\n        push(\"JSON 데이터를 불러왔습니다.\");\r\n      } catch (err) {\r\n        console.error(err);\r\n        push(\"가져오기 실패: JSON 형식이 올바르지 않아요.\");\r\n      }\r\n    };\r\n    reader.onerror = () => push(\"가져오기 실패: 파일을 읽을 수 없어요.\");\r\n    reader.readAsText(file);\r\n  }, [push, setCoresByCat, setGemsByCat, setCategory, setRole, setWeights, setSelectedJob]);\r\n\r\n  useEffect(() => {\r\n    if (results && results.length > 0) {\r\n      setStale(false);\r\n    }\r\n  }, [results]);\r\n\r\n  const setCores = (updater) => {\r\n    setCoresByCat((prev) => {\r\n      const next = typeof updater === \"function\" ? updater(prev[category]) : updater;\r\n      setStale(true);\r\n      return { ...prev, [category]: next };\r\n    });\r\n  };\r\n  // 1) setGems를 useCallback으로 감싸서 참조를 안정화\r\n  const setGems = useCallback((updater) => {\r\n    setGemsByCat((prev) => {\r\n      const base = prev[category] ?? []; // 안전하게 기본값\r\n      const next =\r\n        typeof updater === \"function\" ? updater(base) : updater;\r\n      setStale(true); // 여기서만 호출하면 handleScanned 말미의 중복 호출은 제거 가능\r\n      return { ...prev, [category]: next };\r\n    });\r\n  }, [setGemsByCat, category, setStale]);\r\n\r\n  // 2) mapScannedGemToItem도 안정화(선택이지만 권장)\r\n  const mapScannedGemToItem = useCallback((g) => ({\r\n    id: uid(),\r\n    will: Number.isFinite(g?.will) ? g.will : null,\r\n    point: Number.isFinite(g?.point) ? g.point : null,\r\n    o1k: g?.opt1?.label ?? \"atk\",\r\n    o1v: Number.isFinite(g?.opt1?.level) ? g.opt1.level : 1,\r\n    o2k: g?.opt2?.label ?? \"add\",\r\n    o2v: Number.isFinite(g?.opt2?.level) ? g.opt2.level : 1,\r\n  }), []);\r\n\r\n  // 3) handleScanned deps에 안정화된 것들을 넣기\r\n  const handleScanned = useCallback((payload) => {\r\n    setScanOpen(false);\r\n    console.log(\"[ScanFromImageModal:onScanned]\", payload);\r\n\r\n    const skipped = Array.isArray(payload?.skippedGems) ? payload.skippedGems : [];\r\n    const scanned = Array.isArray(payload?.gems) ? payload.gems : [];\r\n\r\n    // 추가할 아이템 변환\r\n    const items = scanned.map(mapScannedGemToItem);\r\n\r\n    // 상태 반영\r\n    if (items.length > 0) {\r\n      setGems((prev) => [...prev, ...items]);\r\n      const lastId = items[items.length - 1]?.id;\r\n      if (lastId) setHighlightGemId(lastId);\r\n    }\r\n\r\n    // ✅ 단일 토스트 구성\r\n    // ✅ 단일 토스트 구성\r\n    let msg = \"\";\r\n    if (items.length > 0) {\r\n      if (skipped.length > 0) {\r\n        msg = `오인식 된 ${skipped.join(\", \")}번을 제외한 ${items.length}개의 젬을 목록에 추가하였습니다.`;\r\n      } else {\r\n        msg = `${items.length}개의 젬을 목록에 추가했습니다.`;\r\n      }\r\n    } else {\r\n      // 전부 스킵된 경우\r\n      msg = skipped.length > 0\r\n        ? `오인식으로 제외되어 추가된 젬이 없습니다. (제외: ${skipped.join(\", \")}번)`\r\n        : \"스캔 결과가 비어 있어요.\";\r\n    }\r\n\r\n    push(msg);\r\n  }, [push, setScanOpen, setHighlightGemId, setGems, mapScannedGemToItem]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) { didMountRef.current = true; return; }\r\n    setStale(true);\r\n  }, [role, weights, category]);\r\n\r\n  const moveCoreUp = (index) => setCores(prev => {\r\n    if (index <= 0) return prev;\r\n    const next = [...prev];\r\n    [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n    return next;\r\n  });\r\n  const moveCoreDown = (index) => setCores(prev => {\r\n    if (index >= prev.length - 1) return prev;\r\n    const next = [...prev];\r\n    [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n    return next;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (category !== \"order\" || !selectedJob) return;\r\n\r\n    setCoresByCat((prevByCat) => {\r\n      const list = prevByCat[category] ?? [];\r\n      let changed = false;\r\n\r\n      const next = list.map((c) => {\r\n        const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n        const items = getPresetItems(selectedJob, groupKey);\r\n        const isValid = c.preset && items.some((i) => i.value === c.preset);\r\n        const nextPreset = isValid ? c.preset : (items[0]?.value ?? undefined);\r\n\r\n        if (nextPreset !== c.preset) {\r\n          changed = true;\r\n          return { ...c, preset: nextPreset };\r\n        }\r\n        return c;\r\n      });\r\n\r\n      if (!changed) return prevByCat;\r\n      setStale(true);\r\n      return { ...prevByCat, [category]: next };\r\n    });\r\n  }, [category, selectedJob, cores, setCoresByCat, setStale]);\r\n\r\n  const addGem = () => {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k: \"atk\", o1v: null, o2k: \"add\", o2v: null }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id) => {\r\n    setGems(v => v.filter(g => g.id !== id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = () => setCores(cs => {\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c => c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n\r\n    const initialPreset =\r\n      category === \"order\" && selectedJob\r\n        ? getPresetItems(selectedJob, GROUP_BY_CORE_NAME[nextName])[0]?.value\r\n        : undefined;\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false, preset: initialPreset },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id) => {\r\n    setCores(cs => cs.length <= 0 ? cs : cs.filter(c => c.id !== id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch) => setCores(cs => {\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs;\r\n      }\r\n    }\r\n    return cs.map(c => c.id === id ? { ...c, ...patch } : c);\r\n  });\r\n  // eslint-disable-next-line\r\n  const [dragging, setDragging] = useState(false);\r\n  const onDragStart = () => {\r\n    requestAnimationFrame(() => setDragging(true));\r\n    const evt = new Event('close-all-dropdowns');\r\n    window.dispatchEvent(evt);\r\n  };\r\n  const onDragEnd = (result) => {\r\n    requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n  const resolveSupply = (core) => {\r\n    const def = CORE_SUPPLY?.[core.grade];\r\n    return (core?.supply ?? def);\r\n  };\r\n\r\n  useEffect(() => {\r\n    saveToStorage({ category, coresByCat, gemsByCat, role, weights, selectedJob });\r\n  }, [category, coresByCat, gemsByCat, role, weights, selectedJob]);\r\n\r\n  function QuickAddPad({ onAdd, focusOnMount = false }) {\r\n    const [o1k, setO1k] = useState(\"atk\");\r\n    const [o2k, setO2k] = useState(\"add\");\r\n    const [o1v, setO1v] = useState(1);\r\n    const [o2v, setO2v] = useState(1);\r\n    const [will, setWill] = useState(1);\r\n    const [point, setPoint] = useState(1);\r\n\r\n    const firstRef = useRef(null);\r\n    const focusAfterSubmitRef = useRef(false);\r\n    const WILL_INPUT_ID = \"quick-pad-will-input\";\r\n\r\n    useEffect(() => {\r\n      if (!focusOnMount) return;\r\n      requestAnimationFrame(() => {\r\n        firstRef.current?.focus?.();\r\n        firstRef.current?.select?.();\r\n      });\r\n    }, [focusOnMount]);\r\n\r\n    const focusWill = () => {\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          if (firstRef.current) {\r\n            try { firstRef.current.focus(); firstRef.current.select?.(); return; } catch { }\r\n          }\r\n          const el = document.getElementById(WILL_INPUT_ID);\r\n          if (el) { el.focus(); el.select?.(); }\r\n        });\r\n      });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e?.preventDefault?.();\r\n      const id = uid();\r\n      onAdd({\r\n        id,\r\n        will: Number.isFinite(will) ? will : 0,\r\n        point: Number.isFinite(point) ? point : 0,\r\n        o1k,\r\n        o1v: Number.isFinite(o1v) ? o1v : 0,\r\n        o2k,\r\n        o2v: Number.isFinite(o2v) ? o2v : 0,\r\n      });\r\n\r\n      if (focusAfterSubmitRef.current) {\r\n        focusWill();\r\n        focusAfterSubmitRef.current = false;\r\n      }\r\n    };\r\n\r\n    const onKeyDownSubmit = (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        focusAfterSubmitRef.current = true;\r\n        handleSubmit(e);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white\">\r\n          <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\" title=\"빠른 추가\">\r\n            <Plus size={18} />\r\n          </div>\r\n\r\n          <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>필요 의지력</label>\r\n              <NumberInput\r\n                value={will}\r\n                onChange={setWill}\r\n                min={3}\r\n                max={9}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{\r\n                  id: WILL_INPUT_ID,\r\n                  title: \"의지력\",\r\n                  placeholder: \"의지력\",\r\n                  onKeyDown: onKeyDownSubmit,\r\n                  ref: firstRef,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n              <label className={labelCls}>(질서/혼돈)포인트</label>\r\n              <NumberInput\r\n                value={point}\r\n                onChange={setPoint}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className={`${smallFieldBase} w-full lg:w-24`}\r\n                inputProps={{ title: \"포인트\", placeholder: \"포인트\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 1</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o1k}\r\n                onChange={(v) => setO1k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o1v}\r\n                onChange={setO1v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n            <div className=\"flex-1 lg:flex-none min-w-0\">\r\n              <label className={labelCls}>옵션 2</label>\r\n              <Dropdown\r\n                className=\"w-full lg:w-44\"\r\n                value={o2k}\r\n                onChange={(v) => setO2k(v)}\r\n                items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))}\r\n                placeholder=\"옵션 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 lg:flex-none\">\r\n              <label className={labelCls}>수치</label>\r\n              <NumberInput\r\n                value={o2v}\r\n                onChange={setO2v}\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                allowFloat={false}\r\n                className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                inputProps={{ placeholder: \"1\", onKeyDown: onKeyDownSubmit }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n            <button\r\n              type=\"submit\"\r\n              onClick={() => { (focusAfterSubmitRef.current = true); }}\r\n              className=\"h-10 w-full lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n              title=\"Enter로도 추가 가능\"\r\n            >\r\n              <Plus size={16} />\r\n              <span className=\"inline\"> 젬 추가</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"relative flex items-center my-4\">\r\n          <div className=\"flex-grow border-t\"></div>\r\n          <span className=\"mx-3 text-sm text-gray-600\">\r\n            아래에서 추가한 젬들을 확인하세요.\r\n          </span>\r\n          <div className=\"flex-grow border-t\"></div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n        @keyframes loa-marquee { 0%{ transform: translateX(-100%);} 100%{ transform: translateX(300%);} }\r\n        .animate-loa-marquee{ animation: loa-marquee 1.2s cubic-bezier(.4,0,.2,1) infinite; }\r\n      `}</style>\r\n      <style>{`button{cursor:pointer}`}</style>\r\n\r\n      <div key={dataVersion} className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 장착 도우미\r\n            </h1>\r\n            <div className=\"flex items-center gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleExportJson}\r\n                className=\"h-10 px-3 rounded-xl inline-flex items-center gap-2 bg-white hover:bg-white/90\"\r\n                title=\"현재 입력값을 JSON으로 저장\"\r\n              >\r\n                <Download size={16} />\r\n                <span className=\"hidden md:inline text-sm\">저장하기</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleImportClick}\r\n                className=\"h-10 px-3 rounded-xl inline-flex items-center gap-2 bg-white hover:bg-white/90\"\r\n                title=\"JSON에서 불러오기\"\r\n              >\r\n                <Upload size={16} />\r\n                <span className=\"hidden md:inline text-sm\">불러오기</span>\r\n              </button>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\"application/json\"\r\n                className=\"hidden\"\r\n                onChange={handleImportFile}\r\n              />\r\n              <div className=\"h-6 w-px bg-white/50 mx-1 hidden sm:block\" aria-hidden />\r\n              <button\r\n                onClick={() => setCategory(\"order\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'order' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"질서 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.order}\r\n              </button>\r\n              <button\r\n                onClick={() => setCategory(\"chaos\")}\r\n                className={`min-w-[84px] h-10 inline-flex items-center justify-center px-3 rounded-xl ${category === 'chaos' ? 'bg-white' : 'bg-white/70'}`}\r\n                title=\"혼돈 카테고리\"\r\n              >\r\n                {CATEGORY_LABEL.chaos}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6 !mt-2`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              {category === \"order\" && (\r\n                <Dropdown\r\n                  className=\"w-32\"\r\n                  value={selectedJob}\r\n                  onChange={(val) => {\r\n                    setSelectedJob(val);\r\n                    setCores(prev => prev.map(c => {\r\n                      const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                      const items = getPresetItems(val, groupKey);\r\n                      const ok = c.preset && items.some(i => i.value === c.preset);\r\n                      return ok ? c : { ...c, preset: (items[0]?.value ?? undefined) };\r\n                    }));\r\n                  }}\r\n                  items={[{ value: \"\", label: \"선택 안함\" }, ...JOBS.map(j => ({ value: j, label: j }))]}\r\n                  placeholder=\"직업 선택\"\r\n                />\r\n              )}\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided) => (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx) => {\r\n                      const supply = resolveSupply(c);\r\n                      const supplyOptions = CORE_SUPPLY_OPTIONS?.[c.grade] ?? [CORE_SUPPLY[c.grade]];\r\n                      const gradeMax = TARGET_MAX_BY_GRADE[c.grade];\r\n                      const thresholds = (CORE_THRESHOLDS[c.grade] ?? []).filter(v => v <= gradeMax);\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        thresholds.map(v => ({ value: String(v), label: `${v}P` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x => x.id !== c.id).map(x => x.name));\r\n                      let coreNameItems = CORE_NAME_ITEMS.map(it => ({ ...it }));\r\n\r\n                      if (category === \"order\" && selectedJob) {\r\n                        const allowed = getAllowedCoreNameSet(selectedJob);\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value) || !allowed.has(it.value)\r\n                        }));\r\n                      } else {\r\n                        coreNameItems = coreNameItems.map(it => ({\r\n                          ...it,\r\n                          disabled: takenNames.has(it.value)\r\n                        }));\r\n                      }\r\n\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov) => (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id === highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val) => updateCore(c.id, { name: val })} items={coreNameItems} placeholder=\"코어명\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown\r\n                                  className=\"w-full lg:w-24\"\r\n                                  value={c.grade}\r\n                                  onChange={(val) => {\r\n                                    const g = (val);\r\n                                    const maxAllowed = TARGET_MAX_BY_GRADE[g];\r\n                                    const nextMin =\r\n                                      (c.minThreshold != null && c.minThreshold > maxAllowed)\r\n                                        ? maxAllowed\r\n                                        : c.minThreshold;\r\n                                    // 공급 의지력 재설정(선택지에 맞춰 보정)\r\n                                    const opts = CORE_SUPPLY_OPTIONS?.[g] ?? [CORE_SUPPLY[g]];\r\n                                    const nextSupply =\r\n                                      (c.supply != null && opts.includes(c.supply)) ? c.supply : opts[0];\r\n                                    updateCore(c.id, { grade: g, minThreshold: nextMin, supply: nextSupply });\r\n                                  }}\r\n                                  items={GRADES.map(g => ({ value: g, label: CORE_LABEL[g] }))}\r\n                                  placeholder=\"코어 등급\"\r\n                                />\r\n                              </div>\r\n                              {category === \"order\" && selectedJob && (\r\n                                (() => {\r\n                                  const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n                                  const presetItems = getPresetItems(selectedJob, groupKey);\r\n                                  const resolvedPreset =\r\n                                    c.preset && presetItems.some(i => i.value === c.preset)\r\n                                      ? c.preset\r\n                                      : (presetItems[0]?.value ?? \"\");\r\n                                  return (\r\n                                    <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                      <label className={labelCls}>\r\n                                        직업 코어 선택\r\n                                        <CoreEffectInfo\r\n                                          job={selectedJob}\r\n                                          groupKey={groupKey}\r\n                                          preset={resolvedPreset}\r\n                                          grade={c.grade}\r\n                                          category={category}\r\n                                          coreName={c.name}\r\n                                          supply={resolveSupply(c)}\r\n                                        />\r\n                                      </label>\r\n                                      <Dropdown\r\n                                        className=\"w-full\"\r\n                                        value={resolvedPreset}\r\n                                        onChange={(val) => updateCore(c.id, { preset: val })}\r\n                                        items={presetItems}\r\n                                        placeholder=\"직업 코어 선택\"\r\n                                      />\r\n                                    </div>\r\n                                  );\r\n                                })()\r\n                              )}\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                {['HERO','LEGEND'].includes(String(c.grade)) ? (\r\n                                  <Dropdown\r\n                                    className=\"w-full lg:w-16\"\r\n                                    value={String(supply)}\r\n                                    onChange={(val) => {\r\n                                      const num = Number(val);\r\n                                      if (Number.isFinite(num)) updateCore(c.id, { supply: num });\r\n                                    }}\r\n                                    items={supplyOptions.map(v => ({ value: String(v), label: `${v}` }))}\r\n                                    placeholder=\"공급 선택\"\r\n                                  />\r\n                                ) : (\r\n                                  <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center lg:w-16\">\r\n                                    <span className=\"text-primary font-semibold\">{supply}</span>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 포인트</label>\r\n                                <Dropdown className=\"w-full lg:w-32\" value={String(c.minThreshold ?? '')} onChange={(val) => { if (val) updateCore(c.id, { minThreshold: Number(val) }); else updateCore(c.id, { minThreshold: undefined }); }} items={targetItems} placeholder=\"목표 포인트 선택\" />\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e) => updateCore(c.id, { enforceMin: e.target.checked })} />\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">선택한 포인트 이상으로 탐색</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">체크 해제 시, 목표 포인트와 <br className=\"hidden lg:block\" /><b className=\"text-primary\">정확히 일치하는 조합만 계산</b>합니다.</p>\r\n                              </div>\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16} /></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={() => moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16} /></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeCore(c.id)} disabled={cores.length <= 0} aria-label=\"코어 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div\r\n            className={`flex items-center gap-2 lg:gap-3 ${quickAddMode ? '' : 'mb-3'}`}\r\n          >\r\n            <h2 className={sectionTitle}>{CATEGORY_LABEL[category]} 젬 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-1\">\r\n              <span className=\"text-xs text-gray-600\">빠르게 추가</span>\r\n              <button\r\n                type=\"button\"\r\n                role=\"switch\"\r\n                aria-checked={quickAddMode}\r\n                onClick={() => setQuickAddMode(v => !v)}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition ${quickAddMode ? \"bg-[#a399f2]\" : \"bg-gray-300\"\r\n                  }`}\r\n                aria-label=\"빠르게 추가 모드\"\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-5 transform rounded-full bg-white shadow transition ${quickAddMode ? \"translate-x-5\" : \"translate-x-1\"\r\n                    }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              {!quickAddMode && (\r\n                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16} /><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              )}\r\n              <button\r\n                className=\"hidden lg:inline-flex h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border  items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n                onClick={() => setScanOpen(true)}\r\n                aria-label=\"이미지에서 스캔 (Beta)\"\r\n              >\r\n                <Image size={16} />\r\n                <span className=\"hidden lg:inline\"> 이미지에서 스캔 (Beta)</span>\r\n              </button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={() => setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          {quickAddMode && (\r\n            <p className=\"text-[11px] text-gray-500 mb-3\">\r\n              Tab 키로 입력 칸을 이동할 수 있고, Enter 키로 빠르게 추가할 수 있습니다.\r\n            </p>\r\n          )}\r\n          {quickAddMode && (\r\n            <div className=\"mb-3\">\r\n              <QuickAddPad\r\n                focusOnMount\r\n                onAdd={(gem) => {\r\n                  setGems(v => [gem, ...v]);\r\n                  setHighlightGemId(gem.id);\r\n                  setStale(true);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g, idx) => (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id === highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will}\r\n                      onChange={(v) => updateGem(g.id, { will: v })}\r\n                      min={3}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"의지력\", placeholder: \"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point}\r\n                      onChange={(v) => updateGem(g.id, { point: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title: \"포인트\", placeholder: \"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val) => updateGem(g.id, { o1k: (val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v}\r\n                      onChange={(v) => updateGem(g.id, { o1v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val) => updateGem(g.id, { o2k: (val) })} items={OPTIONS.map(k => ({ value: k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\" />\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v}\r\n                      onChange={(v) => updateGem(g.id, { o2v: v })}\r\n                      min={1}\r\n                      max={5}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder: \"1\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={() => removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16} /><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length === 0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효 옵션 가중치</h2>\r\n\r\n            {/* 포지션 선택은 그대로 유지 */}\r\n            <div className={`flex items-center gap-4 text-sm`}>\r\n              <span className=\"text-xs text-gray-500 hidden sm:block\">포지션 선택</span>\r\n              <label className=\"inline-flex items-center gap-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  checked={role === \"dealer\"}\r\n                  onChange={() => {\r\n                    setRole(\"dealer\");\r\n                    setWeights({ ...DEALER_WEIGHTS });\r\n                  }}\r\n                  className=\"accent-primary\"\r\n                />\r\n                딜러\r\n              </label>\r\n              <label className=\"inline-flex items-center gap-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  checked={role === \"support\"}\r\n                  onChange={() => {\r\n                    setRole(\"support\");\r\n                    setWeights((w) => maskWeightsForRole(DEFAULT_WEIGHTS, \"support\"));\r\n                  }}\r\n                  className=\"accent-primary\"\r\n                />\r\n                서포터\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <p className=\"text-[12px] text-gray-600 mt-2\">\r\n            가중치는 역할 프리셋으로 고정됩니다.\r\n          </p>\r\n\r\n          {/* 옵션별 L1~L5 퍼센트 표 (반응형) */}\r\n          {(() => {\r\n            const levels = [1, 2, 3, 4, 5];\r\n            const allowSet =\r\n              role && ROLE_KEYS?.[role] && typeof ROLE_KEYS[role].has === \"function\"\r\n                ? ROLE_KEYS[role]\r\n                : null;\r\n\r\n            // 현재 역할에 해당하는 옵션만 노출 (역할 미선택이면 전체)\r\n            const showKeys = OPTIONS.filter((k) => !allowSet || allowSet.has(k));\r\n\r\n            const rows = showKeys.map((k) => {\r\n              const values = levels.map((L) => levelValueByRole(role, k, L));\r\n              const isCurve = role === \"dealer\"; // 딜러는 커브, 서포터는 선형\r\n              return { k, values, isCurve };\r\n            });\r\n\r\n            return (\r\n              <div className=\"mt-3\">\r\n                {/* 데스크톱/태블릿: 표 형태 */}\r\n                <div className=\"hidden sm:block overflow-x-auto\">\r\n                  <table className=\"min-w-full text-sm\">\r\n                    <colgroup>\r\n                      <col width=\"18%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                      <col width=\"16%\" />\r\n                    </colgroup>\r\n                    <thead>\r\n                      <tr className=\"text-left text-gray-500\">\r\n                        <th className=\"py-2\">옵션</th>\r\n                        <th className=\"py-2\">Lv. 1</th>\r\n                        <th className=\"py-2\">Lv. 2</th>\r\n                        <th className=\"py-2\">Lv. 3</th>\r\n                        <th className=\"py-2\">Lv. 4</th>\r\n                        <th className=\"py-2\">Lv. 5</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {rows.map(({ k, values, isCurve }) => (\r\n                        <tr key={k} className=\"border-t\">\r\n                          <td className=\"py-2\">\r\n                            <span className=\"font-medium\">{OPTION_LABELS[k]}</span>\r\n                          </td>\r\n                          {values.map((v, i) => (\r\n                            <td key={i} className=\"py-2 tabular-nums\">\r\n                              {fmtByRole(role, v)}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                {/* 모바일: 카드 + 칩 형태 */}\r\n                <div className=\"sm:hidden space-y-2\">\r\n                  {rows.map(({ k, values, isCurve }) => (\r\n                    <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"text-sm font-medium\">{OPTION_LABELS[k]}</div>\r\n                        <span\r\n                          className={`text-[11px] ${isCurve ? \"text-primary\" : \"text-gray-400\"\r\n                            }`}\r\n                        >\r\n                          {isCurve ? \"커브\" : \"선형\"}\r\n                        </span>\r\n                      </div>\r\n\r\n                      {/* L1~L5 그리드: 세로 스크롤 없이 한눈에 */}\r\n                      <div className=\"mt-2 grid grid-cols-2 gap-2 text-[12px]\">\r\n                        {values.map((v, i) => (\r\n                          <div\r\n                            key={i}\r\n                            className=\"flex items-center justify-between px-2 py-1.5 rounded-lg bg-gray-50 border\"\r\n                          >\r\n                            <span className=\"text-gray-500\">Lv. {i + 1}</span>\r\n                            <span className=\"tabular-nums font-medium\">\r\n                              {fmtByRole(role, v)}\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            );\r\n          })()}\r\n\r\n        </section>\r\n\r\n\r\n\r\n        <div className=\"flex flex-col lg:flex-row lg:items-center gap-2\">\r\n          {stale && !isComputing && hasCalculated && (\r\n            <span className=\"inline-block text-[11px] px-3 py-1.5 rounded-lg bg-red-100 text-red-800 border border-red-200 text-center lg:text-left\">\r\n              입력값이 변경되었습니다. <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.\r\n            </span>\r\n          )}\r\n          <div className=\"flex items-center gap-2 lg:ml-auto w-full lg:w-auto\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={calculate}\r\n              disabled={isComputing}\r\n              className=\"h-10 w-full lg:w-[120px] px-0 lg:px-3 rounded-xl ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\"\r\n            >\r\n              {isComputing ? \"계산 중…\" : \"계산하기\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <section className={`${card} p-4 lg:p-6`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          {!isComputing && stale && hasCalculated && (\r\n            <p className=\"text-xs text-red-700 mt-1\">입력값이 변경되었습니다. 우측 상단의 <b>계산하기</b> 버튼을 눌러 다시 계산해 주세요.</p>\r\n          )}\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c, i) => {\r\n              const supply = resolveSupply(c);\r\n              const pick = results?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length > 0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              const groupKey = GROUP_BY_CORE_NAME[c.name];\r\n              const presetFallback = (category === \"order\" && selectedJob)\r\n                ? getPresetItems(selectedJob, groupKey)[0]?.value\r\n                : undefined;\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name}\r\n                      {category === \"order\" && selectedJob && (c.preset || presetFallback) && (\r\n                        <>:&nbsp;{c.preset ?? presetFallback}</>\r\n                      )}&nbsp;\r\n                      <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"유효 옵션 합 \" : \"유효 옵션 합 \"}\r\n                          <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(3))}{role === 'dealer' ? \"%\" : \"\"}</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 포인트를 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <colgroup>\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"13%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"24%\"} />\r\n                            <col width={\"13%\"} />\r\n                          </colgroup>\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"유효 옵션 합 \" : \"유효 옵션 합 \"}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g => {\r\n                              const gi = gems.findIndex(x => x.id === g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.wwill ?? g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(3))}{role === 'dealer' ? \"%\" : \"\"}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x => x.id === g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">{role === 'dealer' ? \"예상 딜 증가량 (젬) \" : role === 'support' ? \"예상 지원 증가량 (젬) \" : \"유효 옵션 합 \"} {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(3))}%</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n\r\n      <ScanFromImageModal\r\n        open={scanOpen}\r\n        onClose={() => setScanOpen(false)}\r\n        onScanned={handleScanned}\r\n      />\r\n\r\n      {isComputing && (\r\n        <div className=\"fixed inset-0 z-[99999] bg-black/35 backdrop-blur-[1px] flex items-center justify-center px-6\">\r\n          <div className=\"w-full max-w-md rounded-2xl bg-white/95 border shadow p-4\">\r\n            <div className=\"text-sm font-medium text-gray-800 mb-2\">{progress.label}</div>\r\n\r\n            <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden relative\">\r\n              {progress.indeterminate ? (\r\n                <div className=\"absolute inset-0\">\r\n                  <div className=\"h-full w-1/3 bg-[#a399f2] animate-loa-marquee rounded-full\" />\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"h-full bg-[#a399f2] transition-[width] duration-100\"\r\n                  style={{ width: `${progress.pct}%` }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mt-2 text-right text-xs text-gray-600\">\r\n              {progress.indeterminate\r\n                ? (progress.pulse != null ? Number(progress.pulse).toLocaleString() : \"\")\r\n                : `${progress.pct}%`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/hooks/useOptimizer.js\r\nimport { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { flushSync } from 'react-dom';\r\n\r\nexport function useOptimizer(cores, gems, role, weights, category) {\r\n  const [calcVersion, setCalcVersion] = useState(0);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [computing, setComputing] = useState(false);\r\n  const [progress, setProgress] = useState({\r\n    pct: 0,\r\n    label: \"준비 중…\",\r\n    indeterminate: true,\r\n    phase: undefined,\r\n    coreIndex: null,\r\n    coreCount: null,\r\n    coreDone: null,\r\n    coreTotal: null,\r\n    rate: null,\r\n    elapsedMs: null,\r\n    etaMs: null,\r\n    pulse: 0,\r\n  });\r\n  const [priorityPicks, setPriorityPicks] = useState([]);\r\n  // eslint-disable-next-line\r\n  const [globalScore, setGlobalScore] = useState(null);\r\n  const workerRef = useRef(null);\r\n\r\n  // ✅ 새로 추가: 마지막으로 \"계산하기\"를 눌렀을 때의 입력값 스냅샷\r\n  const paramsRef = useRef({ cores, gems, role, weights, category });\r\n\r\n  useEffect(() => {\r\n    workerRef.current = new Worker(new URL('../workers/optimizer.worker.js', import.meta.url), { type: 'module' });\r\n    try {\r\n      workerRef.current?.postMessage({ type: \"kickoff\" });\r\n    } catch { }\r\n    return () => {\r\n      workerRef.current?.terminate();\r\n      workerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // ✅ 변경점: 의존성 배열을 calcVersion 하나만 사용\r\n  useEffect(() => {\r\n    if (calcVersion === 0) return;\r\n    let cancelled = false;\r\n\r\n    setTimeout(() => {\r\n      if (cancelled) return;\r\n      flushSync(() => {\r\n        setComputing(true);\r\n        setGlobalScore(null); // 새 계산 시작 시 이전 점수 잠시 숨김\r\n        setProgress({\r\n          pct: 0,\r\n          label: \"최적의 젬 조합을 찾고 있습니다…\",\r\n          indeterminate: false,\r\n          phase: 'gen',\r\n          coreIndex: null,\r\n          coreCount: paramsRef.current.cores?.length || null, // ← 스냅샷 사용\r\n          coreDone: null,\r\n          coreTotal: null,\r\n          rate: null,\r\n          elapsedMs: null,\r\n          etaMs: null,\r\n          pulse: 0,\r\n        });\r\n      });\r\n    }, 0);\r\n\r\n    (async () => {\r\n      try {\r\n        await new Promise(resolve => requestAnimationFrame(resolve));\r\n        const worker = workerRef.current;\r\n        if (!worker) throw new Error(\"Worker not initialized\");\r\n\r\n        const onMessage = (e) => {\r\n          if (cancelled) return;\r\n          const msg = e.data || {};\r\n          if (msg?.type === \"error\" || msg?.error) {\r\n            console.error(e.data?.error || msg?.error);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 0, label: \"에러\", indeterminate: true }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n          if (msg.type === \"progress\") {\r\n            const { done, total, indeterminate = false, phase, coreIndex, coreCount, coreDone, coreTotal, rate, elapsedMs, etaMs, pulse } = msg;\r\n            if (indeterminate || !total || total <= 0 || done == null) {\r\n              setProgress((p) => ({ \r\n                ...p, pct: 0, indeterminate: true, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: pulse ?? (p.pulse ?? 0)\r\n              }));\r\n            } else {\r\n              const pct = Math.max(0, Math.min(100, Math.floor((done / Math.max(1, total)) * 100)));\r\n              setProgress((p) => ({ \r\n                ...p, pct, indeterminate: false, phase,\r\n                coreIndex: coreIndex ?? p.coreIndex,\r\n                coreCount: coreCount ?? p.coreCount,\r\n                coreDone: coreDone ?? p.coreDone,\r\n                coreTotal: coreTotal ?? p.coreTotal,\r\n                rate: rate ?? p.rate,\r\n                elapsedMs: elapsedMs ?? p.elapsedMs,\r\n                etaMs: etaMs ?? p.etaMs,\r\n                pulse: undefined\r\n              }));\r\n            }\r\n            return;\r\n          }\r\n          if (msg.type === \"result\") {\r\n            const { picks, score } = msg;\r\n            setPriorityPicks(picks || []);\r\n            // 필요하면 별도 상태로 보관해서 상단 배지/툴팁 등에 노출\r\n            setGlobalScore(score ?? null);\r\n            setComputing(false);\r\n            setProgress((p) => ({ ...p, pct: 100, label: \"완료\", indeterminate: false, pulse: undefined }));\r\n            worker.removeEventListener('message', onMessage);\r\n            return;\r\n          }\r\n        };\r\n\r\n        worker.addEventListener('message', onMessage);\r\n\r\n        // ✅ 스냅샷을 꺼내서 사용\r\n        const { cores: c, gems: gAll, role: r, weights: w } = paramsRef.current;\r\n        // 상위에서 이미 카테고리별 배열을 넘겨주므로 추가 필터 필요 없음\r\n        const g = Array.isArray(gAll) ? gAll : [];\r\n\r\n        // 젬 개수만으로 perCoreLimit 산정\r\n        const perCoreLimit =\r\n          g.length <= 18 ? 1200 :\r\n          g.length <= 24 ? 1000 :\r\n          g.length <= 30 ?  900 :\r\n          g.length <= 40 ?  800 :\r\n          g.length <= 50 ?  700 :\r\n          g.length <= 60 ?  600 : 500;\r\n\r\n        worker.postMessage({ type: \"run\", cores: c, gems: g, role: r, weights: w, perCoreLimit });\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          console.error(err);\r\n          setComputing(false);\r\n        }\r\n      }\r\n    })();\r\n\r\n    return () => { cancelled = true; };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calcVersion]); // ← 오직 버튼 클릭으로 증가한 calcVersion에만 반응\r\n\r\n  // ✅ 변경점: 계산 버튼을 눌렀을 때 현재 입력값을 스냅샷으로 저장한 뒤 calcVersion 증가\r\n  const calculate = useCallback(() => {\r\n    paramsRef.current = { cores, gems, role, weights, category }; // 최신값 스냅샷\r\n    setCalcVersion(v => v + 1);\r\n    setHasCalculated(true);\r\n  }, [cores, gems, role, weights, category]);\r\n\r\n  return {\r\n    isComputing: computing,\r\n    progress,\r\n    results: priorityPicks,\r\n    globalScore,\r\n    calculate, // ← 이 함수가 “계산하기” 버튼 onClick에 연결되면 됩니다.\r\n    hasCalculated,\r\n  };\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n/* =========================================================================\r\n * 1) 전역 동작 플래그\r\n *    - 시뮬레이션 분산 감소, 희귀사건 스케일업 등 런타임 전역 옵션\r\n * ========================================================================= */\r\nconst USE_ANTITHETIC = true;\r\nconst AUTO_SCALE_RARE = true;\r\nconst OFFICIAL_RNG = true;\r\n\r\n/* =========================================================================\r\n * 2) 상수/테이블\r\n *    - 등급 경계, 젬 타입별 유효 효과 풀, 희귀도별 시도/리롤, 수치 범위, 비용\r\n * ========================================================================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\n\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\n\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\n\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\n\r\n/* =========================================================================\r\n * 3) 결정적 난수 및 보조 수학 유틸\r\n *    - 해시 기반 시드, xorshift 변종 RNG, 경계 체크/클램프, CI 계산 등\r\n * ========================================================================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\n\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\n\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\nconst isZeroProb = (p) => !(Number(p) > 0);\r\nconst isOneProb = (p) => Number(p) >= 1;\r\n\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z * z) / n;\r\n  const center = (p + (z * z) / (2 * n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p * (1 - p) / n) + (z * z) / (4 * n * n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1 / n);\r\n}\r\n\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 200000) return 0.0001;\r\n  if (n >= 100000) return 0.0002;\r\n  if (n >= 50000) return 0.0003;\r\n  if (n >= 10000) return 0.0005;\r\n  if (n >= 5000) return 0.0007;\r\n  return 0.001;\r\n};\r\n\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n\r\n/* =========================================================================\r\n * 4) 표시/형식 유틸\r\n *    - 확률/숫자 출력, 부담 배지, 성공률 추정\r\n * ========================================================================= */\r\nfunction fmtProbSmart(p) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x) || x <= 0) return \"0%\";\r\n  if (x >= 1) return \"100.00000%\";\r\n  return (x * 100).toFixed(5) + \"%\";\r\n}\r\n\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n\r\nfunction goldPerSuccess(expectedGold, p) {\r\n  if (!Number.isFinite(expectedGold) || expectedGold <= 0) return 0;\r\n  if (!Number.isFinite(p) || p <= 0) return Infinity;\r\n  return expectedGold / p;\r\n}\r\n\r\nconst pct = (p) => `${Math.max(0, Math.min(100, Math.round((Number(p) || 0) * 100)))}%`;\r\n\r\nfunction burdenBadge(p) {\r\n  if (p >= 0.20) return { label: \"낮음\", tone: \"bg-emerald-50 border-emerald-200 text-emerald-800\" };\r\n  if (p >= 0.05) return { label: \"보통\", tone: \"bg-amber-50 border-amber-200 text-amber-800\" };\r\n  if (p >= 0.01) return { label: \"높음\", tone: \"bg-orange-50 border-orange-200 text-orange-800\" };\r\n  return { label: \"매우 높음\", tone: \"bg-rose-50 border-rose-200 text-rose-800\" };\r\n}\r\n\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  if (successes === 0) return 0;\r\n  if (successes === n) return 1;\r\n  switch (method) {\r\n    case \"laplace\":\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\n\r\n/* =========================================================================\r\n * 5) 효과/등급 판정 로직\r\n *    - 유효 효과 풀, 총점/등급, 목표 충족 판정, 거리(부족분) 계산\r\n * ========================================================================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\n\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\n\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\n\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\n\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n\r\n/* =========================================================================\r\n * 6) 슬롯(선택지) 구성/적용 로직\r\n *    - 선택지 가중치 테이블 구성, 표현/해석, 실제 반영\r\n * ========================================================================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\n\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n\r\n  return items;\r\n}\r\n\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\n\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\n\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n\r\n/* =========================================================================\r\n * 7) 시뮬레이션 코어\r\n *    - 몬테카를로 기반 확률/기대치 추정, 저분산 페어, 희귀사건 가드\r\n * ========================================================================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    useAntithetic = true,\r\n    autoScaleRare = true,\r\n    rareTargetSuccesses = 100,\r\n    rareMaxTrials = 200000,\r\n    rareTiers = [200000],\r\n  } = opts;\r\n\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n\r\n  let localMaxTrials = maxTrials;\r\n  let forceRare = false;\r\n\r\n  const tiers = Array.isArray(rareTiers) && rareTiers.length\r\n    ? [...rareTiers].sort((a, b) => a - b)\r\n    : [rareMaxTrials];\r\n\r\n  const hardCap = tiers[tiers.length - 1];\r\n  const nextTier = (cur) => tiers.find(t => t > cur) || cur;\r\n  const firstTier = tiers[0];\r\n\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n\r\n  while (n < localMaxTrials) {\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      if (n >= localMaxTrials) break;\r\n\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n\r\n    if (autoScaleRare && n >= minTrials && succSum === 0 && localMaxTrials < hardCap) {\r\n      localMaxTrials = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      forceRare = true;\r\n      continue;\r\n    }\r\n\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < hardCap;\r\n\r\n    if (rareGuardActive) {\r\n      const next = localMaxTrials < firstTier ? firstTier : nextTier(localMaxTrials);\r\n      localMaxTrials = Math.min(hardCap, next);\r\n      continue;\r\n    }\r\n\r\n    if (!forceRare && hw <= epsilon && n >= minTrials) break;\r\n  }\r\n\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb = estimateRate(legendSum, n, estimator);\r\n  agg.relicProb = estimateRate(relicSum, n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  agg.successes = succSum | 0;\r\n  return agg;\r\n}\r\n\r\n/* =========================================================================\r\n * 8) 등급 표시용 스타일/정렬 보조\r\n *    - 확률 0% 제거, 내림차순 정렬, 동률 판정\r\n * ========================================================================= */\r\nconst GRADE_GRADIENTS = {\r\n  legend: \"linear-gradient(90deg, #7A3E00, #B16800)\",\r\n  relic: \"linear-gradient(90deg, #8C2F06, #AB4102)\",\r\n  ancient: \"linear-gradient(90deg, #A67C37, #F5DFAB)\",\r\n};\r\n\r\nfunction rankGradeOrder(run, eps = 0.0005) {\r\n  if (!run) return { order: [], comps: [] };\r\n  let arr = [\r\n    { key: \"legendProb\", label: \"전설\", p: Number(run.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n    { key: \"relicProb\", label: \"유물\", p: Number(run.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n    { key: \"ancientProb\", label: \"고대\", p: Number(run.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n  ];\r\n  arr = arr.filter(it => !isZeroProb(it.p));\r\n  if (!arr.length) return { order: [], comps: [] };\r\n  arr.sort((a, b) => b.p - a.p);\r\n  const comps = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    const diff = arr[i].p - arr[i + 1].p;\r\n    comps.push(Math.abs(diff) <= eps ? \"=\" : \">\");\r\n  }\r\n  return { order: arr, comps };\r\n}\r\n\r\n/* =========================================================================\r\n * 9) 공통 UI 유틸/컴포넌트\r\n *    - 클릭외부감지 훅, 드롭다운, 토스트 스택, 숫자 입력, Select 래퍼\r\n * ========================================================================= */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\n\r\nfunction Dropdown({\r\n  value,\r\n  items,\r\n  onChange,\r\n  placeholder,\r\n  className,\r\n  disabled,\r\n  bordered = true\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n\r\n  const selected = items.find((i) => i.value === value);\r\n\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className={`rounded-xl bg-white shadow-lg overflow-auto max-h-60 ${bordered ? \"border\" : \"\"}`}\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${bordered ? \"border\" : \"\"} ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\n\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NumberInput({\r\n  value,\r\n  set,\r\n  onChange,\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n\r\n/* =========================================================================\r\n * 10) 보조 헬퍼\r\n *     - 라벨 중복 여부, 등 기타 메인에서 참조하는 작은 유틸\r\n * ========================================================================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n\r\n/* =========================================================================\r\n * 11) 메인 컴포넌트 (GemSimulator)\r\n *     - 상태 정의, 파생값, 이펙트, 액션 핸들러, 렌더 스켈레톤만 유지\r\n *     - 요청 사항: 최종 UI 구현 마크업은 비워둠 (원본 로직 유지)\r\n * ========================================================================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n\r\n  const curValid = cur.aName !== cur.bName;\r\n\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n\r\n  const migratedRef = useRef(false);\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n\r\n  const [changeMode, setChangeMode] = useState(null);\r\n  const [changePick, setChangePick] = useState(\"\");\r\n\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]);\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n\r\n  const addLog = useCallback((entry) => {\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n\r\n  const simRef = useRef(null);\r\n  const [logsMax, setLogsMax] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct2 = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct2(nowProb)} → 다른 항목 보기 기대 ${pct2(rerollProb)} (▲${pct2(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct2(nowProb)}가 다른 항목 보기 기대 ${pct2(rerollProb)}보다 유리 (▼${pct2(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct2(nowProb)} vs 다른 항목 보기 ${pct2(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode: pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 100,\r\n        rareTiers: [200000],\r\n      };\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return;\r\n    }\r\n\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory();\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n\r\n  function manualReset() {\r\n    setLogs([]);\r\n    setHistory({ past: [], future: [] });\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory();\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1,\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n\r\n  const dupWarnShown = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);\r\n      setHistory({ past: [], future: [] });\r\n    }\r\n  }, [allLocked]);\r\n\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base;\r\n  }, [gemKey, pos, abModePrimary]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      {/* 전역 CSS 변수와 유틸리티 클래스 주입: 주요 색상 및 accent-color 지정 */}\r\n      <style>{`\r\n    :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n    .text-primary{ color:#a399f2; }\r\n    .accent-primary{ accent-color:#a399f2; }\r\n  `}</style>\r\n\r\n      {/* 중앙 컨테이너: 최대 폭 제한 및 수직 간격 */}\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 헤더 섹션: 제목과 시뮬레이션 반복 횟수 선택 */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            {/* 페이지 타이틀: 그라디언트 배경 위에서 가독성 위한 화이트 텍스트/드롭섀도 */}\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n              로아 아크그리드 젬 가공 확률 계산기\r\n            </h1>\r\n\r\n            {/* 우측 컨트롤: 시뮬레이션 횟수 드롭다운 */}\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n              <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n              <div className=\"min-w-[170px]\">\r\n                {/* 시뮬레이션 반복 수 선택 Dropdown (SIM_OPTIONS 기반) */}\r\n                <Dropdown\r\n                  value={simTrials}\r\n                  onChange={setSimTrials}\r\n                  items={SIM_OPTIONS}\r\n                  placeholder=\"반복 수 선택\"\r\n                  bordered={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 기본 설정 카드 (젬 타입/등급/기본 시도/리롤 안내) */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {/* 카드 타이틀 */}\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (잠금 상태 제어) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 입력 행: 젬 타입/등급/기본 시도·리롤 표시 */}\r\n          <div className=\"mt-3\">\r\n            <div\r\n              className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n            >\r\n              {/* 젬 타입 선택: GEM_TYPES 키 목록을 드롭다운으로 제공 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>젬 타입</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={gemKey}\r\n                  onChange={(v) => setGemKey(v)}\r\n                  items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"젬 타입\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 등급 선택: 고급/희귀/영웅 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>등급</label>\r\n                <Dropdown\r\n                  className=\"w-full\"\r\n                  value={rarity}\r\n                  onChange={(v) => setRarity(v)}\r\n                  items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n                  placeholder=\"등급\"\r\n                  disabled={basicLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 현재 등급 기준 기본 시도/리롤 수 정보 표시 (읽기 전용) */}\r\n              <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n                <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n                  가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n                  <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 현재 옵션 입력 카드 (현재 젬의 상태 입력/잠금) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n\r\n            {/* 우측 액션: 저장/편집 토글 (현재 값 고정 여부) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 현재 옵션 입력 행: 효율/포인트/효과 A/B 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 포인트 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 선택 */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 A 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 선택 (A와 중복 불가) */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n\r\n              {/* 효과 B 레벨 입력 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 섹션: 목표 옵션 입력 카드 (목표 충족 방식/효과/레벨) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n\r\n            {/* 우측: 저장/편집 토글 (잠금 시 계산 활성) */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 목표 충족 방식 라디오: 상관 없음일 때 비활성화 */}\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n\r\n          {/* 목표 조건 입력 행: 효율/포인트/추가 효과/효과명 및 레벨 */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 목표 의지력 효율 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.eff}\r\n                  set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 포인트 하한 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트 ≥</label>\r\n                <NumberInput\r\n                  value={tgt.pts}\r\n                  set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 추가 효과 역할군: 상관 없음/공격형/지원형 */}\r\n              <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>추가 효과</label>\r\n                <Dropdown\r\n                  className=\"w-full lg:w-[100px]\"\r\n                  value={pos}\r\n                  onChange={(v) => setPos(v)}\r\n                  items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n                  placeholder=\"추가 효과\"\r\n                  disabled={tgtLocked}\r\n                />\r\n              </div>\r\n\r\n              {/* 목표 효과명/레벨: 역할군이 상관 없음이면 비활성화 */}\r\n              {(() => {\r\n                const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n                const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n                const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n                const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n                return (\r\n                  <>\r\n                    {/* 목표 효과 A 선택 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 A</label>\r\n                      <Select\r\n                        value={tgtNames.aName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.bName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 A 레벨 하한 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n                      <label className={labelCls}>{tgtALabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.aLvl}\r\n                        set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={effectsDisabled}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 선택: BOTH 모드에서만 활성 */}\r\n                    <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n                      <label className={labelCls}>목표 효과 B</label>\r\n                      <Select\r\n                        value={tgtNames.bName}\r\n                        set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n                        options={abModePrimary === \"BOTH\"\r\n                          ? targetPool.filter((n) => n !== tgtNames.aName)\r\n                          : targetPool}\r\n                        disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* 목표 효과 B 레벨 하한: BOTH 모드일 때만 활성 */}\r\n                    <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n                      <label className={labelCls}>{tgtBLabel}</label>\r\n                      <NumberInput\r\n                        value={tgt.bLvl}\r\n                        set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                        min={MIN_STAT}\r\n                        max={MAX_STAT}\r\n                        disabled={bLevelDisabled}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 2열 레이아웃: 좌측 시뮬, 우측 작업 내역 */}\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 좌측(2칸): 가공 시뮬레이션 패널 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 헤더: 타이틀 및 초기화 버튼 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 사용 안내: 모든 설정 잠금 이후 액션 가능 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n\r\n            {/* 본문: 현재 상태 카드 + 선택지 카드 */}\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 현재 젬 상태/리소스 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n\r\n                {/* 핵심 스탯(효율/포인트/효과 A/B) 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  {/* 효율 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n\r\n                  {/* 포인트 */}\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n\r\n                  {/* 효과 A: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* 효과 B: 변경 모드면 선택 컨트롤 표시, 아니면 현재 값 표시 */}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* 리소스 칩: 남은 가공/리롤/비용 증감률/누적 골드 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* 이번 차수 선택지 + 액션 패널 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n\r\n                {/* 4개 슬롯: 라벨 선택 + 적용 버튼 */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {/* 현재 슬롯 라벨 변경 드롭다운 */}\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        {/* 적용 버튼: 모든 설정 잠금 및 중복 미발생 등 조건 충족 시 활성 */}\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 버튼 및 추천 문구 */}\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* 다른 항목 보기 EV 근거 설명 (가능 시 노출) */}\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 우측(1칸): 작업 내역 패널 (Undo/Redo 포함) */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              {/* Undo/Redo 버튼: 단축키 안내 포함 */}\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 로그 비어있음/목록 렌더링 */}\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n\r\n        {/* 결과 출력 섹션: 스켈레톤/실데이터 2상태 렌더링 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            {/* 우측 표시: 실제 사용된 Monte Carlo 횟수 및 95% CI 폭 */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 계산 중 또는 데이터 미존재 시: 스켈레톤 UI */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 스켈레톤 칩 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 스켈레톤 카드 2장 */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 실데이터 표시: 1회차 선택지 목록 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 목표 달성 확률 및 등급 확률 카드 2열 */}\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 카드: STOP_ON_SUCCESS vs RUN_TO_END */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* 좌측: STOP_ON_SUCCESS 결과 */}\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            달성 즉시 가공 완료 ( {fmtNum(resultStop.successes)}회 / {fmtNum(resultStop.trialsUsed)}회 )\r\n                          </div>                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultStop.expectedGold, resultStop.successProb);\r\n                          const badge = burdenBadge(resultStop.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n\r\n                      {/* 우측: RUN_TO_END 결과 */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            가공 횟수 전부 소모 ( {fmtNum(resultRun.successes)}회 / {fmtNum(resultRun.trialsUsed)}회 )\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        {/* 기대 비용 및 부담 배지 */}\r\n                        {(() => {\r\n                          const gps = goldPerSuccess(resultRun.expectedGold, resultRun.successProb);\r\n                          const badge = burdenBadge(resultRun.successProb);\r\n                          return (\r\n                            <div className=\"mt-2 text-xs text-gray-700 flex items-center gap-2 flex-wrap\">\r\n                              <span>\r\n                                성공 1회 <b>기대비용</b>: <b>{Number.isFinite(gps) ? fmtNum(Math.round(gps)) : \"∞\"}</b> G\r\n                              </span>\r\n                              <span className={`px-2 py-0.5 rounded-lg border ${badge.tone}`}>\r\n                                골드부담: {badge.label}\r\n                              </span>\r\n                              <span className=\"text-[11px] text-gray-500\">\r\n                                (확률이 낮을수록 기대비용이 커집니다)\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n\r\n                  {/* 등급 확률 카드: 전설/유물/고대 각각의 달성 확률 및 순서 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n\r\n                    {/* 각 등급 확률 막대 및 수치 표시 (0%도 노출) */}\r\n                    {(() => {\r\n                      if (!resultRun) return null;\r\n                      const grades = [\r\n                        { key: \"legendProb\", name: \"전설 (4~15)\", p: Number(resultRun.legendProb || 0), grad: GRADE_GRADIENTS.legend },\r\n                        { key: \"relicProb\", name: \"유물 (16~18)\", p: Number(resultRun.relicProb || 0), grad: GRADE_GRADIENTS.relic },\r\n                        { key: \"ancientProb\", name: \"고대 (19+)\", p: Number(resultRun.ancientProb || 0), grad: GRADE_GRADIENTS.ancient },\r\n                      ];\r\n                      return (\r\n                        <div className=\"mt-3 space-y-3 text-sm\">\r\n                          {grades.map(g => (\r\n                            <div key={g.key}>\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-gray-700\">{g.name}</span>\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  {/* 100% 확정 배지 */}\r\n                                  {isOneProb(g.p) && (\r\n                                    <span className=\"px-2 py-0.5 rounded-lg border bg-emerald-50 border-emerald-200 text-emerald-800 text-[11px]\">\r\n                                      확정\r\n                                    </span>\r\n                                  )}\r\n                                  <b>{fmtProb(g.p)}</b>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                                <motion.div\r\n                                  initial={{ width: 0 }}\r\n                                  animate={{ width: isOneProb(g.p) ? \"100%\" : pct(g.p) }}\r\n                                  transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                                  className=\"h-full bg-gradient-to-r\"\r\n                                  style={{ backgroundImage: g.grad }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n\r\n                    {/* 등급 확률 순서 요약: 0% 제외, 동률 표기 */}\r\n                    {(() => {\r\n                      const { order, comps } = rankGradeOrder(resultRun);\r\n                      if (!order.length) return null;\r\n                      return (\r\n                        <div className=\"mt-2 rounded-xl bg-white/70\">\r\n                          <div className=\"text-xs text-gray-500 mb-1\">가능성 높은 순서</div>\r\n                          <div className=\"flex flex-wrap items-center gap-1.5\">\r\n                            {order.map((it, idx) => (\r\n                              <React.Fragment key={it.key}>\r\n                                <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white shadow-sm\">\r\n                                  <span\r\n                                    className=\"inline-block w-2 h-2 rounded-full bg-gradient-to-r\"\r\n                                    style={{ backgroundImage: it.grad }}\r\n                                  />\r\n                                  <span className=\"text-sm\">\r\n                                    {it.label}{isOneProb(it.p) ? \" (확정)\" : \"\"}\r\n                                  </span>\r\n                                </span>\r\n                                {idx < order.length - 1 && (\r\n                                  <span className=\"mx-0.5 text-gray-400 select-none\">\r\n                                    {comps[idx] === \"=\" ? \"＝\" : \"＞\"}\r\n                                  </span>\r\n                                )}\r\n                              </React.Fragment>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n\r\n      {/* 전역 토스트 스택: 중앙 오버레이로 알림 표시 */}\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n\r\n      {/* 광고 영역: Kakao Adfit 삽입 */}\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp, MessageCircle } from \"lucide-react\";\r\n\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll();\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\n\r\n/** 문의 모달 */\r\nfunction InquiryModal({ open, onClose }) {\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [body, setBody] = React.useState(\"\");\r\n  const [files, setFiles] = React.useState([]);          // File[] (여러 장)\r\n  const [sending, setSending] = React.useState(false);\r\n\r\n  \r\n\r\n  const endpoint =\r\n    import.meta.env?.VITE_DISCORD_PROXY ||\r\n    (typeof document !== \"undefined\" &&\r\n      document.querySelector('meta[name=\"arcgrid-proxy\"]')?.content) ||\r\n    (typeof window !== \"undefined\" && window.__ARCGRID_PROXY__) ||\r\n    \"\";\r\n  const apiKey =\r\n    import.meta.env?.VITE_DISCORD_API_KEY ||\r\n    (typeof document !== \"undefined\" &&\r\n      document.querySelector('meta[name=\"arcgrid-api-key\"]')?.content) ||\r\n    (typeof window !== \"undefined\" && window.__ARCGRID_API_KEY__) ||\r\n    \"\";\r\n\r\n  const MAX_FILES = 4;\r\n  const PER_FILE = 4 * 1024 * 1024;  // 4MB\r\n  const TOTAL = 16 * 1024 * 1024; // 16MB\r\n  const OK_TYPES = [\"image/png\", \"image/jpeg\", \"image/webp\", \"image/gif\"];\r\n\r\n  React.useEffect(() => {\r\n    if (!open) return;\r\n    const onKey = (e) => { if (e.key === \"Escape\") onClose?.(); };\r\n    window.addEventListener(\"keydown\", onKey);\r\n    return () => window.removeEventListener(\"keydown\", onKey);\r\n  }, [open, onClose]);\r\n\r\n  const handleFiles = (e) => {\r\n    const picked = Array.from(e.target.files || []);\r\n    if (!picked.length) return;\r\n\r\n    let next = [...files];\r\n    for (const f of picked) {\r\n      if (!OK_TYPES.includes(f.type)) {\r\n        alert(\"이미지 파일만 첨부할 수 있어요. (png, jpg, webp, gif)\");\r\n        continue;\r\n      }\r\n      if (f.size > PER_FILE) {\r\n        alert(`파일 ${f.name}이(가) 5MB를 초과합니다.`);\r\n        continue;\r\n      }\r\n      if (next.length >= MAX_FILES) {\r\n        alert(`이미지는 최대 ${MAX_FILES}장까지 첨부할 수 있어요.`);\r\n        break;\r\n      }\r\n      next.push(f);\r\n    }\r\n\r\n    const totalSize = next.reduce((s, f) => s + f.size, 0);\r\n    if (totalSize > TOTAL) {\r\n      alert(`이미지 총 용량은 최대 ${(TOTAL / 1024 / 1024) | 0}MB까지 가능합니다.`);\r\n      return;\r\n    }\r\n\r\n    setFiles(next);\r\n    e.target.value = \"\"; // 같은 파일 다시 선택 가능하도록 초기화\r\n  };\r\n\r\n  const removeFileAt = (idx) => {\r\n    setFiles((arr) => arr.filter((_, i) => i !== idx));\r\n  };\r\n\r\n  const fileToBase64 = async (f) => {\r\n    const buf = await f.arrayBuffer();\r\n    let binary = \"\";\r\n    const bytes = new Uint8Array(buf);\r\n    const chunk = 0x8000;\r\n    for (let i = 0; i < bytes.length; i += chunk) {\r\n      binary += String.fromCharCode.apply(null, bytes.subarray(i, i + chunk));\r\n    }\r\n    return btoa(binary); // base64\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e?.preventDefault?.();\r\n    if (sending) return; // 더블클릭 방지 (프레임 경합)\r\n    if (!title.trim() || !body.trim()) {\r\n      alert(\"제목과 내용을 모두 입력하세요.\");\r\n      return;\r\n    }\r\n    if (!endpoint) {\r\n      alert(\"전송 경로가 설정되지 않았습니다. (VITE_DISCORD_PROXY)\");\r\n      return;\r\n    }\r\n    try {\r\n      setSending(true);\r\n\r\n      // File[] -> [{ name, type, data(base64) }, ...]\r\n      const images = [];\r\n      for (const f of files) {\r\n        const data = await fileToBase64(f);\r\n        images.push({ name: f.name, type: f.type, data });\r\n      }\r\n\r\n      const fd = new FormData();\r\n      const nonce = (crypto?.randomUUID && crypto.randomUUID()) || `${Date.now()}-${Math.random()}`;\r\n      fd.append(\"title\", title.trim().slice(0, 80));\r\n      fd.append(\"content\", body.trim().slice(0, 4000));\r\n      fd.append(\"nonce\", nonce); // ← 워커 디둡용 토큰\r\n      files.forEach((f) => fd.append(\"files[]\", f, f.name));\r\n     \r\n      const url = `${endpoint}${apiKey ? `?key=${encodeURIComponent(apiKey)}` : \"\"}`;\r\n      const res = await fetch(url, { method: \"POST\", body: fd }); // Content-Type 수동 지정 X\r\n      const data = await res.json().catch(() => ({}));\r\n      if (data?.ok) {\r\n        alert(\"문의가 전송되었습니다. 감사합니다!\");\r\n        setTitle(\"\"); setBody(\"\"); setFiles([]);\r\n        onClose?.();\r\n      } else {\r\n        alert(\"전송 실패: 잠시 후 다시 시도해 주세요.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"전송 중 오류가 발생했습니다.\");\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 z-[100] bg-black/40 backdrop-blur-[1px] flex items-center justify-center px-4\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      onClick={onClose}\r\n    >\r\n      <div\r\n        className=\"w-full max-w-lg rounded-2xl bg-white shadow-xl p-4 sm:p-5\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-base sm:text-lg font-semibold\">문의하기</h3>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClose}\r\n            className=\"rounded-lg p-1 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-[#a399f2]/40\"\r\n            aria-label=\"닫기\"\r\n          >\r\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\"><path d=\"M6 6l12 12M6 18L18 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" /></svg>\r\n          </button>\r\n        </div>\r\n\r\n        <p className=\"mt-1 text-xs text-gray-600\">\r\n          제목/내용과 함께 이미지를 <b>최대 {MAX_FILES}장</b>까지 첨부할 수 있어요. (파일당 4MB, 총 16MB)\r\n        </p>\r\n\r\n        <form onSubmit={handleSubmit} className=\"mt-3 space-y-3\">\r\n          <div>\r\n            <label className=\"block text-xs text-gray-500 mb-1\">제목</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              maxLength={80}\r\n              placeholder=\"예) 아크그리드 계산 관련 문의\"\r\n              className=\"block mb-1 h-10 w-full px-3 rounded-xl border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n            />\r\n            <div className=\"text-[11px] text-gray-400 text-right\">{title.length}/80</div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-xs text-gray-500 mb-1\">내용</label>\r\n            <textarea\r\n              value={body}\r\n              onChange={(e) => setBody(e.target.value)}\r\n              rows={6}\r\n              maxLength={4000}\r\n              placeholder=\"문의 내용을 적어주세요. (재현 방법, 스크린샷 링크 등)\"\r\n              className=\"block mb-1 w-full px-3 py-2 rounded-xl border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n            />\r\n            <div className=\"text-[11px] text-gray-400 text-right\">{body.length}/4000</div>\r\n          </div>\r\n\r\n          <div>\r\n            {/* 이미지 첨부 (선택, 최대 {MAX_FILES}장) */}\r\n            <label className=\"block text-xs text-gray-500 mb-1\">\r\n              이미지 첨부 (선택, 최대 {MAX_FILES}장)\r\n            </label>\r\n\r\n            {/* 드래그&드롭 + 버튼 업로더 */}\r\n            <div\r\n              className={[\r\n                \"rounded-2xl border-2 border-dashed\",\r\n                \"border-gray-300 bg-gray-50/60 hover:bg-gray-50 transition\",\r\n                \"p-4 text-center\"\r\n              ].join(\" \")}\r\n              onDragOver={(e) => { e.preventDefault(); }}\r\n              onDrop={(e) => {\r\n                e.preventDefault();\r\n                const dropped = Array.from(e.dataTransfer?.files || []);\r\n                if (!dropped.length) return;\r\n                // 기존 handleFiles를 재활용: input change와 동일하게 처리하려면 아래 ingest 로직을 사용,\r\n                // 아니면 handleFiles를 수정해도 됩니다.\r\n                const fakeEvent = { target: { files: dropped } };\r\n                handleFiles(fakeEvent);\r\n              }}\r\n            >\r\n              {/* 숨겨진 파일 인풋 */}\r\n              <input\r\n                id=\"inq-files\"\r\n                type=\"file\"\r\n                accept={OK_TYPES.join(\",\")}\r\n                multiple\r\n                onChange={handleFiles}\r\n                disabled={sending}\r\n                className=\"sr-only\"\r\n              />\r\n\r\n              <div className=\"flex flex-col items-center justify-center gap-2\">\r\n                <div className=\"text-[13px] text-gray-600\">\r\n                  파일을 이곳에 <b>끌어다 놓기</b> 또는\r\n                  <label\r\n                    htmlFor=\"inq-files\"\r\n                    className={[\r\n                      \"inline-flex items-center justify-center gap-2\",\r\n                      \"px-3 h-8 ml-1 rounded-xl shadow-sm cursor-pointer\",\r\n                      \"border inline-flex items-center justify-center bg-white hover:bg-gray-50\"\r\n                    ].join(\" \")}\r\n                    title=\"이미지 선택\"\r\n                  >\r\n                    이미지 선택\r\n                  </label>\r\n                </div>\r\n                <div className=\"text-[11px] text-gray-500\">\r\n                  허용: png, jpg, webp, gif등 · 파일당 4MB · 총 16MB\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 미리보기 그리드 (기존 그대로 사용) */}\r\n            {files.length > 0 && (\r\n              <div className=\"mt-2 grid grid-cols-3 sm:grid-cols-4 gap-2\">\r\n                {files.map((f, idx) => {\r\n                  const url = URL.createObjectURL(f);\r\n                  return (\r\n                    <div key={idx} className=\"relative\">\r\n                      <img\r\n                        src={url}\r\n                        alt={f.name}\r\n                        className=\"h-24 w-full object-cover rounded-lg border\"\r\n                        onLoad={() => URL.revokeObjectURL(url)}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeFileAt(idx)}\r\n                        className=\"absolute -top-2 -right-2 bg-white border rounded-full w-6 h-6 text-xs font-bold\"\r\n                        title=\"제거\"\r\n                        aria-label=\"첨부 제거\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n            <div className=\"pt-1 flex items-center gap-2 justify-end\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"h-10 px-3 rounded-xl border inline-flex items-center justify-center bg-white hover:bg-gray-50\"\r\n              >\r\n                취소\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={sending}\r\n                className={[\r\n                  \"h-10 px-3 rounded-xl inline-flex items-center justify-center gap-2\",\r\n                  \"text-white\",\r\n                  \"hover:brightness-95 active:brightness-90\",\r\n                  \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/50\",\r\n                  sending ? \"opacity-70 cursor-not-allowed\" : \"\"\r\n                ].join(\" \")}\r\n                style={{ backgroundColor: \"#a399f2\" }}\r\n              >\r\n                {sending ? \"전송 중…\" : \"전송하기\"}\r\n              </button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n/** FAB 스택: 문의 + TOP */\r\nfunction FabStack({ onOpenInquiry }) {\r\n  const nearBottom = useNearBottom(520);\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)] flex flex-col gap-2\">\r\n      {/* 문의하기 FAB: 항상 노출 */}\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"문의하기\"\r\n        onClick={onOpenInquiry}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          nearBottom ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <MessageCircle size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">문의</span>\r\n      </button>\r\n\r\n      {/* TOP FAB: 하단 근처일 때 노출 */}\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          nearBottom ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function CoreOnly() {\r\n  const [inqOpen, setInqOpen] = React.useState(false);\r\n\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n        <header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n          <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n            <nav aria-label=\"Core pages\">\r\n              <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/gem\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 가공 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to=\"/optimizer\"\r\n                    className={({ isActive }) =>\r\n                      [\r\n                        \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                        \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                        isActive ? \"bg-[#a399f2]/10 text-[#5b54c6]\" : \"text-gray-700 hover:bg-gray-50\",\r\n                      ].join(\" \")\r\n                    }\r\n                  >\r\n                    젬 장착 헬퍼\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            {/* 기본 경로 보정: /#/core → /#/core/optimizer */}\r\n            <Route index element={<Navigate to=\"/optimizer\" replace />} />\r\n\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n\r\n            {/* 나머지 경로도 optimizer로 보정 */}\r\n            <Route path=\"*\" element={<Navigate to=\"/optimizer\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n\r\n      {/* FAB 스택 & 모달 */}\r\n      <FabStack onOpenInquiry={() => setInqOpen(true)} />\r\n      <InquiryModal open={inqOpen} onClose={() => setInqOpen(false)} />\r\n    </HashRouter>\r\n  );\r\n}\r\n"],"names":["adRef","useRef","useEffect","ins","document","createElement","className","style","display","setAttribute","script","type","async","src","current","innerHTML","appendChild","_jsx","ref","LABEL2KEY","parseNoShift","rawRight","arguments","length","undefined","norm","s","String","replace","split","map","v","trim","filter","Boolean","L","R","LABELS","parseRight","text","raw","t","clean","labelKey","lab","includes","level","NaN","nums","match","parseInt","rows","N","Math","max","i","_L$i","_R$i","leftStr","right","push","will","rawLeft","ScanFromImageModal","_ref","_progress$pct","open","onClose","onScanned","busy","setBusy","useState","progress","setProgress","label","pct","indeterminate","file","setFile","imgURL","setImgURL","imgNatural","setImgNatural","w","h","rectRel","setRectRel","excludesRel","setExcludesRel","tempExcludeRel","setTempExcludeRel","drag","setDrag","mode","setMode","wrapRef","imgRef","inputRef","worker","useMemo","Worker","URL","onMessage","ev","payload","data","console","groupCollapsed","log","joinedWords","groupEnd","parsed","forEach","p","_p$labelKey","Number","isFinite","gems","skipped","list","toNum","n","toKey","_LABEL2KEY$lab","clampLv","lv","min","gemIdx","a","b","point","o1k","o2k","opt1","opt2","_raw","leftA","rightA","leftB","rightB","pairParsedToGems","g","warn","join","skippedGems","_payload$message","error","message","alert","addEventListener","removeEventListener","url","createObjectURL","revokeObjectURL","resetSelections","getRelPoint","e","_wrapRef$current","r","getBoundingClientRect","x","y","clientX","left","clientY","top","width","height","rectRelToNatural","rel","_wrapRef$current2","sx","sy","round","createPortal","children","_jsxs","onClick","X","size","pickFile","_inputRef$current","click","disabled","ImageUp","title","BoxSelect","Eraser","Trash2","runManual","rect","excludes","arrayBuffer","then","buf","postMessage","mime","lang","ScanLine","accept","onChange","_e$target$files","target","files","onMouseDown","button","start","x0","y0","x1","y1","onMouseMove","cur","abs","onMouseUp","prev","id","random","toString","slice","onDragStart","preventDefault","cursor","alt","onLoad","img","currentTarget","naturalWidth","naturalHeight","draggable","position","border","background","pointerEvents","zIndex","stopPropagation","MinusCircle","body","CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_SUPPLY_OPTIONS","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEALER_WEIGHTS","DEFAULT_WEIGHTS","DEALER_LEVEL_CURVES","SUPPORT_LEVEL_CURVES","sanitizeWeights","base","Object","keys","k","num","levelValueByRole","role","key","lvl","scoreGemForRole","gem","weights","sum","_w$key","allow","Array","isArray","has","roleAllowsKey","basePct","scale","o1v","o2v","CORE_NAME_ITEMS","value","CATEGORY_LABEL","order","chaos","LS_KEY","JOBS","_ARC_CORES$jobs","ARC_CORES","CORE_NAME_BY_GROUP","GROUP_BY_CORE_NAME","CORE_ORDER","TARGET_MAX_BY_GRADE","getPresetItems","job","groupKey","_ARC_CORES$data$job2","_ARC_CORES$data2","getEffectsForPreset","preset","_ARC_CORES$data$job3","_ARC_CORES$data3","row","find","arr","flatMap","item","m","_ref2","_item$point","_ref3","_ref4","_ref5","_item$text","P","포인트","desc","효과","entries","_ref6","line","sort","normalizeEffects","uid","fmtByRole","toFixed","maskWeightsForRole","next","loadFromStorage","localStorage","getItem","JSON","parse","dragPortal","PortalAwareDraggable","_ref7","draggableId","index","Draggable","provided","snapshot","rendered","isDragging","Dropdown","_ref8","items","placeholder","bordered","setOpen","focusedIndex","setFocusedIndex","btnRef","menuRef","itemRefs","menuPos","forceTick","listboxId","initFocusIndex","useCallback","sel","findIndex","firstEnabled","window","refs","handler","refsArray","React","handlerRef","listener","_handlerRef$current","some","contains","call","useOnClickOutside","useLayoutEffect","bottom","onScroll","_btnRef$current","passive","requestAnimationFrame","_ref9","_ref9$focus","el","focus","cancelAnimationFrame","selected","getNextEnabled","dir","step","menu","AnimatePresence","motion","ul","tabIndex","initial","opacity","animate","exit","transition","duration","onKeyDown","first","last","it","_btnRef$current2","_btnRef$current2$quer","_btnRef$current2$quer2","querySelector","_btnRef$current3","_btnRef$current3$quer","_btnRef$current3$quer2","isSelected","isActive","onMouseEnter","onItemMouseEnter","_btnRef$current4","_btnRef$current4$quer","_btnRef$current4$quer2","ChevronUp","ChevronDown","ToastStack","_ref0","toasts","div","stiffness","damping","msg","NumberInput","_ref1","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","clamp","inputMode","onBlur","onWheel","blur","CoreEffectInfo","_ref10","_TARGET_MAX_BY_GRADE$","_GROUP_BY_CORE_NAME$c","_CORE_LABEL$grade","_CORE_LABEL$grade2","_CORE_LABEL$grade3","_CORE_LABEL$grade4","_CORE_LABEL$grade5","grade","category","coreName","supply","effects","maxP","coreShort","LABEL_CLS","isAncient","toLowerCase","gradeColorCls","toUpperCase","onMouseLeave","onFocus","Info","color","pickRight","out","_","pickSlashValueByGrade","LoACoreOptimizer","setCategory","_loadFromStorage$cate","_loadFromStorage","coresByCat","setCoresByCat","_loaded$coresByCat","loaded","gemsByCat","setGemsByCat","_loaded$gemsByCat","setRole","_loadFromStorage$role","_loadFromStorage2","setWeights","saved","every","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","remove","setToasts","setTimeout","useToasts","quickAddMode","setQuickAddMode","scanOpen","setScanOpen","dataVersion","setDataVersion","stale","setStale","didMountRef","cores","isComputing","results","globalScore","calculate","hasCalculated","calcVersion","setCalcVersion","setHasCalculated","computing","setComputing","phase","coreIndex","coreCount","coreDone","coreTotal","rate","elapsedMs","etaMs","pulse","priorityPicks","setPriorityPicks","setGlobalScore","workerRef","paramsRef","_workerRef$current","_workerRef$current2","terminate","cancelled","flushSync","_paramsRef$current$co","Promise","resolve","Error","_e$data","done","total","_p$pulse","floor","picks","score","c","gAll","perCoreLimit","err","useOptimizer","selectedJob","setSelectedJob","_loadFromStorage$sele","_loadFromStorage3","fileInputRef","buildSnapshot","app","version","exportedAt","Date","toISOString","handleExportJson","blob","Blob","stringify","d","stamp","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","jobPart","href","download","handleImportClick","_fileInputRef$current","handleImportFile","reader","FileReader","onload","json","result","onerror","readAsText","setCores","updater","setGems","_prev$category","mapScannedGemToItem","_g$opt1$label","_g$opt","_g$opt2","_g$opt2$label","_g$opt3","_g$opt4","handleScanned","_items","lastId","prevByCat","_prevByCat$category","changed","_items$0$value","_items$","name","nextPreset","updateGem","patch","updateCore","cs","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","idx","displayIndexGem","resolveSupply","core","_core$supply","def","QuickAddPad","_ref11","onAdd","focusOnMount","setO1k","setO2k","setO1v","setO2v","setWill","setPoint","firstRef","focusAfterSubmitRef","WILL_INPUT_ID","_firstRef$current","_firstRef$current$foc","_firstRef$current2","_firstRef$current2$se","select","handleSubmit","_e$preventDefault","_firstRef$current$sel","_firstRef$current3","getElementById","_el$select","onKeyDownSubmit","shiftKey","onSubmit","Plus","setItem","saveToStorage","backgroundImage","backgroundAttachment","Download","Upload","val","_items$0$value2","_items$2","j","addCore","_getPresetItems$","nextName","existingNames","nextAvailableCoreName","minThreshold","enforceMin","DragDropContext","evt","Event","dispatchEvent","onDragEnd","destination","from","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","_CORE_SUPPLY_OPTIONS$","_CORE_THRESHOLDS$c$gr","supplyOptions","gradeMax","thresholds","targetItems","concat","takenNames","coreNameItems","allowed","_ARC_CORES$data$job","_ARC_CORES$data","groups","getAllowedCoreNameSet","prov","_c$minThreshold","draggableProps","dragHandleProps","_CORE_SUPPLY_OPTIONS$2","maxAllowed","nextMin","opts","nextSupply","_presetItems$0$value","_presetItems$","presetItems","resolvedPreset","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","addGem","Image","removeGem","levels","allowSet","values","isCurve","_ref12","_ref13","_getPresetItems$2","_c$preset","pick","hasResult","minOfGrade","presetFallback","_Fragment","totalWill","totalPoint","maxThr","thr","roleSum","_ref14","_g$wwill","_g$point","gi","disp","wwill","KakaoAdfit","toLocaleString","USE_ANTITHETIC","AUTO_SCALE_RARE","OFFICIAL_RNG","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","SIM_OPTIONS","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","makeRNG","seed","isZeroProb","isOneProb","lo","hi","zeroSuccessUpperBound","alpha","pow","epsilonByTrials","batchByTrials","fmtProbSmart","fmtProb","fmtNum","goldPerSuccess","expectedGold","Infinity","burdenBadge","tone","estimateRate","successes","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","meetsTargetByMode","abMode","tgtNames","pool","isAny","nm","TA","aName","TB","bName","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","rareTiers","desirability","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","reduce","gold","rrs","unlocked","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","ci","low","high","halfWidth","localMaxTrials","forceRare","tiers","hardCap","nextTier","firstTier","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","GRADE_GRADIENTS","legend","relic","ancient","toneBtn","success","info","warning","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","pad","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","diffStats","after","parts","pushIf","old","bCand","allOptionLabels","defaultLabels","want","_allOptionLabels$curs","_allOptionLabels$curs2","manLabels","setManLabels","_allOptionLabels$i","used","replacement","l","resultStop","setResultStop","resultRun","setResultRun","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","pct2","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","RotateCcw","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","gps","badge","delay","grades","grad","comps","eps","diff","rankGradeOrder","InquiryModal","_document$querySelect","_document$querySelect2","setTitle","setBody","setFiles","sending","setSending","endpoint","content","__ARCGRID_PROXY__","apiKey","__ARCGRID_API_KEY__","TOTAL","OK_TYPES","handleFiles","picked","f","fileToBase64","binary","bytes","Uint8Array","fromCharCode","apply","subarray","btoa","viewBox","stroke","strokeWidth","strokeLinecap","_crypto","images","fd","FormData","nonce","crypto","randomUUID","now","append","encodeURIComponent","fetch","method","catch","ok","maxLength","onDragOver","onDrop","_e$dataTransfer","dropped","dataTransfer","multiple","removeFileAt","backgroundColor","FabStack","onOpenInquiry","nearBottom","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","MessageCircle","scrollTo","behavior","CoreOnly","inqOpen","setInqOpen","HashRouter","basename","NavLink","to","Routes","Route","element","Navigate","path"],"sourceRoot":""}