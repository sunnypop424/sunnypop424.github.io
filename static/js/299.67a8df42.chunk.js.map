{"version":3,"file":"static/js/299.67a8df42.chunk.js","mappings":"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","sources":["components/LoACoreOptimizer.jsx","components/GemSimulator.jsx","CoreOnly.jsx","components/KakaoAdfit.jsx"],"sourcesContent":["// src/components/LoACoreOptimizer.jsx\r\nimport React, { useEffect, useMemo, useState, useRef, useLayoutEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Plus, Trash2, RotateCcw, ChevronUp, ChevronDown } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n/* =============================== 타입(주석용 정의) =============================== */\r\n/** @typedef {\"dealer\"|\"support\"} Role */\r\n/** @typedef {\"atk\"|\"add\"|\"boss\"|\"brand\"|\"allyDmg\"|\"allyAtk\"} OptionKey */\r\n/** @typedef {\"HERO\"|\"LEGEND\"|\"RELIC\"|\"ANCIENT\"} CoreGrade */\r\n/** @typedef {{id:string, will:number|null, point:number|null, o1k:OptionKey, o1v:number|null, o2k:OptionKey, o2v:number|null}} Gem */\r\n/** @typedef {{[k in OptionKey]: number}} Weights */\r\n/** @typedef {{ id:string, name:string, grade:CoreGrade, minThreshold?:number, enforceMin:boolean }} CoreDef */\r\n/** @typedef {{ list: Gem[], totalWill:number, totalPoint:number, thr:number[], roleSum:number, score:number }} ComboInfo */\r\n/* =============================== 상수 정의 =============================== */\r\nconst CORE_SUPPLY = { HERO: 7, LEGEND: 11, RELIC: 15, ANCIENT: 17 };\r\nconst CORE_THRESHOLDS = {\r\n  HERO: [10],\r\n  LEGEND: [10, 14],\r\n  RELIC: [10, 14, 17, 18, 19, 20],\r\n  ANCIENT: [10, 14, 17, 18, 19, 20],\r\n};\r\nconst CORE_LABEL = { HERO: \"영웅\", LEGEND: \"전설\", RELIC: \"유물\", ANCIENT: \"고대\" };\r\nconst GRADES = [\"HERO\", \"LEGEND\", \"RELIC\", \"ANCIENT\"];\r\nconst OPTION_LABELS = {\r\n  atk: \"공격력\",\r\n  add: \"추가 피해\",\r\n  boss: \"보스 피해\",\r\n  brand: \"낙인력\",\r\n  allyDmg: \"아군 피해 강화\",\r\n  allyAtk: \"아군 공격 강화\",\r\n};\r\nconst OPTIONS = [\"atk\",\"add\",\"boss\",\"brand\",\"allyDmg\",\"allyAtk\"];\r\nconst ROLE_KEYS = {\r\n  dealer: new Set([\"atk\",\"add\",\"boss\"]),\r\n  support: new Set([\"brand\",\"allyDmg\",\"allyAtk\"]),\r\n};\r\nconst DEFAULT_WEIGHTS = { atk:1, add:1, boss:1, brand:1, allyDmg:1, allyAtk:1 };\r\nconst CORE_NAME_ITEMS = [\r\n  { value: \"해 코어\", label: \"해 코어\" },\r\n  { value: \"달 코어\", label: \"달 코어\" },\r\n  { value: \"별 코어\", label: \"별 코어\" },\r\n];\r\n/* =============================== 유틸/헬퍼 =============================== */\r\nconst CORE_ORDER = [\"해 코어\",\"달 코어\",\"별 코어\"];\r\nfunction nextAvailableCoreName(existingNames){\r\n  for (const n of CORE_ORDER) if (!existingNames.has(n)) return n;\r\n  return null; // 모두 사용됨\r\n}\r\nconst uid = () => Math.random().toString(36).slice(2,9);\r\nfunction sanitizeWeights(w){\r\n  const base = { ...DEFAULT_WEIGHTS };\r\n  if(!w) return base;\r\n  Object.keys(base).forEach((k)=>{\r\n    const raw = w[k];\r\n    const num = typeof raw === 'number' ? raw : Number(raw);\r\n    base[k] = Number.isFinite(num) && num >= 0 ? num : DEFAULT_WEIGHTS[k];\r\n  });\r\n  return /** @type {Weights} */(base);\r\n}\r\nfunction scoreGemForRole(g, role, w){\r\n  const keys = role === \"dealer\" ? ROLE_KEYS.dealer : ROLE_KEYS.support;\r\n  const s1 = keys.has(g.o1k) ? g.o1v * (w[g.o1k] ?? 1) : 0;\r\n  const s2 = keys.has(g.o2k) ? g.o2v * (w[g.o2k] ?? 1) : 0;\r\n  return s1 + s2;\r\n}\r\nfunction* combinations(arr, k){\r\n  const n = arr.length; if(k>n) return;\r\n  const idx = Array.from({length:k}, (_,i)=>i);\r\n  while(true){\r\n    yield idx.map(i=>arr[i]);\r\n    let p=k-1; while(p>=0 && idx[p]===n-k+p) p--; if(p<0) break; idx[p]++; for(let j=p+1;j<k;j++) idx[j]=idx[j-1]+1;\r\n  }\r\n}\r\nfunction thresholdsHit(grade, totalPoint){\r\n  const th = CORE_THRESHOLDS[grade];\r\n  return th.filter(t => totalPoint >= t);\r\n}\r\nfunction scoreCombo(combo, grade, role, weights){\r\n  const totalWill = combo.reduce((s,g)=>s+((g.will ?? 0)),0);\r\n  const totalPoint = combo.reduce((s,g)=>s+((g.point ?? 0)),0);\r\n  const thr = thresholdsHit(grade, totalPoint);\r\n  const roleSum = combo.reduce((s,g)=>s+scoreGemForRole(g, role, weights),0);\r\n  const score = (thr.length*10_000_000) + (totalPoint*10_000) + ((5_000 - totalWill)*10) + roleSum - combo.length;\r\n  return { totalWill, totalPoint, thr, roleSum, score };\r\n}\r\n/* 단일 코어 후보 산출 (통일 정책: 달성 구간이 없으면 결과 없음) */\r\nfunction enumerateCoreCombos(pool, grade, role, weights, minThreshold, enforceMin){\r\n  const supply = CORE_SUPPLY[grade];\r\n  const W = sanitizeWeights(weights);\r\n  const minOfGrade = Math.min(...CORE_THRESHOLDS[grade]);\r\n  const effMin = minThreshold ?? minOfGrade;\r\n  const effEnforce = enforceMin || minThreshold == null;\r\n  /** @type {ComboInfo[]} */\r\n  const all = [];\r\n  const maxPick = Math.min(4, pool.length);\r\n  for(let k=0;k<=maxPick;k++){\r\n    if(k===0){ all.push({ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }); continue; }\r\n    for(const combo of combinations(pool, k)){\r\n      const totalWill = combo.reduce((s,g)=>s+(g.will||0),0);\r\n      if(totalWill > supply) continue;\r\n      const { totalPoint, thr, roleSum, score } = scoreCombo(combo, grade, role, W);\r\n      all.push({ list:combo, totalWill, totalPoint, thr, roleSum, score });\r\n    }\r\n  }\r\n  all.sort((a,b)=>b.score-a.score);\r\n  let filtered;\r\n  if(effEnforce){\r\n    filtered = all.filter(ci => {\r\n      const maxThr = Math.max(0, ...ci.thr);\r\n      return ci.list.length>0 && maxThr >= (effMin ?? 0);\r\n    });\r\n  }else{\r\n    filtered = all.filter(ci => ci.list.length>0 && ci.thr.length>0);\r\n  }\r\n  if(filtered.length===0){\r\n    return [{ list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 }];\r\n  }\r\n  return filtered.slice(0,200);\r\n}\r\n/* ===== 라운드 로빈 타깃 업그레이드 (강제 목표 ‘모두 충족’ 보장) ===== */\r\nfunction optimizeRoundRobinTargets(cores, pool, role, weights, perCoreLimit = 80) {\r\n  const W = sanitizeWeights(weights);\r\n  const thresholdsOf = (grade) => CORE_THRESHOLDS[grade];\r\n  const minOf = (grade) => Math.min(...thresholdsOf(grade));\r\n  const nextThreshold = (grade, current) => {\r\n    const arr = thresholdsOf(grade);\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (arr[i] > (current ?? -Infinity)) return arr[i];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const bestMinHit = (cands, target) => {\r\n    // target 이상 달성 조합 중 “딱 넘기는” 걸 우선\r\n    const ok = cands.filter(ci => (ci.thr.length ? Math.max(...ci.thr) : 0) >= target);\r\n    if (ok.length === 0) return null;\r\n    // totalPoint ASC → totalWill ASC → roleSum DESC → score DESC\r\n    ok.sort((a,b)=>{\r\n      if (a.totalPoint !== b.totalPoint) return a.totalPoint - b.totalPoint;\r\n      if (a.totalWill  !== b.totalWill ) return a.totalWill  - b.totalWill;\r\n      if (a.roleSum    !== b.roleSum   ) return b.roleSum    - a.roleSum;\r\n      return b.score - a.score;\r\n    });\r\n    return ok[0];\r\n  };\r\n  const bestScore = (cands) => cands.sort((a,b)=>b.score-a.score)[0] || null;\r\n\r\n  const emptyPick = { list:[], totalWill:0, totalPoint:0, thr:[], roleSum:0, score:0 };\r\n\r\n  // 후보 생성 (현재 젬 풀 기준으로 perCoreLimit 상위만)\r\n  const candidatesFor = (core, gemPool) =>\r\n    enumerateCoreCombos(gemPool, core.grade, role, W, core.minThreshold, core.enforceMin)\r\n      .filter(ci => ci.list.length > 0)\r\n      .sort((a,b)=>b.score-a.score)\r\n      .slice(0, perCoreLimit);\r\n\r\n  // 젬 풀 조작 헬퍼\r\n  const removeUsed = (gemPool, combo) => {\r\n    if (!combo || !combo.list) return gemPool;\r\n    const used = new Set(combo.list.map(g=>g.id));\r\n    return gemPool.filter(g=>!used.has(g.id));\r\n  };\r\n\r\n  // ---------- [단계 A] 강제 목표 “동시 충족”을 위한 전역 배치 ----------\r\n  // 1) 강제 코어를 우선 배치 대상으로 묶고(원래 순서 유지), 비강제는 뒤로\r\n  const enforcedIdx = cores\r\n    .map((c,i)=> c.enforceMin ? i : -1)\r\n    .filter(i=> i !== -1);\r\n  const nonEnforcedIdx = cores\r\n    .map((c,i)=> !c.enforceMin ? i : -1)\r\n    .filter(i=> i !== -1);\r\n\r\n  // 강제 코어 시작점을 회전시키며 여러 순열을 시도 → “강제 목표를 만족한 코어 수” 최대안을 채택\r\n  const rotations = Math.max(1, enforcedIdx.length);\r\n  let bestAssignment = { picks: cores.map(_=>emptyPick), remaining: pool.slice(), satisfiedCount: -1, scoreSum: -Infinity };\r\n\r\n  for (let r = 0; r < rotations; r++) {\r\n    const start = r % Math.max(1, enforcedIdx.length);\r\n    const ordered = enforcedIdx.length\r\n      ? enforcedIdx.slice(start).concat(enforcedIdx.slice(0, start)).concat(nonEnforcedIdx)\r\n      : nonEnforcedIdx.slice();\r\n\r\n    let remaining = pool.slice();\r\n    /** @type {ComboInfo[]} */\r\n    const picks = Array.from({length: cores.length}, () => emptyPick);\r\n\r\n    for (const i of ordered) {\r\n      const c = cores[i];\r\n      const cands = candidatesFor(c, remaining);\r\n      let choice = null;\r\n      if (c.enforceMin) {\r\n        const effMin = (c.minThreshold ?? minOf(c.grade));\r\n        // 강제 단계에서는 “무조건 목표를 넘기는 해”만 선택 (없으면 비워둠)\r\n        choice = bestMinHit(cands, effMin);\r\n      } else {\r\n        // 비강제는 그냥 점수 최선\r\n        choice = bestScore(cands);\r\n      }\r\n      picks[i] = choice || emptyPick;\r\n      remaining = removeUsed(remaining, picks[i]);\r\n    }\r\n\r\n    // 강제 목표 달성 개수 및 품질 점수 계산\r\n    let satisfied = 0;\r\n    let quality = 0;\r\n    enforcedIdx.forEach(i => {\r\n      const c = cores[i];\r\n      const effMin = (c.minThreshold ?? minOf(c.grade));\r\n      const maxThr = picks[i].thr.length ? Math.max(...picks[i].thr) : 0;\r\n      if (maxThr >= effMin) satisfied++;\r\n      // tie-breaker: (달성한 thr 높이 + roleSum) 가중\r\n      quality += (maxThr >= effMin ? (maxThr - effMin + 1) : 0) * 1e6 + picks[i].roleSum;\r\n    });\r\n\r\n    if (\r\n      satisfied > bestAssignment.satisfiedCount ||\r\n      (satisfied === bestAssignment.satisfiedCount && quality > bestAssignment.scoreSum)\r\n    ) {\r\n      bestAssignment = { picks, remaining, satisfiedCount: satisfied, scoreSum: quality };\r\n    }\r\n  }\r\n\r\n  // 선택된 최적 배치\r\n  let picks = bestAssignment.picks;\r\n  let remaining = bestAssignment.remaining;\r\n\r\n  // 강제 코어가 모두 목표 달성했는지 확인\r\n  const allMinOk = enforcedIdx.every(i => {\r\n    const c = cores[i];\r\n    const effMin = (c.minThreshold ?? minOf(c.grade));\r\n    const maxThr = picks[i].thr.length ? Math.max(...picks[i].thr) : 0;\r\n    return maxThr >= effMin;\r\n  });\r\n\r\n  // 강제 목표가 하나라도 실패면 여기서 종료(가능한 한 많이 맞춘 상태 반환)\r\n  if (!allMinOk) {\r\n    return { picks };\r\n  }\r\n\r\n  // ---------- [단계 B] 라운드 로빈 업그레이드 (모두 목표 달성 후) ----------\r\n  let progressed = true;\r\n  while (progressed) {\r\n    progressed = false;\r\n    for (let i = 0; i < cores.length; i++) {\r\n      const c = cores[i];\r\n      const curMax = picks[i].thr.length ? Math.max(...picks[i].thr) : 0;\r\n      const nxt = nextThreshold(c.grade, curMax);\r\n      if (nxt == null) continue;\r\n\r\n      // 업그레이드 시도: 현 코어 젬 반납 후 재선택\r\n      // (다른 코어의 젬은 건드리지 않음 — 라운드로빈이 돌아가며 자연 조정)\r\n      // no-loop-func 회피: 콜백이 캡쳐할 변수를 루프 지역 상수로 고정\r\n      const currentRemaining = remaining;\r\n      const currentRemainingIds = new Set(currentRemaining.map(x => x.id));\r\n      const refundList = picks[i].list;\r\n      const poolWithRefund = currentRemaining.concat(\r\n        refundList.filter(g => !currentRemainingIds.has(g.id))\r\n      );\r\n\r\n      const cands = candidatesFor(c, poolWithRefund);\r\n      const upgrade = bestMinHit(cands, nxt);\r\n      if (upgrade) {\r\n        // 새 픽으로 교체\r\n        picks[i] = upgrade;\r\n        const usedNew = new Set(upgrade.list.map(g=>g.id));\r\n        remaining = poolWithRefund.filter(g=>!usedNew.has(g.id));\r\n        progressed = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return { picks };\r\n}\r\n\r\n/* =============================== Portal-aware Draggable =============================== */\r\nconst dragPortal = typeof document !== \"undefined\" ? document.body : null;\r\nfunction PortalAwareDraggable({ draggableId, index, children }) {\r\n  return (\r\n    <Draggable draggableId={draggableId} index={index}>\r\n      {(provided, snapshot) => {\r\n        // 자식이 function이면 provided/snapshot을 넘겨 \"자식이 직접\" props를 붙이게 함\r\n        const rendered =\r\n          typeof children === \"function\" ? children(provided, snapshot) : children;\r\n        return snapshot.isDragging && dragPortal\r\n          ? createPortal(rendered, dragPortal)\r\n          : rendered;\r\n      }}\r\n    </Draggable>\r\n  );\r\n}\r\n/* =============================== 공통 UI 훅/컴포넌트 =============================== */\r\n function useOnClickOutside(refs, handler){\r\n   const refsArray = React.useMemo(\r\n     () => (Array.isArray(refs) ? refs : [refs]),\r\n     // refs가 동일 ref 객체를 재사용하므로 이 deps로 충분\r\n     [refs]\r\n   );\r\n   // 최신 handler를 참조하도록 ref로 보관\r\n   const handlerRef = React.useRef(handler);\r\n   React.useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n   React.useEffect(() => {\r\n     const listener = (e) => {\r\n       if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n       handlerRef.current?.(e);\r\n     };\r\n     // click 시점(캡처링)으로: 내부 onClick 먼저 실행되도록\r\n     document.addEventListener('click', listener, true);\r\n     return ()=> document.removeEventListener('click', listener, true);\r\n   }, [refsArray]);\r\n }\r\nfunction Dropdown({ value, items, onChange, placeholder, className }) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);   // 포지션 리렌더 트리거(값은 사용 안 함)\r\n  // 전역 close-all-dropdowns 이벤트 받으면 닫기\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n  // 버튼/메뉴 외부 클릭 시 닫기 (둘 다 제외)\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n  // 열릴 때 버튼 위치 측정 → 고정 포지션으로 포탈 렌더\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = {\r\n      top: rect.bottom + 4,\r\n      left: rect.left,\r\n      width: rect.width,\r\n    };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect();\r\n      if (!r) return;\r\n      menuPos.current = {\r\n        top: r.bottom + 4,\r\n        left: r.left,\r\n        width: r.width,\r\n      };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [open]);\r\n  const selected = items.find((i) => i.value === value);\r\n  const menu = open ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: -4 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: menuPos.current.top,\r\n          left: menuPos.current.left,\r\n          width: menuPos.current.width,\r\n          zIndex: 9999, // 최상단\r\n        }}\r\n        className=\"rounded-xl border bg-white shadow-lg overflow-auto max-h-60\"\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (it.disabled) return;         // 비활성 항목 클릭 무시\r\n                onChange(it.value);\r\n                setOpen(false);\r\n              }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${\r\n                it.disabled ? \"opacity-40 cursor-not-allowed\" : \"hover:bg-gray-50\"\r\n              } ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setOpen((v) => !v)}\r\n        className=\"min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl border px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n      >\r\n        <span className=\"truncate text-sm\">\r\n          {selected ? selected.label : placeholder || \"선택\"}\r\n        </span>\r\n        <span className=\"text-gray-500 text-sm select-none\">\r\n          {open ? <ChevronUp size={16}/> : <ChevronDown size={16}/>}\r\n        </span>\r\n      </button>\r\n      {open && createPortal(menu, document.body)}\r\n    </div>\r\n  );\r\n}\r\nfunction useToasts(){\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg) => {\r\n    const id = uid();\r\n    setToasts(t=>[...t, { id, msg }]);\r\n    setTimeout(()=> setToasts(t=> t.filter(x=>x.id!==id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts(t=> t.filter(x=> x.id!==id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }){\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map(t=> (\r\n          <motion.div key={t.id} initial={{opacity:0, scale:0.98}} animate={{opacity:1, scale:1}} exit={{opacity:0, scale:0.98}} transition={{type:'spring', stiffness:380, damping:28}} className=\"pointer-events-auto overflow-hidden rounded-2xl border shadow-lg bg-amber-50/95 border-amber-200 text-amber-900 backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw]\">\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button className=\"text-sm font-medium text-amber-900/80 hover:text-amber-900 self-center\" onClick={()=>onClose(t.id)} aria-label=\"닫기\">닫기</button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value,\r\n  onChange,          // (number|null)=>void\r\n  min,\r\n  max,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true, // blur 시 빈값을 0(or min)으로 보정할지\r\n  className = \"\",\r\n  inputProps = {},\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clamp = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clamp(n);\r\n  };\r\n  // 휠로 값 바뀌는 사고 방지(선택)\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  return (\r\n    <input\r\n      type=\"number\"                     // ← 스핀/키보드 ↑↓ 유지\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      value={inner}                     // ← \"\" 허용 (빈 입력 유지)\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          onChange?.(null);             // 입력 중 빈값은 null로 보존\r\n          return;\r\n        }\r\n        // number 타입은 브라우저가 숫자형 문자열만 넣어줌(예: \"1\", \"1.2\", \"1e2\")\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (Number.isFinite(num)) {\r\n          onChange?.(allowFloat ? num : Math.trunc(num)); // 입력 중에도 숫자 전달(필요하면 null로 바꿔도 됨)\r\n        } else {\r\n          onChange?.(null);\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);          // blur 시에만 확정/보정\r\n        setInner(n == null ? \"\" : String(n));\r\n        onChange?.(n);\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={className}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n/* =============================== 메인 앱 =============================== */\r\nexport default function LoACoreOptimizer(){\r\n  useEffect(() => {\r\n    document.title = \"로아 아크그리드 젬 장착 헬퍼\";\r\n  }, []);\r\n  const [role, setRole] = useState(\"dealer\");\r\n  const [weights, setWeights] = useState({...DEFAULT_WEIGHTS});\r\n  const [highlightCoreId, setHighlightCoreId] = useState(null);   // 최근 추가 코어 ID\r\n  const [highlightGemId, setHighlightGemId] = useState(null); \r\n  const [cores, setCores] = useState([]);\r\n  const [gems, setGems] = useState([]);\r\n  const { toasts, push, remove } = useToasts();\r\n  \r\nconst moveCoreUp = (index) => setCores(prev => {\r\n  if (index <= 0) return prev;\r\n  const next = [...prev];\r\n  [next[index - 1], next[index]] = [next[index], next[index - 1]];\r\n  return next;\r\n});\r\nconst moveCoreDown = (index) => setCores(prev => {\r\n  if (index >= prev.length - 1) return prev;\r\n  const next = [...prev];\r\n  [next[index + 1], next[index]] = [next[index], next[index + 1]];\r\n  return next;\r\n});\r\n  const { picks: priorityPicks } = useMemo(\r\n    () => optimizeRoundRobinTargets(cores, gems, role, weights, /* perCoreLimit */ 80),\r\n    [cores, gems, role, weights]\r\n  );\r\n  const resetWeights = ()=> setWeights({...DEFAULT_WEIGHTS});\r\n  const addGem = ()=> {\r\n    const id = uid();\r\n    setGems(v => [{ id, will: null, point: null, o1k:\"atk\", o1v:0, o2k:\"add\", o2v:0 }, ...v]);\r\n    setHighlightGemId(id);\r\n  };\r\n  const removeGem = (id)=> {\r\n    setGems(v=> v.filter(g=> g.id!==id));\r\n    if (highlightGemId === id) setHighlightGemId(null);\r\n  };\r\n  const updateGem = (id, patch) => setGems(v => v.map(g => g.id === id ? { ...g, ...patch } : g));\r\n  const addCore = ()=> setCores(cs=>{\r\n    if (cs.length >= 3) { push(\"코어는 최대 3개까지 추가할 수 있어요.\"); return cs; }\r\n    const existing = new Set(cs.map(c=>c.name));\r\n    const nextName = nextAvailableCoreName(existing);\r\n    if (!nextName) { push(\"해/달/별 코어가 모두 추가되어 있어요.\"); return cs; }\r\n    const id = uid();\r\n    setHighlightCoreId(id);\r\n    return [\r\n      { id, name: nextName, grade: \"RELIC\", minThreshold: undefined, enforceMin: false },\r\n      ...cs\r\n    ];\r\n  });\r\n  const removeCore = (id)=> {\r\n    setCores(cs=> cs.length<=0 ? cs : cs.filter(c=> c.id!==id));\r\n    if (highlightCoreId === id) setHighlightCoreId(null);\r\n  };\r\n  const updateCore = (id, patch)=> setCores(cs=>{\r\n    if ('name' in patch) {\r\n      const dup = cs.some(c => c.id !== id && c.name === patch.name);\r\n      if (dup) {\r\n        push(`${patch.name}는 이미 존재하는 코어입니다`);\r\n        return cs; // 변경 취소\r\n      }\r\n    }\r\n    return cs.map(c=> c.id===id? {...c, ...patch}: c);\r\n  });\r\n  // Drag state (for backdrop blur toggle)\r\n  const [dragging, setDragging] = useState(false);\r\n  // DnD: 코어 순서가 곧 우선순위(위쪽이 더 높음)\r\nconst onDragStart = () => {\r\n  requestAnimationFrame(() => setDragging(true));\r\n  // 드래그 시작하면 모든 드롭다운 닫기 이벤트 발송\r\n  const evt = new Event('close-all-dropdowns');\r\n  window.dispatchEvent(evt);\r\n};\r\n const onDragEnd = (result) => {\r\n   requestAnimationFrame(() => setDragging(false));\r\n    if (!result.destination) return;\r\n    setCores(prev => {\r\n      const next = Array.from(prev);\r\n      const [moved] = next.splice(result.source.index, 1);\r\n      next.splice(result.destination.index, 0, moved);\r\n      return next;\r\n    });\r\n  };\r\n  // UI tokens (모바일 최적화 포함)\r\n  const smallFieldBase = \"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const card = \"bg-white rounded-2xl shadow-sm\";\r\n  const chip = \"px-2.5 py-1.5 rounded-xl bg-gray-100 text-xs lg:text-[13px]\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  // 인덱스 표기: 코어(위→1), 젬(아래→1)\r\n  const displayIndexCore = (idx) => idx + 1;\r\n  const displayIndexGem = (idx, total) => total - idx;\r\n  // ===== Self-tests (non-blocking) =====\r\n  useEffect(() => {\r\n    function runSelfTests(){\r\n      try {\r\n        const w = sanitizeWeights({ atk: 2, add: \"3\", boss: -1 });\r\n        console.assert(w.atk === 2 && w.add === 3 && w.boss === 1, \"sanitizeWeights failed\");\r\n        const gem = { id:\"t1\", will:1, point:1, o1k:\"atk\", o1v:2, o2k:\"brand\", o2v:3 };\r\n        console.assert(scoreGemForRole(gem, \"dealer\", w) === 2 * w.atk, \"scoreGemForRole dealer failed\");\r\n        console.assert(scoreGemForRole(gem, \"support\", w) === 3 * (w.brand ?? 1), \"scoreGemForRole support failed\");\r\n        console.assert(thresholdsHit(\"RELIC\", 20).includes(20) && thresholdsHit(\"RELIC\", 9).length === 0, \"thresholdsHit failed\");\r\n        const cA = scoreCombo([gem], \"RELIC\", \"dealer\", w);\r\n        const cB = scoreCombo([gem, { ...gem, id:\"t2\", will:0, point:10 }], \"RELIC\", \"dealer\", w);\r\n        console.assert(cB.score >= cA.score, \"scoreCombo monotonicity failed\");\r\n        console.log(\"✅ Self-tests passed\");\r\n      } catch (e) {\r\n        console.warn(\"❌ Self-tests encountered an error\", e);\r\n      }\r\n    }\r\n    runSelfTests();\r\n  }, []);\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{\r\n      backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\",\r\n      backgroundAttachment: 'fixed'\r\n    }}>\r\n      {/* 전역 프라이머리 컬러 토큰 & 유틸 */}\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .btn-primary{ background: #000000; color:#fff; border:none; }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n        .ring-primary:focus{ outline:none; box-shadow:0 0 0 2px rgba(163,153,242,.35); }\r\n      `}</style>\r\n      {/* 모든 버튼 커서 포인터 */}\r\n      <style>{`button{cursor:pointer}`}</style>\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        {/* 타이틀 + 포지션(우측) */}\r\n        <section className=\"py-2 lg:py-3\">\r\n          <div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n            <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">로아 아크그리드 젬 장착 도우미</h1>\r\n            <div className=\"flex gap-2 w-auto ml-auto lg:ml-0\">\r\n              <button onClick={()=>setRole('dealer')} className={`min-w-[80px] h-10 inline-flex items-center justify-center gap-1 px-3 rounded-xl w-full lg:w-auto ${role==='dealer'? 'bg-white':'bg-white opacity-50'}`}>\r\n                딜러\r\n              </button>\r\n              <button onClick={()=>setRole('support')} className={`min-w-[80px] h-10 inline-flex items-center justify-center gap-1 px-3 rounded-xl w-full lg:w-auto ${role==='support'? 'bg-white':'bg-white opacity-50'}`}>\r\n                서포터\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 코어 입력 (DnD 우선순위) */}\r\n        <section className={`${card} p-4 lg:p-6 !mt-2 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>코어 입력</h2>\r\n            <div className=\"flex items-center gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90 ring-primary\" onClick={addCore} aria-label=\"코어 추가\"><Plus size={16}/><span className=\"hidden lg:inline\"> 코어 추가</span></button>\r\n            </div>\r\n          </div>\r\n          <p className=\"hidden lg:block text-xs text-gray-600\">드래그 앤 드롭으로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <p className=\"block lg:hidden text-xs text-gray-600\">화살표로 순서를 바꾸세요. <b>우선순위가 높은 항목을 1번(맨 위)으로 배치하세요.</b></p>\r\n          <div className=\"mt-3\">\r\n            <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"cores-droppable\" ignoreContainerClipping={true}>\r\n                {(provided)=> (\r\n                  <div ref={provided.innerRef} {...provided.droppableProps} className=\"flex flex-col gap-3\">\r\n                    {cores.map((c, idx)=> {\r\n                      const supply = CORE_SUPPLY[c.grade];\r\n                      const targetItems = [{ value: '', label: '(선택 안 함)' }].concat(\r\n                        CORE_THRESHOLDS[c.grade].map(v => ({ value: String(v), label: `${v}P 이상` }))\r\n                      );\r\n                      const takenNames = new Set(cores.filter(x=>x.id!==c.id).map(x=>x.name));\r\n                      const coreNameItems = CORE_NAME_ITEMS.map(it => ({\r\n                        ...it,\r\n                        disabled: takenNames.has(it.value)\r\n                      }));\r\n                      const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n                      return (\r\n                        <PortalAwareDraggable key={c.id} draggableId={c.id} index={idx}>\r\n                          {(prov)=> (\r\n                            <div ref={prov.innerRef} {...prov.draggableProps} {...prov.dragHandleProps} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-end border rounded-xl p-3 bg-white overflow-visible ${c.id===highlightCoreId ? 'LoA-highlight' : ''}`} style={prov.draggableProps.style}>\r\n                              {/* Index badge - 모바일 좌측 정렬, 데스크톱 중앙 정렬 */}\r\n                              <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl self-start lg:self-center\">#{displayIndexCore(idx)}</div>\r\n                              <div className=\"flex flex-col min-w-[120px] w-full lg:w-40\">\r\n                                <label className={labelCls}>코어 종류</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.name} onChange={(val)=>updateCore(c.id,{name: val})} items={coreNameItems} placeholder=\"코어명\"/>\r\n                              </div>\r\n                              <div className=\"flex flex-col min-w-[160px] w-full lg:w-auto\">\r\n                                <label className={labelCls}>코어 등급</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={c.grade} onChange={(val)=>updateCore(c.id,{grade: /** @type {CoreGrade} */(val)})} items={GRADES.map(g=>({value:g, label: CORE_LABEL[g]}))} placeholder=\"코어 등급\"/>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>공급 의지력</label>\r\n                                <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center\"><span className=\"text-primary font-semibold\">{supply}</span></div>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <label className={labelCls}>목표 구간</label>\r\n                                <Dropdown className=\"w-full lg:w-40\" value={String(c.minThreshold ?? '')} onChange={(val)=>{ if(val) updateCore(c.id,{minThreshold:Number(val), enforceMin:true}); else updateCore(c.id,{minThreshold:undefined, enforceMin:false}); }} items={targetItems} placeholder=\"구간\"/>\r\n                              </div>\r\n                              <div className=\"flex flex-col w-full lg:w-auto\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <input id={`enf-${c.id}`} type=\"checkbox\" className=\"accent-primary\" checked={c.enforceMin} onChange={(e)=>updateCore(c.id,{enforceMin:e.target.checked})}/>\r\n                                  <label htmlFor={`enf-${c.id}`} className=\"text-sm\">목표 구간 강제</label>\r\n                                </div>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">선택 안 함이면 내부적으로 <br className=\"hidden lg:block\"/>최소 구간 <b className=\"text-primary\">{minOfGrade}P</b>을 기본 목표로 적용합니다.</p>\r\n                              </div>\r\n                              {/* 모바일: 순서 버튼 + 삭제 버튼 묶음 */}\r\n                              <div className=\"lg:ml-auto lg:static absolute top-2 right-2 flex items-center gap-1\">\r\n                                <div className=\"hidden lg:hidden\" />\r\n                                <div className=\"flex lg:hidden flex-row gap-1 mr-1\">\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={()=>moveCoreUp(idx)} aria-label=\"위로\"><ChevronUp size={16}/></button>\r\n                                  <button className=\"h-8 w-8 rounded-lg border inline-flex items-center justify-center bg-white\" onClick={()=>moveCoreDown(idx)} aria-label=\"아래로\"><ChevronDown size={16}/></button>\r\n                                </div>\r\n                                <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={()=>removeCore(c.id)} disabled={cores.length<=0} aria-label=\"코어 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </PortalAwareDraggable>\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {cores.length===0 && <div className=\"text-sm text-gray-700 p-2 text-center\">코어를 추가하세요. (최대 3개의 코어까지 추가할 수 있습니다)</div>}\r\n          </div>\r\n        </section>\r\n        {/* 젬 입력 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3 mb-3\">\r\n            <h2 className={sectionTitle}>젬 입력</h2>\r\n            <div className=\"flex gap-2 ml-auto whitespace-nowrap\">\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={addGem} aria-label=\"젬 추가\"><Plus size={16}/><span className=\"hidden lg:inline\"> 젬 추가</span></button>\r\n              <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={()=>setGems([])} aria-label=\"전체 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 전체 삭제</span></button>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gems.map((g,idx)=> (\r\n              <div key={g.id} className={`relative flex flex-col lg:flex-row lg:flex-nowrap gap-2 lg:gap-3 items-stretch lg:items-center border rounded-xl p-3 overflow-visible min-w-0 bg-white ${g.id===highlightGemId ? 'LoA-highlight' : ''}`}>\r\n                <div className=\"h-10 w-10 flex items-center justify-center text-base font-semibold text-gray-800 bg-gray-100 rounded-xl flex-none\">#{displayIndexGem(idx, gems.length)}</div>\r\n                {/* 필요 의지력 + 포인트 */}\r\n                <div className=\"w-full lg:w-auto flex flex-row gap-2 lg:gap-3 flex-1 lg:flex-none\">\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>필요 의지력</label>\r\n                    <NumberInput\r\n                      value={g.will }\r\n                      onChange={(v)=>updateGem(g.id,{will: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title:\"의지력\", placeholder:\"의지력\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col flex-1 min-w-0 lg:w-auto lg:flex-none\">\r\n                    <label className={labelCls}>(질서/혼돈)포인트</label>\r\n                    <NumberInput\r\n                      value={g.point }\r\n                      onChange={(v)=>updateGem(g.id,{point: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className={`${smallFieldBase} w-full lg:w-24`}\r\n                      inputProps={{ title:\"포인트\", placeholder:\"포인트\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* 옵션 1 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 1</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o1k} onChange={(val)=>updateGem(g.id,{o1k: /** @type {OptionKey} */(val)})} items={OPTIONS.map(k=> ({ value:k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\"/>\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o1v }\r\n                      onChange={(v)=>updateGem(g.id,{o1v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder:\"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* 옵션 2 */}\r\n                <div className=\"flex items-end gap-2 w-full lg:w-auto lg:flex-none min-w-0\">\r\n                  <div className=\"flex-1 lg:flex-none min-w-0\">\r\n                    <label className={labelCls}>옵션 2</label>\r\n                    <Dropdown className=\"w-full lg:w-44\" value={g.o2k} onChange={(val)=>updateGem(g.id,{o2k: /** @type {OptionKey} */(val)})} items={OPTIONS.map(k=> ({ value:k, label: OPTION_LABELS[k] }))} placeholder=\"옵션 선택\"/>\r\n                  </div>\r\n                  <div className=\"flex-1 lg:flex-none\">\r\n                    <label className={labelCls}>수치</label>\r\n                    <NumberInput\r\n                      value={g.o2v }\r\n                      onChange={(v)=>updateGem(g.id,{o2v: v })}\r\n                      min={0}\r\n                      max={9}\r\n                      step={1}\r\n                      allowFloat={false}\r\n                      className=\"h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white w-full lg:w-20\"\r\n                      inputProps={{ placeholder:\"0\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"lg:static absolute top-2 right-2 lg:top-auto lg:right-auto lg:ml-auto w-auto lg:flex-none\">\r\n                  <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border-0 lg:border text-red-600 inline-flex items-center justify-center gap-2\" onClick={()=>removeGem(g.id)} aria-label=\"젬 삭제\"><Trash2 size={16}/><span className=\"hidden lg:inline\"> 삭제</span></button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {gems.length===0 && <div className=\"text-sm text-gray-700 p-2 text-center\">젬을 추가하세요.</div>}\r\n          </div>\r\n        </section>\r\n        {/* 유효옵션 가중치 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <div className=\"flex items-center gap-2 lg:gap-3\">\r\n            <h2 className={sectionTitle}>유효옵션 가중치</h2>\r\n            <button className=\"h-10 w-10 lg:w-auto px-0 lg:px-3 rounded-xl border ml-auto whitespace-nowrap inline-flex items-center justify-center gap-2 bg-white hover:bg-white/90\" onClick={resetWeights} aria-label=\"가중치 초기화\"><RotateCcw size={16}/><span className=\"hidden lg:inline\"> 가중치 초기화</span></button>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <div className=\"grid grid-cols-2 gap-2 lg:flex lg:flex-nowrap text-sm min-w-0\">\r\n              {OPTIONS.map((k) => (\r\n                <div key={k} className=\"bg-gray-50 border rounded-xl px-2 py-2 w-full lg:w-1/6 min-w-[120px]\">\r\n                  <label className={labelCls}>{OPTION_LABELS[k]}</label>\r\n                  <NumberInput\r\n                    value={weights[k] }\r\n                    onChange={(v)=> setWeights((w)=> ({ ...w, [k]: (v ) }))}\r\n                    min={0}\r\n                    max={5}\r\n                    step={0.0001}\r\n                    allowFloat={true}\r\n                    className=\"h-10 w-full px-2 rounded-md border bg-white focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 결과 */}\r\n        <section className={`${card} p-4 lg:p-6 ${dragging ? '' : 'backdrop-blur'}`}>\r\n          <h2 className={sectionTitle}>결과</h2>\r\n          <p className=\"text-xs text-gray-600 mt-2\">코어 1개당 최대 <b>젬 4개</b>까지 장착할 수 있습니다.</p>\r\n          <div className=\"space-y-4 mt-2\">\r\n            {cores.map((c,i)=> {\r\n              const supply = CORE_SUPPLY[c.grade];\r\n              const pick = priorityPicks?.[i];\r\n              const hasResult = !!(pick && pick.list && pick.list.length>0);\r\n              const minOfGrade = Math.min(...CORE_THRESHOLDS[c.grade]);\r\n              return (\r\n                <div key={c.id} className=\"border rounded-xl p-3 bg-white\">\r\n                  <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n                    <div className=\"text-base font-semibold\">\r\n                      {c.name} <span className=\"text-sm text-gray-500\">({CORE_LABEL[c.grade]})</span>\r\n                    </div>\r\n                    {hasResult && (\r\n                      <div className=\"flex flex-wrap gap-2 items-center text-[12px] lg:text-[13px]\">\r\n                        <div className={chip}>총 의지력 <span className=\"font-semibold\">{String(pick.totalWill)}</span> / 공급 <span>{String(supply)}</span> (<span>나머지 {String(supply - pick.totalWill)}</span>)</div>\r\n                        <div className={chip}>총 포인트 <span className=\"font-semibold\">{String(pick.totalPoint)}</span></div>\r\n                        {(() => {\r\n                          const maxThr = pick.thr.length ? Math.max(...pick.thr) : null;\r\n                          return (\r\n                            <div className={chip}>\r\n                              달성 구간 <span className=\"font-semibold\">{maxThr != null ? String(maxThr) : \"없음\"}</span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        <div className={chip}>유효 옵션 합(<span className=\"font-semibold\">{role==='dealer'?\"딜러\":\"서폿\"}</span>) <span className=\"font-semibold text-primary\">{String(pick.roleSum.toFixed(4))}</span></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {!hasResult ? (\r\n                    <div className=\"text-sm text-gray-700 mt-2\">\r\n                      결과가 없습니다. (이 코어에 배정 가능한 조합이 없거나, 목표 구간을 만족하지 못합니다.{c.minThreshold == null ? ` / 최소 ${minOfGrade}P 자동 적용중` : \"\"})\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      {/* Desktop table */}\r\n                      <div className=\"hidden lg:block overflow-x-auto mt-2\">\r\n                        <table className=\"min-w-full text-sm\">\r\n                          <thead>\r\n                            <tr className=\"text-left text-gray-500\">\r\n                              <th className=\"px-2 py-2\">선택</th>\r\n                              <th className=\"px-2 py-2\">의지력</th>\r\n                              <th className=\"px-2 py-2\">포인트</th>\r\n                              <th className=\"px-2 py-2\">옵션1</th>\r\n                              <th className=\"px-2 py-2\">옵션2</th>\r\n                              <th className=\"px-2 py-2\">유효합</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pick.list.map(g=> {\r\n                              const gi = gems.findIndex(x=>x.id===g.id);\r\n                              const disp = displayIndexGem(gi, gems.length);\r\n                              return (\r\n                                <tr key={g.id} className=\"border-t\">\r\n                                  <td className=\"px-2 py-2\">#{String(disp)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.will ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{String(g.point ?? 0)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o1k]} {String(g.o1v)}</td>\r\n                                  <td className=\"px-2 py-2\">{OPTION_LABELS[g.o2k]} {String(g.o2v)}</td>\r\n                                  <td className=\"px-2 py-2 text-primary\">{String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(4))}</td>\r\n                                </tr>\r\n                              );\r\n                            }) }\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      {/* Mobile cards */}\r\n                      <div className=\"lg:hidden mt-2 space-y-2\">\r\n                        {pick.list.map(g => {\r\n                          const gi = gems.findIndex(x=>x.id===g.id);\r\n                          const disp = displayIndexGem(gi, gems.length);\r\n                          return (\r\n                            <div key={g.id} className=\"rounded-xl border p-3 bg-white\">\r\n                              <div className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"font-medium\">#{String(disp)}</div>\r\n                                <div className=\"text-xs text-primary\">유효합 {String(scoreGemForRole(g, role, sanitizeWeights(weights)).toFixed(2))}</div>\r\n                              </div>\r\n                              <div className=\"mt-2 grid grid-cols-2 gap-x-3 gap-y-1 text-sm\">\r\n                                <div className=\"text-gray-500\">의지력</div>\r\n                                <div>{String(g.will)}</div>\r\n                                <div className=\"text-gray-500\">포인트</div>\r\n                                <div className=\"text-primary\">{String(g.point)}</div>\r\n                                <div className=\"text-gray-500\">옵션1</div>\r\n                                <div>{OPTION_LABELS[g.o1k]} {String(g.o1v)}</div>\r\n                                <div className=\"text-gray-500\">옵션2</div>\r\n                                <div>{OPTION_LABELS[g.o2k]} {String(g.o2v)}</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <ToastStack toasts={toasts} onClose={remove}/>\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState, useLayoutEffect, useCallback } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Edit3, Save, RotateCcw, RefreshCcw, ChevronDown, ChevronUp, Undo2, Redo2 } from \"lucide-react\";\r\nimport KakaoAdfit from \"./KakaoAdfit\";\r\nimport './LoACoreOptimizer.css';\r\n\r\n  const USE_ANTITHETIC = true;   // 저분산 고정 ON\r\n  const AUTO_SCALE_RARE = true;  // 자동 스케일업 고정 ON\r\n/* =========================\r\n   결정적 RNG 유틸리티 (원본 유지)\r\n   ========================= */\r\nfunction hash32(str) {\r\n  let h = 2166136261 >>> 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    h ^= str.charCodeAt(i);\r\n    h = Math.imul(h, 16777619);\r\n  }\r\n  return h >>> 0;\r\n}\r\nfunction makeDeterministicSeed(obj) {\r\n  const json = JSON.stringify(obj);\r\n  return hash32(json) || 1;\r\n}\r\nfunction makeRNG(seed) {\r\n  let s = seed >>> 0;\r\n  return function rand() {\r\n    s ^= s << 13;\r\n    s >>>= 0;\r\n    s ^= s >>> 17;\r\n    s >>>= 0;\r\n    s ^= s << 5;\r\n    s >>>= 0;\r\n    return (s >>> 0) / 4294967296;\r\n  };\r\n}\r\n/* =========================\r\n   등급/젬타입/상수 (원본 유지)\r\n   ========================= */\r\nconst GRADE = { LEGEND_MIN: 4, LEGEND_MAX: 15, RELIC_MIN: 16, RELIC_MAX: 18, ANCIENT_MIN: 19 };\r\nconst GEM_TYPES = {\r\n  \"질서-안정\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"질서-견고\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"질서-불변\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n  \"혼돈-침식\": { baseNeed: 8, attack: [\"공격력\", \"추가 피해\"], support: [\"낙인력\", \"아군 피해 강화\"] },\r\n  \"혼돈-왜곡\": { baseNeed: 9, attack: [\"공격력\", \"보스 피해\"], support: [\"아군 피해 강화\", \"아군 공격 강화\"] },\r\n  \"혼돈-붕괴\": { baseNeed: 10, attack: [\"추가 피해\", \"보스 피해\"], support: [\"낙인력\", \"아군 공격 강화\"] },\r\n};\r\nconst RARITY_ATTEMPTS = { 고급: 5, 희귀: 7, 영웅: 9 };\r\nconst RARITY_BASE_REROLLS = { 고급: 0, 희귀: 1, 영웅: 2 };\r\nconst MIN_STAT = 1;\r\nconst MAX_STAT = 5;\r\nconst GOLD_PER_ATTEMPT = 900;\r\n// 고정 TRIALS 대신 opts로 제어 (기본값은 적당히 큼)\r\n// maxTrials: 최대 시뮬 회수, epsilon: 95% CI 반폭(절대값), batch: 배치 크기\r\n// note: successProb는 베르누이 평균이라 표준오차를 정확히 계산 가능\r\nconst clamp = (v, lo, hi) => Math.max(lo, Math.min(hi, v));\r\n// % 포맷: 원래 값 그대로, 소수점 5자리 고정\r\nfunction fmtProbSmart(p /*, ci */) {\r\n  const x = Number(p);\r\n  if (!Number.isFinite(x)) return \"0.00000%\";\r\n  return (x * 100).toFixed(5) + \"%\";\r\n}\r\n\r\n// 레거시 호환\r\nconst fmtProb = (p) => fmtProbSmart(p);\r\nconst fmtNum = (n) => n.toLocaleString();\r\n\r\n// 확률 추정기: mle(기본), laplace, jeffreys\r\nfunction estimateRate(successes, n, method = \"mle\") {\r\n  if (n <= 0) return 0;\r\n  // ✅ 경계 스냅: 전부 성공이면 1(=100%)로 고정\r\n  if (successes >= n) return 1; \r\n  switch (method) {\r\n    case \"laplace\":   // Beta(1,1) 사전 → (s+1)/(n+2)\r\n      return (successes + 1) / (n + 2);\r\n    case \"jeffreys\":  // Beta(0.5,0.5) 사전 → (s+0.5)/(n+1)\r\n      return (successes + 0.5) / (n + 1);\r\n    case \"mle\":\r\n    default:\r\n      return successes / n;\r\n  }\r\n}\r\n\r\nconst OFFICIAL_RNG = true;\r\n/* ===== 시뮬레이션 횟수 옵션/헬퍼 ===== */\r\nconst SIM_OPTIONS = [\r\n  { value: 1000, label: \"1,000회 (빠름)\" },\r\n  { value: 5000, label: \"5,000회 (보통)\" },\r\n  { value: 10000, label: \"10,000회 (추천)\" },\r\n  { value: 50000, label: \"50,000회 (정밀)\" },\r\n];\r\n\r\n\r\nfunction wilsonCI(p, n, z = 1.96) {\r\n  const denom = 1 + (z*z)/n;\r\n  const center = (p + (z*z)/(2*n)) / denom;\r\n  const margin = (z / denom) * Math.sqrt((p*(1-p)/n) + (z*z)/(4*n*n));\r\n  return { low: Math.max(0, center - margin), high: Math.min(1, center + margin) };\r\n}\r\n\r\n// 0 successes일 때의 95% 상한 (Clopper–Pearson 근사)\r\nfunction zeroSuccessUpperBound(n, alpha = 0.05) {\r\n  return 1 - Math.pow(alpha, 1/n); // ~= 3/n\r\n}\r\n\r\n// 반복 수에 따른 수렴 기준(95% CI 반폭)과 배치 크기\r\nconst epsilonByTrials = (n) => {\r\n  if (n >= 50000) return 0.002;   // ±0.2%p\r\n  if (n >= 10000) return 0.0035;  // ±0.35%p\r\n  if (n >= 5000) return 0.005;   // ±0.5%p\r\n  return 0.007;                   // ±0.7%p\r\n};\r\nconst batchByTrials = (n) => {\r\n  if (n >= 50000) return 1000;\r\n  if (n >= 10000) return 800;\r\n  if (n >= 5000) return 600;\r\n  return 400;\r\n};\r\n/* =========================\r\n   효과명/포지션/스코어/목표 (원본 유지)\r\n   ========================= */\r\nfunction allowedEffectNames(gemKey, pos) {\r\n  const g = GEM_TYPES[gemKey];\r\n  if (!g) return [];\r\n  if (pos === \"공격형\") return g.attack;\r\n  if (pos === \"지원형\") return g.support;\r\n  return [...g.attack, ...g.support];\r\n}\r\nconst totalScore = (s) => s.eff + s.pts + s.aLvl + s.bLvl;\r\nfunction gradeOf(score) {\r\n  if (score >= GRADE.ANCIENT_MIN) return \"고대\";\r\n  if (score >= GRADE.RELIC_MIN && score <= GRADE.RELIC_MAX) return \"유물\";\r\n  if (score >= GRADE.LEGEND_MIN && score <= GRADE.LEGEND_MAX) return \"전설\";\r\n  return \"등급 미만\";\r\n}\r\nfunction meetsTargetByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  const base = s.eff >= t.eff && s.pts >= t.pts;\r\n  if (pos === \"상관 없음\") return base;\r\n  // 이름 기반 목표: 유효풀(공격형/서폿) 내에서만 선택 가능하므로 UI가 보장하지만,\r\n  // 안전하게 한 번 더 보정\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const match = (lineName, lineLvl, targetName, lvlReq) =>\r\n    isAny(targetName) ? (pool.includes(lineName) && lineLvl >= lvlReq)\r\n      : (lineName === targetName && lineLvl >= lvlReq);\r\n  if (abMode === \"ANY_ONE\") {\r\n    // 한 개 목표만 의미: (A 라인 or B 라인)가 \"목표 이름 A\" + 레벨≥t.aLvl\r\n    const okA = TA && (match(s.aName, s.aLvl, TA, t.aLvl) || match(s.bName, s.bLvl, TA, t.aLvl));\r\n    return base && !!okA;\r\n  } else {\r\n    // BOTH: 두 개 목표 모두 충족 (순서 상관없이 A/B에 배치되기만 하면 됨)\r\n    if (!TA || !TB) return false;\r\n    return base && (\r\n      (match(s.aName, s.aLvl, TA, t.aLvl) && match(s.bName, s.bLvl, TB, t.bLvl)) ||\r\n      (match(s.aName, s.aLvl, TB, t.bLvl) && match(s.bName, s.bLvl, TA, t.aLvl))\r\n    );\r\n  }\r\n}\r\nfunction needDistanceByMode(pos, abMode, s, t, gemKey, tgtNames) {\r\n  // 기본(의지력 효율/포인트) 부족분\r\n  let sum = Math.max(0, t.eff - s.eff) + Math.max(0, t.pts - s.pts);\r\n  if (pos === \"상관 없음\") return sum;\r\n  const pool = allowedEffectNames(gemKey, pos);\r\n  const isAny = (nm) => nm === \"상관없음\";\r\n  const TA = isAny(tgtNames?.aName) ? \"상관없음\" : (pool.includes(tgtNames?.aName) ? tgtNames?.aName : null);\r\n  const TB = isAny(tgtNames?.bName) ? \"상관없음\" : (pool.includes(tgtNames?.bName) ? tgtNames?.bName : null);\r\n  const levelCostTo = (curName, curLvl, targetName, targetLvl) => {\r\n    if (isAny(targetName)) {\r\n      const renameCost = pool.includes(curName) ? 0 : 1;\r\n      return renameCost + Math.max(0, targetLvl - curLvl);\r\n    }\r\n    return (curName === targetName ? 0 : 1) + Math.max(0, targetLvl - curLvl);\r\n  };\r\n  if (abMode === \"ANY_ONE\") {\r\n    if (!TA) return Number.POSITIVE_INFINITY;\r\n    // A라인을 TA로 맞추기 vs B라인을 TA로 맞추기\r\n    const c1 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl);\r\n    const c2 = levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c1, c2);\r\n  } else {\r\n    if (!TA || !TB) return Number.POSITIVE_INFINITY;\r\n    // (A→TA + B→TB) vs (A→TB + B→TA) 중 더 싼 배치\r\n    const c11 = levelCostTo(s.aName, s.aLvl, TA, t.aLvl) + levelCostTo(s.bName, s.bLvl, TB, t.bLvl);\r\n    const c22 = levelCostTo(s.aName, s.aLvl, TB, t.bLvl) + levelCostTo(s.bName, s.bLvl, TA, t.aLvl);\r\n    sum += Math.min(c11, c22);\r\n  }\r\n  return sum;\r\n}\r\n/* =========================\r\n   가중치/라벨/슬롯/적용 (원본 유지)\r\n   ========================= */\r\nfunction minusAppears_TABLE(v) { return v !== 1; }\r\nfunction buildWeightedItems(state, attemptsLeft, pos, gemKey, costAddRate) {\r\n  const s = state;\r\n  const items = [];\r\n  if (s.eff < 5) items.push({ slot: { kind: \"EFF\", delta: 1 }, w: 11.65 });\r\n  if (s.eff <= 3) items.push({ slot: { kind: \"EFF\", delta: 2 }, w: 4.4 });\r\n  if (s.eff <= 2) items.push({ slot: { kind: \"EFF\", delta: 3 }, w: 1.75 });\r\n  if (s.eff <= 1) items.push({ slot: { kind: \"EFF\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.eff)) items.push({ slot: { kind: \"EFF\", delta: -1 }, w: 3.0 });\r\n  if (s.pts < 5) items.push({ slot: { kind: \"PTS\", delta: 1 }, w: 11.65 });\r\n  if (s.pts <= 3) items.push({ slot: { kind: \"PTS\", delta: 2 }, w: 4.4 });\r\n  if (s.pts <= 2) items.push({ slot: { kind: \"PTS\", delta: 3 }, w: 1.75 });\r\n  if (s.pts <= 1) items.push({ slot: { kind: \"PTS\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.pts)) items.push({ slot: { kind: \"PTS\", delta: -1 }, w: 3.0 });\r\n  if (s.aLvl < 5) items.push({ slot: { kind: \"A_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.aLvl <= 3) items.push({ slot: { kind: \"A_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.aLvl <= 2) items.push({ slot: { kind: \"A_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.aLvl <= 1) items.push({ slot: { kind: \"A_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.aLvl)) items.push({ slot: { kind: \"A_LVL\", delta: -1 }, w: 3.0 });\r\n  if (s.bLvl < 5) items.push({ slot: { kind: \"B_LVL\", delta: 1 }, w: 11.65 });\r\n  if (s.bLvl <= 3) items.push({ slot: { kind: \"B_LVL\", delta: 2 }, w: 4.4 });\r\n  if (s.bLvl <= 2) items.push({ slot: { kind: \"B_LVL\", delta: 3 }, w: 1.75 });\r\n  if (s.bLvl <= 1) items.push({ slot: { kind: \"B_LVL\", delta: 4 }, w: 0.45 });\r\n  if (minusAppears_TABLE(s.bLvl)) items.push({ slot: { kind: \"B_LVL\", delta: -1 }, w: 3.0 });\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\"); // 역할군 풀을 쓰려면 pos, 전체풀 쓰려면 \"상관 없음\"\r\n  const canAChange = names.filter((n) => n !== s.bName && n !== s.aName).length > 0;\r\n  const canBChange = names.filter((n) => n !== s.aName && n !== s.bName).length > 0;\r\n  if (canAChange) items.push({ slot: { kind: \"A_CHANGE\" }, w: 3.25 });\r\n  if (canBChange) items.push({ slot: { kind: \"B_CHANGE\" }, w: 3.25 });\r\n  if (attemptsLeft > 1) {\r\n    if (costAddRate !== 1) items.push({ slot: { kind: \"COST\", mod: 1 }, w: 1.75 });\r\n    if (costAddRate !== -1) items.push({ slot: { kind: \"COST\", mod: -1 }, w: 1.75 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 1 }, w: 2.5 });\r\n    items.push({ slot: { kind: \"REROLL_PLUS\", amount: 2 }, w: 0.75 });\r\n  }\r\n  items.push({ slot: { kind: \"HOLD\" }, w: 1.75 });\r\n  return items;\r\n}\r\nfunction slotToPrettyLabel(slot, s) {\r\n  switch (slot.kind) {\r\n    case \"EFF\": return `의지력 효율 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"PTS\": return `포인트 ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_LVL\": return `${s.aName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"B_LVL\": return `${s.bName} Lv. ${slot.delta > 0 ? \"+\" + slot.delta : \"-1\"}`;\r\n    case \"A_CHANGE\": return `${s.aName} 효과 변경`;\r\n    case \"B_CHANGE\": return `${s.bName} 효과 변경`;\r\n    case \"COST\": return slot.mod === 1 ? \"가공 비용 +100% 증가\" : \"가공 비용 -100% 감소\";\r\n    case \"HOLD\": return \"가공 상태 유지\";\r\n    case \"REROLL_PLUS\": return `다른 항목 보기 ${slot.amount === 2 ? \"+2회\" : \"+1회\"}`;\r\n    default: return \"\";\r\n  }\r\n}\r\nfunction labelToSlot(label, s) {\r\n  label = label.trim();\r\n  const num = (t) => (t.includes(\"-1\") ? -1 : parseInt(t.replace(/[^0-9]/g, \"\"), 10) || 1);\r\n  if (label.startsWith(\"의지력 효율\")) return { kind: \"EFF\", delta: num(label) };\r\n  if (label.startsWith(\"포인트\")) return { kind: \"PTS\", delta: num(label) };\r\n  if (label.startsWith(s.aName + \" \")) return label.includes(\"변경\") ? { kind: \"A_CHANGE\" } : { kind: \"A_LVL\", delta: num(label) };\r\n  if (label.startsWith(s.bName + \" \")) return label.includes(\"변경\") ? { kind: \"B_CHANGE\" } : { kind: \"B_LVL\", delta: num(label) };\r\n  if (label.startsWith(\"가공 비용\")) return { kind: \"COST\", mod: label.includes(\"+100%\") ? 1 : -1 };\r\n  if (label.startsWith(\"가공 상태 유지\")) return { kind: \"HOLD\" };\r\n  if (label.startsWith(\"다른 항목 보기\")) return { kind: \"REROLL_PLUS\", amount: label.includes(\"+2\") ? 2 : 1 };\r\n  return null;\r\n}\r\nfunction applySlot(gemKey, pos, s, slot, costAddRate, rngFn) {\r\n  const rng = typeof rngFn === \"function\" ? rngFn : Math.random;\r\n  let next = { ...s };\r\n  const goldThisAttempt = GOLD_PER_ATTEMPT * (costAddRate === -1 ? 0 : costAddRate === 1 ? 2 : 1);\r\n  let nextRate = 0;\r\n  let rerollDelta = 0;\r\n  const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n  switch (slot.kind) {\r\n    case \"EFF\": next.eff = clamp(next.eff + slot.delta, 0, MAX_STAT); break;\r\n    case \"PTS\": next.pts = clamp(next.pts + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_LVL\": next.aLvl = clamp(next.aLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"B_LVL\": next.bLvl = clamp(next.bLvl + slot.delta, 0, MAX_STAT); break;\r\n    case \"A_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.bName && n !== next.aName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.aName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"B_CHANGE\": {\r\n      const pool = names.filter((n) => n !== next.aName && n !== next.bName);\r\n      if (pool.length) {\r\n        const pick = pool[Math.floor(rng() * pool.length)];\r\n        next.bName = pick;\r\n      }\r\n      break;\r\n    }\r\n    case \"COST\": nextRate = slot.mod; break;\r\n    case \"HOLD\": break;\r\n    case \"REROLL_PLUS\": rerollDelta += slot.amount; break;\r\n    default: break;\r\n  }\r\n  return { next, goldThisAttempt, nextRate, rerollDelta };\r\n}\r\n/* =========================\r\n   시뮬레이션 (원본 유지)\r\n   ========================= */\r\nconst ZERO_VALUE = { successProb: 0, legendProb: 0, relicProb: 0, ancientProb: 0, expectedGold: 0 };\r\n// ✅ 저분산(안티테틱) + 희귀사건 자동 스케일업(rare-guard) 버전\r\nfunction evaluateFromSimulation(\r\n  gemKey, pos, abMode, start, target, policy, attemptsLeft, rerolls, costAddRate, unlockedReroll, selectedFirstFour, seed, tgtNames, opts = {}\r\n) {\r\n  const {\r\n    maxTrials = 50000,\r\n    epsilon = 0.002,\r\n    batch = 1000,\r\n    minTrials = Math.min(10000, maxTrials),\r\n    estimator = \"jeffreys\",\r\n    // ⬇️ 신규 옵션\r\n    useAntithetic = true,          // 저분산(권장): 안티테틱 페어 사용\r\n    autoScaleRare = true,          // 희귀사건 가드\r\n    rareTargetSuccesses = 30,      // 희귀사건 시 확보할 성공 표본 수 목표\r\n    rareMaxTrials = 200000,        // 가드가 늘릴 수 있는 최대 상한\r\n  } = opts;\r\n\r\n  // 의도 동일 (그대로)\r\n  const desirability = (s) => needDistanceByMode(pos, abMode, s, target, gemKey, tgtNames);\r\n\r\n  // ▶︎ 한 회 시뮬레이션 (특정 난수 발생기 rand를 주입)\r\n  const simOnce = (rand) => {\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rand() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n\r\n    let s = { ...start };\r\n    let gold = 0;\r\n    let left = attemptsLeft;\r\n    let rrs = rerolls;\r\n    let unlocked = unlockedReroll;\r\n    let rate = costAddRate;\r\n    let first = true;\r\n\r\n    if (policy === \"STOP_ON_SUCCESS\" &&\r\n      meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) {\r\n      const score = totalScore(s);\r\n      const g = gradeOf(score);\r\n      return {\r\n        successProb: 1,\r\n        legendProb: g === \"전설\" ? 1 : 0,\r\n        relicProb: g === \"유물\" ? 1 : 0,\r\n        ancientProb: g === \"고대\" ? 1 : 0,\r\n        expectedGold: 0,\r\n      };\r\n    }\r\n\r\n    while (left > 0) {\r\n      let cand = [];\r\n      if (first && selectedFirstFour.length > 0) {\r\n        cand = selectedFirstFour.slice(0, 4);\r\n      } else {\r\n        const pool = buildWeightedItems(s, left, pos, gemKey, rate);\r\n        if (!pool.length) break;\r\n        const temp = [...pool];\r\n        const n = Math.min(4, temp.length);\r\n        for (let i = 0; i < n; i++) {\r\n          const idx = weightedPickIndex(temp);\r\n          cand.push(temp[idx].slot);\r\n          temp.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      if (OFFICIAL_RNG) {\r\n        const pick = cand[Math.floor(rand() * cand.length)];\r\n        const res = applySlot(gemKey, pos, s, pick, rate, rand);\r\n        s = res.next; gold += res.goldThisAttempt; rate = res.nextRate; rrs += res.rerollDelta; unlocked = true;\r\n      } else {\r\n        const namesList = allowedEffectNames(gemKey, pos);\r\n        const aName = s.aName, bName = s.bName;\r\n        const canAChange = namesList.some((n) => n !== bName && n !== aName);\r\n        const canBChange = namesList.some((n) => n !== aName && n !== bName);\r\n        const before = desirability(s);\r\n        let best = null;\r\n        for (const sl of cand) {\r\n          if (sl.kind === \"A_CHANGE\" && !canAChange) continue;\r\n          if (sl.kind === \"B_CHANGE\" && !canBChange) continue;\r\n          const res = applySlot(gemKey, pos, s, sl, rate, rand);\r\n          const gain = before - desirability(res.next);\r\n          if (!best || gain > best.gain) {\r\n            best = { next: res.next, gold: res.goldThisAttempt, nextRate: res.nextRate, rrd: res.rerollDelta, gain };\r\n          }\r\n        }\r\n        if (best && best.gain <= 0 && unlocked && rrs > 0) { rrs -= 1; first = false; continue; }\r\n        if (best) { s = best.next; gold += best.gold; rate = best.nextRate; rrs += best.rrd; unlocked = true; }\r\n      }\r\n\r\n      left -= 1; first = false;\r\n      if (policy === \"STOP_ON_SUCCESS\" && meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames)) break;\r\n    }\r\n\r\n    const score = totalScore(s);\r\n    const g = gradeOf(score);\r\n    return {\r\n      successProb: meetsTargetByMode(pos, abMode, s, target, gemKey, tgtNames) ? 1 : 0,\r\n      legendProb: g === \"전설\" ? 1 : 0,\r\n      relicProb: g === \"유물\" ? 1 : 0,\r\n      ancientProb: g === \"고대\" ? 1 : 0,\r\n      expectedGold: gold,\r\n    };\r\n  };\r\n\r\n  // 집계 변수\r\n  let n = 0;\r\n  let succSum = 0, legendSum = 0, relicSum = 0, ancientSum = 0, goldSum = 0;\r\n  let agg = { ...ZERO_VALUE, trialsUsed: 0, ci: { low: 0, high: 0, halfWidth: 0 } };\r\n\r\n  // 동적으로 늘어날 수 있는 상한\r\n  let localMaxTrials = maxTrials;\r\n\r\n  const seedForTrial = (baseSeed, idx) => {\r\n    // 32-bit 안전 시드 셔플\r\n    const mixed = (baseSeed >>> 0) ^ (Math.imul((idx + 1) >>> 0, 2654435761) >>> 0);\r\n    return mixed >>> 0;\r\n  };\r\n\r\n  const updateCI = () => {\r\n    const p = succSum / Math.max(1, n);\r\n    let ci;\r\n    if (p === 0) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      ci = { low: 0, high: up, halfWidth: up / 2 };\r\n    } else if (p === 1) {\r\n      const up = zeroSuccessUpperBound(n);\r\n      const low = 1 - up;\r\n      ci = { low, high: 1, halfWidth: (1 - low) / 2 };\r\n    } else {\r\n      const w = wilsonCI(p, n);\r\n      ci = { low: w.low, high: w.high, halfWidth: (w.high - w.low) / 2 };\r\n    }\r\n    agg.ci = ci;\r\n    return ci;\r\n  };\r\n\r\n  while (n < localMaxTrials) {\r\n    // 한 번에 돌릴 \"스텝\" 수 (안티테틱 켰으면 실제 trial 수는 최대 2배)\r\n    const steps = batch;\r\n    for (let i = 0; i < steps; i++) {\r\n      // 남은 예산 확인\r\n      if (n >= localMaxTrials) break;\r\n\r\n      const trialSeed = seedForTrial(seed >>> 0, n + i);\r\n      // 기본 경로\r\n      const r1 = makeRNG(trialSeed);\r\n      const one = simOnce(r1);\r\n      succSum += one.successProb;\r\n      legendSum += one.legendProb;\r\n      relicSum += one.relicProb;\r\n      ancientSum += one.ancientProb;\r\n      goldSum += one.expectedGold;\r\n      n += 1;\r\n\r\n      // 안티테틱 페어 (같은 시드로 1-u 사용)\r\n      if (useAntithetic && n < localMaxTrials) {\r\n        const r2base = makeRNG(trialSeed);\r\n        const r2 = () => 1 - r2base();\r\n        const two = simOnce(r2);\r\n        succSum += two.successProb;\r\n        legendSum += two.legendProb;\r\n        relicSum += two.relicProb;\r\n        ancientSum += two.ancientProb;\r\n        goldSum += two.expectedGold;\r\n        n += 1;\r\n      }\r\n    }\r\n\r\n    const ci = updateCI();\r\n    const hw = ci.halfWidth || 0;\r\n\r\n    // 희귀사건 가드: 성공 표본 부족하면 상한을 키워 더 돌린다\r\n    const rareGuardActive =\r\n      autoScaleRare &&\r\n      n >= minTrials &&\r\n      succSum < rareTargetSuccesses &&\r\n      localMaxTrials < rareMaxTrials;\r\n\r\n    if (rareGuardActive) {\r\n      // 배치 단위로 넉넉히 늘림\r\n      const bump = (useAntithetic ? 2 * batch : batch);\r\n      localMaxTrials = Math.min(rareMaxTrials, Math.max(localMaxTrials * 2, n + bump));\r\n      continue; // 더 돌린다\r\n    }\r\n\r\n    // 일반 수렴 조건\r\n    if (hw <= epsilon && n >= minTrials) break;\r\n  }\r\n\r\n  agg.trialsUsed = n;\r\n  agg.successProb = estimateRate(succSum, n, estimator);\r\n  agg.legendProb  = estimateRate(legendSum,  n, estimator);\r\n  agg.relicProb   = estimateRate(relicSum,   n, estimator);\r\n  agg.ancientProb = estimateRate(ancientSum, n, estimator);\r\n  agg.expectedGold = goldSum / Math.max(1, n);\r\n  return agg;\r\n}\r\n\r\n/* ===============================\r\n   공통 UI(LoACore 스타일): Dropdown + Toast + NumberInput\r\n   =============================== */\r\nfunction useOnClickOutside(refs, handler) {\r\n  const refsArray = useMemo(() => (Array.isArray(refs) ? refs : [refs]), [refs]);\r\n  const handlerRef = useRef(handler);\r\n  useEffect(() => { handlerRef.current = handler; }, [handler]);\r\n  useEffect(() => {\r\n    const listener = (e) => {\r\n      if (refsArray.some(r => r?.current && r.current.contains(e.target))) return;\r\n      handlerRef.current?.(e);\r\n    };\r\n    document.addEventListener('click', listener, true);\r\n    return () => document.removeEventListener('click', listener, true);\r\n  }, [refsArray]);\r\n}\r\nfunction Dropdown({ value, items, onChange, placeholder, className, disabled }) {\r\n  const [open, setOpen] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const menuPos = useRef({ top: 0, left: 0, width: 0 });\r\n  const [, forceTick] = useState(0);\r\n  useEffect(() => {\r\n    const h = () => setOpen(false);\r\n    window.addEventListener('close-all-dropdowns', h);\r\n    return () => window.removeEventListener('close-all-dropdowns', h);\r\n  }, []);\r\n  useOnClickOutside([btnRef, menuRef], () => setOpen(false));\r\n  useLayoutEffect(() => {\r\n    if (!open || !btnRef.current) return;\r\n    const rect = btnRef.current.getBoundingClientRect();\r\n    menuPos.current = { top: rect.bottom + 4, left: rect.left, width: rect.width };\r\n    forceTick((v) => v + 1);\r\n    const onScroll = () => {\r\n      const r = btnRef.current?.getBoundingClientRect(); if (!r) return;\r\n      menuPos.current = { top: r.bottom + 4, left: r.left, width: r.width };\r\n      forceTick((v) => v + 1);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => { window.removeEventListener(\"scroll\", onScroll); window.removeEventListener(\"resize\", onScroll); };\r\n  }, [open]);\r\n  const selected = items.find((i) => i.value === value);\r\n  const menu = open && !disabled ? (\r\n    <AnimatePresence>\r\n      <motion.ul\r\n        ref={menuRef}\r\n        key=\"menu\"\r\n        initial={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -4, scale: 0.98 }}\r\n        transition={{ duration: 0.12 }}\r\n        style={{ position: \"fixed\", top: menuPos.current.top, left: menuPos.current.left, width: menuPos.current.width, zIndex: 9999 }}\r\n        className=\"rounded-xl border bg-white shadow-lg overflow-auto max-h-60\"\r\n      >\r\n        {items.map((it) => (\r\n          <li key={String(it.value)}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => { if (it.disabled) return; onChange(it.value); setOpen(false); }}\r\n              aria-disabled={it.disabled ? true : undefined}\r\n              className={`w-full text-left px-3 py-2 text-sm ${it.disabled ? \"cursor-not-allowed\" : \"hover:bg-gray-50\"} ${it.value === value ? \"bg-gray-100\" : \"\"}`}\r\n            >\r\n              <span className=\"block truncate\">{it.label}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </motion.ul>\r\n    </AnimatePresence>\r\n  ) : null;\r\n  return (\r\n    <div ref={btnRef} className={`relative min-w-0 ${className || \"\"}`}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && setOpen((v) => !v)}\r\n        disabled={disabled}\r\n        className={`min-w-0 h-10 w-full inline-flex items-center justify-between rounded-xl border px-3 bg-white hover:bg-gray-50 transition focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 ${disabled ? \"cursor-not-allowed\" : \"\"}`}\r\n      >\r\n        <span className=\"truncate text-sm\">{selected ? selected.label : placeholder || \"선택\"}</span>\r\n        <span className=\"text-gray-500 text-sm select-none\">{open ? <ChevronUp size={16} /> : <ChevronDown size={16} />}</span>\r\n      </button>\r\n      {open && menu}\r\n    </div>\r\n  );\r\n}\r\nfunction useToasts() {\r\n  const [toasts, setToasts] = useState([]);\r\n  const push = (msg, tone = \"info\") => {\r\n    const id = Math.random().toString(36).slice(2, 9);\r\n    setToasts((t) => [...t, { id, msg, tone }]);\r\n    setTimeout(() => setToasts((t) => t.filter((x) => x.id !== id)), 2600);\r\n  };\r\n  const remove = (id) => setToasts((t) => t.filter((x) => x.id !== id));\r\n  return { toasts, push, remove };\r\n}\r\nfunction ToastStack({ toasts, onClose }) {\r\n  const toneBg = (tone) => ({\r\n    success: \"bg-emerald-50/95 border-emerald-200 text-emerald-900\",\r\n    info: \"bg-sky-50/95 border-sky-200 text-sky-900\",\r\n    warning: \"bg-amber-50/95 border-amber-200 text-amber-900\",\r\n    error: \"bg-rose-50/95 border-rose-200 text-rose-900\",\r\n  }[tone] || \"bg-amber-50/95 border-amber-200 text-amber-900\");\r\n  const toneBtn = (tone) => ({\r\n    success: \"text-emerald-900/80 hover:text-emerald-900\",\r\n    info: \"text-sky-900/80 hover:text-sky-900\",\r\n    warning: \"text-amber-900/80 hover:text-amber-900\",\r\n    error: \"text-rose-900/80 hover:text-rose-900\",\r\n  }[tone] || \"text-amber-900/80 hover:text-amber-900\");\r\n  return (\r\n    <div className=\"fixed inset-0 z-[9999] flex space-y-2 flex-col items-center justify-center pointer-events-none px-4\">\r\n      <AnimatePresence>\r\n        {toasts.map((t) => (\r\n          <motion.div\r\n            key={t.id}\r\n            initial={{ opacity: 0, scale: 0.98 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.98 }}\r\n            transition={{ type: \"spring\", stiffness: 380, damping: 28 }}\r\n            className={`pointer-events-auto overflow-hidden rounded-2xl border shadow-lg backdrop-blur px-4 py-3 flex items-center gap-3 min-w-[320px] max-w-[90vw] ${toneBg(t.tone)}`}\r\n          >\r\n            <div className=\"text-sm flex-1\">{t.msg}</div>\r\n            <button\r\n              className={`text-sm font-medium self-center ${toneBtn(t.tone)}`}\r\n              onClick={() => onClose(t.id)}\r\n              aria-label=\"닫기\"\r\n            >\r\n              닫기\r\n            </button>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\nfunction NumberInput({\r\n  value,\r\n  set,                 // (old) (number)=>void\r\n  onChange,            // (new) (number|null)=>void\r\n  min = MIN_STAT,\r\n  max = 99,\r\n  step = 1,\r\n  allowFloat = false,\r\n  zeroOnBlur = true,\r\n  className = \"\",\r\n  inputProps = {},\r\n  disabled,\r\n}) {\r\n  const toStr = (v) => (v === null || v === undefined ? \"\" : String(v));\r\n  const [inner, setInner] = React.useState(toStr(value));\r\n  React.useEffect(() => { setInner(toStr(value)); }, [value]);\r\n  const clampLocal = (n) => {\r\n    let x = n;\r\n    if (min != null && x < min) x = min;\r\n    if (max != null && x > max) x = max;\r\n    return x;\r\n  };\r\n  const normalizeOnBlur = (s) => {\r\n    if (s === \"\") return zeroOnBlur ? (min ?? 0) : null;\r\n    let n = Number(s);\r\n    if (!Number.isFinite(n)) return zeroOnBlur ? (min ?? 0) : null;\r\n    n = allowFloat ? n : Math.trunc(n);\r\n    return clampLocal(n);\r\n  };\r\n  // wheel 값 변동 방지(의도치 않은 증가/감소)\r\n  const handleWheel = (e) => e.currentTarget.blur();\r\n  // 구버전/신버전 핸들러 분기\r\n  const hasNewApi = typeof onChange === \"function\";\r\n  const callOld = typeof set === \"function\";\r\n  return (\r\n    <input\r\n      type=\"number\"\r\n      inputMode={allowFloat ? \"decimal\" : \"numeric\"}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      disabled={disabled}\r\n      value={inner}\r\n      onChange={(e) => {\r\n        const v = e.target.value;\r\n        // 입력 중 빈 문자열 허용\r\n        if (v === \"\") {\r\n          setInner(\"\");\r\n          if (hasNewApi) onChange(null);\r\n          // 구버전(set)은 입력 중 null을 전달하지 않음 (기존 동작 유지)\r\n          return;\r\n        }\r\n        setInner(v);\r\n        const num = Number(v);\r\n        if (!Number.isFinite(num)) {\r\n          if (hasNewApi) onChange(null);\r\n          return;\r\n        }\r\n        const n = allowFloat ? num : Math.trunc(num);\r\n        if (hasNewApi) {\r\n          // 새 API: 입력 중에도 값 알림(클램프는 blur 시 확정)\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          // 구 API: 즉시 클램프 + 업데이트 (기존 동작과 동일)\r\n          set(clampLocal(n));\r\n        }\r\n      }}\r\n      onBlur={() => {\r\n        const n = normalizeOnBlur(inner);\r\n        setInner(n == null ? \"\" : String(n));\r\n        if (hasNewApi) {\r\n          onChange(n);\r\n        } else if (callOld) {\r\n          // 구 API: null을 허용하지 않으므로 보정값(또는 min/0) 전달\r\n          set(n == null ? (min ?? 0) : n);\r\n        }\r\n      }}\r\n      onWheel={handleWheel}\r\n      className={`h-10 px-3 rounded-xl border focus:outline-none focus:ring-2 focus:ring-[#a399f2]/50 bg-white ${className}`}\r\n      {...inputProps}\r\n    />\r\n  );\r\n}\r\n/* ===============================\r\n   원래 Select API를 유지하면서 내부는 Dropdown 사용\r\n   =============================== */\r\nconst Select = ({ value, set, options, disabled, placeholder }) => {\r\n  const items = (options || []).map((o) =>\r\n    typeof o === \"string\"\r\n      ? { value: o, label: o }\r\n      : { value: o.value ?? o, label: o.label ?? String(o) }\r\n  );\r\n  return (\r\n    <Dropdown\r\n      value={value}\r\n      onChange={set}\r\n      items={items}\r\n      disabled={!!disabled}\r\n      className=\"w-full lg:w-full\"\r\n      placeholder={placeholder || \"선택\"}\r\n    />\r\n  );\r\n};\r\n/* =========================\r\n   중복 라벨 검출 (원본 유지)\r\n   ========================= */\r\nfunction hasDuplicateLabels(labels) {\r\n  const arr = labels.filter(Boolean);\r\n  return new Set(arr).size !== arr.length;\r\n}\r\n/* =========================\r\n   메인 컴포넌트\r\n   ========================= */\r\nexport default function GemSimulator() {\r\n  const { toasts, push, remove } = useToasts();\r\n  const [gemKey, setGemKey] = useState(\"질서-안정\");\r\n  const [pos, setPos] = useState(\"상관 없음\");\r\n  const [rarity, setRarity] = useState(\"고급\");\r\n  const [abModePrimary, setAbModePrimary] = useState(\"ANY_ONE\");\r\n  const effectPoolAny = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const effectPoolByPos = useMemo(() => allowedEffectNames(gemKey, \"상관 없음\"), [gemKey]);\r\n  const [cur, setCur] = useState({ eff: MIN_STAT, pts: MIN_STAT, aName: effectPoolAny[0], aLvl: MIN_STAT, bName: effectPoolAny[1] || effectPoolAny[0], bLvl: MIN_STAT });\r\n  const [tgt, setTgt] = useState({ eff: MIN_STAT, pts: MIN_STAT, aLvl: MIN_STAT, bLvl: MIN_STAT });\r\n  const [tgtNames, setTgtNames] = useState({\r\n    aName: allowedEffectNames(gemKey, pos)[0],   // 유효풀에서 시작\r\n    bName: allowedEffectNames(gemKey, pos)[1] || allowedEffectNames(gemKey, pos)[0],\r\n  });\r\n  const [basicLocked, setBasicLocked] = useState(false);\r\n  const [curLocked, setCurLocked] = useState(false);\r\n  const [tgtLocked, setTgtLocked] = useState(false);\r\n  // 시작 상태가 포지션 풀과 안 맞아도 계산은 진행 (이름 변경으로 충족 가능)\r\n  const curValid = cur.aName !== cur.bName;\r\n  // 시뮬레이션 반복 수 (Monte Carlo maxTrials)\r\n  const [simTrials, setSimTrials] = useState(10000);\r\n\r\n  const migratedRef = useRef(false); // StrictMode 중복 실행 방지(개발모드)\r\n  useEffect(() => {\r\n    if (migratedRef.current) return;\r\n    migratedRef.current = true;\r\n    setCur(s => ({\r\n      ...s,\r\n      eff: Math.max(s.eff, MIN_STAT),\r\n      pts: Math.max(s.pts, MIN_STAT),\r\n      aLvl: Math.max(s.aLvl, MIN_STAT),\r\n      bLvl: Math.max(s.bLvl, MIN_STAT),\r\n    }));\r\n    setTgt(t => ({\r\n      ...t,\r\n      eff: Math.max(t.eff, MIN_STAT),\r\n      pts: Math.max(t.pts, MIN_STAT),\r\n      aLvl: Math.max(t.aLvl, MIN_STAT),\r\n      bLvl: Math.max(t.bLvl, MIN_STAT),\r\n    }));\r\n  }, []);\r\n  const [manual, setManual] = useState(() => ({\r\n    attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n    rerolls: RARITY_BASE_REROLLS[rarity],\r\n    unlocked: false,\r\n    costAddRate: 0,\r\n    gold: 0,\r\n    state: { ...cur },\r\n  }));\r\n  useEffect(() => {\r\n    setManual((m) => ({\r\n      ...m,\r\n      attemptsLeft: RARITY_ATTEMPTS[rarity],\r\n      rerolls: RARITY_BASE_REROLLS[rarity],\r\n      state: { ...cur },\r\n      unlocked: false,\r\n      costAddRate: 0,\r\n      gold: 0,\r\n    }));\r\n  }, [rarity, cur]);\r\n  const [changeMode, setChangeMode] = useState(null); // { who: 'A'|'B', options: string[] }\r\n  const [changePick, setChangePick] = useState(\"\");\r\n  // ==== Undo/Redo 히스토리 ====\r\n  const HISTORY_LIMIT = 50;\r\n  const [history, setHistory] = useState({ past: [], future: [] });\r\n  // manual, changeMode, changePick 을 하나의 스냅샷으로 관리\r\n  const takeSnapshot = useCallback(() => ({\r\n    manual: JSON.parse(JSON.stringify(manual)),\r\n    changeMode: changeMode ? { ...changeMode, options: [...changeMode.options] } : null,\r\n    changePick\r\n  }), [manual, changeMode, changePick]);\r\n  const restoreSnapshot = useCallback((snap) => {\r\n    setManual(snap.manual);\r\n    setChangeMode(snap.changeMode);\r\n    setChangePick(snap.changePick);\r\n  }, []);\r\n  const pushHistory = useCallback(() => {\r\n    setHistory(h => {\r\n      const nextPast = [...h.past, takeSnapshot()];\r\n      // 용량 제한\r\n      while (nextPast.length > HISTORY_LIMIT) nextPast.shift();\r\n      return { past: nextPast, future: [] };\r\n    });\r\n  }, [takeSnapshot]);\r\n  const canUndo = history.past.length > 0;\r\n  const canRedo = history.future.length > 0;\r\n  // ==== 작업 내역(Log) ====\r\n  const LOG_LIMIT = 200;\r\n  const [logs, setLogs] = useState([]); // 최신이 위로 오게 저장\r\n  const nowStr = () => {\r\n    const d = new Date();\r\n    const pad = (n) => String(n).padStart(2, '0');\r\n    return `${pad(d.getHours())}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\r\n  };\r\n  const addLog = useCallback((entry) => {\r\n    // entry: { type, title, detail?, meta? }\r\n    setLogs((prev) => [\r\n      { id: Math.random().toString(36).slice(2), time: nowStr(), ...entry },\r\n      ...prev\r\n    ].slice(0, LOG_LIMIT));\r\n  }, []);\r\n  const undo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.past.length === 0) return h;\r\n      const prev = h.past[h.past.length - 1];\r\n      const newPast = h.past.slice(0, -1);\r\n      const current = takeSnapshot();\r\n      // 상태 복원\r\n      restoreSnapshot(prev);\r\n      addLog({ type: 'undo', title: '되돌리기', detail: '이전 상태로 복구' });\r\n      return { past: newPast, future: [current, ...h.future] };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n  const redo = useCallback(() => {\r\n    setHistory(h => {\r\n      if (h.future.length === 0) return h;\r\n      const next = h.future[0];\r\n      const restFuture = h.future.slice(1);\r\n      const current = takeSnapshot();\r\n      // 상태 복원\r\n      restoreSnapshot(next);\r\n      addLog({ type: 'redo', title: '다시하기', detail: '되돌리기 취소' });\r\n      return { past: [...h.past, current], future: restFuture };\r\n    });\r\n  }, [restoreSnapshot, takeSnapshot, addLog]);\r\n  // ⌨️ 단축키: Ctrl/Cmd+Z = Undo, Ctrl/Cmd+Shift+Z = Redo\r\n  useEffect(() => {\r\n    const onKey = (e) => {\r\n      const isMod = e.ctrlKey || e.metaKey;\r\n      if (!isMod) return;\r\n      if (e.key.toLowerCase() === 'z') {\r\n        e.preventDefault();\r\n        if (e.shiftKey) { if (canRedo) redo(); }\r\n        else { if (canUndo) undo(); }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [canUndo, canRedo, undo, redo]);\r\n  // 상태 비교해서 읽기 쉬운 diff 문자열 만들어주기\r\n  const diffStats = (before, after) => {\r\n    const parts = [];\r\n    const pushIf = (k, label = k) => {\r\n      if (before[k] !== after[k]) parts.push(`${label} ${before[k]}→${after[k]}`);\r\n    };\r\n    pushIf('eff', '효율');\r\n    pushIf('pts', '포인트');\r\n    if (before.aName !== after.aName || before.aLvl !== after.aLvl) {\r\n      const name = before.aName === after.aName ? after.aName : `${before.aName}→${after.aName}`;\r\n      parts.push(`A ${name} Lv.${before.aLvl}→${after.aLvl}`);\r\n    }\r\n    if (before.bName !== after.bName || before.bLvl !== after.bLvl) {\r\n      const name = before.bName === after.bName ? after.bName : `${before.bName}→${after.bName}`;\r\n      parts.push(`B ${name} Lv.${before.bLvl}→${after.bLvl}`);\r\n    }\r\n    return parts.join(' · ');\r\n  };\r\n  // 포지션/젬타입 바뀔 때 목표 이름을 유효풀로 보정\r\n  useEffect(() => {\r\n    const pool = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((old) => {\r\n      const a = pool.includes(old.aName) ? old.aName : pool[0];\r\n      const bCand = pool[1] || pool[0];\r\n      const b = pool.includes(old.bName) ? old.bName : (a === bCand ? pool.find(n => n !== a) || a : bCand);\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [gemKey, pos]);\r\n  const allOptionLabels = useMemo(() => {\r\n    const items = buildWeightedItems(manual.state, manual.attemptsLeft, pos, gemKey, manual.costAddRate);\r\n    const labels = items.map((it) => slotToPrettyLabel(it.slot, manual.state));\r\n    return Array.from(new Set(labels));\r\n  }, [manual.state, manual.attemptsLeft, manual.costAddRate, pos, gemKey]);\r\n  const defaultLabels = useMemo(() => {\r\n    const want = [`의지력 효율 +1`, `포인트 +1`, `${manual.state.aName} Lv. +1`, `${manual.state.bName} Lv. +1`];\r\n    const out = [];\r\n    let cursor = 0;\r\n    for (const w of want) {\r\n      if (allOptionLabels.includes(w) && !out.includes(w)) out.push(w);\r\n      else {\r\n        while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n        out.push(allOptionLabels[cursor] ?? w);\r\n        cursor++;\r\n      }\r\n    }\r\n    while (out.length < 4) {\r\n      while (cursor < allOptionLabels.length && out.includes(allOptionLabels[cursor])) cursor++;\r\n      out.push(allOptionLabels[cursor++] ?? allOptionLabels[0] ?? \"가공 상태 유지\");\r\n    }\r\n    return out.slice(0, 4);\r\n  }, [allOptionLabels, manual.state.aName, manual.state.bName]);\r\n  const [manLabels, setManLabels] = useState(defaultLabels);\r\n  useEffect(() => {\r\n    setManLabels((prev) => {\r\n      const next = prev.map((v, i) => (allOptionLabels.includes(v) ? v : allOptionLabels[i] ?? allOptionLabels[0] ?? v));\r\n      const used = new Set();\r\n      for (let i = 0; i < next.length; i++) {\r\n        if (!used.has(next[i])) { used.add(next[i]); continue; }\r\n        const replacement = allOptionLabels.find((l) => !used.has(l));\r\n        if (replacement) { next[i] = replacement; used.add(replacement); }\r\n      }\r\n      return next;\r\n    });\r\n  }, [allOptionLabels]);\r\n  const [resultStop, setResultStop] = useState(null);\r\n  const [resultRun, setResultRun] = useState(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const tokenRef = useRef(0);\r\n  const timerRef = useRef(null);\r\n  // 높이 동기화 refs & 상태\r\n  const simRef = useRef(null);       // 왼쪽(가공 시뮬레이션) 카드\r\n  const [logsMax, setLogsMax] = useState(null); // 오른쪽 카드 max-height(px)\r\n  useLayoutEffect(() => {\r\n    const recalc = () => {\r\n      if (simRef.current) {\r\n        setLogsMax(simRef.current.offsetHeight);\r\n      }\r\n    };\r\n    recalc();\r\n    window.addEventListener('resize', recalc);\r\n    return () => window.removeEventListener('resize', recalc);\r\n    // 왼쪽 카드 높이에 영향을 주는 값들이 갱신되면 다시 계산\r\n  }, [manual, manLabels, resultRun, resultStop, changeMode, tgtLocked, basicLocked, curLocked]);\r\n  /* 다른 항목 보기 EV (원본 유지) */\r\n  const REROLL_SAMPLES = 16;\r\n  const TAU = 0.0025;\r\n  const expectedSuccessProbForLabels = useCallback((labels, gemKeyIn, posIn, abForEval, manualIn, tgtIn, seed) => {\r\n    let acc = 0, cnt = 0;\r\n    for (const lb of labels) {\r\n      const sl = labelToSlot(lb, manualIn.state); if (!sl) continue;\r\n      if (sl.kind === \"A_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.bName && n !== manualIn.state.aName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      if (sl.kind === \"B_CHANGE\") {\r\n        const ok = allowedEffectNames(gemKeyIn, \"상관 없음\").filter((n) => n !== manualIn.state.aName && n !== manualIn.state.bName).length > 0;\r\n        if (!ok) continue;\r\n      }\r\n      const res = applySlot(gemKeyIn, posIn, manualIn.state, sl, manualIn.costAddRate, () => {\r\n        // 라벨별로도 결정성을 주고 싶다면 seed 변형해서 rand 쓰기 가능\r\n        return (makeRNG(seed + hash32(lb))());\r\n      });\r\n      const nextManual = {\r\n        attemptsLeft: manualIn.attemptsLeft - 1,\r\n        rerolls: manualIn.rerolls + res.rerollDelta,\r\n        unlocked: true,\r\n        costAddRate: res.nextRate,\r\n        gold: manualIn.gold + res.goldThisAttempt,\r\n        state: res.next,\r\n      };\r\n      const v = evaluateFromSimulation(\r\n        gemKeyIn, posIn, abForEval, nextManual.state, tgtIn, \"RUN_TO_END\",\r\n        nextManual.attemptsLeft, nextManual.rerolls, nextManual.costAddRate, nextManual.unlocked, [],\r\n        seed + hash32(lb), tgtNames,\r\n        {\r\n          maxTrials: Math.min(8000, simTrials),\r\n          minTrials: Math.min(8000, simTrials),\r\n          epsilon: 0.006,\r\n          batch: 500,\r\n          estimator: \"jeffreys\",\r\n          useAntithetic: USE_ANTITHETIC,\r\n          autoScaleRare: false\r\n        }\r\n      );\r\n      acc += v.successProb; cnt += 1;\r\n    }\r\n    return cnt ? acc / cnt : 0;\r\n  }, [tgtNames, simTrials]);\r\n  function sampleNewFourSlots(seed, gemKeyIn, posIn, manualIn) {\r\n    const rng = makeRNG(seed);\r\n    const pool = buildWeightedItems(manualIn.state, manualIn.attemptsLeft, posIn, gemKeyIn, manualIn.costAddRate);\r\n    const temp = [...pool];\r\n    const out = [];\r\n    const weightedPickIndex = (arr) => {\r\n      const sum = arr.reduce((a, b) => a + b.w, 0);\r\n      let r = rng() * sum;\r\n      for (let i = 0; i < arr.length; i++) { r -= arr[i].w; if (r <= 0) return i; }\r\n      return arr.length - 1;\r\n    };\r\n    const n = Math.min(4, temp.length);\r\n    for (let i = 0; i < n; i++) { const idx = weightedPickIndex(temp); out.push(temp[idx].slot); temp.splice(idx, 1); }\r\n    return out;\r\n  }\r\n  function slotsToLabels(slots, s) { return slots.map((sl) => slotToPrettyLabel(sl, s)); }\r\n  const rerollAdvice = useMemo(() => {\r\n    if (!manual.unlocked) return { shouldReroll: false, reason: \"첫 가공 이전에는 다른 항목 보기를 추천을 하지 않습니다.\" };\r\n    if (manual.rerolls <= 0) return { shouldReroll: false, reason: \"다른 항목 보기가 없습니다.\" };\r\n    if (manual.attemptsLeft <= 0) return { shouldReroll: false, reason: \"가공이 완료되어 다른 항목 보기 판단이 무의미합니다.\" };\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, manLabels, abForEval, salt: \"REROLL_EV\" });\r\n    const nowProb = expectedSuccessProbForLabels(manLabels, gemKey, pos, abForEval, manual, tgt, seedBase + 7);\r\n    let acc = 0;\r\n    for (let i = 0; i < REROLL_SAMPLES; i++) {\r\n      const seed = seedBase + 1000 + i * 31;\r\n      const afterRerollManual = { ...manual, rerolls: manual.rerolls - 1 };\r\n      const newSlots = sampleNewFourSlots(seed, gemKey, pos, afterRerollManual);\r\n      const newLabels = slotsToLabels(newSlots, afterRerollManual.state);\r\n      const prob = expectedSuccessProbForLabels(newLabels, gemKey, pos, abForEval, afterRerollManual, tgt, seed + 17);\r\n      acc += prob;\r\n    }\r\n    const rerollProb = acc / REROLL_SAMPLES;\r\n    const delta = rerollProb - nowProb;\r\n    const pct = (x) => (x * 100).toFixed(2) + \"%\";\r\n    if (delta > TAU) {\r\n      return { shouldReroll: true, reason: `룩어헤드 기준 다른 항목 보기 추천: 현재 최선 ${pct(nowProb)} → 다른 항목 보기 기대 ${pct(rerollProb)} (▲${pct(delta)}).` };\r\n    } else if (delta < -TAU) {\r\n      return { shouldReroll: false, reason: `룩어헤드 기준 다른 항목 보기 비추천: 현재 최선 ${pct(nowProb)}가 다른 항목 보기 기대 ${pct(rerollProb)}보다 유리 (▼${pct(-delta)}).` };\r\n    } else {\r\n      return { shouldReroll: false, reason: `두 경로 차이 미미: 현재 ${pct(nowProb)} vs 다른 항목 보기 ${pct(rerollProb)} (|Δ| < ${(TAU * 100).toFixed(2)}%).` };\r\n    }\r\n  }, [gemKey, pos, rarity, manual, tgt, manLabels, abModePrimary, expectedSuccessProbForLabels]);\r\n  // BOTH로 전환 시, 목표 이름에 '상관없음'이 포함되어 있으면 유효한 이름으로 자동 보정\r\n  useEffect(() => {\r\n    if (abModePrimary !== \"BOTH\" || pos === \"상관 없음\") return;\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    setTgtNames((prev) => {\r\n      const a = base.includes(prev.aName) && prev.aName !== \"상관없음\" ? prev.aName : base[0];\r\n      const bCandidate = base.find((n) => n !== a) || base[0];\r\n      const b = base.includes(prev.bName) && prev.bName !== \"상관없음\" && prev.bName !== a ? prev.bName : bCandidate;\r\n      return { aName: a, bName: b };\r\n    });\r\n  }, [abModePrimary, gemKey, pos]);\r\n  /* 확률 계산 트리거 */\r\n  useEffect(() => {\r\n    if (!tgtLocked || !curValid) { setResultStop(null); setResultRun(null); return; }\r\n    if (hasDuplicateLabels(manLabels)) {\r\n      setResultStop(null); setResultRun(null);\r\n      return;\r\n    }\r\n    const selectedFirstFour = manLabels.map((lb) => labelToSlot(lb, manual.state)).filter((x) => !!x);\r\n    const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n    const abForEval = pos === \"상관 없음\" ? \"ANY_ONE\" : abModePrimary;\r\n    const seedBase = makeDeterministicSeed({ gemKey, pos, rarity, manual, tgt, selectedFirstFour, calcMode });\r\n    const token = ++tokenRef.current;\r\n    setIsComputing(true);\r\n    // 이전 예약 취소\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    timerRef.current = setTimeout(() => {\r\n      const commonOpts = {\r\n        maxTrials: simTrials,\r\n        minTrials: simTrials,\r\n        epsilon: epsilonByTrials(simTrials),\r\n        batch: batchByTrials(simTrials),\r\n        estimator: \"jeffreys\",\r\n        useAntithetic: USE_ANTITHETIC,\r\n        autoScaleRare: AUTO_SCALE_RARE,\r\n        rareTargetSuccesses: 30,\r\n        rareMaxTrials: 200000,\r\n      };\r\n\r\n      const stop = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"STOP_ON_SUCCESS\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 101, tgtNames,\r\n        commonOpts\r\n      );\r\n      const run = evaluateFromSimulation(\r\n        gemKey, pos, abForEval, manual.state, tgt, \"RUN_TO_END\",\r\n        manual.attemptsLeft, manual.rerolls, manual.costAddRate, manual.unlocked, selectedFirstFour, seedBase + 103, tgtNames,\r\n        commonOpts\r\n      );\r\n      if (token === tokenRef.current) { setResultStop(stop); setResultRun(run); setIsComputing(false); }\r\n    }, 0);\r\n    // clean up: 이 이펙트가 갱신/언마운트되면 예약 취소 + 로딩 정리\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n    };\r\n  }, [gemKey, pos, rarity, curValid, manual, tgt, tgtLocked, manLabels, abModePrimary, tgtNames, simTrials]);\r\n  /* 사용자 액션: 토스트로 안내 */\r\n  function applyManual(slotIdx) {\r\n    if (!allLocked) { push(\"항목을 적용하려면 '기본 설정/현재 옵션/목표 옵션'을 모두 저장(잠금)하세요.\", \"warning\"); return; }\r\n    pushHistory();\r\n    if (!tgtLocked) { push(\"목표 옵션을 먼저 저장해 주세요.\"); return; }\r\n    if (manual.attemptsLeft <= 0) return;\r\n    if (hasDuplicateLabels(manLabels)) { push(\"중복된 항목이 있습니다. 확인해주세요.\"); return; }\r\n    const label = manLabels[slotIdx];\r\n    if (!allOptionLabels.includes(label)) { push(\"미등장 조건으로 현재 선택은 사용할 수 없어요.\"); return; }\r\n    const action = labelToSlot(label, manual.state);\r\n    if (!action) { push(\"선택을 해석할 수 없어요.\"); return; }\r\n    // 🔁 부여 효과 변경은 '선택 모드'로 전환하여 왼쪽에서 사용자가 직접 고르게 함\r\n    if (action.kind === \"A_CHANGE\" || action.kind === \"B_CHANGE\") {\r\n      const names = allowedEffectNames(gemKey, \"상관 없음\");\r\n      const pool = names.filter((n) => n !== manual.state.aName && n !== manual.state.bName);\r\n      if (pool.length <= 0) { push(\"추가 효과 조건/중복으로 효과 변경이 불가합니다.\"); return; }\r\n      setChangeMode({ who: action.kind === \"A_CHANGE\" ? \"A\" : \"B\", options: pool });\r\n      setChangePick(pool[0]);\r\n      push(\"변경할 효과를 선택해 주세요. 왼쪽 패널에서 적용을 누르면 이번 차수에 반영됩니다.\", \"info\");\r\n      return; // ✅ 여기서 종료 (아직 시도/골드 소모하지 않음)\r\n    }\r\n    if (manual.attemptsLeft <= 0) {\r\n      push(\"가공이 완료되어 더 이상 적용할 수 없어요.\", \"warning\");\r\n      return;\r\n    }\r\n    const before = { ...manual.state };\r\n    const res = applySlot(gemKey, pos, manual.state, action, manual.costAddRate);\r\n    const nextAttemptsLeft = manual.attemptsLeft - 1;\r\n    setManual((m) => ({\r\n      attemptsLeft: nextAttemptsLeft,\r\n      rerolls: m.rerolls + res.rerollDelta,\r\n      unlocked: true,\r\n      costAddRate: res.nextRate,\r\n      gold: m.gold + res.goldThisAttempt,\r\n      state: res.next,\r\n    }));\r\n    addLog({\r\n      type: 'apply',\r\n      title: `슬롯 ${slotIdx + 1} 적용: ${label}`,\r\n      detail: diffStats(before, res.next),\r\n      meta: { cost: res.goldThisAttempt, attemptsLeft: nextAttemptsLeft, rerollDelta: res.rerollDelta }\r\n    });\r\n    if (nextAttemptsLeft > 0) {\r\n      push(\"선택한 효과가 반영되었습니다. 업데이트된 4개의 선택지를 다시 설정해주세요.\", \"success\");\r\n    }\r\n  }\r\n  function doReroll() {\r\n    if (!allLocked) { push(\"다른 항목 보기는 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    if (manual.attemptsLeft <= 0) { push(\"가공이 완료되어 다른 항목 보기를 사용할 수 없어요.\"); return; }\r\n    if (!manual.unlocked) { push(\"가공 1회 이후부터 다른 항목 보기를 사용할 수 있어요.\"); return; }\r\n    if (manual.rerolls <= 0) { push(\"다른 항목 보기 횟수가 부족해요.\"); return; }\r\n    pushHistory(); // 변경 전 스냅샷 저장\r\n    setManual((m) => ({ ...m, rerolls: m.rerolls - 1 }));\r\n    addLog({\r\n      type: 'reroll',\r\n      title: '다른 항목 보기 사용',\r\n      detail: `남은 다른 항목 보기 ${manual.rerolls - 1}회`,\r\n    });\r\n  }\r\n  function manualReset() {\r\n    setLogs([]);   // 작업 내역 삭제\r\n    setHistory({ past: [], future: [] }); // 히스토리도 같이 초기화하면 깔끔\r\n    setManual({ attemptsLeft: RARITY_ATTEMPTS[rarity], rerolls: RARITY_BASE_REROLLS[rarity], unlocked: false, costAddRate: 0, gold: 0, state: { ...cur } });\r\n  }\r\n  function confirmEffectChange() {\r\n    if (!changeMode) return;\r\n    if (!allLocked) { push(\"효과 변경 확정은 모든 설정이 잠금된 상태에서만 가능합니다.\", \"warning\"); return; }\r\n    pushHistory(); // 변경 전 스냅샷 저장\r\n    const goldThisAttempt =\r\n      GOLD_PER_ATTEMPT * (manual.costAddRate === -1 ? 0 : manual.costAddRate === 1 ? 2 : 1);\r\n    const before = { ...manual.state };\r\n    setManual((m) => {\r\n      const next = { ...m.state };\r\n      if (changeMode.who === \"A\") next.aName = changePick;\r\n      else next.bName = changePick;\r\n      return {\r\n        attemptsLeft: m.attemptsLeft - 1, // 이번 차수 소비\r\n        rerolls: m.rerolls,\r\n        unlocked: true,\r\n        costAddRate: m.costAddRate,\r\n        gold: m.gold + goldThisAttempt,\r\n        state: next,\r\n      };\r\n    });\r\n    const after = { ...manual.state, ...(changeMode.who === \"A\" ? { aName: changePick } : { bName: changePick }) };\r\n    addLog({\r\n      type: 'change',\r\n      title: `효과 변경 확정 (${changeMode.who}) → ${changePick}`,\r\n      detail: diffStats(before, after),\r\n      meta: { cost: goldThisAttempt }\r\n    });\r\n    setChangeMode(null);\r\n    push(\"선택한 효과로 변경되었습니다.\", \"success\");\r\n  }\r\n  function cancelEffectChange() {\r\n    setChangeMode(null);\r\n    push(\"효과 변경을 취소했습니다.\", \"warning\");\r\n  }\r\n  /* ====== UI 토큰 ====== */\r\n  useEffect(() => { document.title = \"로아 아크그리드 젬 가공 헬퍼\"; }, []);\r\n  const card = \"bg-white rounded-2xl shadow-sm p-4 lg:p-6\";\r\n  const labelCls = \"block text-xs text-gray-500 mb-1\";\r\n  const sectionTitle = \"text-base font-semibold whitespace-nowrap\";\r\n  const calcMode = pos === \"상관 없음\" ? \"IGNORE_AB\" : abModePrimary;\r\n  const tgtALabel = `목표 효과 A 레벨 ≥`;\r\n  const tgtBLabel = `목표 효과 B 레벨 ≥`;\r\n  const rateText = manual.costAddRate === 1 ? \"+100%\" : manual.costAddRate === -1 ? \"-100%\" : \"0%\";\r\n  const allLocked = basicLocked && curLocked && tgtLocked;\r\n  const hasDup = hasDuplicateLabels(manLabels);\r\n  const showEffectsUI = true;\r\n  const showSkeleton = useMemo(\r\n    () => curValid && (isComputing || !(resultRun && resultStop)),\r\n    [curValid, isComputing, resultRun, resultStop]\r\n  );\r\n  const actionDisabled = !allLocked || hasDup || !!changeMode || manual.attemptsLeft <= 0;\r\n  const rerollDisabled = !allLocked || !!changeMode || manual.attemptsLeft <= 0 || manual.rerolls <= 0;\r\n  const dupWarnShown = useRef(false);\r\n  // allLocked이 false로 변하면 logs 초기화\r\n  useEffect(() => {\r\n    if (!allLocked) {\r\n      setLogs([]);   // 작업 내역 삭제\r\n      setHistory({ past: [], future: [] }); // 히스토리도 같이 초기화하면 깔끔\r\n    }\r\n  }, [allLocked]);\r\n  useEffect(() => {\r\n    if (hasDup) {\r\n      if (!dupWarnShown.current) {\r\n        push(\"중복된 항목이 있습니다. 확인해주세요.\");\r\n        dupWarnShown.current = true;\r\n      }\r\n    } else {\r\n      dupWarnShown.current = false;\r\n    }\r\n  }, [hasDup, push]);\r\n  const targetPool = useMemo(() => {\r\n    const base = allowedEffectNames(gemKey, pos);\r\n    if (pos === \"상관 없음\") return base;\r\n    return abModePrimary === \"ANY_ONE\" ? [\"상관없음\", ...base] : base; // BOTH면 '상관없음' 제외\r\n  }, [gemKey, pos, abModePrimary]);\r\n  return (\r\n    <div className=\"min-h-screen text-gray-900 p-4 lg:p-6\" style={{ backgroundImage: \"linear-gradient(125deg, #85d8ea, #a399f2)\", backgroundAttachment: \"fixed\" }}>\r\n      <style>{`\r\n        :root{ --primary:#a399f2; --grad:linear-gradient(125deg,#85d8ea,#a399f2); }\r\n        .text-primary{ color:#a399f2; }\r\n        .accent-primary{ accent-color:#a399f2; }\r\n      `}</style>\r\n      <div className=\"max-w-6xl mx-auto space-y-4 lg:space-y-6\">\r\n        <section className=\"py-2 lg:py-3\">\r\n<div className=\"flex items-center justify-between gap-3 flex-wrap\">\r\n  <h1 className=\"text-xl lg:text-2xl font-bold leading-tight text-white drop-shadow text-center lg:text-left w-full lg:w-auto\">\r\n    로아 아크그리드 젬 가공 확률 계산기\r\n  </h1>\r\n\r\n  <div className=\"flex gap-2 w-auto ml-auto lg:ml-0 items-center\">\r\n    <span className=\"hidden sm:inline text-white/90 text-sm\">시뮬레이션 횟수</span>\r\n    <div className=\"min-w-[170px]\">\r\n      <Dropdown\r\n        value={simTrials}\r\n        onChange={setSimTrials}\r\n        items={SIM_OPTIONS}\r\n        placeholder=\"반복 수 선택\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n        </section>\r\n        {/* 1) 기본 설정 */}\r\n        {/* 1) 기본 설정 */}\r\n        <section className={`${card} !mt-2`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>기본 설정</h2>\r\n            {/* 타이틀 우측: 저장/편집 버튼 (LoACoreOptimizer 스타일) */}\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {basicLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (읽기 전용)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setBasicLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBasicLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* 코어 카드와 동일한 레이아웃/간격/높이 */}\r\n          <div className=\"mt-3\">\r\n<div\r\n  className=\"\r\n    relative \r\n    grid grid-cols-2 gap-2 \r\n    lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n    items-stretch lg:items-end \r\n    border rounded-xl p-3 bg-white overflow-visible\r\n  \"\r\n>\r\n  {/* 젬 타입 */}\r\n  <div className={`flex flex-col w-full lg:w-[160px] w-full lg:w-56 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n    <label className={labelCls}>젬 타입</label>\r\n    <Dropdown\r\n      className=\"w-full\"\r\n      value={gemKey}\r\n      onChange={(v) => setGemKey(v)}\r\n      items={Object.keys(GEM_TYPES).map((k) => ({ value: k, label: k }))}\r\n      placeholder=\"젬 타입\"\r\n      disabled={basicLocked}\r\n    />\r\n  </div>\r\n  {/* 등급 */}\r\n  <div className={`flex flex-col w-full lg:w-[120px] w-full lg:w-40 ${basicLocked ? \"opacity-50\" : \"\"}`}>\r\n    <label className={labelCls}>등급</label>\r\n    <Dropdown\r\n      className=\"w-full\"\r\n      value={rarity}\r\n      onChange={(v) => setRarity(v)}\r\n      items={[\"고급\", \"희귀\", \"영웅\"].map((k) => ({ value: k, label: k }))}\r\n      placeholder=\"등급\"\r\n      disabled={basicLocked}\r\n    />\r\n  </div>\r\n  {/* 가공/다른 항목 보기 */}\r\n  <div className=\"flex flex-col w-full col-span-2 lg:col-span-1 lg:w-auto\">\r\n    <label className={labelCls}>기본 시도/다른 항목 보기</label>\r\n    <div className=\"h-10 px-3 rounded-xl border bg-gray-50 inline-flex items-center text-sm\">\r\n      가공 횟수 <b className=\"mx-1\">{RARITY_ATTEMPTS[rarity]}</b> · 다른 항목 보기{\" \"}\r\n      <b className=\"ml-1\">{RARITY_BASE_REROLLS[rarity]}</b>회\r\n    </div>\r\n  </div>\r\n</div>\r\n          </div>\r\n        </section>\r\n        {/* 2) 현재 옵션 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>현재 옵션 설정</h2>\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              {curLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">\r\n                    저장됨 (읽기 전용)\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setCurLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setCurLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* 2) 현재 옵션 설정 — 입력 블록 교체(간격/폭 기본설정 카드와 동일) */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"\r\n  relative \r\n  grid grid-cols-2 gap-2 \r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3 \r\n  items-stretch lg:items-end \r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n              {/* 의지력 효율 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>의지력 효율</label>\r\n                <NumberInput\r\n                  value={cur.eff}\r\n                  set={(v) => setCur({ ...cur, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 포인트 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>포인트</label>\r\n                <NumberInput\r\n                  value={cur.pts}\r\n                  set={(v) => setCur({ ...cur, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 효과 A */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A</label>\r\n                <Select\r\n                  value={cur.aName}\r\n                  set={(v) => setCur({ ...cur, aName: v })}\r\n                  options={effectPoolByPos}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n              {/* A 레벨 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 A 레벨</label>\r\n                <NumberInput\r\n                  value={cur.aLvl}\r\n                  set={(v) => setCur({ ...cur, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n              {/* 효과 B */}\r\n              <div className={`flex flex-col w-full lg:w-[160px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B</label>\r\n                <Select\r\n                  value={cur.bName}\r\n                  set={(v) => setCur({ ...cur, bName: v })}\r\n                  options={effectPoolByPos.filter((n) => n !== cur.aName)}\r\n                  disabled={curLocked}\r\n                  placeholder={curLocked ? \"비활성화\" : undefined}\r\n                />\r\n              </div>\r\n              {/* B 레벨 */}\r\n              <div className={`flex flex-col w-full lg:w-[120px] ${curLocked ? \"opacity-50\" : \"\"}`}>\r\n                <label className={labelCls}>효과 B 레벨</label>\r\n                <NumberInput\r\n                  value={cur.bLvl}\r\n                  set={(v) => setCur({ ...cur, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n                  min={MIN_STAT}\r\n                  max={MAX_STAT}\r\n                  disabled={curLocked}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* 3) 목표 옵션 설정 — 입력 블록 교체(간격/폭 LoACore와 동일) */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>목표 옵션 설정</h2>\r\n            {/* ⬇️ 헤더 우측: '목표 충족 방식'을 저장/편집 버튼 왼쪽에 배치 */}\r\n            <div className=\"ml-auto flex items-center gap-3 flex-wrap\">\r\n              {/* 저장/편집 토글 버튼 (그대로) */}\r\n              {tgtLocked ? (\r\n                <>\r\n                  <span className=\"text-xs text-gray-500 hidden sm:inline\">저장됨 (계산 활성)</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setTgtLocked(false)}\r\n                    className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                  >\r\n                    <Edit3 size={16} />\r\n                    편집하기\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setTgtLocked(true)}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <Save size={16} />\r\n                  저장하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={`mb-1 flex items-center gap-4 text-sm ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n            <span className=\"text-xs text-gray-500\">목표 충족 방식</span>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"ANY_ONE\"}\r\n                onChange={() => setAbModePrimary(\"ANY_ONE\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              1개 이상\r\n            </label>\r\n            <label className=\"inline-flex items-center gap-2\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={abModePrimary === \"BOTH\"}\r\n                onChange={() => setAbModePrimary(\"BOTH\")}\r\n                disabled={tgtLocked || pos === \"상관 없음\"}\r\n                className=\"accent-primary\"\r\n              />\r\n              2개\r\n            </label>\r\n          </div>\r\n          {/* LoACore 코어행과 동일한 한 줄 카드 레이아웃 */}\r\n          <div className=\"mt-3\">\r\n<div className=\"\r\n  relative\r\n  grid grid-cols-2 gap-2\r\n  lg:flex lg:flex-row lg:flex-nowrap lg:gap-3\r\n  items-stretch lg:items-end\r\n  border rounded-xl p-3 bg-white overflow-visible\r\n\">\r\n  {/* 의지력 효율 ≥ */}\r\n  <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n    <label className={labelCls}>의지력 효율 ≥</label>\r\n    <NumberInput\r\n      value={tgt.eff}\r\n      set={(v) => setTgt({ ...tgt, eff: clamp(v, MIN_STAT, MAX_STAT) })}\r\n      min={MIN_STAT}\r\n      max={MAX_STAT}\r\n      disabled={tgtLocked}\r\n    />\r\n  </div>\r\n  {/* 포인트 ≥ */}\r\n  <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n    <label className={labelCls}>포인트 ≥</label>\r\n    <NumberInput\r\n      value={tgt.pts}\r\n      set={(v) => setTgt({ ...tgt, pts: clamp(v, MIN_STAT, MAX_STAT) })}\r\n      min={MIN_STAT}\r\n      max={MAX_STAT}\r\n      disabled={tgtLocked}\r\n    />\r\n  </div>\r\n  {/* 추가 효과 — 모바일에서 col-span-2 */}\r\n  <div className={`flex flex-col w-full col-span-2 lg:col-span-1 lg:w-[100px] ${tgtLocked ? \"opacity-50\" : \"\"}`}>\r\n    <label className={labelCls}>추가 효과</label>\r\n    <Dropdown\r\n      className=\"w-full lg:w-[100px]\"\r\n      value={pos}\r\n      onChange={(v) => setPos(v)}\r\n      items={[\"상관 없음\", \"공격형\", \"지원형\"].map(k => ({ value: k, label: k }))}\r\n      placeholder=\"추가 효과\"\r\n      disabled={tgtLocked}\r\n    />\r\n  </div>\r\n  {(() => {\r\n    const effectsDisabled = tgtLocked || pos === \"상관 없음\";\r\n    const bLevelDisabled = effectsDisabled || abModePrimary !== \"BOTH\";\r\n    const effCls = effectsDisabled ? \"opacity-50\" : \"\";\r\n    const effClsB = bLevelDisabled ? \"opacity-50\" : \"\";\r\n    return (\r\n      <>\r\n        {/* 목표 이름 A */}\r\n        <div className={`w-full lg:w-[160px] flex flex-col ${tgtLocked || pos === \"상관 없음\" ? \"opacity-50\" : \"\"}`}>\r\n          <label className={labelCls}>목표 효과 A</label>\r\n          <Select\r\n            value={tgtNames.aName}\r\n            set={(v) => setTgtNames((t) => ({ ...t, aName: v }))}\r\n            options={abModePrimary === \"BOTH\"\r\n              ? targetPool.filter((n) => n !== tgtNames.bName)\r\n              : targetPool}\r\n            disabled={tgtLocked || pos === \"상관 없음\"}\r\n          />\r\n        </div>\r\n        {/* A 레벨 ≥ */}\r\n        <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effCls}`}>\r\n          <label className={labelCls}>{tgtALabel}</label>\r\n          <NumberInput\r\n            value={tgt.aLvl}\r\n            set={(v) => setTgt({ ...tgt, aLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n            min={MIN_STAT}\r\n            max={MAX_STAT}\r\n            disabled={effectsDisabled}\r\n          />\r\n        </div>\r\n        {/* 목표 이름 B (BOTH일 때만 활성) */}\r\n        <div className={`w-full lg:w-[160px] flex flex-col ${(tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\") ? \"opacity-50\" : \"\"}`}>\r\n          <label className={labelCls}>목표 효과 B</label>\r\n          <Select\r\n            value={tgtNames.bName}\r\n            set={(v) => setTgtNames((t) => ({ ...t, bName: v }))}\r\n            options={abModePrimary === \"BOTH\"\r\n              ? targetPool.filter((n) => n !== tgtNames.aName)\r\n              : targetPool}\r\n            disabled={tgtLocked || pos === \"상관 없음\" || abModePrimary !== \"BOTH\"}\r\n          />\r\n        </div>\r\n        {/* B 레벨 ≥ */}\r\n        <div className={`flex flex-col w-full lg:w-[120px] lg:flex-none ${effClsB}`}>\r\n          <label className={labelCls}>{tgtBLabel}</label>\r\n          <NumberInput\r\n            value={tgt.bLvl}\r\n            set={(v) => setTgt({ ...tgt, bLvl: clamp(v, MIN_STAT, MAX_STAT) })}\r\n            min={MIN_STAT}\r\n            max={MAX_STAT}\r\n            disabled={bLevelDisabled}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  })()}\r\n</div>\r\n          </div>\r\n        </section>\r\n        <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-6\">\r\n          {/* 4) 가공 시뮬레이션 */}\r\n          <section ref={simRef} className={`lg:col-span-2 ` + card}>\r\n            {/* 타이틀 + 우측 액션 */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>가공 시뮬레이션</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={manualReset}\r\n                  className=\"h-10 px-3 rounded-xl border bg-white hover:bg-white/90 inline-flex items-center gap-2 text-sm\"\r\n                >\r\n                  <RotateCcw size={16} />\r\n                  시뮬레이션 초기화\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* 🔹 안내문 추가 */}\r\n            <div className=\"mt-1 text-xs text-gray-500\">\r\n              항목 적용 / 다른 항목 보기는 <b>모든 설정을 저장(잠금)</b>한 뒤 이용하세요.\r\n            </div>\r\n            <div className=\"mt-3 gap-4\">\r\n              {/* 왼쪽: 상태/리소스(가독성 업) */}\r\n              <div className=\"rounded-xl border p-3 bg-white\">\r\n                <div className=\"text-sm font-semibold mb-2\">현재 젬 상태</div>\r\n                {/* 작은 스탯 카드 4그리드 */}\r\n                <div className=\"grid grid-cols-4 gap-2 text-sm\">\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">의지력 효율</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.eff}</div>\r\n                  </div>\r\n                  <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                    <div className=\"text-xs text-gray-500\">질서·혼돈 포인트</div>\r\n                    <div className=\"text-lg font-semibold\">{manual.state.pts}</div>\r\n                  </div>\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"A\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.aName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.aLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {showEffectsUI && (\r\n                    <div className=\"rounded-xl border p-2 text-center flex flex-col items-center justify-center col-span-2\">\r\n                      {changeMode?.who === \"B\" ? (\r\n                        <>\r\n                          <div className=\"w-full\">\r\n                            <Select\r\n                              value={changePick}\r\n                              set={setChangePick}\r\n                              options={changeMode.options}\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-2 flex gap-2 w-full\">\r\n                            <button onClick={confirmEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl bg-[#a399f2] text-white hover:bg-[#a399f2] w-[50%]\">\r\n                              적용\r\n                            </button>\r\n                            <button onClick={cancelEffectChange}\r\n                              className=\"h-9 px-3 rounded-xl border bg-white hover:bg-gray-50 w-[50%]\">\r\n                              취소\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"text-xs text-gray-500\">{manual.state.bName}</div>\r\n                          <div className=\"text-lg font-semibold\">Lv. {manual.state.bLvl}</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* 리소스 칩 */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                  {manual.attemptsLeft <= 0 ? (\r\n                    <div className=\"inline-flex items-center px-2.5 py-1.5 rounded-xl bg-violet-50 border border-violet-200 text-violet-900 text-[12px] lg:text-[13px]\">\r\n                      가공이 완료되었습니다.\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex flex-wrap gap-2 text-[12px] lg:text-[13px]\">\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        남은 가공 횟수 <b className=\"ml-1\">{manual.attemptsLeft}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        다른 항목 보기 <b className=\"ml-1\">{manual.rerolls}</b>\r\n                      </div>\r\n                      <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                        가공 비용 추가 비율 <b className=\"ml-1\">{rateText}</b>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 border\">\r\n                    누적 골드 <b className=\"ml-1\">{fmtNum(manual.gold)}</b> G\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* 오른쪽: 선택지 + 액션 */}\r\n              <div className=\"rounded-xl border p-3 bg-white mt-4\">\r\n                <div className=\"text-sm font-semibold mb-2\">이번에 등장한 4개 항목</div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                  {manLabels.map((label, idx) => (\r\n                    <div key={idx} className=\"slot-card rounded-xl border p-2 transition-all\">\r\n                      <div className=\"text-xs text-gray-500 mb-1\">슬롯 {idx + 1}</div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Select\r\n                          value={label}\r\n                          set={(v) => {\r\n                            const ns = [...manLabels];\r\n                            ns[idx] = v;\r\n                            setManLabels(ns);\r\n                          }}\r\n                          options={allOptionLabels}\r\n                        />\r\n                        <button\r\n                          onClick={() => applyManual(idx)}\r\n                          aria-disabled={actionDisabled}\r\n                          className={`apply-btn transition-all justify-center min-w-[60px] h-10 px-3 rounded-xl border bg-white \r\n                          hover:border-[#a399f2] hover:text-white hover:bg-[#a399f2] inline-flex items-center\r\n                          ${actionDisabled ? \"opacity-50 cursor-not-allowed\" : \"\"} \r\n                          ${hasDup ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n                        >\r\n                          적용\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"mt-3 flex items-center gap-2 flex-wrap\">\r\n                  <button onClick={doReroll} disabled={rerollDisabled}\r\n                    className={`h-10 px-3 rounded-xl border ${rerollDisabled ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2`}>\r\n                    <RefreshCcw size={16} />\r\n                    다른 항목 보기 {manual.rerolls}회\r\n                  </button>\r\n                  <span className=\"text-xs text-gray-600\">\r\n                    {manual.attemptsLeft <= 0\r\n                      ? \"가공 완료\"\r\n                      : !manual.unlocked\r\n                        ? \"첫 가공 이후 가능합니다.\"\r\n                        : manual.rerolls <= 0\r\n                          ? \"다른 항목 보기 없음\"\r\n                          : (rerollAdvice.shouldReroll ? \"다른 항목 보기 추천\" : \"다른 항목 보기 비추천\")}\r\n                  </span>\r\n                </div>\r\n                {manual.unlocked && manual.rerolls > 0 && (\r\n                  <div className=\"mt-2 text-xs text-gray-700\">{rerollAdvice.reason}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/* 6) 작업 내역 */}\r\n          <section\r\n            className={`${card} h-full flex flex-col`}\r\n            style={logsMax ? { maxHeight: logsMax } : undefined}\r\n          >\r\n            <div className=\"flex items-center gap-2\">\r\n              <h2 className={sectionTitle}>작업 내역</h2>\r\n              <div className=\"ml-auto flex items-center gap-2\">\r\n                <button\r\n                  onClick={undo}\r\n                  disabled={!canUndo}\r\n                  className={`ml-auto h-10 px-3 rounded-xl border ${!canUndo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"되돌리기 (Ctrl/Cmd+Z)\"\r\n                >\r\n                  <Undo2 size={16} />\r\n                </button>\r\n                <button\r\n                  onClick={redo}\r\n                  disabled={!canRedo}\r\n                  className={`h-10 px-3 rounded-xl border ${!canRedo ? \"opacity-50 cursor-not-allowed\" : \"bg-white hover:bg-gray-50\"} inline-flex items-center gap-2 text-sm`}\r\n                  title=\"다시하기 (Ctrl/Cmd+Shift+Z)\"\r\n                >\r\n                  <Redo2 size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {logs.length === 0 ? (\r\n              <div className=\"mt-3 text-sm text-gray-500\">기록이 없습니다.</div>\r\n            ) : (\r\n              <div className=\"mt-3 flex-1 min-h-0 space-y-2 overflow-auto\">\r\n                {logs.map((l) => (\r\n                  <div key={l.id} className=\"rounded-xl border p-2 bg-white\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-medium\">\r\n                        {l.title}\r\n                      </div>\r\n                      <span className=\"text-[11px] text-gray-500\">{l.time}</span>\r\n                    </div>\r\n                    {l.detail && (\r\n                      <div className=\"mt-1 text-xs text-gray-700\">{l.detail}</div>\r\n                    )}\r\n                    {l.meta && (\r\n                      <div className=\"mt-1 flex flex-wrap gap-1.5 text-[11px] text-gray-600\">\r\n                        {'cost' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            비용 {fmtNum(l.meta.cost)} G\r\n                          </span>\r\n                        )}\r\n                        {'attemptsLeft' in l.meta && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            남은 가공 {l.meta.attemptsLeft}회\r\n                          </span>\r\n                        )}\r\n                        {'rerollDelta' in l.meta && l.meta.rerollDelta !== 0 && (\r\n                          <span className=\"px-1.5 py-0.5 rounded-lg border bg-gray-50\">\r\n                            다른 항목 보기 {l.meta.rerollDelta > 0 ? `+${l.meta.rerollDelta}` : l.meta.rerollDelta}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n        {/* 5) 결과 출력 */}\r\n        <section className={card}>\r\n          <div className=\"flex items-center gap-2\">\r\n            <h2 className={sectionTitle}>결과 출력</h2>\r\n            <div className=\"ml-auto flex items-center gap-2\">\r\n              <span className=\"px-2.5 py-1.5 rounded-xl bg-gray-100 text-[10px] lg:text-xs text-gray-600\">\r\n                Monte Carlo {fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회\r\n                {resultRun?.ci?.halfWidth\r\n                  ? ` (±${(resultRun.ci.halfWidth * 100).toFixed(2)}%p @95%)`\r\n                  : \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* ▷ 스켈레톤 전체 덮개: 계산 중/미준비 상태면 전체를 스켈레톤으로 */}\r\n          {showSkeleton ? (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {/* 칩 스켈레톤 */}\r\n              <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n              <div className=\"flex flex-wrap gap-1.5\">\r\n                {[...Array(4)].map((_, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-6 w-28 rounded-lg bg-gray-100 animate-pulse\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {/* 카드 스켈레톤 (2장) */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 mt-2\">\r\n                {[0, 1].map((k) => (\r\n                  <div key={k} className=\"rounded-xl border p-3 bg-white\">\r\n                    <div className=\"h-4 w-32 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-3 h-8 w-2/3 bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-2 h-2 w-full bg-gray-100 rounded animate-pulse\" />\r\n                    <div className=\"mt-4 h-4 w-40 bg-gray-100 rounded animate-pulse\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* ▷ 실제 결과 UI: 스켈레톤이 아닐 때 한 번에 노출 */}\r\n              <div className=\"mt-2 text-sm text-gray-700\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">현재 계산에 반영되는 1회차 선택지</div>\r\n                <div className=\"flex flex-wrap gap-1.5\">\r\n                  {manLabels.map((l, i) => (\r\n                    <span\r\n                      key={i}\r\n                      className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-lg border bg-white text-[12px]\"\r\n                    >\r\n                      {l}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              {resultRun && resultStop && (\r\n                <div className=\"mt-3 grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n                  {/* 목표 달성 확률 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                        목표 달성 확률\r\n                      </div>\r\n                      <span className=\"px-2 py-1 rounded-lg bg-gray-50 text-[11px] text-gray-600\">\r\n                        {calcMode === \"IGNORE_AB\"\r\n                          ? \"추가 효과 상관 없음\"\r\n                          : calcMode === \"ANY_ONE\"\r\n                            ? \"추가 효과 역할군 옵션 1개 이상\"\r\n                            : \"추가 효과 역할군 옵션 2개 전부\"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"mt-3 grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n                      {/* STOP_ON_SUCCESS */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">달성 즉시 가공 완료</div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">\r\n                          {fmtProbSmart(resultStop.successProb, resultStop.ci)}\r\n                        </div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultStop.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-2 text-xs text-gray-600 flex items-center gap-1\">\r\n                          평균 골드: <b>{fmtNum(Math.round(resultStop.expectedGold))}</b> G ({fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회 평균)\r\n                        </div>\r\n                      </div>\r\n                      {/* RUN_TO_END */}\r\n                      <div className=\"rounded-xl border p-3 bg-white/60 backdrop-blur-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"text-xs text-gray-500\">가공 횟수 전부 소모</div>\r\n                        </div>\r\n                        <div className=\"mt-1 text-2xl font-bold\">{fmtProb(resultRun.successProb)}</div>\r\n                        <div className=\"mt-2 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.successProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mt-2 text-xs text-gray-600 flex items-center gap-1\">\r\n                          평균 골드: <b>{fmtNum(Math.round(resultRun.expectedGold))}</b> G ({fmtNum(Math.max(resultRun?.trialsUsed || 0, resultStop?.trialsUsed || 0))}회 평균)\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n                  {/* 등급 확률 */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 6 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: .18, delay: .05 }}\r\n                    className=\"rounded-xl border p-3 bg-white\"\r\n                  >\r\n                    <div className=\"text-sm font-semibold flex items-center gap-2\">\r\n                      등급 확률\r\n                    </div>\r\n                    <div className=\"mt-3 space-y-3 text-sm\">\r\n                      {/* 전설 */}\r\n                      <div>\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"text-gray-700\">전설 (4~15)</span>\r\n                          <b>{fmtProb(resultRun.legendProb)}</b>\r\n                        </div>\r\n                        <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.legendProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {/* 유물 */}\r\n                      <div>\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"text-gray-700\">유물 (16~18)</span>\r\n                          <b>{fmtProb(resultRun.relicProb)}</b>\r\n                        </div>\r\n                        <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.relicProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {/* 고대 */}\r\n                      <div>\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"text-gray-700\">고대 (19+)</span>\r\n                          <b>{fmtProb(resultRun.ancientProb)}</b>\r\n                        </div>\r\n                        <div className=\"mt-1 w-full h-2 rounded-full bg-gray-100 overflow-hidden\">\r\n                          <motion.div\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${Math.round(resultRun.ancientProb * 100)}%` }}\r\n                            transition={{ type: \"spring\", stiffness: 260, damping: 28 }}\r\n                            className=\"h-full bg-gradient-to-r from-[#85d8ea] to-[#a399f2]\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </div>\r\n      <ToastStack toasts={toasts} onClose={remove} />\r\n      <div className=\"mt-6\">\r\n        <KakaoAdfit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Routes, Route, Navigate, NavLink } from \"react-router-dom\";\r\nimport LoACoreOptimizer from \"./components/LoACoreOptimizer\";\r\nimport GemSimulator from \"./components/GemSimulator\";\r\nimport { ChevronUp } from \"lucide-react\";\r\n/**\r\n * CoreOnly as pages via HashRouter\r\n * - 해시 URL: #/core/gem, #/core/optimizer\r\n * - 기본 리다이렉트: #/core/optimizer\r\n * - 상단 네비는 NavLink (접근성 role=\"navigation\")\r\n */\r\nfunction useNearBottom(offset = 520) {\r\n  const [near, setNear] = React.useState(false);\r\n  React.useEffect(() => {\r\n    const onScroll = () => {\r\n      const doc = document.documentElement;\r\n      const scrollBottom = doc.scrollHeight - (doc.scrollTop + window.innerHeight);\r\n      setNear(scrollBottom <= offset);\r\n    };\r\n    onScroll(); // 초기 상태 반영\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    window.addEventListener(\"resize\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n      window.removeEventListener(\"resize\", onScroll);\r\n    };\r\n  }, [offset]);\r\n  return near;\r\n}\r\nfunction TopFab() {\r\n  const visible = useNearBottom(520); // 아래 끝 520px 근처에서 등장\r\n  return (\r\n    <div className=\"fixed z-50 right-4 bottom-4 sm:right-6 sm:bottom-6 pr-[env(safe-area-inset-right)] pb-[env(safe-area-inset-bottom)]\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"맨 위로\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={[\r\n          \"inline-flex items-center gap-2 rounded-full border border-gray-200 bg-white/90 px-4 py-3 shadow-lg backdrop-blur\",\r\n          \"text-gray-700 hover:bg-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/40\",\r\n          \"transition transform duration-200\",\r\n          visible ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-2 pointer-events-none\",\r\n        ].join(\" \")}\r\n      >\r\n        <ChevronUp size={18} />\r\n        <span className=\"hidden sm:inline text-sm font-medium\">TOP</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default function CoreOnly() {\r\n  return (\r\n    <HashRouter basename=\"/core\">\r\n      <div className=\"min-h-screen bg-gray-50 text-gray-900\">\r\n<header className=\"sticky top-0 z-40 border-b border-gray-200/60 bg-white/70 backdrop-blur\">\r\n  <div className=\"mx-auto max-w-6xl px-4 sm:px-6 py-3\">\r\n    <nav aria-label=\"Core pages\">\r\n      <ul className=\"mx-auto flex w-full flex-wrap justify-center gap-1 rounded-xl\">\r\n        <li>\r\n          <NavLink\r\n            to=\"/gem\"\r\n            className={({ isActive }) =>\r\n              [\r\n                \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\" // 은은한 브랜드 틴트\r\n                  : \"text-gray-700 hover:bg-gray-50\"\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 가공 헬퍼\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/optimizer\"\r\n            className={({ isActive }) =>\r\n              [\r\n                \"px-4 py-2 text-sm font-medium rounded-lg transition\",\r\n                \"outline-none focus-visible:ring-2 focus-visible:ring-[#a399f2]/30\",\r\n                isActive\r\n                  ? \"bg-[#a399f2]/10 text-[#5b54c6]\"\r\n                  : \"text-gray-700 hover:bg-gray-50\"\r\n              ].join(\" \")\r\n            }\r\n          >\r\n            젬 장착 헬퍼\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</header>\r\n        {/* 라우트 영역 */}\r\n        <main>\r\n          <Routes>\r\n            <Route path=\"/gem\" element={<GemSimulator />} />\r\n            <Route path=\"/optimizer\" element={<LoACoreOptimizer />} />\r\n            {/* 기본 경로 보정: /core → /core/optimizer */}\r\n            <Route path=\"*\" element={<Navigate to=\"/gem\" replace />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n      <TopFab /> \r\n    </HashRouter>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nfunction KakaoAdfit() {\r\n  const adRef = useRef(null);\r\n  useEffect(() => {\r\n    const ins = document.createElement('ins');\r\n    ins.className = 'kakao_ad_area';\r\n    ins.style.display = 'none';\r\n    ins.setAttribute('data-ad-unit', 'DAN-V4UQDzJ7BdEKoWll');\r\n    ins.setAttribute('data-ad-width', '320');\r\n    ins.setAttribute('data-ad-height', '50');\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = '//t1.daumcdn.net/kas/static/ba.min.js';\r\n    if (adRef.current) {\r\n      adRef.current.innerHTML = ''; // 중복 방지\r\n      adRef.current.appendChild(ins);\r\n      adRef.current.appendChild(script);\r\n    }\r\n  }, []);\r\n  return <div ref={adRef} className=\"kakao-adfit-container\" />;\r\n}\r\nexport default KakaoAdfit;"],"names":["CORE_SUPPLY","HERO","LEGEND","RELIC","ANCIENT","CORE_THRESHOLDS","CORE_LABEL","GRADES","OPTION_LABELS","atk","add","boss","brand","allyDmg","allyAtk","OPTIONS","ROLE_KEYS","dealer","Set","support","DEFAULT_WEIGHTS","CORE_NAME_ITEMS","value","label","CORE_ORDER","uid","Math","random","toString","slice","sanitizeWeights","w","base","Object","keys","forEach","k","raw","num","Number","isFinite","scoreGemForRole","g","role","_w$g$o1k","_w$g$o2k","has","o1k","o1v","o2k","o2v","combinations","arr","n","length","idx","Array","from","_","i","map","p","j","thresholdsHit","grade","totalPoint","filter","t","scoreCombo","combo","weights","totalWill","reduce","s","_g$will","will","_g$point","point","thr","roleSum","score","optimizeRoundRobinTargets","cores","pool","perCoreLimit","arguments","undefined","W","thresholdsOf","minOf","min","nextThreshold","current","Infinity","bestMinHit","cands","target","ok","ci","max","sort","a","b","bestScore","emptyPick","list","candidatesFor","core","gemPool","minThreshold","enforceMin","supply","minOfGrade","effMin","effEnforce","all","maxPick","push","filtered","maxThr","enumerateCoreCombos","removeUsed","used","id","enforcedIdx","c","nonEnforcedIdx","rotations","bestAssignment","picks","remaining","satisfiedCount","scoreSum","r","start","ordered","concat","choice","_c$minThreshold","satisfied","quality","_c$minThreshold2","every","_c$minThreshold3","progressed","curMax","nxt","currentRemaining","currentRemainingIds","x","refundList","poolWithRefund","upgrade","usedNew","dragPortal","document","body","PortalAwareDraggable","_ref","draggableId","index","children","_jsx","Draggable","provided","snapshot","rendered","isDragging","createPortal","Dropdown","_ref2","items","onChange","placeholder","className","open","setOpen","useState","btnRef","useRef","menuRef","menuPos","top","left","width","forceTick","useEffect","h","window","addEventListener","removeEventListener","refs","handler","refsArray","React","isArray","handlerRef","listener","e","_handlerRef$current","some","contains","call","useOnClickOutside","useLayoutEffect","rect","getBoundingClientRect","bottom","v","onScroll","_btnRef$current","passive","selected","find","menu","AnimatePresence","motion","ul","ref","initial","opacity","y","animate","exit","transition","duration","style","position","zIndex","it","type","onClick","disabled","String","_jsxs","ChevronUp","size","ChevronDown","ToastStack","_ref3","toasts","onClose","div","scale","stiffness","damping","msg","NumberInput","_ref4","step","allowFloat","zeroOnBlur","inputProps","toStr","inner","setInner","normalizeOnBlur","trunc","clamp","inputMode","onBlur","onWheel","currentTarget","blur","LoACoreOptimizer","title","setRole","setWeights","highlightCoreId","setHighlightCoreId","highlightGemId","setHighlightGemId","setCores","gems","setGems","remove","setToasts","setTimeout","useToasts","priorityPicks","useMemo","updateGem","patch","updateCore","cs","name","dragging","setDragging","smallFieldBase","sectionTitle","card","chip","labelCls","displayIndexCore","displayIndexGem","total","_w$brand","console","assert","gem","includes","cA","cB","log","warn","runSelfTests","backgroundImage","backgroundAttachment","addCore","nextName","existingNames","nextAvailableCoreName","Plus","DragDropContext","onDragStart","requestAnimationFrame","evt","Event","dispatchEvent","onDragEnd","result","destination","prev","next","moved","splice","source","Droppable","droppableId","ignoreContainerClipping","innerRef","droppableProps","targetItems","takenNames","coreNameItems","prov","_c$minThreshold4","draggableProps","dragHandleProps","val","checked","htmlFor","moveCoreUp","moveCoreDown","removeCore","Trash2","addGem","removeGem","resetWeights","RotateCcw","pick","hasResult","toFixed","_Fragment","_g$will2","_g$point2","gi","findIndex","disp","KakaoAdfit","USE_ANTITHETIC","AUTO_SCALE_RARE","hash32","str","charCodeAt","imul","makeDeterministicSeed","obj","JSON","stringify","makeRNG","seed","GRADE","LEGEND_MIN","LEGEND_MAX","RELIC_MIN","RELIC_MAX","ANCIENT_MIN","GEM_TYPES","baseNeed","attack","RARITY_ATTEMPTS","고급","희귀","영웅","RARITY_BASE_REROLLS","MIN_STAT","MAX_STAT","GOLD_PER_ATTEMPT","lo","hi","fmtProbSmart","fmtProb","fmtNum","toLocaleString","estimateRate","successes","OFFICIAL_RNG","SIM_OPTIONS","zeroSuccessUpperBound","alpha","pow","epsilonByTrials","batchByTrials","allowedEffectNames","gemKey","pos","totalScore","eff","pts","aLvl","bLvl","gradeOf","meetsTargetByMode","abMode","tgtNames","isAny","nm","TA","aName","TB","bName","match","lineName","lineLvl","targetName","lvlReq","okA","minusAppears_TABLE","buildWeightedItems","state","attemptsLeft","costAddRate","slot","kind","delta","names","canAChange","canBChange","mod","amount","slotToPrettyLabel","labelToSlot","parseInt","replace","trim","startsWith","applySlot","rngFn","rng","goldThisAttempt","nextRate","rerollDelta","floor","ZERO_VALUE","successProb","legendProb","relicProb","ancientProb","expectedGold","evaluateFromSimulation","policy","rerolls","unlockedReroll","selectedFirstFour","opts","maxTrials","epsilon","batch","minTrials","estimator","useAntithetic","autoScaleRare","rareTargetSuccesses","rareMaxTrials","desirability","sum","levelCostTo","curName","curLvl","targetLvl","POSITIVE_INFINITY","c1","c2","c11","c22","needDistanceByMode","simOnce","rand","weightedPickIndex","gold","rrs","unlocked","rate","first","cand","temp","res","namesList","before","best","sl","gain","rrd","succSum","legendSum","relicSum","ancientSum","goldSum","agg","trialsUsed","low","high","halfWidth","localMaxTrials","seedForTrial","baseSeed","updateCI","up","z","denom","center","margin","sqrt","wilsonCI","steps","trialSeed","one","r2base","two","r2","hw","bump","toneBtn","tone","success","info","warning","error","set","clampLocal","hasNewApi","callOld","Select","options","o","_o$value","_o$label","hasDuplicateLabels","labels","Boolean","GemSimulator","_resultRun$ci","setGemKey","setPos","rarity","setRarity","abModePrimary","setAbModePrimary","effectPoolAny","effectPoolByPos","cur","setCur","tgt","setTgt","setTgtNames","basicLocked","setBasicLocked","curLocked","setCurLocked","tgtLocked","setTgtLocked","curValid","simTrials","setSimTrials","migratedRef","manual","setManual","m","changeMode","setChangeMode","changePick","setChangePick","history","setHistory","past","future","takeSnapshot","useCallback","parse","restoreSnapshot","snap","pushHistory","nextPast","shift","canUndo","canRedo","logs","setLogs","nowStr","d","Date","pad","padStart","getHours","getMinutes","getSeconds","addLog","entry","time","undo","newPast","detail","redo","restFuture","onKey","ctrlKey","metaKey","key","toLowerCase","preventDefault","shiftKey","diffStats","after","parts","pushIf","join","old","bCand","allOptionLabels","defaultLabels","want","out","cursor","_allOptionLabels$curs","_ref5","_allOptionLabels$curs2","manLabels","setManLabels","_ref6","_allOptionLabels$i","replacement","l","resultStop","setResultStop","resultRun","setResultRun","isComputing","setIsComputing","tokenRef","timerRef","simRef","logsMax","setLogsMax","recalc","offsetHeight","TAU","expectedSuccessProbForLabels","gemKeyIn","posIn","abForEval","manualIn","tgtIn","acc","cnt","lb","nextManual","sampleNewFourSlots","slotsToLabels","slots","rerollAdvice","shouldReroll","reason","seedBase","salt","nowProb","afterRerollManual","newLabels","rerollProb","pct","confirmEffectChange","allLocked","who","meta","cost","cancelEffectChange","bCandidate","calcMode","token","clearTimeout","commonOpts","stop","run","rateText","hasDup","showSkeleton","actionDisabled","rerollDisabled","dupWarnShown","targetPool","Edit3","Save","effectsDisabled","bLevelDisabled","effCls","effClsB","ns","slotIdx","action","nextAttemptsLeft","applyManual","RefreshCcw","maxHeight","Undo2","Redo2","round","delay","TopFab","visible","offset","near","setNear","doc","documentElement","scrollBottom","scrollHeight","scrollTop","innerHeight","useNearBottom","scrollTo","behavior","CoreOnly","HashRouter","basename","NavLink","to","isActive","Routes","Route","path","element","Navigate","adRef","ins","createElement","display","setAttribute","script","async","src","innerHTML","appendChild"],"sourceRoot":""}